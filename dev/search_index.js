var documenterSearchIndex = {"docs":
[{"location":"howto/debugging/","page":"Debugging","title":"Debugging","text":"EditURL = \"https://github.com/JuliaGPU/Vulkan.jl/blob/master/docs/src/howto/debugging.jl\"","category":"page"},{"location":"howto/debugging/#Debugging","page":"Debugging","title":"Debugging","text":"","category":"section"},{"location":"howto/debugging/","page":"Debugging","title":"Debugging","text":"using SwiftShader_jll # hide\nusing Vulkan\n@set_driver :SwiftShader # hide\n\nconst debug_callback_c = @cfunction(default_debug_callback, UInt32, (DebugUtilsMessageSeverityFlagEXT, DebugUtilsMessageTypeFlagEXT, Ptr{VkCore.VkDebugUtilsMessengerCallbackDataEXT}, Ptr{Cvoid}))\n\ncreate_info = DebugUtilsMessengerCreateInfoEXT(\n    |(Vulkan.message_severities...),\n    |(\n        DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT,\n        DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT,\n        DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT\n    ),\n    debug_callback_c,\n)","category":"page"},{"location":"howto/debugging/","page":"Debugging","title":"Debugging","text":"If you have the VK_EXT_debug_utils enabled, you can then create an instance and a debug messenger with","category":"page"},{"location":"howto/debugging/","page":"Debugging","title":"Debugging","text":"\ninstance = Instance([\"VK_LAYER_KHRONOS_validation\"], [\"VK_EXT_debug_utils\"]; next=create_info)\n\nmessenger = unwrap(create_debug_utils_messenger_ext(instance, create_info))\n","category":"page"},{"location":"howto/debugging/","page":"Debugging","title":"Debugging","text":"","category":"page"},{"location":"howto/debugging/","page":"Debugging","title":"Debugging","text":"This page was generated using Literate.jl.","category":"page"},{"location":"tutorial/functions/","page":"Vulkan functions","title":"Vulkan functions","text":"EditURL = \"https://github.com/JuliaGPU/Vulkan.jl/blob/master/docs/src/tutorial/functions.jl\"","category":"page"},{"location":"tutorial/functions/#Vulkan-functions","page":"Vulkan functions","title":"Vulkan functions","text":"","category":"section"},{"location":"tutorial/functions/","page":"Vulkan functions","title":"Vulkan functions","text":"Functions in C behave differently that in Julia. In particular, they can't return multiple values and mutate pointer memory instead. Other patterns emerge from the use of pointers with a separately-provided length, where a length/size parameter can be queried, so that you build a pointer with the right size, and pass it in to the API to be filled with data. All these patterns were automated, so that wrapper functions feel a lot more natural and straightforward for Julia users than the API functions.","category":"page"},{"location":"tutorial/functions/#Implicit-return-values","page":"Vulkan functions","title":"Implicit return values","text":"","category":"section"},{"location":"tutorial/functions/","page":"Vulkan functions","title":"Vulkan functions","text":"Functions almost never directly return a value in Vulkan, and usually return either a return code or nothing. This is a limitation of C where only one value can be returned. Instead, they fill pointers with data, and it is your responsibility to initialize them before the call and dereference them afterwards. Here is an example:","category":"page"},{"location":"tutorial/functions/","page":"Vulkan functions","title":"Vulkan functions","text":"using Vulkan\nusing Vulkan.core\n\nfunction example_create_instance()\n    instance_ref = Ref{VkInstance}()\n    # we'll cheat a bit for the create info\n    code = vkCreateInstance(\n        InstanceCreateInfo([], []), # create info\n        C_NULL,                     # allocator\n        instance_ref,\n    )\n\n    @assert code == VK_SUCCESS\n\n    instance_ref[]\nend\n\nexample_create_instance()","category":"page"},{"location":"tutorial/functions/","page":"Vulkan functions","title":"Vulkan functions","text":"We did not create a VkInstanceCreateInfo to stay concise. Note that the create info structure can be used as is by the vkCreateInstance, even if it is a wrapper. Indeed, it implements Base.cconvert and Base.unsafe_convert to automatically interface with the C API.","category":"page"},{"location":"tutorial/functions/","page":"Vulkan functions","title":"Vulkan functions","text":"All this setup code is now automated by the wrapper:","category":"page"},{"location":"tutorial/functions/","page":"Vulkan functions","title":"Vulkan functions","text":"instance = unwrap(create_instance(InstanceCreateInfo([], []); allocator=C_NULL))","category":"page"},{"location":"tutorial/functions/","page":"Vulkan functions","title":"Vulkan functions","text":"Note that the create_instance wrapper returns a ResultTypes.Result type, so the result must be unwrapped to be used. To know more about unwrap and the Result type see the Error handling section.","category":"page"},{"location":"tutorial/functions/","page":"Vulkan functions","title":"Vulkan functions","text":"When there are multiple implicit return values (i.e. multiple pointers being written to), they are returned as a tuple:","category":"page"},{"location":"tutorial/functions/","page":"Vulkan functions","title":"Vulkan functions","text":"actual_data_size, data = unwrap(get_pipeline_cache_data(device, pipeline_cache, data_size))","category":"page"},{"location":"tutorial/functions/#Queries","page":"Vulkan functions","title":"Queries","text":"","category":"section"},{"location":"tutorial/functions/#Enumerated-items","page":"Vulkan functions","title":"Enumerated items","text":"","category":"section"},{"location":"tutorial/functions/","page":"Vulkan functions","title":"Vulkan functions","text":"Sometimes, when enumerating objects or properties for example, a function may need to be called twice: a first time for returning the number of elements to be enumerated, then a second time with an initialized array of the right length to be filled with Vulkan objects:","category":"page"},{"location":"tutorial/functions/","page":"Vulkan functions","title":"Vulkan functions","text":"function example_enumerate_physical_devices(instance)\n    pPhysicalDeviceCount = Ref{UInt32}(0)\n\n    # get the length in pPhysicalDeviceCount\n    code = vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, C_NULL)\n\n    @assert code == VK_SUCCESS\n    # initialize the array with the returned length\n    pPhysicalDevices = Vector{VkPhysicalDevice}(undef, pPhysicalDeviceCount[])\n\n    # fill the array\n    code = vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices)\n    @assert code == VK_SUCCESS\n\n    pPhysicalDevices\nend\n\nexample_enumerate_physical_devices(instance)","category":"page"},{"location":"tutorial/functions/","page":"Vulkan functions","title":"Vulkan functions","text":"The relevant enumeration functions are wrapped with this, so that only one call needs to be made, without worrying about creating intermediate arrays:","category":"page"},{"location":"tutorial/functions/","page":"Vulkan functions","title":"Vulkan functions","text":"unwrap(enumerate_physical_devices(instance))","category":"page"},{"location":"tutorial/functions/#Incomplete-retrieval","page":"Vulkan functions","title":"Incomplete retrieval","text":"","category":"section"},{"location":"tutorial/functions/","page":"Vulkan functions","title":"Vulkan functions","text":"Some API commands such as vkEnumerateInstanceLayerProperties may return a VK_INCOMPLETE code indicating that some items could not be written to the provided array. This happens if the number of available items changes after that the length is obtained, making the array too small. In this case, it is recommended to simply query the length again, and provide a vector of the updated size, starting over if the number of items changes again. To avoid doing this by hand, this step is automated in a while loop. Here is what it may look like:","category":"page"},{"location":"tutorial/functions/","page":"Vulkan functions","title":"Vulkan functions","text":"function example_enumerate_physical_devices_2(instance)\n    pPhysicalDeviceCount = Ref{UInt32}(0)\n\n    @assert vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, C_NULL) == VK_SUCCESS\n    pPhysicalDevices = Vector{VkPhysicalDevice}(undef, pPhysicalDeviceCount[])\n    code = vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices)\n\n    while code == VK_INCOMPLETE\n        @assert vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, C_NULL) == VK_SUCCESS\n        pPhysicalDevices = Vector{VkPhysicalDevice}(undef, pPhysicalDeviceCount[])\n        code = vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices)\n    end\n\n    pPhysicalDevices\nend\n\nexample_enumerate_physical_devices_2(instance)","category":"page"},{"location":"tutorial/functions/","page":"Vulkan functions","title":"Vulkan functions","text":"Fortunately, this is automated for you and you can just call","category":"page"},{"location":"tutorial/functions/","page":"Vulkan functions","title":"Vulkan functions","text":"unwrap(enumerate_physical_devices(instance))","category":"page"},{"location":"tutorial/functions/","page":"Vulkan functions","title":"Vulkan functions","text":"","category":"page"},{"location":"tutorial/functions/","page":"Vulkan functions","title":"Vulkan functions","text":"This page was generated using Literate.jl.","category":"page"},{"location":"dev/overview/#Developer-Documentation","page":"Overview","title":"Developer Documentation","text":"","category":"section"},{"location":"dev/overview/#Generating-the-wrapper","page":"Overview","title":"Generating the wrapper","text":"","category":"section"},{"location":"dev/overview/","page":"Overview","title":"Overview","text":"A large portion of this package relies on static code generation. To re-generate the main wrapper (generated/vulkan_wrapper.jl), execute generator/scripts/generate_wrapper.jl in the generator environment:","category":"page"},{"location":"dev/overview/","page":"Overview","title":"Overview","text":"julia --color=yes --project=generator -e 'using Pkg; Pkg.instantiate(); include(\"generator/scripts/generate_wrapper.jl\")'","category":"page"},{"location":"dev/overview/","page":"Overview","title":"Overview","text":"Note that VulkanGen, the generator module, contains tests which should be run first to ensure the correctness of the wrapping process. Therefore, it is recommended to use this command instead to also test both VulkanGen and Vulkan.jl:","category":"page"},{"location":"dev/overview/","page":"Overview","title":"Overview","text":"julia --color=yes --project=generator -e 'include(\\\"generator/test/runtests.jl\\\"); include(\\\"generator/scripts/generate_wrapper.jl\\\"); using Pkg; Pkg.activate(\\\".\\\"); Pkg.test()'","category":"page"},{"location":"tutorial/dispatch/","page":"Dispatch","title":"Dispatch","text":"EditURL = \"https://github.com/JuliaGPU/Vulkan.jl/blob/master/docs/src/tutorial/dispatch.jl\"","category":"page"},{"location":"tutorial/dispatch/#Dispatch","page":"Dispatch","title":"Dispatch","text":"","category":"section"},{"location":"tutorial/dispatch/","page":"Dispatch","title":"Dispatch","text":"Some API functions cannot be called directly from the Vulkan library. In particular, extension functions must be called through a pointer obtained via API commands. In addition, most functions can be made faster by calling directly into their function pointer, instead of going through the loader trampoline which resolves the function pointer every time.","category":"page"},{"location":"tutorial/dispatch/","page":"Dispatch","title":"Dispatch","text":"To circumvent that, we provide a handy way for retrieving and calling into function pointers, as well as a thread-safe global dispatch table that can automate this work for you.","category":"page"},{"location":"tutorial/dispatch/#Retrieving-function-pointers","page":"Dispatch","title":"Retrieving function pointers","text":"","category":"section"},{"location":"tutorial/dispatch/","page":"Dispatch","title":"Dispatch","text":"API Function pointers can be obtained with the function_pointer function, using the API function name.","category":"page"},{"location":"tutorial/dispatch/","page":"Dispatch","title":"Dispatch","text":"using SwiftShader_jll # hide\nusing Vulkan\n@set_driver :SwiftShader # hide\n\nconst instance = Instance([], [])\nconst device = Device(\n    first(unwrap(enumerate_physical_devices(instance))), [DeviceQueueCreateInfo(0, [1.])],\n    [],\n    [],\n)","category":"page"},{"location":"tutorial/dispatch/","page":"Dispatch","title":"Dispatch","text":"function_pointer(\"vkCreateInstance\")\nfunction_pointer(instance, \"vkDestroyInstance\")\nfunction_pointer(device, \"vkCreateFence\")","category":"page"},{"location":"tutorial/dispatch/","page":"Dispatch","title":"Dispatch","text":"It is essentially a wrapper around get_instance_proc_addr and get_device_proc_addr, leveraging multiple dispatch to make it more intuitive to use.","category":"page"},{"location":"tutorial/dispatch/#Providing-function-pointers","page":"Dispatch","title":"Providing function pointers","text":"","category":"section"},{"location":"tutorial/dispatch/","page":"Dispatch","title":"Dispatch","text":"Every wrapper function or handle constructor has a signature which accepts the standard function arguments plus a function pointer to call into. For example, instead of doing","category":"page"},{"location":"tutorial/dispatch/","page":"Dispatch","title":"Dispatch","text":"foreach(println, unwrap(enumerate_instance_layer_properties()))","category":"page"},{"location":"tutorial/dispatch/","page":"Dispatch","title":"Dispatch","text":"you can do","category":"page"},{"location":"tutorial/dispatch/","page":"Dispatch","title":"Dispatch","text":"fptr = function_pointer(\"vkEnumerateInstanceLayerProperties\")\nforeach(println, unwrap(enumerate_instance_layer_properties(fptr)))","category":"page"},{"location":"tutorial/dispatch/","page":"Dispatch","title":"Dispatch","text":"In the case of a handle constructor which calls both a creation and a destruction function, there is an argument for each corresponding function pointer:","category":"page"},{"location":"tutorial/dispatch/","page":"Dispatch","title":"Dispatch","text":"fptr_create = function_pointer(device, \"vkCreateFence\")\nfptr_destroy = function_pointer(device, \"vkDestroyFence\")\nFence(device, fptr_create, fptr_destroy)","category":"page"},{"location":"tutorial/dispatch/#Automatic-dispatch","page":"Dispatch","title":"Automatic dispatch","text":"","category":"section"},{"location":"tutorial/dispatch/","page":"Dispatch","title":"Dispatch","text":"Querying and retrieving function pointers every time results in a lot of boilerplate code. To remedy this, we provide a thread-safe global dispatch table. Upon every API call, it will call the function pointer directly, and will automatically retrieve it if necessary. It has one dispatch table per device, so that multiple devices can be used at the same time.","category":"page"},{"location":"tutorial/dispatch/","page":"Dispatch","title":"Dispatch","text":"This feature can be disabled by setting the preference USE_DISPATCH_TABLE to \"false\".","category":"page"},{"location":"tutorial/dispatch/","page":"Dispatch","title":"Dispatch","text":"","category":"page"},{"location":"tutorial/dispatch/","page":"Dispatch","title":"Dispatch","text":"This page was generated using Literate.jl.","category":"page"},{"location":"about/interfacing/","page":"Interfacing with the C API","title":"Interfacing with the C API","text":"EditURL = \"https://github.com/JuliaGPU/Vulkan.jl/blob/master/docs/src/about/interfacing.jl\"","category":"page"},{"location":"about/interfacing/#Interfacing-with-the-C-API","page":"Interfacing with the C API","title":"Interfacing with the C API","text":"","category":"section"},{"location":"about/interfacing/#Structures-and-variable-preservation","page":"Interfacing with the C API","title":"Structures and variable preservation","text":"","category":"section"},{"location":"about/interfacing/","page":"Interfacing with the C API","title":"Interfacing with the C API","text":"As the API is written in C, there are a lot of pointers to deal with and handling them is not always an easy task. With a little practice, one can figure out how to wrap function calls with cconvert and unsafe_convert provided by Julia. Those functions provide automatic conversions and ccall GC-roots cconverted variables to ensure that pointers will point to valid memory (by explicitly telling the compiler not to garbage-collect nor optimize away the original variable).","category":"page"},{"location":"about/interfacing/","page":"Interfacing with the C API","title":"Interfacing with the C API","text":"However, the situation gets a lot more complicated when you deal with pointers as type fields. We will look at a naive example that show how difficult it can get for a Julia developer not used to calling C code. If we wanted to create a VkInstance, we might be tempted to do:","category":"page"},{"location":"about/interfacing/","page":"Interfacing with the C API","title":"Interfacing with the C API","text":"using Vulkan.core\n\nfunction create_instance(app_name, engine_name)\n    app_info = VkApplicationInfo(\n        VK_STRUCTURE_TYPE_APPLICATION_INFO, # sType\n        C_NULL, # pNext\n        pointer(app_name), # application name\n        1, # application version\n        pointer(engine_name), # engine name\n        0, # engine version\n        VK_VERSION_1_2, # requested API version\n    )\n    create_info = InstanceCreateInfo(\n        VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO, # sType\n        C_NULL, # pNext\n        0, # flags\n        Base.unsafe_convert(Ptr{VkApplicationInfo}, (Ref(app_info))), # application info\n        0, # layer count\n        C_NULL, # layers (none requested)\n        0, # extension count\n        C_NULL, # extensions (none requested)\n    )\n    p_instance = Ref{VkInstance}()\n\n    GC.@preserve app_info begin\n        vkCreateInstance(\n            Ref(create_info),\n            C_NULL, # custom allocator (we choose the default one provided by Vulkan)\n            p_instance,\n        )\n    end\n\n    p_instance[]\nend\n\n# instance = create_instance(\"AppName\", \"NoEngine\") # very likely to segfault","category":"page"},{"location":"about/interfacing/","page":"Interfacing with the C API","title":"Interfacing with the C API","text":"which will probably result in a segmentation fault. Why?","category":"page"},{"location":"about/interfacing/","page":"Interfacing with the C API","title":"Interfacing with the C API","text":"Two causes may lead to such a result:","category":"page"},{"location":"about/interfacing/","page":"Interfacing with the C API","title":"Interfacing with the C API","text":"app_name and engine_name may never be allocated if the compiler decides not to, so there is no guarantee that pointer(app_name) and pointer(engine_name) will point to anything valid. Additionally, even if those variables were allocated with valid pointer addresses at some point, they can be garbage collected at any time, including before the call to vkCreateInstance.\napp_info is not what should be preserved. It cannot be converted to a pointer, but a Ref to it can. Therefore it is the reference that needs to be GC.@preserved, not app_info. So, Ref(app_info) must be assigned to a variable, and replace app_info in the call to GC.@preserve.","category":"page"},{"location":"about/interfacing/","page":"Interfacing with the C API","title":"Interfacing with the C API","text":"Basically, it all comes down to having to preserve everything you take a pointer of. And, if you need to create an intermediary object when converting a variable to a pointer, you need to preserve it too. For example, take of an array of Strings, that need to be converted as a Ptr{Cstring}. You first need to create an array of Cstrings, then convert that array to a pointer. The Strings and the Cstring array need to be preseved.","category":"page"},{"location":"about/interfacing/","page":"Interfacing with the C API","title":"Interfacing with the C API","text":"This is exactly what cconvert and unsafe_convert are for. cconvert converts a variable to a type that can be converted to the desired (possibly pointer) type using unsafe_convert. In addition of chaining both conversions, ccall also preserves the cconverted variable, so that the unsafe conversion becomes safe.","category":"page"},{"location":"about/interfacing/","page":"Interfacing with the C API","title":"Interfacing with the C API","text":"Because we cannot use ccall in this case, we need to cconvert any argument that will be transformed to a pointer, and store the result as long as the desired struct may be used. Then, unsafe_convert can be called on this result, to get the desired (pointer) type necessary to construct the API struct.","category":"page"},{"location":"about/interfacing/","page":"Interfacing with the C API","title":"Interfacing with the C API","text":"There are several possibilities for preserving what we may call \"pointer dependencies\". One of them is to reference them inside a global variable, such as a Dict, and deleting them once we no longer need it. This has the severe disadvantage of requiring to explicitly manage every dependency, along with large performance issues. Another possibility, which we have taken in this wrapper, is to create a new structure that will store both the API structure and the required dependencies. That way, we can safely rely on the GC for preserving what we need just when we need it.","category":"page"},{"location":"about/interfacing/","page":"Interfacing with the C API","title":"Interfacing with the C API","text":"Therefore, every API structure is wrapped inside another one (without the \"Vk\" prefix), as follows:","category":"page"},{"location":"about/interfacing/","page":"Interfacing with the C API","title":"Interfacing with the C API","text":"abstract type VulkanStruct{has_deps} end\n\nstruct InstanceCreateInfo <: VulkanStruct{true}\n    vks::VkInstanceCreateInfo # API struct\n    deps::Vector{Any}         # contains all required dependencies\nend","category":"page"},{"location":"about/interfacing/","page":"Interfacing with the C API","title":"Interfacing with the C API","text":"and every structure exposes a convenient constructor that works perfectly with Strings and mutable AbstractArrays. No manual Refs/cconvert/unsafe_convert needed.","category":"page"},{"location":"about/interfacing/","page":"Interfacing with the C API","title":"Interfacing with the C API","text":"We hope that the additional Vector{Any} will not introduce too much overhead. In the future, this might be changed to a NTuple{N, Any} or a StaticArrays.SVector{N, Any}. We could also have stored dependencies as additional fields, but this does not scale well with nested structs. It would either require putting an additional field for each dependency (be it direct, or indirect dependencies coming from a pointer to another struct), possibly defining other structures that hold dependencies to avoid having a large number of fields, inducing additional compilation time.","category":"page"},{"location":"about/interfacing/","page":"Interfacing with the C API","title":"Interfacing with the C API","text":"tip: Tip\ncconvert/unsafe_convert were extended on wrapper types so that, when using an API function directly, ccall will convert a struct to its API-compatible version.","category":"page"},{"location":"about/interfacing/#Version-numbers","page":"Interfacing with the C API","title":"Version numbers","text":"","category":"section"},{"location":"about/interfacing/","page":"Interfacing with the C API","title":"Interfacing with the C API","text":"Version numbers are encoded in unsigned integers (often UInt32) in C. Most APIs have a specific encoding (and decoding) scheme. Ideally we want to use version numbers from Julia without having to look for this encoding or decoding function, and this has been automated for the Vulkan API.","category":"page"},{"location":"about/interfacing/","page":"Interfacing with the C API","title":"Interfacing with the C API","text":"","category":"page"},{"location":"about/interfacing/","page":"Interfacing with the C API","title":"Interfacing with the C API","text":"This page was generated using Literate.jl.","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"EditURL = \"https://github.com/JuliaGPU/Vulkan.jl/blob/master/docs/src/tutorial/minimal_working_compute.jl\"","category":"page"},{"location":"tutorial/minimal_working_compute/#Minimal-working-compute-example","page":"Running compute shaders","title":"Minimal working compute example","text":"","category":"section"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"The amount of control offered by Vulkan is not a very welcome property for users who just want to run a simple shader to compute something quickly, and the effort required for the \"first good run\" is often quite deterrent. To ease the struggle, this tutorial gives precisely the small \"bootstrap\" piece of code that should allow you to quickly run a compute shader on actual data. In short, we walk through the following steps:","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"Opening a device and finding good queues families and memory types\nAllocating memory and buffers\nCompiling a shader program and filling up the structures necessary to run it:\nspecialization constants\npush constants\ndescriptor sets and layouts\nMaking a command buffer and submitting it to the queue, efficiently running the shader","category":"page"},{"location":"tutorial/minimal_working_compute/#Initialization","page":"Running compute shaders","title":"Initialization","text":"","category":"section"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"using SwiftShader_jll # hide\nusing Vulkan\n@set_driver :SwiftShader # hide\n\ninstance = Instance([], [])","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"Take the first available physical device (you might check that it is an actual GPU, using get_physical_device_properties).","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"physical_device = first(unwrap(enumerate_physical_devices(instance)))","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"At this point, we need to choose a queue family index to use. For this example, have a look at vulkaninfo command and pick the good queue manually from the list of VkQueueFamilyProperties – you want one that has QUEUE_COMPUTE in the flags. In a production environment, you would use get_physical_device_queue_family_properties to find a good index.","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"qfam_idx = 0","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"Create a device object and make a queue for our purposes.","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"device = Device(physical_device, [DeviceQueueCreateInfo(qfam_idx, [1.0])], [], [])","category":"page"},{"location":"tutorial/minimal_working_compute/#Allocating-the-memory","page":"Running compute shaders","title":"Allocating the memory","text":"","category":"section"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"Same way, you need to find a good memory type. Again, you can find a good one using vulkaninfo or with get_physical_device_memory_properties. For compute, you want something that is both at the device (contains MEMORY_PROPERTY_DEVICE_LOCAL_BIT) and visible from the host (..._HOST_VISIBLE_BIT).","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"memorytype_idx = 0","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"Let's create some data. We will work with 100 flimsy floats.","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"data_items = 100\nmem_size = sizeof(Float32) * data_items","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"Allocate the memory of the correct type","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"mem = unwrap(allocate_memory(device, mem_size, memorytype_idx))","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"Make a buffer that will be used to access the memory, and bind it to the memory. (Memory allocations may be quite demanding, it is therefore often better to allocate a single big chunk of memory, and create multiple buffers that view it as smaller arrays.)","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"buffer = unwrap(create_buffer(device, mem_size, BUFFER_USAGE_STORAGE_BUFFER_BIT, SHARING_MODE_EXCLUSIVE, [qfam_idx]))\n\nbind_buffer_memory(device, buffer, mem, 0)","category":"page"},{"location":"tutorial/minimal_working_compute/#Uploading-the-data-to-the-device","page":"Running compute shaders","title":"Uploading the data to the device","text":"","category":"section"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"First, map the memory and get a pointer to it.","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"memptr = unwrap(map_memory(device, mem, 0, mem_size))","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"Here we make Julia to look at the mapped data as a vector of Float32s, so that we can access it easily:","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"data = unsafe_wrap(Vector{Float32}, convert(Ptr{Float32}, memptr), data_items, own = false);\nnothing #hide","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"For now, let's just zero out all the data, and flush the changes to make sure the device can see the updated data. This is the simplest way to move array data to the device.","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"data .= 0\nflush_mapped_memory_ranges(device, [MappedMemoryRange(mem, 0, mem_size)])","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"The flushing is not required if you have verified that the memory is host-coherent (i.e., has MEMORY_PROPERTY_HOST_COHERENT_BIT).","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"Eventually, you may need to allocate memory types that are not visible from host, because these provide better capacity and speed on the discrete GPUs. At that point, you may need to use the transfer queue and memory transfer commands to get the data from host-visible to GPU-local memory, using e.g. cmd_copy_buffer.","category":"page"},{"location":"tutorial/minimal_working_compute/#Compiling-the-shader","page":"Running compute shaders","title":"Compiling the shader","text":"","category":"section"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"Now we need to make a shader program. We will use glslangValidator packaged in a JLL to compile a GLSL program from a string into a spir-v bytecode, which is later passed to the GPU drivers.","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"shader_code = \"\"\"\n#version 430\n\nlayout(local_size_x_id = 0) in;\nlayout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;\n\nlayout(constant_id = 0) const uint blocksize = 1; // manual way to capture the specialization constants\n\nlayout(push_constant) uniform Params\n{\n    float val;\n    uint n;\n} params;\n\nlayout(std430, binding=0) buffer databuf\n{\n    float data[];\n};\n\nvoid\nmain()\n{\n    uint i = gl_GlobalInvocationID.x;\n    if(i < params.n) data[i] = params.val * i;\n}\n\"\"\"","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"Push constants are small packs of variables that are used to quickly send configuration data to the shader runs. Make sure that this structure corresponds to what is declared in the shader.","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"struct ShaderPushConsts\n    val::Float32\n    n::UInt32\nend","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"Specialization constants are similar to push constants, but less dynamic: You can change them before compiling the shader for the pipeline, but not dynamically. This may have performance benefits for \"very static\" values, such as block sizes.","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"struct ShaderSpecConsts\n    local_size_x::UInt32\nend","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"glslangValidator program is used to compile the shader:","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"using glslang_jll\nshader_bcode = mktempdir() do dir\n    inpath = joinpath(dir, \"shader.comp\")\n    outpath = joinpath(dir, \"shader.spv\")\n    open(f -> write(f, shader_code), inpath, \"w\")\n    status = glslangValidator() do glslang\n        run(`$glslang -V -S comp -o $outpath $inpath`)\n    end\n    @assert status.exitcode == 0\n    reinterpret(UInt32, read(outpath))\nend","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"We can now make a shader module with the compiled code:","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"shader = unwrap(create_shader_module(device, sizeof(UInt32) * length(shader_bcode), shader_bcode))","category":"page"},{"location":"tutorial/minimal_working_compute/#Assembling-the-pipeline","page":"Running compute shaders","title":"Assembling the pipeline","text":"","category":"section"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"Descriptor set layout describes how many resources of what kind are going to be used by the shader. In this case, we only use a single buffer:","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"dsl = unwrap(\n    create_descriptor_set_layout(\n        device,\n        [DescriptorSetLayoutBinding(0, DESCRIPTOR_TYPE_STORAGE_BUFFER, SHADER_STAGE_COMPUTE_BIT; descriptor_count = 1)],\n    ),\n)","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"Pipeline layout describes the descriptor set together with the location of push constants:","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"pl = unwrap(\n    create_pipeline_layout(device, [dsl], [PushConstantRange(SHADER_STAGE_COMPUTE_BIT, 0, sizeof(ShaderPushConsts))]),\n)","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"Shader compilation can use \"specialization constants\" that get propagated (and optimized) into the shader code. We use them to make the shader workgroup size \"dynamic\" in the sense that the size (32) is not hardcoded in GLSL, but instead taken from here.","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"const_local_size_x = 32\nspec_consts = [ShaderSpecConsts(const_local_size_x)]","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"Next, we create a pipeline that can run the shader code with the specified layout:","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"pipeline_info = ComputePipelineCreateInfo(\n    PipelineShaderStageCreateInfo(\n        SHADER_STAGE_COMPUTE_BIT,\n        shader,\n        \"main\", # this needs to match the function name in the shader\n        specialization_info = SpecializationInfo(\n            [SpecializationMapEntry(0, 0, 4)],\n            UInt64(4),\n            Ptr{Nothing}(pointer(spec_consts)),\n        ),\n    ),\n    pl,\n    -1,\n)\nps, _ = unwrap(create_compute_pipelines(device, [pipeline_info]))\np = first(ps)","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"Now make a descriptor pool to allocate the buffer descriptors from (not a big one, just 1 descriptor set with 1 descriptor in total), ...","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"dpool = unwrap(create_descriptor_pool(device, 1, [DescriptorPoolSize(DESCRIPTOR_TYPE_STORAGE_BUFFER, 1)]))","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"... allocate the descriptors for our layout, ...","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"dsets = unwrap(allocate_descriptor_sets(device, DescriptorSetAllocateInfo(dpool, [dsl])))\ndset = first(dsets)","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"... and make the descriptors point to the right buffers.","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"update_descriptor_sets(\n    device,\n    [\n        WriteDescriptorSet(\n            dset,\n            0,\n            0,\n            DESCRIPTOR_TYPE_STORAGE_BUFFER,\n            [],\n            [DescriptorBufferInfo(buffer, 0, WHOLE_SIZE)],\n            [],\n        ),\n    ],\n    [],\n)","category":"page"},{"location":"tutorial/minimal_working_compute/#Executing-the-shader","page":"Running compute shaders","title":"Executing the shader","text":"","category":"section"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"Let's create a command pool in the right queue family, and take a command buffer out of that.","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"cmdpool = unwrap(create_command_pool(device, qfam_idx))\ncbufs = unwrap(allocate_command_buffers(device, CommandBufferAllocateInfo(cmdpool, COMMAND_BUFFER_LEVEL_PRIMARY, 1)))\ncbuf = first(cbufs)","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"Now that we have a command buffer, we can fill it with commands that cause the kernel to be run. Basically, we bind and fill everything, and then dispatch a sufficient amount of invocations of the shader to span over the array.","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"begin_command_buffer(cbuf, CommandBufferBeginInfo(flags = COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT))\n\ncmd_bind_pipeline(cbuf, PIPELINE_BIND_POINT_COMPUTE, p)\n\nconst_buf = [ShaderPushConsts(1.234, data_items)]\ncmd_push_constants(cbuf, pl, SHADER_STAGE_COMPUTE_BIT, 0, sizeof(ShaderPushConsts), Ptr{Nothing}(pointer(const_buf)))\n\ncmd_bind_descriptor_sets(cbuf, PIPELINE_BIND_POINT_COMPUTE, pl, 0, [dset], [])\n\ncmd_dispatch(cbuf, div(data_items, const_local_size_x, RoundUp), 1, 1)\n\nend_command_buffer(cbuf)","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"Finally, find a handle to the compute queue and send the command to execute the shader!","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"compute_q = get_device_queue(device, qfam_idx, 0)\nqueue_submit(compute_q, [SubmitInfo([], [], [cbuf], [])])","category":"page"},{"location":"tutorial/minimal_working_compute/#Getting-the-data","page":"Running compute shaders","title":"Getting the data","text":"","category":"section"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"After submitting the queue, the data is being crunched in the background. To get the resulting data, we need to wait for completion and invalidate the mapped memory (so that whatever data updates that happened on the GPU get transferred to the mapped range visible for the host).","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"While queue_wait_idle will wait for computations to be carried out, we need to make sure that the required data is kept alive during queue operations. In non-global scopes, such as functions, the compiler may skip the allocation of unused variables or garbage-collect objects that the runtime thinks are no longer used. If garbage-collected, objects will call their finalizers which imply the destruction of the Vulkan objects (via vkDestroy...). In this particular case, the runtime is not aware that for example the pipeline and buffer objects are still used and that there's a dependency with these variables until the command returns, so we tell it manually.","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"GC.@preserve buff dsl pl p dpool dset cmdpool cbuf const_buf begin\n    queue_wait_idle(compute_q)\nend","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"Just as with flushing, the invalidation is only required for memory that is not host-coherent. You may skip this step if you check that the memory has the host-coherent property flag.","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"invalidate_mapped_memory_ranges(device, [MappedMemoryRange(mem, 0, mem_size)])","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"Finally, let's have a look at the data created by your compute shader!","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"data # WHOA","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"","category":"page"},{"location":"tutorial/minimal_working_compute/","page":"Running compute shaders","title":"Running compute shaders","text":"This page was generated using Literate.jl.","category":"page"},{"location":"intro/#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"intro/#What-is-Vulkan?","page":"Introduction","title":"What is Vulkan?","text":"","category":"section"},{"location":"intro/","page":"Introduction","title":"Introduction","text":"Vulkan is a graphics and compute specification, targeting a broad range of GPUs and even CPUs. It aims to provide a cross-platform API that can be used from PCs, consoles, mobile phones and embedded platforms. It can be thought of as the new generation of OpenGL with the compute capabilities of OpenCL. It should be noted that Vulkan is merely a specification and therefore, there does not exist only one Vulkan library but rather multiple device-dependent implementations conforming to a unique standard. The version of the Vulkan implementation you may be using thus depends on the graphics drivers installed on your system.","category":"page"},{"location":"intro/","page":"Introduction","title":"Introduction","text":"The power of this standard lies in the genericity it guarantees to anything that builds from it. This is a direct consequence of a thorough testing of vendor implementations, which must be compatible with the specification in every detail. Therefore, tools that are developped for Vulkan can be used throughout the entire ecosystem, available for all devices that support Vulkan.","category":"page"},{"location":"intro/#Compute-and-graphics-interface","page":"Introduction","title":"Compute and graphics interface","text":"","category":"section"},{"location":"intro/#SPIR-V","page":"Introduction","title":"SPIR-V","text":"","category":"section"},{"location":"intro/","page":"Introduction","title":"Introduction","text":"To describe how graphics and compute programs should be executed by devices, Vulkan relies on the Standard Portable Intermediate Representation (SPIR-V) format. This is another specification, whose aim is to free hardware vendors from having to build their own compiler for every shading/compute language, whose implementations were not always coherent with one another. It is a binary format, making it easier to generate assembly code from than text-based formats (such as GLSL and HLSL).","category":"page"},{"location":"intro/","page":"Introduction","title":"Introduction","text":"SPIR-V is not a language, but rather a binary format that higher level languages can compile to. It can be targeted from shading languages; for example, see Khronos' glslang and Google's shaderc for GLSL/HLSL. SPIR-V features a large suite of tools, designed to ease the manipulation of SPIR-V programs. It includes an optimizer, spirv-opt, alleviating the need for hardware vendors to have their own SPIR-V optimizer.","category":"page"},{"location":"intro/","page":"Introduction","title":"Introduction","text":"SPIR-V is notably suited to cross-compilation among shading languages (see SPIR-V Cross).","category":"page"},{"location":"intro/#SPIR-V-and-LLVM","page":"Introduction","title":"SPIR-V and LLVM","text":"","category":"section"},{"location":"intro/","page":"Introduction","title":"Introduction","text":"SPIR-V is similar to LLVM IR, for which there exists a bi-directional translator. However, not all SPIR-V concepts are mappable to LLVM IR, so not all of SPIR-V can be translated. Currently, only the OpenCL part of SPIR-V is supported by this translator (see this issue), missing essential features required by Vulkan. If (or when) Vulkan is supported, Julia code could be compiled to LLVM, translated to SPIR-V and executed from any supported Vulkan device, be it for graphics or compute jobs. For the moment, SPIR-V modules to be consumed by Vulkan are usually compiled from other shading languages.","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"EditURL = \"https://github.com/JuliaGPU/Vulkan.jl/blob/master/docs/src/tutorial/types.jl\"","category":"page"},{"location":"tutorial/types/#Vulkan-types","page":"Vulkan types","title":"Vulkan types","text":"","category":"section"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"The API possesses a few data structures that exhibit a different behavior. We list all of these here along with their properties and features that we hope will free the developer of many patterns and obligations of the Vulkan API.","category":"page"},{"location":"tutorial/types/#Handles","page":"Vulkan types","title":"Handles","text":"","category":"section"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"Handles are opaque pointers to internal Vulkan objects. Almost every handle must be created and destroyed with API commands. Some handles have a parent handle (see Parent handle access for navigating through the resulting handle hierarchy), which must not be destroyed before its children. For this we provide wrappers around creation functions with an automatic finalization feature (see Automatic finalization) that uses a simple reference couting system. This alleviates the burden of tracking when a handle can be freed and freeing it, in conformance with the Vulkan specification.","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"Most handles are typically created with a *CreateInfo or *AllocateInfo structure, that packs creation parameters to be provided to the API creation function. To allow for nice one-liners that don't involve long create info names, these create info parameters are exposed in the creation function, automatically building the create info structure for you.","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"tip: Tip\nHandle types have a constructor defined that wraps around the creation function and automatically unwrap the result (see Error handling).","category":"page"},{"location":"tutorial/types/#Automatic-finalization","page":"Vulkan types","title":"Automatic finalization","text":"","category":"section"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"Handles can be created with the API functions vkCreate* and vkAllocate*, and most of them must be destroyed after use with a vkDestroy* or vkFree*. More importantly, they must be destroyed with the same allocator and parent handle that created them. To automate this, new mutable handle types were defined to allow for the registration of a finalizer. The create_* and allocate_* wrappers automatically register the corresponding destructor in a finalizer, so that you don't need to worry about destructors (except for CommandBuffers and DescriptorSets, see below). A handle's finalizer, and therefore its API destructor, will execute when there are no program-accessible references to this handle.","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"CommandBuffers and DescriptorSets do not register any destructor and are never implicitly freed. You will have to explicitly free those resources yourself with free_command_buffers and free_descriptor_sets respectively. The reason for that is that they are supposed to be freed in batches for performance considerations.","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"Therefore, you should never explicitly call a destructor (destroy_* or free_*) except for CommandBuffer and DescriptorSet. Otherwise objects will be destroyed/freed twice, likely resulting in a crash.","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"Finalizers can be run with finalize(handle), which may be useful in situations where you want to free an object without waiting for finalizers to be triggered by the Julia runtime. This can be done safely: the finalizers won't run twice if you run them manually.","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"However, finalizers can be run in arbitrary order, and some handles require to be destroyed only after all their children (such as VkDevices). To avoid crashes related to bad finalization execution order, a simple thread-safe reference counting system is used to make sure that a handle is destroyed only after all its children are destroyed.","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"note: Note\nIf you need to construct a handle from an opaque pointer (obtained, for example, via an external library such as a VkSurfaceKHR from GLFW), you can use the constructor (::Type{<:Handle})(ptr::Ptr{Cvoid}, destructor[, parent]) as insurface_ptr = GLFW.CreateWindowSurface(instance, window)\nSurfaceKHR(surface_ptr, x -> destroy_surface_khr(instance, x), instance)If you don't need to destroy the surface (for example, if the external library does it for you), then you can just pass in the identity function as a destructor.","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"This introduces a small overhead, since the parent handle and allocator are stored in an anonymous function for each handle at creation. However, it should be minor compared to the execution time of the API destructors.","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"Because finalization order is the source of many Vulkan bugs, particularly when objects implicitly depend on other objects being alive, there is a preference LOG_DESTRUCTION that allows you to log all destructions if set to \"true\" for debugging purposes.","category":"page"},{"location":"tutorial/types/#expose-create-info-args","page":"Vulkan types","title":"Exposition of create info arguments","text":"","category":"section"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"Handles that can only be created with a single API constructor possess an additional constructor that wraps around the generated create/allocate* functions, building the required *[Create/Allocate]Info from exposed arguments. That way, you do not have to explicitly construct this intermediate structure, which reduces boilerplate code.","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"For example","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"using SwiftShader_jll # hide\nusing Vulkan\n@set_driver :SwiftShader # hide\n\nconst instance = Instance([], [])\nconst physical_device = first(unwrap(enumerate_physical_devices(instance)))\nconst device = Device(\n    physical_device, [DeviceQueueCreateInfo(0, [1.])],\n    [],\n    [],\n)\n\nfence = unwrap(create_fence(device, FenceCreateInfo()))\nfence_signaled = unwrap(\n                   create_fence(\n                     device,\n                     FenceCreateInfo(flags=FENCE_CREATE_SIGNALED_BIT);\n                   )\n                 )","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"can be replaced with","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"fence = unwrap(create_fence(device))\nfence_signaled = unwrap(\n                   create_fence(\n                     device;\n                     flags=FENCE_CREATE_SIGNALED_BIT,\n                     )\n                   )","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"Note that we unwrap the result every time, assuming that the create_fence function did not return any error. See the error handling section for more information.","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"Furthermore, handle types have a generated constructor that exposes the same arguments as the create/allocate* functions, but automatically unwrapping the result so you don't have to call it manually. The above can then be further reduced into","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"fence = Fence(device)\nfence_signaled = Fence(\n                   device,\n                   flags=FENCE_CREATE_SIGNALED_BIT;\n                 )","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"When multiple info structures are requested, only the main one has its fields exposed as function arguments:","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"# the ApplicationInfo has to be provided manually\nInstance([], []; application_info = ApplicationInfo(v\"0.1\", v\"0.1\", v\"1.2\"))","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"Or, if an array of create infos is expected, then you will have to provide it yourself:","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"# the array of DeviceQueueCreateInfo has to be provided manually\nDevice(physical_device, [DeviceQueueCreateInfo(0, [1.0])], [], [])","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"When multiple handles are constructed at the same time, no additional constructor is defined and you need to call the create_* function manually","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"command_pool = CommandPool(device, 0)\ncommand_buffers = unwrap(\n                    allocate_command_buffers(\n                      device,\n                      CommandBufferAllocateInfo(\n                        command_pool,\n                        COMMAND_BUFFER_LEVEL_PRIMARY,\n                        3,\n                      )\n                    )\n                  )","category":"page"},{"location":"tutorial/types/#Parent-handle-access","page":"Vulkan types","title":"Parent handle access","text":"","category":"section"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"Handles store their parent handle if they have one. For example, it is possible to just carry a Pipeline around and access its device field whenever you like, and the physical_device field of this device and so on until you reach the instance that has no parent. That way, it is not necessary to keep all the other parent handles in scope (e.g. Device and Instance handles) to make an API call.","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"command_pool.device.physical_device.instance","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"Base.parent was extended to work on handles that possess a parent handle.","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"parent(device) == device.physical_device == physical_device","category":"page"},{"location":"tutorial/types/#Structures","page":"Vulkan types","title":"Structures","text":"","category":"section"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"Vulkan structures, such as Extent2D, InstanceCreateInfo and PhysicalDeviceFeatures were wrapped into two different structures each.","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"First, there are high-level-ish structures that are easier to work with, replacing C types by idiomatic Julia types. The user will almost never need to worry about pointers, and will be able to use types such as Julia arrays, strings and version numbers in a transparent manner. All the data is stored in its fields, and is accessible just like you would expect from a Julia structure. Equality and hashing are implemented with AutoHashEquals.jl, to facilitate their use in dictionaries.","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"However, storing data and converting it to a C-compatible format for API calls introduce some overhead for these high-level structures. It will not matter in non performance-critical sections, but may be a limitation in tight loops. Therefore, lower-level, minimalistic types are available, which only carry the smallest possible amount of information needed to use the API. Although they can be created very similarly to high-level structures, the high-level arguments are directly converted to their C-compatible counterpart. The main drawback is a lack of introspection, since these minimalistic structures carry C types, so these structures are badly suited to keeping data around. Minimalistic structures are not defined for types that are only returned and never requested by Vulkan, such as ExtensionProperties.","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"There is a final family of Vulkan types that you may encounter. Those are the barebones VulkanCore.jl types, which you won't have to worry about in all cases except when you need to pass functions to the API. In this case, inputs will not be automatically converted for you, and you will have to define the appropriate signature before obtaining function pointers with Base.@cfunction. You can access these types from the (exported) module Vulkan.core.","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"To summarize:","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"High-level structs:\nshould be used most of the time.\nstore values in a way that makes it easy to retrieve them later.\nintroduce a small overhead, which may be a concern in some performance-critical sections.\nLow-level structs:\noffer performance advantages over high-level structs.\nmay be preferred in performance-critical sections.\nare not meant for introspection capabilities.\nare not defined for structures not needed by the API.\nVulkanCore structs:\nshould never be used directly, except as argument types for functions intended to be passed to the API.","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"In general, high-level and low-level structs can be used interchangeably as function arguments to constructors or API functions, at the condition that they are not mixed together.","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"Using either high-level or low-level structs should be a performance matter, and as such it is encouraged to profile applications before using low-level structs all: they are faster, but can require additional bookkeeping due to a lack of introspection.","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"Typically, it is easier to use high-level types for create info arguments to handles that are created at a low frequency; this includes Instance, Device or SwapchainKHR handles for example. Their create info structures may contain precious information that needs to be accessed by the application, e.g. to make sure that image formats in a render pass comply with the swapchain image format, or to check instance or device extensions before using extension functionality.","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"API functions and structures accept either low-level structs or high-level structs. For commands with low-level structs, you currently need to provide typed arrays (i.e. not [] which are of type Vector{Any}).","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"In general:","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"High-level structs are returned from functions with high-level arguments.\nLow-level structs are returned from functions with low-level arguments.","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"The only exception currently is for functions that would have the same low-level/high-level argument types, for which only one version is available that returns values in low-level types.","category":"page"},{"location":"tutorial/types/#Conversion","page":"Vulkan types","title":"Conversion","text":"","category":"section"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"In Vulkan, version numbers are UInt32 with a special encoding to extract major, minor and patch numbers, booleans are represented as UInt32 values, Strings as Ptr{UInt8} or NTuple{N, UInt8}. Those types have a natural counterpart in Julia, being respectively VersionNumber, Bool and String types. The wrapper makes it possible to work with these idiomatic Julia types, automatically converting them wherever necessary.","category":"page"},{"location":"tutorial/types/#Automatic-insertion-of-inferable-arguments","page":"Vulkan types","title":"Automatic insertion of inferable arguments","text":"","category":"section"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"In some places, part of the arguments of a function or of the fields of a structure can only take one logical value. It can be divided into two sets:","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"The structure type sType of certain structures\nArguments related to the start and length of a pointer which represents an array","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"The second set is a consequence of using a higher-level language than C. In C, the pointer alone does not provide any information regarding the number of elements it holds. In Julia, array-like values can be constructed in many different ways, being an Array, a NTuple or other container types which provide a length method.","category":"page"},{"location":"tutorial/types/#Structure-type","page":"Vulkan types","title":"Structure type","text":"","category":"section"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"Many API structures possess a sType field which must be set to a unique value. This is done to favor the extendability of the API, but is unnecessary boilerplate for the user. Worse, this is an error-prone process which may lead to crashes. All the constructors of this wrapper do not expose this sType argument, and hardcode the expected value.","category":"page"},{"location":"tutorial/types/#Pointer-lengths","page":"Vulkan types","title":"Pointer lengths","text":"","category":"section"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"The length of array pointers is automatically deduced from the length of the container passed in as argument.","category":"page"},{"location":"tutorial/types/#Pointer-starts","page":"Vulkan types","title":"Pointer starts","text":"","category":"section"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"Some API functions require to specify the start of a pointer array as an argument. They have been hardcoded to 0 (first element in C), since it is always possible to pass in a sub-array (e.g. a view).","category":"page"},{"location":"tutorial/types/#Bitmask-flags","page":"Vulkan types","title":"Bitmask flags","text":"","category":"section"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"In Vulkan, the value of some flags carry meaning through a bitmask structure. Bitmasks define bit values which they can be a composition of (using bitwise and, or, and xor operations). However, the associated flag type is defined as a UInt32, which allows any value to be passed in as a flag. This opens up the door to incorrect usage that may be hard to debug. To circumvent that, every bitmask flag now has one associated type which prevents combinations with flags of other bitmask types.","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"For example, consider the vanilla VkSampleCountFlags type (alias for UInt32) with bits defined via the enumerated type VkSampleCountFlagBits:","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"using Vulkan.core\nVK_SAMPLE_COUNT_1_BIT isa VkSampleCountFlagBits\nVK_SAMPLE_COUNT_1_BIT === VkSampleCountFlagBits(1)\nVK_SAMPLE_COUNT_1_BIT === VkSampleCountFlags(1)\nVK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT === VkSampleCountFlags(3)\nVK_SAMPLE_COUNT_1_BIT & VK_SAMPLE_COUNT_2_BIT === VkSampleCountFlags(0)\nVK_SAMPLE_COUNT_1_BIT & VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR === VkSampleCountFlags(1)","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"Those two types are combined into one SampleCountFlag:","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"using Vulkan\nSampleCountFlag <: BitMask\nSurfaceTransformFlagKHR <: BitMask # another bitmask flag\nSAMPLE_COUNT_1_BIT | SAMPLE_COUNT_2_BIT === SampleCountFlag(3)\nSAMPLE_COUNT_1_BIT & SAMPLE_COUNT_2_BIT === SampleCountFlag(0)\nSAMPLE_COUNT_1_BIT & SURFACE_TRANSFORM_IDENTITY_BIT_KHR\nUInt32(typemax(SampleCountFlag)) === UInt32(VkCore.VK_SAMPLE_COUNT_FLAG_BITS_MAX_ENUM)","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"All functions that were expecting a VkSampleCountFlags (UInt32) value will have their wrapped versions expect a value of type SampleCountFlag. Furthermore, the *FLAG_BITS_MAX_ENUM values are removed. This value is the same for all enums and can be accessed via typemax(T) where T is a BitMask (e.g. SampleCountFlag).","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"","category":"page"},{"location":"tutorial/types/","page":"Vulkan types","title":"Vulkan types","text":"This page was generated using Literate.jl.","category":"page"},{"location":"tutorial/indepth/","page":"In-depth tutorial","title":"In-depth tutorial","text":"EditURL = \"https://github.com/JuliaGPU/Vulkan.jl/blob/master/docs/src/tutorial/indepth.jl\"","category":"page"},{"location":"tutorial/indepth/#In-depth-tutorial","page":"In-depth tutorial","title":"In-depth tutorial","text":"","category":"section"},{"location":"tutorial/indepth/","page":"In-depth tutorial","title":"In-depth tutorial","text":"This objective of this in-depth tutorial is to introduce the reader to the functionality of this library and reach a level of familiarity sufficient for building more complex applications.","category":"page"},{"location":"tutorial/indepth/","page":"In-depth tutorial","title":"In-depth tutorial","text":"This tutorial is not intended as a replacement for a Vulkan tutorial. In particular, it is assumed that the reader has a basic understanding of Vulkan. If you are new to Vulkan, feel free to follow the official Vulkan tutorial along with this one. The Vulkan tutorial will teach you the concepts behind Vulkan, and this tutorial how to use the API it from Julia. A lot of resources are available online for learning about Vulkan, such as the Vulkan Guide by the Khronos Group. You can find a more detailed list here.","category":"page"},{"location":"tutorial/indepth/#Initialization","page":"In-depth tutorial","title":"Initialization","text":"","category":"section"},{"location":"tutorial/indepth/","page":"In-depth tutorial","title":"In-depth tutorial","text":"The entry point of any Vulkan application is an Instance, so we will create one. We will use validation layers and the extension VK_EXT_debug_utils that will allow logging from Vulkan. We will also provide an ApplicationInfo parameter to request the 1.2 version of the API.","category":"page"},{"location":"tutorial/indepth/","page":"In-depth tutorial","title":"In-depth tutorial","text":"using SwiftShader_jll # hide\nusing Vulkan\n@set_driver :SwiftShader # hide\n\nconst application_info = ApplicationInfo(\n    v\"0.0.1\", # application version\n    v\"0.0.1\", # engine version\n    v\"1.2\"; # requested API version\n    application_name=\"Demo\",\n    engine_name=\"DemoEngine\",\n)","category":"page"},{"location":"tutorial/indepth/","page":"In-depth tutorial","title":"In-depth tutorial","text":"The application and engine versions don't matter here, but must be provided regardless. We request the version 1.2 of the Vulkan API (ensure you have a driver compatible with version 1.2 first). Application and engine names won't matter either, but we provide them for demonstration purposes.","category":"page"},{"location":"tutorial/indepth/","page":"In-depth tutorial","title":"In-depth tutorial","text":"const instance = Instance(\n    [\"VK_LAYER_KHRONOS_validation\"],\n    [\"VK_EXT_debug_utils\"];\n    application_info,\n)","category":"page"},{"location":"tutorial/indepth/","page":"In-depth tutorial","title":"In-depth tutorial","text":"This simple call does a few things under the hood:","category":"page"},{"location":"tutorial/indepth/","page":"In-depth tutorial","title":"In-depth tutorial","text":"it creates an InstanceCreateInfo with the provided arguments\nit calls create_instance with the create info, which in turn:\ncalls the API constructor vkCreateInstance\nchecks if an error occured; if so, return a ResultTypes.Result type wrapping an error\nregisters a finalizer to a newly created Instance that will call destroy_instance (forwarding to vkDestroyInstance) when necessary\nunwraps the result of create_instance, which is assumed to be a success code (otherwise an exception is thrown).","category":"page"},{"location":"tutorial/indepth/","page":"In-depth tutorial","title":"In-depth tutorial","text":"Note that this little abstraction does not induce any loss of functionality. Indeed, the Instance constructor has a few keyword arguments not mentioned above for a more advanced use, which simply provides default values.","category":"page"},{"location":"tutorial/indepth/","page":"In-depth tutorial","title":"In-depth tutorial","text":"Note that we pass in arrays, version numbers and strings; but the C API does not know anything about Julia types. Fortunately, these conversions are taken care of by the wrapper, so that we don't need to provide pointers for arrays and strings nor integers that act as version numbers.","category":"page"},{"location":"tutorial/indepth/","page":"In-depth tutorial","title":"In-depth tutorial","text":"We now setup a debug messenger that we'll use for logging. Its function is to process messages sent by the Vulkan API. We could use the default debug callback provided by Vulkan.jl, namely default_debug_callback; but instead we will implement our own callback for educational purposes. We'll just define a function that prints whatever message is received from Vulkan.","category":"page"},{"location":"tutorial/indepth/","page":"In-depth tutorial","title":"In-depth tutorial","text":"We won't just println, because it does context-switching which is not allowed in finalizers (and the callback may be called in a finalizer, notably when functions like vkDestroy... are called). We can use jl_safe_printf which does not go through the Julia task system to safely print messages. The data that will arrive from Vulkan will be a Ptr{VkCore.VkDebugUtilsMessengerCallbackDataEXT}","category":"page"},{"location":"tutorial/indepth/","page":"In-depth tutorial","title":"In-depth tutorial","text":"function debug_callback(severity, type, p_data, p_user_data)\n    p_data ≠ C_NULL || return UInt32(0) # don't print if there's no message\n    data = unsafe_load(p_data)\n    msg = unsafe_string(data.pMessage)\n    ccall(:jl_safe_printf, Cstring, (Cstring,), string(msg, '\\n'))\n    return UInt32(0)\nend","category":"page"},{"location":"tutorial/indepth/","page":"In-depth tutorial","title":"In-depth tutorial","text":"Because we are passing a callback to Vulkan as a function pointer, we need to convert it to a function pointer using @cfunction:","category":"page"},{"location":"tutorial/indepth/","page":"In-depth tutorial","title":"In-depth tutorial","text":"const debug_callback_c = @cfunction(\n    default_debug_callback,\n    UInt32,\n    (\n        DebugUtilsMessageSeverityFlagEXT,\n        DebugUtilsMessageTypeFlagEXT,\n        Ptr{VkCore.VkDebugUtilsMessengerCallbackDataEXT},\n        Ptr{Cvoid},\n    )\n)","category":"page"},{"location":"tutorial/indepth/","page":"In-depth tutorial","title":"In-depth tutorial","text":"warning: Warning\nIf you intend to do this inside a module that will be precompiled, you must create the function pointer in the __init__() stage:const debug_callback_c = Ref{Ptr{Cvoid}}()\nfunction __init__()\n    debug_callback_c[] = @cfunction(...) # the expression above\nendThis is because function pointers are only valid in a given runtime environment, so you need to get it at runtime (and not compile time).","category":"page"},{"location":"tutorial/indepth/","page":"In-depth tutorial","title":"In-depth tutorial","text":"Note that the signature uses pointers and structures from VulkanCore.jl (accessible through the exported core and vk aliases). This is because we currently don't generate wrappers for defining function pointers. The flag types are still wrapper types, because the wrapped versions share the same binary representation as the core types. Let's create the debug messenger for all message types and severities:","category":"page"},{"location":"tutorial/indepth/","page":"In-depth tutorial","title":"In-depth tutorial","text":"const debug_messenger = DebugUtilsMessengerEXT(\n    instance,\n    |(\n        DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT,\n        DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT,\n        DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT,\n        DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT,\n    ),\n    |(\n        DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT,\n        DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT,\n        DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT,\n    ),\n    debug_callback_c,\n)","category":"page"},{"location":"tutorial/indepth/","page":"In-depth tutorial","title":"In-depth tutorial","text":"note: Note\nDebugUtilsMessengerEXT is an extension-defined handle. Any extension function such as vkCreateDebugUtilsMessengerEXT and vkDestroyDebugUtilsMessengerEXT (called in the constructor and finalizer respectively) must be called using a function pointer. This detail is abstracted away with the wrapper, as API function pointers are automatically retrieved as needed and stored in a thread-safe global dispatch table. See more in the Dispatch section.","category":"page"},{"location":"tutorial/indepth/","page":"In-depth tutorial","title":"In-depth tutorial","text":"We can now enumerate and pick a physical device that we will use for this tutorial.","category":"page"},{"location":"tutorial/indepth/","page":"In-depth tutorial","title":"In-depth tutorial","text":"","category":"page"},{"location":"tutorial/indepth/","page":"In-depth tutorial","title":"In-depth tutorial","text":"This page was generated using Literate.jl.","category":"page"},{"location":"tutorial/error_handling/","page":"Error handling","title":"Error handling","text":"EditURL = \"https://github.com/JuliaGPU/Vulkan.jl/blob/master/docs/src/tutorial/error_handling.jl\"","category":"page"},{"location":"tutorial/error_handling/#Error-handling","page":"Error handling","title":"Error handling","text":"","category":"section"},{"location":"tutorial/error_handling/","page":"Error handling","title":"Error handling","text":"Error handling is achieved via ResultTypes.jl to avoid the large overhead introduced with try/catch blocks. All functions that need to perform an operation that returns a VkResult are wrapped into a ResultTypes.Result (distinct from Vulkan.Result which is the wrapped version of VkResult), which contains a VulkanError if a non-success code is encountered. Custom error handling can be performed using the following pattern","category":"page"},{"location":"tutorial/error_handling/","page":"Error handling","title":"Error handling","text":"using Vulkan\n\nres = create_instance([], [])\nif iserror(res) # handle the error\n    err = unwrap_error(res)\n    if err.code == ERROR_INCOMPATIBLE_DRIVER\n        error(\n            \"\"\"\n            No driver compatible with the requested API version could be found.\n            Please make sure that a driver supporting Vulkan is installed, and\n            that it is up to date with the requested version.\n            \"\"\"\n        )\n    elseif err.code == ERROR_LAYER_NOT_PRESENT\n        error(\"One or more layers could not be found\")\n    else\n        throw(err)\n    end\nelse # get the instance\n    unwrap(res)\nend","category":"page"},{"location":"tutorial/error_handling/","page":"Error handling","title":"Error handling","text":"Note that calling unwrap directly on the result will throw any contained VulkanError if there is one. So, if you just want to throw an exception when encountering an error, you can do","category":"page"},{"location":"tutorial/error_handling/","page":"Error handling","title":"Error handling","text":"unwrap(create_instance([], []))","category":"page"},{"location":"tutorial/error_handling/","page":"Error handling","title":"Error handling","text":"Because it may be tedious to unwrap everything by hand and explicitly set the create info structures, convenience constructors are defined for handle types so that you can just do","category":"page"},{"location":"tutorial/error_handling/","page":"Error handling","title":"Error handling","text":"Instance([], [])","category":"page"},{"location":"tutorial/error_handling/","page":"Error handling","title":"Error handling","text":"However, note that exceptions are thrown whenever the result is an error with this shorter approach.","category":"page"},{"location":"tutorial/error_handling/","page":"Error handling","title":"Error handling","text":"Furthermore, all functions that may return non-success (but non-error) codes return a Vulkan.Result type along with any other returned value, since the return code may still be of interest.","category":"page"},{"location":"tutorial/error_handling/","page":"Error handling","title":"Error handling","text":"For more details on the ResultTypes.Result type and how to handle it, please consult the ResultTypes.jl documentation.","category":"page"},{"location":"tutorial/error_handling/","page":"Error handling","title":"Error handling","text":"","category":"page"},{"location":"tutorial/error_handling/","page":"Error handling","title":"Error handling","text":"This page was generated using Literate.jl.","category":"page"},{"location":"utility/#Utility","page":"Utility","title":"Utility","text":"","category":"section"},{"location":"utility/","page":"Utility","title":"Utility","text":"Here we describe some tools that can assist the development of Vulkan applications.","category":"page"},{"location":"utility/","page":"Utility","title":"Utility","text":"Feel free to check out the official Vulkan website for a more complete list of resources.","category":"page"},{"location":"utility/#External-tools","page":"Utility","title":"External tools","text":"","category":"section"},{"location":"utility/#NVIDIA-Nsight-Systems","page":"Utility","title":"NVIDIA Nsight Systems","text":"","category":"section"},{"location":"utility/","page":"Utility","title":"Utility","text":"NVIDIA Nsight Systems is a tool developed by NVIDIA to profile applications, showing both CPU and GPU usage. It can be very useful for analyzing the balance between CPU and GPU usage, as well as troubleshoot general performance bottlenecks. However, it only outputs high-level information regarding GPU tasks. Therefore, to catch GPU bottlenecks on a low-level (such as inside shaders) one should instead use a dedicated profiler such as Nsight Graphics or Renderdoc.","category":"page"},{"location":"utility/#nsight-graphics","page":"Utility","title":"NVIDIA Nsight Graphics","text":"","category":"section"},{"location":"utility/","page":"Utility","title":"Utility","text":"Nsight Graphics dives deeper into the execution details of an application and provides detailed information regarding graphics pipelines, shaders and so on. This is a tool of choice to consider for NVIDIA GPUs once the GPU is identified as a bottleneck with Nsight Systems.","category":"page"},{"location":"utility/#renderdoc","page":"Utility","title":"Renderdoc","text":"","category":"section"},{"location":"utility/","page":"Utility","title":"Utility","text":"Renderdoc plays a similar role to Nsight Graphics for a wider range of GPUs. It is open-source and community-maintained.","category":"page"},{"location":"utility/#CPU-implementation-of-Vulkan","page":"Utility","title":"CPU implementation of Vulkan","text":"","category":"section"},{"location":"utility/","page":"Utility","title":"Utility","text":"SwiftShader is a CPU implementation of Vulkan primarily designed to extend the portability of Vulkan applications. It can be used wherever there is a lack of proper driver support, including public continuous integration services. This allows for example to evaluate code when generating a documentation in CI with Documenter.jl, like this one.","category":"page"},{"location":"utility/","page":"Utility","title":"Utility","text":"SwiftShader is available as a JLL package. You can add it with","category":"page"},{"location":"utility/","page":"Utility","title":"Utility","text":"julia> ]add SwiftShader_jll","category":"page"},{"location":"utility/","page":"Utility","title":"Utility","text":"A convenience macro is implemented in Vulkan, so you can quickly use SwiftShader with","category":"page"},{"location":"utility/","page":"Utility","title":"Utility","text":"using SwiftShader_jll\nusing Vulkan\n@set_driver :SwiftShader","category":"page"},{"location":"utility/","page":"Utility","title":"Utility","text":"which will tell the Vulkan Loader to use the SwiftShader Installable Client Driver.","category":"page"},{"location":"api/#Vulkan.jl-API","page":"API","title":"Vulkan.jl API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Modules = [Vulkan]","category":"page"},{"location":"api/","page":"API","title":"API","text":"Modules = [Vulkan]\nPrivate = false","category":"page"},{"location":"api/#Vulkan.Vulkan","page":"API","title":"Vulkan.Vulkan","text":"Vulkan\n\n(Image: tests) (Image: ) (Image: )\n\nVulkan.jl is a lightweight wrapper around the Vulkan graphics and compute library. It exposes abstractions over the underlying C interface, primarily geared towards developers looking for a more natural way to work with Vulkan with minimal overhead.\n\nIt builds upon the core API provided by VulkanCore.jl. Because Vulkan is originally a C specification, interfacing with it requires some knowledge before correctly being used from Julia. This package acts as an abstraction layer, so that you don't need to know how to properly call a C library, while still retaining full functionality. The wrapper is generated directly from the Vulkan Specification.\n\nThis is a very similar approach to that taken by VulkanHpp, except that the target language is Julia and not C++.\n\nIf you have questions, want to brainstorm ideas or simply want to share cool things you do with Vulkan don't hesitate to create a thread in our Zulip channel.\n\nStatus\n\nThis package is a work in progress and has not reached its 1.0 version yet. As such, documentation may not be complete and functionality may change without warning. If it happens, make sure to check out the changelog. At this stage, you should not use this library in production; however, you are encouraged to push its boundaries through non-critical projects. If you find limitations, bugs or want to suggest potential improvements, do not hesitate to submit issues or pull requests. The goal is definitely to be production-ready as soon as possible.\n\nIn particular, because the library relies on automatic code generation, there may be portions of the Vulkan API that are not wrapped correctly. While you should not have trouble in most cases, there are always edge cases which were not accounted for during generation. Please open an issue whenever you encounter such a case, so that we can reliably fix those wrapping issues for future use.\n\nTesting\n\nCurrently, continuous integration runs only on Ubuntu 32/64 bits with Julia 1.6, for lack of a functional CI setup with Vulkan for MacOS and Windows. Because public CI services lack proper driver support, the CPU Vulkan implementation SwiftShader is used. If you are not on Linux, we cannot guarantee that this library will work for you, although so far nothing is platform-dependent. Therefore, it is recommended that you test this package with your own setup.\n\nDepends on:\n\nBase\nCore\nDocStringExtensions\nLogging\nMLStyle\nReexport\nVulkan.CEnum\nVulkanCore.LibVulkan\n\n\n\n\n\n","category":"module"},{"location":"api/#Vulkan.AabbPositionsKHR","page":"API","title":"Vulkan.AabbPositionsKHR","text":"High-level wrapper for VkAabbPositionsKHR.\n\nExtension: VK_KHR_acceleration_structure\n\nAPI documentation\n\nstruct AabbPositionsKHR <: Vulkan.HighLevelStruct\n\nmin_x::Float32\nmin_y::Float32\nmin_z::Float32\nmax_x::Float32\nmax_y::Float32\nmax_z::Float32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.AccelerationStructureBuildGeometryInfoKHR","page":"API","title":"Vulkan.AccelerationStructureBuildGeometryInfoKHR","text":"High-level wrapper for VkAccelerationStructureBuildGeometryInfoKHR.\n\nExtension: VK_KHR_acceleration_structure\n\nAPI documentation\n\nstruct AccelerationStructureBuildGeometryInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\ntype::AccelerationStructureTypeKHR\nflags::BuildAccelerationStructureFlagKHR\nmode::BuildAccelerationStructureModeKHR\nsrc_acceleration_structure::Union{Ptr{Nothing}, AccelerationStructureKHR}\ndst_acceleration_structure::Union{Ptr{Nothing}, AccelerationStructureKHR}\ngeometries::Union{Ptr{Nothing}, Vector{AccelerationStructureGeometryKHR}}\ngeometries_2::Union{Ptr{Nothing}, Vector{AccelerationStructureGeometryKHR}}\nscratch_data::DeviceOrHostAddressKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.AccelerationStructureBuildGeometryInfoKHR-Tuple{AccelerationStructureTypeKHR, BuildAccelerationStructureModeKHR, DeviceOrHostAddressKHR}","page":"API","title":"Vulkan.AccelerationStructureBuildGeometryInfoKHR","text":"AccelerationStructureBuildGeometryInfoKHR(type::AccelerationStructureTypeKHR, mode::BuildAccelerationStructureModeKHR, scratch_data::DeviceOrHostAddressKHR; next = C_NULL, flags = 0, src_acceleration_structure = C_NULL, dst_acceleration_structure = C_NULL, geometries = C_NULL, geometries_2 = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ntype::AccelerationStructureTypeKHR\nmode::BuildAccelerationStructureModeKHR\nscratch_data::DeviceOrHostAddressKHR\nnext: defaults to C_NULL\nflags: defaults to 0\nsrc_acceleration_structure: defaults to C_NULL\ndst_acceleration_structure: defaults to C_NULL\ngeometries: defaults to C_NULL\ngeometries_2: defaults to C_NULL\n\nAPI documentation\n\nAccelerationStructureBuildGeometryInfoKHR(type::AccelerationStructureTypeKHR, mode::BuildAccelerationStructureModeKHR, scratch_data::DeviceOrHostAddressKHR; next, flags, src_acceleration_structure, dst_acceleration_structure, geometries, geometries_2) -> AccelerationStructureBuildGeometryInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.AccelerationStructureBuildRangeInfoKHR","page":"API","title":"Vulkan.AccelerationStructureBuildRangeInfoKHR","text":"High-level wrapper for VkAccelerationStructureBuildRangeInfoKHR.\n\nExtension: VK_KHR_acceleration_structure\n\nAPI documentation\n\nstruct AccelerationStructureBuildRangeInfoKHR <: Vulkan.HighLevelStruct\n\nprimitive_count::UInt32\nprimitive_offset::UInt32\nfirst_vertex::UInt32\ntransform_offset::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.AccelerationStructureBuildSizesInfoKHR","page":"API","title":"Vulkan.AccelerationStructureBuildSizesInfoKHR","text":"High-level wrapper for VkAccelerationStructureBuildSizesInfoKHR.\n\nExtension: VK_KHR_acceleration_structure\n\nAPI documentation\n\nstruct AccelerationStructureBuildSizesInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nacceleration_structure_size::UInt64\nupdate_scratch_size::UInt64\nbuild_scratch_size::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.AccelerationStructureBuildSizesInfoKHR-Tuple{Integer, Integer, Integer}","page":"API","title":"Vulkan.AccelerationStructureBuildSizesInfoKHR","text":"AccelerationStructureBuildSizesInfoKHR(acceleration_structure_size::Integer, update_scratch_size::Integer, build_scratch_size::Integer; next = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\nacceleration_structure_size::Integer\nupdate_scratch_size::Integer\nbuild_scratch_size::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nAccelerationStructureBuildSizesInfoKHR(acceleration_structure_size::Integer, update_scratch_size::Integer, build_scratch_size::Integer; next) -> AccelerationStructureBuildSizesInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.AccelerationStructureCreateInfoKHR","page":"API","title":"Vulkan.AccelerationStructureCreateInfoKHR","text":"High-level wrapper for VkAccelerationStructureCreateInfoKHR.\n\nExtension: VK_KHR_acceleration_structure\n\nAPI documentation\n\nstruct AccelerationStructureCreateInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\ncreate_flags::AccelerationStructureCreateFlagKHR\nbuffer::Buffer\noffset::UInt64\nsize::UInt64\ntype::AccelerationStructureTypeKHR\ndevice_address::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.AccelerationStructureCreateInfoKHR-Tuple{Buffer, Integer, Integer, AccelerationStructureTypeKHR}","page":"API","title":"Vulkan.AccelerationStructureCreateInfoKHR","text":"AccelerationStructureCreateInfoKHR(buffer::Buffer, offset::Integer, size::Integer, type::AccelerationStructureTypeKHR; next = C_NULL, create_flags = 0, device_address = 0)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\nbuffer::Buffer\noffset::Integer\nsize::Integer\ntype::AccelerationStructureTypeKHR\nnext: defaults to C_NULL\ncreate_flags: defaults to 0\ndevice_address: defaults to 0\n\nAPI documentation\n\nAccelerationStructureCreateInfoKHR(buffer::Buffer, offset::Integer, size::Integer, type::AccelerationStructureTypeKHR; next, create_flags, device_address) -> AccelerationStructureCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.AccelerationStructureCreateInfoNV","page":"API","title":"Vulkan.AccelerationStructureCreateInfoNV","text":"High-level wrapper for VkAccelerationStructureCreateInfoNV.\n\nExtension: VK_NV_ray_tracing\n\nAPI documentation\n\nstruct AccelerationStructureCreateInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\ncompacted_size::UInt64\ninfo::AccelerationStructureInfoNV\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.AccelerationStructureCreateInfoNV-Tuple{Integer, AccelerationStructureInfoNV}","page":"API","title":"Vulkan.AccelerationStructureCreateInfoNV","text":"AccelerationStructureCreateInfoNV(compacted_size::Integer, info::AccelerationStructureInfoNV; next = C_NULL)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ncompacted_size::Integer\ninfo::AccelerationStructureInfoNV\nnext: defaults to C_NULL\n\nAPI documentation\n\nAccelerationStructureCreateInfoNV(compacted_size::Integer, info::AccelerationStructureInfoNV; next) -> AccelerationStructureCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.AccelerationStructureDeviceAddressInfoKHR","page":"API","title":"Vulkan.AccelerationStructureDeviceAddressInfoKHR","text":"High-level wrapper for VkAccelerationStructureDeviceAddressInfoKHR.\n\nExtension: VK_KHR_acceleration_structure\n\nAPI documentation\n\nstruct AccelerationStructureDeviceAddressInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nacceleration_structure::AccelerationStructureKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.AccelerationStructureDeviceAddressInfoKHR-Tuple{AccelerationStructureKHR}","page":"API","title":"Vulkan.AccelerationStructureDeviceAddressInfoKHR","text":"AccelerationStructureDeviceAddressInfoKHR(acceleration_structure::AccelerationStructureKHR; next = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\nacceleration_structure::AccelerationStructureKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\nAccelerationStructureDeviceAddressInfoKHR(acceleration_structure::AccelerationStructureKHR; next) -> AccelerationStructureDeviceAddressInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.AccelerationStructureGeometryAabbsDataKHR","page":"API","title":"Vulkan.AccelerationStructureGeometryAabbsDataKHR","text":"High-level wrapper for VkAccelerationStructureGeometryAabbsDataKHR.\n\nExtension: VK_KHR_acceleration_structure\n\nAPI documentation\n\nstruct AccelerationStructureGeometryAabbsDataKHR <: Vulkan.HighLevelStruct\n\nnext::Any\ndata::DeviceOrHostAddressConstKHR\nstride::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.AccelerationStructureGeometryAabbsDataKHR-Tuple{DeviceOrHostAddressConstKHR, Integer}","page":"API","title":"Vulkan.AccelerationStructureGeometryAabbsDataKHR","text":"AccelerationStructureGeometryAabbsDataKHR(data::DeviceOrHostAddressConstKHR, stride::Integer; next = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ndata::DeviceOrHostAddressConstKHR\nstride::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nAccelerationStructureGeometryAabbsDataKHR(data::DeviceOrHostAddressConstKHR, stride::Integer; next) -> AccelerationStructureGeometryAabbsDataKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.AccelerationStructureGeometryDataKHR","page":"API","title":"Vulkan.AccelerationStructureGeometryDataKHR","text":"High-level wrapper for VkAccelerationStructureGeometryDataKHR.\n\nExtension: VK_KHR_acceleration_structure\n\nAPI documentation\n\nstruct AccelerationStructureGeometryDataKHR <: Vulkan.HighLevelStruct\n\nvks::VulkanCore.LibVulkan.VkAccelerationStructureGeometryDataKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.AccelerationStructureGeometryInstancesDataKHR","page":"API","title":"Vulkan.AccelerationStructureGeometryInstancesDataKHR","text":"High-level wrapper for VkAccelerationStructureGeometryInstancesDataKHR.\n\nExtension: VK_KHR_acceleration_structure\n\nAPI documentation\n\nstruct AccelerationStructureGeometryInstancesDataKHR <: Vulkan.HighLevelStruct\n\nnext::Any\narray_of_pointers::Bool\ndata::DeviceOrHostAddressConstKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.AccelerationStructureGeometryInstancesDataKHR-Tuple{Bool, DeviceOrHostAddressConstKHR}","page":"API","title":"Vulkan.AccelerationStructureGeometryInstancesDataKHR","text":"AccelerationStructureGeometryInstancesDataKHR(array_of_pointers::Bool, data::DeviceOrHostAddressConstKHR; next = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\narray_of_pointers::Bool\ndata::DeviceOrHostAddressConstKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\nAccelerationStructureGeometryInstancesDataKHR(array_of_pointers::Bool, data::DeviceOrHostAddressConstKHR; next) -> AccelerationStructureGeometryInstancesDataKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.AccelerationStructureGeometryKHR","page":"API","title":"Vulkan.AccelerationStructureGeometryKHR","text":"High-level wrapper for VkAccelerationStructureGeometryKHR.\n\nExtension: VK_KHR_acceleration_structure\n\nAPI documentation\n\nstruct AccelerationStructureGeometryKHR <: Vulkan.HighLevelStruct\n\nnext::Any\ngeometry_type::GeometryTypeKHR\ngeometry::AccelerationStructureGeometryDataKHR\nflags::GeometryFlagKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.AccelerationStructureGeometryKHR-Tuple{GeometryTypeKHR, AccelerationStructureGeometryDataKHR}","page":"API","title":"Vulkan.AccelerationStructureGeometryKHR","text":"AccelerationStructureGeometryKHR(geometry_type::GeometryTypeKHR, geometry::AccelerationStructureGeometryDataKHR; next = C_NULL, flags = 0)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ngeometry_type::GeometryTypeKHR\ngeometry::AccelerationStructureGeometryDataKHR\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nAccelerationStructureGeometryKHR(geometry_type::GeometryTypeKHR, geometry::AccelerationStructureGeometryDataKHR; next, flags) -> AccelerationStructureGeometryKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.AccelerationStructureGeometryTrianglesDataKHR","page":"API","title":"Vulkan.AccelerationStructureGeometryTrianglesDataKHR","text":"High-level wrapper for VkAccelerationStructureGeometryTrianglesDataKHR.\n\nExtension: VK_KHR_acceleration_structure\n\nAPI documentation\n\nstruct AccelerationStructureGeometryTrianglesDataKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nvertex_format::Format\nvertex_data::DeviceOrHostAddressConstKHR\nvertex_stride::UInt64\nmax_vertex::UInt32\nindex_type::IndexType\nindex_data::DeviceOrHostAddressConstKHR\ntransform_data::DeviceOrHostAddressConstKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.AccelerationStructureGeometryTrianglesDataKHR-Tuple{Format, DeviceOrHostAddressConstKHR, Integer, Integer, IndexType, DeviceOrHostAddressConstKHR, DeviceOrHostAddressConstKHR}","page":"API","title":"Vulkan.AccelerationStructureGeometryTrianglesDataKHR","text":"AccelerationStructureGeometryTrianglesDataKHR(vertex_format::Format, vertex_data::DeviceOrHostAddressConstKHR, vertex_stride::Integer, max_vertex::Integer, index_type::IndexType, index_data::DeviceOrHostAddressConstKHR, transform_data::DeviceOrHostAddressConstKHR; next = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\nvertex_format::Format\nvertex_data::DeviceOrHostAddressConstKHR\nvertex_stride::Integer\nmax_vertex::Integer\nindex_type::IndexType\nindex_data::DeviceOrHostAddressConstKHR\ntransform_data::DeviceOrHostAddressConstKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\nAccelerationStructureGeometryTrianglesDataKHR(vertex_format::Format, vertex_data::DeviceOrHostAddressConstKHR, vertex_stride::Integer, max_vertex::Integer, index_type::IndexType, index_data::DeviceOrHostAddressConstKHR, transform_data::DeviceOrHostAddressConstKHR; next) -> AccelerationStructureGeometryTrianglesDataKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.AccelerationStructureInfoNV","page":"API","title":"Vulkan.AccelerationStructureInfoNV","text":"High-level wrapper for VkAccelerationStructureInfoNV.\n\nExtension: VK_NV_ray_tracing\n\nAPI documentation\n\nstruct AccelerationStructureInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\ntype::VulkanCore.LibVulkan.VkAccelerationStructureTypeKHR\nflags::Union{Ptr{Nothing}, UInt32}\ninstance_count::UInt32\ngeometries::Vector{GeometryNV}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.AccelerationStructureInfoNV-Tuple{VulkanCore.LibVulkan.VkAccelerationStructureTypeKHR, AbstractArray}","page":"API","title":"Vulkan.AccelerationStructureInfoNV","text":"AccelerationStructureInfoNV(type::VkAccelerationStructureTypeNV, geometries::AbstractArray{GeometryNV}; next = C_NULL, flags = C_NULL, instance_count = 0)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ntype::VkAccelerationStructureTypeNV\ngeometries::AbstractArray{GeometryNV}\nnext: defaults to C_NULL\nflags: defaults to C_NULL\ninstance_count: defaults to 0\n\nAPI documentation\n\nAccelerationStructureInfoNV(type::VulkanCore.LibVulkan.VkAccelerationStructureTypeKHR, geometries::AbstractArray; next, flags, instance_count) -> AccelerationStructureInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.AccelerationStructureInstanceKHR","page":"API","title":"Vulkan.AccelerationStructureInstanceKHR","text":"High-level wrapper for VkAccelerationStructureInstanceKHR.\n\nExtension: VK_KHR_acceleration_structure\n\nAPI documentation\n\nstruct AccelerationStructureInstanceKHR <: Vulkan.HighLevelStruct\n\ntransform::TransformMatrixKHR\ninstance_custom_index::UInt32\nmask::UInt32\ninstance_shader_binding_table_record_offset::UInt32\nflags::GeometryInstanceFlagKHR\nacceleration_structure_reference::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.AccelerationStructureInstanceKHR-Tuple{TransformMatrixKHR, Integer, Integer, Integer, Integer}","page":"API","title":"Vulkan.AccelerationStructureInstanceKHR","text":"AccelerationStructureInstanceKHR(transform::TransformMatrixKHR, instance_custom_index::Integer, mask::Integer, instance_shader_binding_table_record_offset::Integer, acceleration_structure_reference::Integer; flags = 0)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ntransform::TransformMatrixKHR\ninstance_custom_index::Integer\nmask::Integer\ninstance_shader_binding_table_record_offset::Integer\nacceleration_structure_reference::Integer\nflags: defaults to 0\n\nAPI documentation\n\nAccelerationStructureInstanceKHR(transform::TransformMatrixKHR, instance_custom_index::Integer, mask::Integer, instance_shader_binding_table_record_offset::Integer, acceleration_structure_reference::Integer; flags) -> AccelerationStructureInstanceKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.AccelerationStructureKHR-Tuple{Any, Any, Integer, Integer, AccelerationStructureTypeKHR, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.AccelerationStructureKHR","text":"AccelerationStructureKHR(device, buffer, offset::Integer, size::Integer, type::AccelerationStructureTypeKHR, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL, create_flags = 0, device_address = 0)\n\nAccelerationStructureKHR(device, buffer, offset::Integer, size::Integer, type::AccelerationStructureTypeKHR, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, create_flags, device_address) -> AccelerationStructureKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.AccelerationStructureKHR-Tuple{Any, Any, Integer, Integer, AccelerationStructureTypeKHR}","page":"API","title":"Vulkan.AccelerationStructureKHR","text":"AccelerationStructureKHR(device, buffer, offset::Integer, size::Integer, type::AccelerationStructureTypeKHR; allocator = C_NULL, next = C_NULL, create_flags = 0, device_address = 0)\n\nAccelerationStructureKHR(device, buffer, offset::Integer, size::Integer, type::AccelerationStructureTypeKHR; allocator, next, create_flags, device_address) -> AccelerationStructureKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.AccelerationStructureMemoryRequirementsInfoNV","page":"API","title":"Vulkan.AccelerationStructureMemoryRequirementsInfoNV","text":"High-level wrapper for VkAccelerationStructureMemoryRequirementsInfoNV.\n\nExtension: VK_NV_ray_tracing\n\nAPI documentation\n\nstruct AccelerationStructureMemoryRequirementsInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\ntype::AccelerationStructureMemoryRequirementsTypeNV\nacceleration_structure::AccelerationStructureNV\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.AccelerationStructureMemoryRequirementsInfoNV-Tuple{AccelerationStructureMemoryRequirementsTypeNV, AccelerationStructureNV}","page":"API","title":"Vulkan.AccelerationStructureMemoryRequirementsInfoNV","text":"AccelerationStructureMemoryRequirementsInfoNV(type::AccelerationStructureMemoryRequirementsTypeNV, acceleration_structure::AccelerationStructureNV; next = C_NULL)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ntype::AccelerationStructureMemoryRequirementsTypeNV\nacceleration_structure::AccelerationStructureNV\nnext: defaults to C_NULL\n\nAPI documentation\n\nAccelerationStructureMemoryRequirementsInfoNV(type::AccelerationStructureMemoryRequirementsTypeNV, acceleration_structure::AccelerationStructureNV; next) -> AccelerationStructureMemoryRequirementsInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.AccelerationStructureNV-Tuple{Any, Integer, _AccelerationStructureInfoNV, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.AccelerationStructureNV","text":"AccelerationStructureNV(device, compacted_size::Integer, info::_AccelerationStructureInfoNV, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL)\n\nAccelerationStructureNV(device, compacted_size::Integer, info::_AccelerationStructureInfoNV, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next) -> AccelerationStructureNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.AccelerationStructureNV-Tuple{Any, Integer, _AccelerationStructureInfoNV}","page":"API","title":"Vulkan.AccelerationStructureNV","text":"AccelerationStructureNV(device, compacted_size::Integer, info::_AccelerationStructureInfoNV; allocator = C_NULL, next = C_NULL)\n\nAccelerationStructureNV(device, compacted_size::Integer, info::_AccelerationStructureInfoNV; allocator, next) -> AccelerationStructureNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.AccelerationStructureVersionInfoKHR","page":"API","title":"Vulkan.AccelerationStructureVersionInfoKHR","text":"High-level wrapper for VkAccelerationStructureVersionInfoKHR.\n\nExtension: VK_KHR_acceleration_structure\n\nAPI documentation\n\nstruct AccelerationStructureVersionInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nversion_data::Vector{UInt8}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.AccelerationStructureVersionInfoKHR-Tuple{AbstractArray}","page":"API","title":"Vulkan.AccelerationStructureVersionInfoKHR","text":"AccelerationStructureVersionInfoKHR(version_data::AbstractArray{<:Integer}; next = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\nversion_data::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\nAPI documentation\n\nAccelerationStructureVersionInfoKHR(version_data::AbstractArray; next) -> AccelerationStructureVersionInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.AcquireNextImageInfoKHR","page":"API","title":"Vulkan.AcquireNextImageInfoKHR","text":"High-level wrapper for VkAcquireNextImageInfoKHR.\n\nExtension: VK_KHR_swapchain\n\nAPI documentation\n\nstruct AcquireNextImageInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nswapchain::SwapchainKHR\ntimeout::UInt64\nsemaphore::Union{Ptr{Nothing}, Semaphore}\nfence::Union{Ptr{Nothing}, Fence}\ndevice_mask::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.AcquireNextImageInfoKHR-Tuple{SwapchainKHR, Integer, Integer}","page":"API","title":"Vulkan.AcquireNextImageInfoKHR","text":"AcquireNextImageInfoKHR(swapchain::SwapchainKHR, timeout::Integer, device_mask::Integer; next = C_NULL, semaphore = C_NULL, fence = C_NULL)\n\nExtension: VK_KHR_swapchain\n\nArguments:\n\nswapchain::SwapchainKHR (externsync)\ntimeout::Integer\ndevice_mask::Integer\nnext: defaults to C_NULL\nsemaphore: defaults to C_NULL (externsync)\nfence: defaults to C_NULL (externsync)\n\nAPI documentation\n\nAcquireNextImageInfoKHR(swapchain::SwapchainKHR, timeout::Integer, device_mask::Integer; next, semaphore, fence) -> AcquireNextImageInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.AcquireProfilingLockInfoKHR","page":"API","title":"Vulkan.AcquireProfilingLockInfoKHR","text":"High-level wrapper for VkAcquireProfilingLockInfoKHR.\n\nExtension: VK_KHR_performance_query\n\nAPI documentation\n\nstruct AcquireProfilingLockInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::AcquireProfilingLockFlagKHR\ntimeout::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.AcquireProfilingLockInfoKHR-Tuple{Integer}","page":"API","title":"Vulkan.AcquireProfilingLockInfoKHR","text":"AcquireProfilingLockInfoKHR(timeout::Integer; next = C_NULL, flags = 0)\n\nExtension: VK_KHR_performance_query\n\nArguments:\n\ntimeout::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nAcquireProfilingLockInfoKHR(timeout::Integer; next, flags) -> AcquireProfilingLockInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.AllocationCallbacks","page":"API","title":"Vulkan.AllocationCallbacks","text":"High-level wrapper for VkAllocationCallbacks.\n\nAPI documentation\n\nstruct AllocationCallbacks <: Vulkan.HighLevelStruct\n\nuser_data::Ptr{Nothing}\npfn_allocation::Union{Ptr{Nothing}, Base.CFunction}\npfn_reallocation::Union{Ptr{Nothing}, Base.CFunction}\npfn_free::Union{Ptr{Nothing}, Base.CFunction}\npfn_internal_allocation::Union{Ptr{Nothing}, Base.CFunction}\npfn_internal_free::Union{Ptr{Nothing}, Base.CFunction}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.AllocationCallbacks-Tuple{Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.AllocationCallbacks","text":"AllocationCallbacks(pfn_allocation::FunctionPtr, pfn_reallocation::FunctionPtr, pfn_free::FunctionPtr; user_data = C_NULL, pfn_internal_allocation = C_NULL, pfn_internal_free = C_NULL)\n\nArguments:\n\npfn_allocation::FunctionPtr\npfn_reallocation::FunctionPtr\npfn_free::FunctionPtr\nuser_data: defaults to C_NULL\npfn_internal_allocation: defaults to C_NULL\npfn_internal_free: defaults to C_NULL\n\nAPI documentation\n\nAllocationCallbacks(pfn_allocation::Union{Ptr{Nothing}, Base.CFunction}, pfn_reallocation::Union{Ptr{Nothing}, Base.CFunction}, pfn_free::Union{Ptr{Nothing}, Base.CFunction}; user_data, pfn_internal_allocation, pfn_internal_free) -> AllocationCallbacks\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ApplicationInfo","page":"API","title":"Vulkan.ApplicationInfo","text":"High-level wrapper for VkApplicationInfo.\n\nAPI documentation\n\nstruct ApplicationInfo <: Vulkan.HighLevelStruct\n\nnext::Any\napplication_name::String\napplication_version::VersionNumber\nengine_name::String\nengine_version::VersionNumber\napi_version::VersionNumber\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ApplicationInfo-Tuple{VersionNumber, VersionNumber, VersionNumber}","page":"API","title":"Vulkan.ApplicationInfo","text":"ApplicationInfo(application_version::VersionNumber, engine_version::VersionNumber, api_version::VersionNumber; next = C_NULL, application_name = \"\", engine_name = \"\")\n\nArguments:\n\napplication_version::VersionNumber\nengine_version::VersionNumber\napi_version::VersionNumber\nnext: defaults to C_NULL\napplication_name: defaults to ``\nengine_name: defaults to ``\n\nAPI documentation\n\nApplicationInfo(application_version::VersionNumber, engine_version::VersionNumber, api_version::VersionNumber; next, application_name, engine_name) -> ApplicationInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.AttachmentDescription","page":"API","title":"Vulkan.AttachmentDescription","text":"High-level wrapper for VkAttachmentDescription.\n\nAPI documentation\n\nstruct AttachmentDescription <: Vulkan.HighLevelStruct\n\nflags::AttachmentDescriptionFlag\nformat::Format\nsamples::SampleCountFlag\nload_op::AttachmentLoadOp\nstore_op::AttachmentStoreOp\nstencil_load_op::AttachmentLoadOp\nstencil_store_op::AttachmentStoreOp\ninitial_layout::ImageLayout\nfinal_layout::ImageLayout\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.AttachmentDescription-Tuple{Format, SampleCountFlag, AttachmentLoadOp, AttachmentStoreOp, AttachmentLoadOp, AttachmentStoreOp, ImageLayout, ImageLayout}","page":"API","title":"Vulkan.AttachmentDescription","text":"AttachmentDescription(format::Format, samples::SampleCountFlag, load_op::AttachmentLoadOp, store_op::AttachmentStoreOp, stencil_load_op::AttachmentLoadOp, stencil_store_op::AttachmentStoreOp, initial_layout::ImageLayout, final_layout::ImageLayout; flags = 0)\n\nArguments:\n\nformat::Format\nsamples::SampleCountFlag\nload_op::AttachmentLoadOp\nstore_op::AttachmentStoreOp\nstencil_load_op::AttachmentLoadOp\nstencil_store_op::AttachmentStoreOp\ninitial_layout::ImageLayout\nfinal_layout::ImageLayout\nflags: defaults to 0\n\nAPI documentation\n\nAttachmentDescription(format::Format, samples::SampleCountFlag, load_op::AttachmentLoadOp, store_op::AttachmentStoreOp, stencil_load_op::AttachmentLoadOp, stencil_store_op::AttachmentStoreOp, initial_layout::ImageLayout, final_layout::ImageLayout; flags) -> AttachmentDescription\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.AttachmentDescription2","page":"API","title":"Vulkan.AttachmentDescription2","text":"High-level wrapper for VkAttachmentDescription2.\n\nAPI documentation\n\nstruct AttachmentDescription2 <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::AttachmentDescriptionFlag\nformat::Format\nsamples::SampleCountFlag\nload_op::AttachmentLoadOp\nstore_op::AttachmentStoreOp\nstencil_load_op::AttachmentLoadOp\nstencil_store_op::AttachmentStoreOp\ninitial_layout::ImageLayout\nfinal_layout::ImageLayout\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.AttachmentDescription2-Tuple{Format, SampleCountFlag, AttachmentLoadOp, AttachmentStoreOp, AttachmentLoadOp, AttachmentStoreOp, ImageLayout, ImageLayout}","page":"API","title":"Vulkan.AttachmentDescription2","text":"AttachmentDescription2(format::Format, samples::SampleCountFlag, load_op::AttachmentLoadOp, store_op::AttachmentStoreOp, stencil_load_op::AttachmentLoadOp, stencil_store_op::AttachmentStoreOp, initial_layout::ImageLayout, final_layout::ImageLayout; next = C_NULL, flags = 0)\n\nArguments:\n\nformat::Format\nsamples::SampleCountFlag\nload_op::AttachmentLoadOp\nstore_op::AttachmentStoreOp\nstencil_load_op::AttachmentLoadOp\nstencil_store_op::AttachmentStoreOp\ninitial_layout::ImageLayout\nfinal_layout::ImageLayout\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nAttachmentDescription2(format::Format, samples::SampleCountFlag, load_op::AttachmentLoadOp, store_op::AttachmentStoreOp, stencil_load_op::AttachmentLoadOp, stencil_store_op::AttachmentStoreOp, initial_layout::ImageLayout, final_layout::ImageLayout; next, flags) -> AttachmentDescription2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.AttachmentDescriptionStencilLayout","page":"API","title":"Vulkan.AttachmentDescriptionStencilLayout","text":"High-level wrapper for VkAttachmentDescriptionStencilLayout.\n\nAPI documentation\n\nstruct AttachmentDescriptionStencilLayout <: Vulkan.HighLevelStruct\n\nnext::Any\nstencil_initial_layout::ImageLayout\nstencil_final_layout::ImageLayout\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.AttachmentDescriptionStencilLayout-Tuple{ImageLayout, ImageLayout}","page":"API","title":"Vulkan.AttachmentDescriptionStencilLayout","text":"AttachmentDescriptionStencilLayout(stencil_initial_layout::ImageLayout, stencil_final_layout::ImageLayout; next = C_NULL)\n\nArguments:\n\nstencil_initial_layout::ImageLayout\nstencil_final_layout::ImageLayout\nnext: defaults to C_NULL\n\nAPI documentation\n\nAttachmentDescriptionStencilLayout(stencil_initial_layout::ImageLayout, stencil_final_layout::ImageLayout; next) -> AttachmentDescriptionStencilLayout\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.AttachmentReference","page":"API","title":"Vulkan.AttachmentReference","text":"High-level wrapper for VkAttachmentReference.\n\nAPI documentation\n\nstruct AttachmentReference <: Vulkan.HighLevelStruct\n\nattachment::UInt32\nlayout::ImageLayout\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.AttachmentReference2","page":"API","title":"Vulkan.AttachmentReference2","text":"High-level wrapper for VkAttachmentReference2.\n\nAPI documentation\n\nstruct AttachmentReference2 <: Vulkan.HighLevelStruct\n\nnext::Any\nattachment::UInt32\nlayout::ImageLayout\naspect_mask::ImageAspectFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.AttachmentReference2-Tuple{Integer, ImageLayout, ImageAspectFlag}","page":"API","title":"Vulkan.AttachmentReference2","text":"AttachmentReference2(attachment::Integer, layout::ImageLayout, aspect_mask::ImageAspectFlag; next = C_NULL)\n\nArguments:\n\nattachment::Integer\nlayout::ImageLayout\naspect_mask::ImageAspectFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\nAttachmentReference2(attachment::Integer, layout::ImageLayout, aspect_mask::ImageAspectFlag; next) -> AttachmentReference2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.AttachmentReferenceStencilLayout","page":"API","title":"Vulkan.AttachmentReferenceStencilLayout","text":"High-level wrapper for VkAttachmentReferenceStencilLayout.\n\nAPI documentation\n\nstruct AttachmentReferenceStencilLayout <: Vulkan.HighLevelStruct\n\nnext::Any\nstencil_layout::ImageLayout\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.AttachmentReferenceStencilLayout-Tuple{ImageLayout}","page":"API","title":"Vulkan.AttachmentReferenceStencilLayout","text":"AttachmentReferenceStencilLayout(stencil_layout::ImageLayout; next = C_NULL)\n\nArguments:\n\nstencil_layout::ImageLayout\nnext: defaults to C_NULL\n\nAPI documentation\n\nAttachmentReferenceStencilLayout(stencil_layout::ImageLayout; next) -> AttachmentReferenceStencilLayout\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.AttachmentSampleLocationsEXT","page":"API","title":"Vulkan.AttachmentSampleLocationsEXT","text":"High-level wrapper for VkAttachmentSampleLocationsEXT.\n\nExtension: VK_EXT_sample_locations\n\nAPI documentation\n\nstruct AttachmentSampleLocationsEXT <: Vulkan.HighLevelStruct\n\nattachment_index::UInt32\nsample_locations_info::SampleLocationsInfoEXT\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.BaseInStructure","page":"API","title":"Vulkan.BaseInStructure","text":"High-level wrapper for VkBaseInStructure.\n\nAPI documentation\n\nstruct BaseInStructure <: Vulkan.HighLevelStruct\n\nnext::Any\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.BaseInStructure-Tuple{}","page":"API","title":"Vulkan.BaseInStructure","text":"BaseInStructure(; next = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\n\nAPI documentation\n\nBaseInStructure(; next) -> BaseInStructure\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.BaseOutStructure","page":"API","title":"Vulkan.BaseOutStructure","text":"High-level wrapper for VkBaseOutStructure.\n\nAPI documentation\n\nstruct BaseOutStructure <: Vulkan.HighLevelStruct\n\nnext::Any\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.BaseOutStructure-Tuple{}","page":"API","title":"Vulkan.BaseOutStructure","text":"BaseOutStructure(; next = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\n\nAPI documentation\n\nBaseOutStructure(; next) -> BaseOutStructure\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.BindAccelerationStructureMemoryInfoNV","page":"API","title":"Vulkan.BindAccelerationStructureMemoryInfoNV","text":"High-level wrapper for VkBindAccelerationStructureMemoryInfoNV.\n\nExtension: VK_NV_ray_tracing\n\nAPI documentation\n\nstruct BindAccelerationStructureMemoryInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\nacceleration_structure::AccelerationStructureNV\nmemory::DeviceMemory\nmemory_offset::UInt64\ndevice_indices::Vector{UInt32}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.BindAccelerationStructureMemoryInfoNV-Tuple{AccelerationStructureNV, DeviceMemory, Integer, AbstractArray}","page":"API","title":"Vulkan.BindAccelerationStructureMemoryInfoNV","text":"BindAccelerationStructureMemoryInfoNV(acceleration_structure::AccelerationStructureNV, memory::DeviceMemory, memory_offset::Integer, device_indices::AbstractArray{<:Integer}; next = C_NULL)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\nacceleration_structure::AccelerationStructureNV\nmemory::DeviceMemory\nmemory_offset::Integer\ndevice_indices::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\nAPI documentation\n\nBindAccelerationStructureMemoryInfoNV(acceleration_structure::AccelerationStructureNV, memory::DeviceMemory, memory_offset::Integer, device_indices::AbstractArray; next) -> BindAccelerationStructureMemoryInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.BindBufferMemoryDeviceGroupInfo","page":"API","title":"Vulkan.BindBufferMemoryDeviceGroupInfo","text":"High-level wrapper for VkBindBufferMemoryDeviceGroupInfo.\n\nAPI documentation\n\nstruct BindBufferMemoryDeviceGroupInfo <: Vulkan.HighLevelStruct\n\nnext::Any\ndevice_indices::Vector{UInt32}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.BindBufferMemoryDeviceGroupInfo-Tuple{AbstractArray}","page":"API","title":"Vulkan.BindBufferMemoryDeviceGroupInfo","text":"BindBufferMemoryDeviceGroupInfo(device_indices::AbstractArray{<:Integer}; next = C_NULL)\n\nArguments:\n\ndevice_indices::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\nAPI documentation\n\nBindBufferMemoryDeviceGroupInfo(device_indices::AbstractArray; next) -> BindBufferMemoryDeviceGroupInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.BindBufferMemoryInfo","page":"API","title":"Vulkan.BindBufferMemoryInfo","text":"High-level wrapper for VkBindBufferMemoryInfo.\n\nAPI documentation\n\nstruct BindBufferMemoryInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nbuffer::Buffer\nmemory::DeviceMemory\nmemory_offset::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.BindBufferMemoryInfo-Tuple{Buffer, DeviceMemory, Integer}","page":"API","title":"Vulkan.BindBufferMemoryInfo","text":"BindBufferMemoryInfo(buffer::Buffer, memory::DeviceMemory, memory_offset::Integer; next = C_NULL)\n\nArguments:\n\nbuffer::Buffer\nmemory::DeviceMemory\nmemory_offset::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nBindBufferMemoryInfo(buffer::Buffer, memory::DeviceMemory, memory_offset::Integer; next) -> BindBufferMemoryInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.BindImageMemoryDeviceGroupInfo","page":"API","title":"Vulkan.BindImageMemoryDeviceGroupInfo","text":"High-level wrapper for VkBindImageMemoryDeviceGroupInfo.\n\nAPI documentation\n\nstruct BindImageMemoryDeviceGroupInfo <: Vulkan.HighLevelStruct\n\nnext::Any\ndevice_indices::Vector{UInt32}\nsplit_instance_bind_regions::Vector{Rect2D}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.BindImageMemoryDeviceGroupInfo-Tuple{AbstractArray, AbstractArray}","page":"API","title":"Vulkan.BindImageMemoryDeviceGroupInfo","text":"BindImageMemoryDeviceGroupInfo(device_indices::AbstractArray{<:Integer}, split_instance_bind_regions::AbstractArray{Rect2D}; next = C_NULL)\n\nArguments:\n\ndevice_indices::AbstractArray{<:Integer}\nsplit_instance_bind_regions::AbstractArray{Rect2D}\nnext: defaults to C_NULL\n\nAPI documentation\n\nBindImageMemoryDeviceGroupInfo(device_indices::AbstractArray, split_instance_bind_regions::AbstractArray; next) -> BindImageMemoryDeviceGroupInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.BindImageMemoryInfo","page":"API","title":"Vulkan.BindImageMemoryInfo","text":"High-level wrapper for VkBindImageMemoryInfo.\n\nAPI documentation\n\nstruct BindImageMemoryInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nimage::Image\nmemory::DeviceMemory\nmemory_offset::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.BindImageMemoryInfo-Tuple{Image, DeviceMemory, Integer}","page":"API","title":"Vulkan.BindImageMemoryInfo","text":"BindImageMemoryInfo(image::Image, memory::DeviceMemory, memory_offset::Integer; next = C_NULL)\n\nArguments:\n\nimage::Image\nmemory::DeviceMemory\nmemory_offset::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nBindImageMemoryInfo(image::Image, memory::DeviceMemory, memory_offset::Integer; next) -> BindImageMemoryInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.BindImageMemorySwapchainInfoKHR","page":"API","title":"Vulkan.BindImageMemorySwapchainInfoKHR","text":"High-level wrapper for VkBindImageMemorySwapchainInfoKHR.\n\nExtension: VK_KHR_swapchain\n\nAPI documentation\n\nstruct BindImageMemorySwapchainInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nswapchain::SwapchainKHR\nimage_index::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.BindImageMemorySwapchainInfoKHR-Tuple{SwapchainKHR, Integer}","page":"API","title":"Vulkan.BindImageMemorySwapchainInfoKHR","text":"BindImageMemorySwapchainInfoKHR(swapchain::SwapchainKHR, image_index::Integer; next = C_NULL)\n\nExtension: VK_KHR_swapchain\n\nArguments:\n\nswapchain::SwapchainKHR (externsync)\nimage_index::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nBindImageMemorySwapchainInfoKHR(swapchain::SwapchainKHR, image_index::Integer; next) -> BindImageMemorySwapchainInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.BindImagePlaneMemoryInfo","page":"API","title":"Vulkan.BindImagePlaneMemoryInfo","text":"High-level wrapper for VkBindImagePlaneMemoryInfo.\n\nAPI documentation\n\nstruct BindImagePlaneMemoryInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nplane_aspect::ImageAspectFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.BindImagePlaneMemoryInfo-Tuple{ImageAspectFlag}","page":"API","title":"Vulkan.BindImagePlaneMemoryInfo","text":"BindImagePlaneMemoryInfo(plane_aspect::ImageAspectFlag; next = C_NULL)\n\nArguments:\n\nplane_aspect::ImageAspectFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\nBindImagePlaneMemoryInfo(plane_aspect::ImageAspectFlag; next) -> BindImagePlaneMemoryInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.BindIndexBufferIndirectCommandNV","page":"API","title":"Vulkan.BindIndexBufferIndirectCommandNV","text":"High-level wrapper for VkBindIndexBufferIndirectCommandNV.\n\nExtension: VK_NV_device_generated_commands\n\nAPI documentation\n\nstruct BindIndexBufferIndirectCommandNV <: Vulkan.HighLevelStruct\n\nbuffer_address::UInt64\nsize::UInt32\nindex_type::IndexType\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.BindShaderGroupIndirectCommandNV","page":"API","title":"Vulkan.BindShaderGroupIndirectCommandNV","text":"High-level wrapper for VkBindShaderGroupIndirectCommandNV.\n\nExtension: VK_NV_device_generated_commands\n\nAPI documentation\n\nstruct BindShaderGroupIndirectCommandNV <: Vulkan.HighLevelStruct\n\ngroup_index::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.BindSparseInfo","page":"API","title":"Vulkan.BindSparseInfo","text":"High-level wrapper for VkBindSparseInfo.\n\nAPI documentation\n\nstruct BindSparseInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nwait_semaphores::Vector{Semaphore}\nbuffer_binds::Vector{SparseBufferMemoryBindInfo}\nimage_opaque_binds::Vector{SparseImageOpaqueMemoryBindInfo}\nimage_binds::Vector{SparseImageMemoryBindInfo}\nsignal_semaphores::Vector{Semaphore}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.BindSparseInfo-NTuple{5, AbstractArray}","page":"API","title":"Vulkan.BindSparseInfo","text":"BindSparseInfo(wait_semaphores::AbstractArray{Semaphore}, buffer_binds::AbstractArray{SparseBufferMemoryBindInfo}, image_opaque_binds::AbstractArray{SparseImageOpaqueMemoryBindInfo}, image_binds::AbstractArray{SparseImageMemoryBindInfo}, signal_semaphores::AbstractArray{Semaphore}; next = C_NULL)\n\nArguments:\n\nwait_semaphores::AbstractArray{Semaphore}\nbuffer_binds::AbstractArray{SparseBufferMemoryBindInfo}\nimage_opaque_binds::AbstractArray{SparseImageOpaqueMemoryBindInfo}\nimage_binds::AbstractArray{SparseImageMemoryBindInfo}\nsignal_semaphores::AbstractArray{Semaphore}\nnext: defaults to C_NULL\n\nAPI documentation\n\nBindSparseInfo(wait_semaphores::AbstractArray, buffer_binds::AbstractArray, image_opaque_binds::AbstractArray, image_binds::AbstractArray, signal_semaphores::AbstractArray; next) -> BindSparseInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.BindVertexBufferIndirectCommandNV","page":"API","title":"Vulkan.BindVertexBufferIndirectCommandNV","text":"High-level wrapper for VkBindVertexBufferIndirectCommandNV.\n\nExtension: VK_NV_device_generated_commands\n\nAPI documentation\n\nstruct BindVertexBufferIndirectCommandNV <: Vulkan.HighLevelStruct\n\nbuffer_address::UInt64\nsize::UInt32\nstride::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.BlitImageInfo2KHR","page":"API","title":"Vulkan.BlitImageInfo2KHR","text":"High-level wrapper for VkBlitImageInfo2KHR.\n\nExtension: VK_KHR_copy_commands2\n\nAPI documentation\n\nstruct BlitImageInfo2KHR <: Vulkan.HighLevelStruct\n\nnext::Any\nsrc_image::Image\nsrc_image_layout::ImageLayout\ndst_image::Image\ndst_image_layout::ImageLayout\nregions::Vector{ImageBlit2KHR}\nfilter::Filter\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.BlitImageInfo2KHR-Tuple{Image, ImageLayout, Image, ImageLayout, AbstractArray, Filter}","page":"API","title":"Vulkan.BlitImageInfo2KHR","text":"BlitImageInfo2KHR(src_image::Image, src_image_layout::ImageLayout, dst_image::Image, dst_image_layout::ImageLayout, regions::AbstractArray{ImageBlit2KHR}, filter::Filter; next = C_NULL)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\nsrc_image::Image\nsrc_image_layout::ImageLayout\ndst_image::Image\ndst_image_layout::ImageLayout\nregions::AbstractArray{ImageBlit2KHR}\nfilter::Filter\nnext: defaults to C_NULL\n\nAPI documentation\n\nBlitImageInfo2KHR(src_image::Image, src_image_layout::ImageLayout, dst_image::Image, dst_image_layout::ImageLayout, regions::AbstractArray, filter::Filter; next) -> BlitImageInfo2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.Buffer-Tuple{Any, Integer, BufferUsageFlag, SharingMode, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.Buffer","text":"Buffer(device, size::Integer, usage::BufferUsageFlag, sharing_mode::SharingMode, queue_family_indices::AbstractArray{<:Integer}, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0)\n\nBuffer(device, size::Integer, usage::BufferUsageFlag, sharing_mode::SharingMode, queue_family_indices::AbstractArray, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags) -> Buffer\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.Buffer-Tuple{Any, Integer, BufferUsageFlag, SharingMode, AbstractArray}","page":"API","title":"Vulkan.Buffer","text":"Buffer(device, size::Integer, usage::BufferUsageFlag, sharing_mode::SharingMode, queue_family_indices::AbstractArray{<:Integer}; allocator = C_NULL, next = C_NULL, flags = 0)\n\nBuffer(device, size::Integer, usage::BufferUsageFlag, sharing_mode::SharingMode, queue_family_indices::AbstractArray; allocator, next, flags) -> Buffer\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.BufferCopy","page":"API","title":"Vulkan.BufferCopy","text":"High-level wrapper for VkBufferCopy.\n\nAPI documentation\n\nstruct BufferCopy <: Vulkan.HighLevelStruct\n\nsrc_offset::UInt64\ndst_offset::UInt64\nsize::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.BufferCopy2KHR","page":"API","title":"Vulkan.BufferCopy2KHR","text":"High-level wrapper for VkBufferCopy2KHR.\n\nExtension: VK_KHR_copy_commands2\n\nAPI documentation\n\nstruct BufferCopy2KHR <: Vulkan.HighLevelStruct\n\nnext::Any\nsrc_offset::UInt64\ndst_offset::UInt64\nsize::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.BufferCopy2KHR-Tuple{Integer, Integer, Integer}","page":"API","title":"Vulkan.BufferCopy2KHR","text":"BufferCopy2KHR(src_offset::Integer, dst_offset::Integer, size::Integer; next = C_NULL)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\nsrc_offset::Integer\ndst_offset::Integer\nsize::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nBufferCopy2KHR(src_offset::Integer, dst_offset::Integer, size::Integer; next) -> BufferCopy2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.BufferCreateInfo","page":"API","title":"Vulkan.BufferCreateInfo","text":"High-level wrapper for VkBufferCreateInfo.\n\nAPI documentation\n\nstruct BufferCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::BufferCreateFlag\nsize::UInt64\nusage::BufferUsageFlag\nsharing_mode::SharingMode\nqueue_family_indices::Vector{UInt32}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.BufferCreateInfo-Tuple{Integer, BufferUsageFlag, SharingMode, AbstractArray}","page":"API","title":"Vulkan.BufferCreateInfo","text":"BufferCreateInfo(size::Integer, usage::BufferUsageFlag, sharing_mode::SharingMode, queue_family_indices::AbstractArray{<:Integer}; next = C_NULL, flags = 0)\n\nArguments:\n\nsize::Integer\nusage::BufferUsageFlag\nsharing_mode::SharingMode\nqueue_family_indices::AbstractArray{<:Integer}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nBufferCreateInfo(size::Integer, usage::BufferUsageFlag, sharing_mode::SharingMode, queue_family_indices::AbstractArray; next, flags) -> BufferCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.BufferDeviceAddressCreateInfoEXT","page":"API","title":"Vulkan.BufferDeviceAddressCreateInfoEXT","text":"High-level wrapper for VkBufferDeviceAddressCreateInfoEXT.\n\nExtension: VK_EXT_buffer_device_address\n\nAPI documentation\n\nstruct BufferDeviceAddressCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\ndevice_address::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.BufferDeviceAddressCreateInfoEXT-Tuple{Integer}","page":"API","title":"Vulkan.BufferDeviceAddressCreateInfoEXT","text":"BufferDeviceAddressCreateInfoEXT(device_address::Integer; next = C_NULL)\n\nExtension: VK_EXT_buffer_device_address\n\nArguments:\n\ndevice_address::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nBufferDeviceAddressCreateInfoEXT(device_address::Integer; next) -> BufferDeviceAddressCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.BufferDeviceAddressInfo","page":"API","title":"Vulkan.BufferDeviceAddressInfo","text":"High-level wrapper for VkBufferDeviceAddressInfo.\n\nAPI documentation\n\nstruct BufferDeviceAddressInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nbuffer::Buffer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.BufferDeviceAddressInfo-Tuple{Buffer}","page":"API","title":"Vulkan.BufferDeviceAddressInfo","text":"BufferDeviceAddressInfo(buffer::Buffer; next = C_NULL)\n\nArguments:\n\nbuffer::Buffer\nnext: defaults to C_NULL\n\nAPI documentation\n\nBufferDeviceAddressInfo(buffer::Buffer; next) -> BufferDeviceAddressInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.BufferImageCopy","page":"API","title":"Vulkan.BufferImageCopy","text":"High-level wrapper for VkBufferImageCopy.\n\nAPI documentation\n\nstruct BufferImageCopy <: Vulkan.HighLevelStruct\n\nbuffer_offset::UInt64\nbuffer_row_length::UInt32\nbuffer_image_height::UInt32\nimage_subresource::ImageSubresourceLayers\nimage_offset::Offset3D\nimage_extent::Extent3D\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.BufferImageCopy2KHR","page":"API","title":"Vulkan.BufferImageCopy2KHR","text":"High-level wrapper for VkBufferImageCopy2KHR.\n\nExtension: VK_KHR_copy_commands2\n\nAPI documentation\n\nstruct BufferImageCopy2KHR <: Vulkan.HighLevelStruct\n\nnext::Any\nbuffer_offset::UInt64\nbuffer_row_length::UInt32\nbuffer_image_height::UInt32\nimage_subresource::ImageSubresourceLayers\nimage_offset::Offset3D\nimage_extent::Extent3D\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.BufferImageCopy2KHR-Tuple{Integer, Integer, Integer, ImageSubresourceLayers, Offset3D, Extent3D}","page":"API","title":"Vulkan.BufferImageCopy2KHR","text":"BufferImageCopy2KHR(buffer_offset::Integer, buffer_row_length::Integer, buffer_image_height::Integer, image_subresource::ImageSubresourceLayers, image_offset::Offset3D, image_extent::Extent3D; next = C_NULL)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\nbuffer_offset::Integer\nbuffer_row_length::Integer\nbuffer_image_height::Integer\nimage_subresource::ImageSubresourceLayers\nimage_offset::Offset3D\nimage_extent::Extent3D\nnext: defaults to C_NULL\n\nAPI documentation\n\nBufferImageCopy2KHR(buffer_offset::Integer, buffer_row_length::Integer, buffer_image_height::Integer, image_subresource::ImageSubresourceLayers, image_offset::Offset3D, image_extent::Extent3D; next) -> BufferImageCopy2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.BufferMemoryBarrier","page":"API","title":"Vulkan.BufferMemoryBarrier","text":"High-level wrapper for VkBufferMemoryBarrier.\n\nAPI documentation\n\nstruct BufferMemoryBarrier <: Vulkan.HighLevelStruct\n\nnext::Any\nsrc_access_mask::AccessFlag\ndst_access_mask::AccessFlag\nsrc_queue_family_index::UInt32\ndst_queue_family_index::UInt32\nbuffer::Buffer\noffset::UInt64\nsize::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.BufferMemoryBarrier-Tuple{AccessFlag, AccessFlag, Integer, Integer, Buffer, Integer, Integer}","page":"API","title":"Vulkan.BufferMemoryBarrier","text":"BufferMemoryBarrier(src_access_mask::AccessFlag, dst_access_mask::AccessFlag, src_queue_family_index::Integer, dst_queue_family_index::Integer, buffer::Buffer, offset::Integer, size::Integer; next = C_NULL)\n\nArguments:\n\nsrc_access_mask::AccessFlag\ndst_access_mask::AccessFlag\nsrc_queue_family_index::Integer\ndst_queue_family_index::Integer\nbuffer::Buffer\noffset::Integer\nsize::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nBufferMemoryBarrier(src_access_mask::AccessFlag, dst_access_mask::AccessFlag, src_queue_family_index::Integer, dst_queue_family_index::Integer, buffer::Buffer, offset::Integer, size::Integer; next) -> BufferMemoryBarrier\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.BufferMemoryBarrier2KHR","page":"API","title":"Vulkan.BufferMemoryBarrier2KHR","text":"High-level wrapper for VkBufferMemoryBarrier2KHR.\n\nExtension: VK_KHR_synchronization2\n\nAPI documentation\n\nstruct BufferMemoryBarrier2KHR <: Vulkan.HighLevelStruct\n\nnext::Any\nsrc_stage_mask::UInt64\nsrc_access_mask::UInt64\ndst_stage_mask::UInt64\ndst_access_mask::UInt64\nsrc_queue_family_index::UInt32\ndst_queue_family_index::UInt32\nbuffer::Buffer\noffset::UInt64\nsize::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.BufferMemoryBarrier2KHR-Tuple{Integer, Integer, Buffer, Integer, Integer}","page":"API","title":"Vulkan.BufferMemoryBarrier2KHR","text":"BufferMemoryBarrier2KHR(src_queue_family_index::Integer, dst_queue_family_index::Integer, buffer::Buffer, offset::Integer, size::Integer; next = C_NULL, src_stage_mask = 0, src_access_mask = 0, dst_stage_mask = 0, dst_access_mask = 0)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\nsrc_queue_family_index::Integer\ndst_queue_family_index::Integer\nbuffer::Buffer\noffset::Integer\nsize::Integer\nnext: defaults to C_NULL\nsrc_stage_mask: defaults to 0\nsrc_access_mask: defaults to 0\ndst_stage_mask: defaults to 0\ndst_access_mask: defaults to 0\n\nAPI documentation\n\nBufferMemoryBarrier2KHR(src_queue_family_index::Integer, dst_queue_family_index::Integer, buffer::Buffer, offset::Integer, size::Integer; next, src_stage_mask, src_access_mask, dst_stage_mask, dst_access_mask) -> BufferMemoryBarrier2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.BufferMemoryRequirementsInfo2","page":"API","title":"Vulkan.BufferMemoryRequirementsInfo2","text":"High-level wrapper for VkBufferMemoryRequirementsInfo2.\n\nAPI documentation\n\nstruct BufferMemoryRequirementsInfo2 <: Vulkan.HighLevelStruct\n\nnext::Any\nbuffer::Buffer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.BufferMemoryRequirementsInfo2-Tuple{Buffer}","page":"API","title":"Vulkan.BufferMemoryRequirementsInfo2","text":"BufferMemoryRequirementsInfo2(buffer::Buffer; next = C_NULL)\n\nArguments:\n\nbuffer::Buffer\nnext: defaults to C_NULL\n\nAPI documentation\n\nBufferMemoryRequirementsInfo2(buffer::Buffer; next) -> BufferMemoryRequirementsInfo2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.BufferOpaqueCaptureAddressCreateInfo","page":"API","title":"Vulkan.BufferOpaqueCaptureAddressCreateInfo","text":"High-level wrapper for VkBufferOpaqueCaptureAddressCreateInfo.\n\nAPI documentation\n\nstruct BufferOpaqueCaptureAddressCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nopaque_capture_address::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.BufferOpaqueCaptureAddressCreateInfo-Tuple{Integer}","page":"API","title":"Vulkan.BufferOpaqueCaptureAddressCreateInfo","text":"BufferOpaqueCaptureAddressCreateInfo(opaque_capture_address::Integer; next = C_NULL)\n\nArguments:\n\nopaque_capture_address::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nBufferOpaqueCaptureAddressCreateInfo(opaque_capture_address::Integer; next) -> BufferOpaqueCaptureAddressCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.BufferView-Tuple{Any, Any, Format, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.BufferView","text":"BufferView(device, buffer, format::Format, offset::Integer, range::Integer, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0)\n\nBufferView(device, buffer, format::Format, offset::Integer, range::Integer, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags) -> BufferView\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.BufferView-Tuple{Any, Any, Format, Integer, Integer}","page":"API","title":"Vulkan.BufferView","text":"BufferView(device, buffer, format::Format, offset::Integer, range::Integer; allocator = C_NULL, next = C_NULL, flags = 0)\n\nBufferView(device, buffer, format::Format, offset::Integer, range::Integer; allocator, next, flags) -> BufferView\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.BufferViewCreateInfo","page":"API","title":"Vulkan.BufferViewCreateInfo","text":"High-level wrapper for VkBufferViewCreateInfo.\n\nAPI documentation\n\nstruct BufferViewCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\nbuffer::Buffer\nformat::Format\noffset::UInt64\nrange::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.BufferViewCreateInfo-Tuple{Buffer, Format, Integer, Integer}","page":"API","title":"Vulkan.BufferViewCreateInfo","text":"BufferViewCreateInfo(buffer::Buffer, format::Format, offset::Integer, range::Integer; next = C_NULL, flags = 0)\n\nArguments:\n\nbuffer::Buffer\nformat::Format\noffset::Integer\nrange::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nBufferViewCreateInfo(buffer::Buffer, format::Format, offset::Integer, range::Integer; next, flags) -> BufferViewCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.CalibratedTimestampInfoEXT","page":"API","title":"Vulkan.CalibratedTimestampInfoEXT","text":"High-level wrapper for VkCalibratedTimestampInfoEXT.\n\nExtension: VK_EXT_calibrated_timestamps\n\nAPI documentation\n\nstruct CalibratedTimestampInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\ntime_domain::TimeDomainEXT\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.CalibratedTimestampInfoEXT-Tuple{TimeDomainEXT}","page":"API","title":"Vulkan.CalibratedTimestampInfoEXT","text":"CalibratedTimestampInfoEXT(time_domain::TimeDomainEXT; next = C_NULL)\n\nExtension: VK_EXT_calibrated_timestamps\n\nArguments:\n\ntime_domain::TimeDomainEXT\nnext: defaults to C_NULL\n\nAPI documentation\n\nCalibratedTimestampInfoEXT(time_domain::TimeDomainEXT; next) -> CalibratedTimestampInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.CheckpointData2NV","page":"API","title":"Vulkan.CheckpointData2NV","text":"High-level wrapper for VkCheckpointData2NV.\n\nExtension: VK_KHR_synchronization2\n\nAPI documentation\n\nstruct CheckpointData2NV <: Vulkan.HighLevelStruct\n\nnext::Any\nstage::UInt64\ncheckpoint_marker::Ptr{Nothing}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.CheckpointData2NV-Tuple{Integer, Ptr{Nothing}}","page":"API","title":"Vulkan.CheckpointData2NV","text":"CheckpointData2NV(stage::Integer, checkpoint_marker::Ptr{Cvoid}; next = C_NULL)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\nstage::Integer\ncheckpoint_marker::Ptr{Cvoid}\nnext: defaults to C_NULL\n\nAPI documentation\n\nCheckpointData2NV(stage::Integer, checkpoint_marker::Ptr{Nothing}; next) -> CheckpointData2NV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.CheckpointDataNV","page":"API","title":"Vulkan.CheckpointDataNV","text":"High-level wrapper for VkCheckpointDataNV.\n\nExtension: VK_NV_device_diagnostic_checkpoints\n\nAPI documentation\n\nstruct CheckpointDataNV <: Vulkan.HighLevelStruct\n\nnext::Any\nstage::PipelineStageFlag\ncheckpoint_marker::Ptr{Nothing}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.CheckpointDataNV-Tuple{PipelineStageFlag, Ptr{Nothing}}","page":"API","title":"Vulkan.CheckpointDataNV","text":"CheckpointDataNV(stage::PipelineStageFlag, checkpoint_marker::Ptr{Cvoid}; next = C_NULL)\n\nExtension: VK_NV_device_diagnostic_checkpoints\n\nArguments:\n\nstage::PipelineStageFlag\ncheckpoint_marker::Ptr{Cvoid}\nnext: defaults to C_NULL\n\nAPI documentation\n\nCheckpointDataNV(stage::PipelineStageFlag, checkpoint_marker::Ptr{Nothing}; next) -> CheckpointDataNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ClearAttachment","page":"API","title":"Vulkan.ClearAttachment","text":"High-level wrapper for VkClearAttachment.\n\nAPI documentation\n\nstruct ClearAttachment <: Vulkan.HighLevelStruct\n\naspect_mask::ImageAspectFlag\ncolor_attachment::UInt32\nclear_value::ClearValue\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ClearColorValue","page":"API","title":"Vulkan.ClearColorValue","text":"High-level wrapper for VkClearColorValue.\n\nAPI documentation\n\nstruct ClearColorValue <: Vulkan.HighLevelStruct\n\nvks::VulkanCore.LibVulkan.VkClearColorValue\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ClearDepthStencilValue","page":"API","title":"Vulkan.ClearDepthStencilValue","text":"High-level wrapper for VkClearDepthStencilValue.\n\nAPI documentation\n\nstruct ClearDepthStencilValue <: Vulkan.HighLevelStruct\n\ndepth::Float32\nstencil::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ClearRect","page":"API","title":"Vulkan.ClearRect","text":"High-level wrapper for VkClearRect.\n\nAPI documentation\n\nstruct ClearRect <: Vulkan.HighLevelStruct\n\nrect::Rect2D\nbase_array_layer::UInt32\nlayer_count::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ClearValue","page":"API","title":"Vulkan.ClearValue","text":"High-level wrapper for VkClearValue.\n\nAPI documentation\n\nstruct ClearValue <: Vulkan.HighLevelStruct\n\nvks::VulkanCore.LibVulkan.VkClearValue\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.CoarseSampleLocationNV","page":"API","title":"Vulkan.CoarseSampleLocationNV","text":"High-level wrapper for VkCoarseSampleLocationNV.\n\nExtension: VK_NV_shading_rate_image\n\nAPI documentation\n\nstruct CoarseSampleLocationNV <: Vulkan.HighLevelStruct\n\npixel_x::UInt32\npixel_y::UInt32\nsample::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.CoarseSampleOrderCustomNV","page":"API","title":"Vulkan.CoarseSampleOrderCustomNV","text":"High-level wrapper for VkCoarseSampleOrderCustomNV.\n\nExtension: VK_NV_shading_rate_image\n\nAPI documentation\n\nstruct CoarseSampleOrderCustomNV <: Vulkan.HighLevelStruct\n\nshading_rate::ShadingRatePaletteEntryNV\nsample_count::UInt32\nsample_locations::Vector{CoarseSampleLocationNV}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.CommandBufferAllocateInfo","page":"API","title":"Vulkan.CommandBufferAllocateInfo","text":"High-level wrapper for VkCommandBufferAllocateInfo.\n\nAPI documentation\n\nstruct CommandBufferAllocateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\ncommand_pool::CommandPool\nlevel::CommandBufferLevel\ncommand_buffer_count::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.CommandBufferAllocateInfo-Tuple{CommandPool, CommandBufferLevel, Integer}","page":"API","title":"Vulkan.CommandBufferAllocateInfo","text":"CommandBufferAllocateInfo(command_pool::CommandPool, level::CommandBufferLevel, command_buffer_count::Integer; next = C_NULL)\n\nArguments:\n\ncommand_pool::CommandPool\nlevel::CommandBufferLevel\ncommand_buffer_count::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nCommandBufferAllocateInfo(command_pool::CommandPool, level::CommandBufferLevel, command_buffer_count::Integer; next) -> CommandBufferAllocateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.CommandBufferBeginInfo","page":"API","title":"Vulkan.CommandBufferBeginInfo","text":"High-level wrapper for VkCommandBufferBeginInfo.\n\nAPI documentation\n\nstruct CommandBufferBeginInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::CommandBufferUsageFlag\ninheritance_info::Union{Ptr{Nothing}, CommandBufferInheritanceInfo}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.CommandBufferBeginInfo-Tuple{}","page":"API","title":"Vulkan.CommandBufferBeginInfo","text":"CommandBufferBeginInfo(; next = C_NULL, flags = 0, inheritance_info = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\nflags: defaults to 0\ninheritance_info: defaults to C_NULL\n\nAPI documentation\n\nCommandBufferBeginInfo(; next, flags, inheritance_info) -> CommandBufferBeginInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.CommandBufferInheritanceConditionalRenderingInfoEXT","page":"API","title":"Vulkan.CommandBufferInheritanceConditionalRenderingInfoEXT","text":"High-level wrapper for VkCommandBufferInheritanceConditionalRenderingInfoEXT.\n\nExtension: VK_EXT_conditional_rendering\n\nAPI documentation\n\nstruct CommandBufferInheritanceConditionalRenderingInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nconditional_rendering_enable::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.CommandBufferInheritanceConditionalRenderingInfoEXT-Tuple{Bool}","page":"API","title":"Vulkan.CommandBufferInheritanceConditionalRenderingInfoEXT","text":"CommandBufferInheritanceConditionalRenderingInfoEXT(conditional_rendering_enable::Bool; next = C_NULL)\n\nExtension: VK_EXT_conditional_rendering\n\nArguments:\n\nconditional_rendering_enable::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nCommandBufferInheritanceConditionalRenderingInfoEXT(conditional_rendering_enable::Bool; next) -> CommandBufferInheritanceConditionalRenderingInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.CommandBufferInheritanceInfo","page":"API","title":"Vulkan.CommandBufferInheritanceInfo","text":"High-level wrapper for VkCommandBufferInheritanceInfo.\n\nAPI documentation\n\nstruct CommandBufferInheritanceInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nrender_pass::Union{Ptr{Nothing}, RenderPass}\nsubpass::UInt32\nframebuffer::Union{Ptr{Nothing}, Framebuffer}\nocclusion_query_enable::Bool\nquery_flags::QueryControlFlag\npipeline_statistics::QueryPipelineStatisticFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.CommandBufferInheritanceInfo-Tuple{Integer, Bool}","page":"API","title":"Vulkan.CommandBufferInheritanceInfo","text":"CommandBufferInheritanceInfo(subpass::Integer, occlusion_query_enable::Bool; next = C_NULL, render_pass = C_NULL, framebuffer = C_NULL, query_flags = 0, pipeline_statistics = 0)\n\nArguments:\n\nsubpass::Integer\nocclusion_query_enable::Bool\nnext: defaults to C_NULL\nrender_pass: defaults to C_NULL\nframebuffer: defaults to C_NULL\nquery_flags: defaults to 0\npipeline_statistics: defaults to 0\n\nAPI documentation\n\nCommandBufferInheritanceInfo(subpass::Integer, occlusion_query_enable::Bool; next, render_pass, framebuffer, query_flags, pipeline_statistics) -> CommandBufferInheritanceInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.CommandBufferInheritanceRenderPassTransformInfoQCOM","page":"API","title":"Vulkan.CommandBufferInheritanceRenderPassTransformInfoQCOM","text":"High-level wrapper for VkCommandBufferInheritanceRenderPassTransformInfoQCOM.\n\nExtension: VK_QCOM_render_pass_transform\n\nAPI documentation\n\nstruct CommandBufferInheritanceRenderPassTransformInfoQCOM <: Vulkan.HighLevelStruct\n\nnext::Any\ntransform::SurfaceTransformFlagKHR\nrender_area::Rect2D\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.CommandBufferInheritanceRenderPassTransformInfoQCOM-Tuple{SurfaceTransformFlagKHR, Rect2D}","page":"API","title":"Vulkan.CommandBufferInheritanceRenderPassTransformInfoQCOM","text":"CommandBufferInheritanceRenderPassTransformInfoQCOM(transform::SurfaceTransformFlagKHR, render_area::Rect2D; next = C_NULL)\n\nExtension: VK_QCOM_render_pass_transform\n\nArguments:\n\ntransform::SurfaceTransformFlagKHR\nrender_area::Rect2D\nnext: defaults to C_NULL\n\nAPI documentation\n\nCommandBufferInheritanceRenderPassTransformInfoQCOM(transform::SurfaceTransformFlagKHR, render_area::Rect2D; next) -> CommandBufferInheritanceRenderPassTransformInfoQCOM\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.CommandBufferInheritanceViewportScissorInfoNV","page":"API","title":"Vulkan.CommandBufferInheritanceViewportScissorInfoNV","text":"High-level wrapper for VkCommandBufferInheritanceViewportScissorInfoNV.\n\nExtension: VK_NV_inherited_viewport_scissor\n\nAPI documentation\n\nstruct CommandBufferInheritanceViewportScissorInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\nviewport_scissor_2_d::Bool\nviewport_depth_count::UInt32\nviewport_depths::Viewport\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.CommandBufferInheritanceViewportScissorInfoNV-Tuple{Bool, Integer, Viewport}","page":"API","title":"Vulkan.CommandBufferInheritanceViewportScissorInfoNV","text":"CommandBufferInheritanceViewportScissorInfoNV(viewport_scissor_2_d::Bool, viewport_depth_count::Integer, viewport_depths::Viewport; next = C_NULL)\n\nExtension: VK_NV_inherited_viewport_scissor\n\nArguments:\n\nviewport_scissor_2_d::Bool\nviewport_depth_count::Integer\nviewport_depths::Viewport\nnext: defaults to C_NULL\n\nAPI documentation\n\nCommandBufferInheritanceViewportScissorInfoNV(viewport_scissor_2_d::Bool, viewport_depth_count::Integer, viewport_depths::Viewport; next) -> CommandBufferInheritanceViewportScissorInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.CommandBufferSubmitInfoKHR","page":"API","title":"Vulkan.CommandBufferSubmitInfoKHR","text":"High-level wrapper for VkCommandBufferSubmitInfoKHR.\n\nExtension: VK_KHR_synchronization2\n\nAPI documentation\n\nstruct CommandBufferSubmitInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\ncommand_buffer::CommandBuffer\ndevice_mask::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.CommandBufferSubmitInfoKHR-Tuple{CommandBuffer, Integer}","page":"API","title":"Vulkan.CommandBufferSubmitInfoKHR","text":"CommandBufferSubmitInfoKHR(command_buffer::CommandBuffer, device_mask::Integer; next = C_NULL)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncommand_buffer::CommandBuffer\ndevice_mask::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nCommandBufferSubmitInfoKHR(command_buffer::CommandBuffer, device_mask::Integer; next) -> CommandBufferSubmitInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.CommandPool-Tuple{Any, Integer, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.CommandPool","text":"CommandPool(device, queue_family_index::Integer, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0)\n\nCommandPool(device, queue_family_index::Integer, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags) -> CommandPool\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.CommandPool-Tuple{Any, Integer}","page":"API","title":"Vulkan.CommandPool","text":"CommandPool(device, queue_family_index::Integer; allocator = C_NULL, next = C_NULL, flags = 0)\n\nCommandPool(device, queue_family_index::Integer; allocator, next, flags) -> CommandPool\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.CommandPoolCreateInfo","page":"API","title":"Vulkan.CommandPoolCreateInfo","text":"High-level wrapper for VkCommandPoolCreateInfo.\n\nAPI documentation\n\nstruct CommandPoolCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::CommandPoolCreateFlag\nqueue_family_index::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.CommandPoolCreateInfo-Tuple{Integer}","page":"API","title":"Vulkan.CommandPoolCreateInfo","text":"CommandPoolCreateInfo(queue_family_index::Integer; next = C_NULL, flags = 0)\n\nArguments:\n\nqueue_family_index::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nCommandPoolCreateInfo(queue_family_index::Integer; next, flags) -> CommandPoolCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ComponentMapping","page":"API","title":"Vulkan.ComponentMapping","text":"High-level wrapper for VkComponentMapping.\n\nAPI documentation\n\nstruct ComponentMapping <: Vulkan.HighLevelStruct\n\nr::ComponentSwizzle\ng::ComponentSwizzle\nb::ComponentSwizzle\na::ComponentSwizzle\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ComputePipelineCreateInfo","page":"API","title":"Vulkan.ComputePipelineCreateInfo","text":"High-level wrapper for VkComputePipelineCreateInfo.\n\nAPI documentation\n\nstruct ComputePipelineCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::PipelineCreateFlag\nstage::PipelineShaderStageCreateInfo\nlayout::PipelineLayout\nbase_pipeline_handle::Union{Ptr{Nothing}, Pipeline}\nbase_pipeline_index::Int32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ComputePipelineCreateInfo-Tuple{PipelineShaderStageCreateInfo, PipelineLayout, Integer}","page":"API","title":"Vulkan.ComputePipelineCreateInfo","text":"ComputePipelineCreateInfo(stage::PipelineShaderStageCreateInfo, layout::PipelineLayout, base_pipeline_index::Integer; next = C_NULL, flags = 0, base_pipeline_handle = C_NULL)\n\nArguments:\n\nstage::PipelineShaderStageCreateInfo\nlayout::PipelineLayout\nbase_pipeline_index::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\nbase_pipeline_handle: defaults to C_NULL\n\nAPI documentation\n\nComputePipelineCreateInfo(stage::PipelineShaderStageCreateInfo, layout::PipelineLayout, base_pipeline_index::Integer; next, flags, base_pipeline_handle) -> ComputePipelineCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ConditionalRenderingBeginInfoEXT","page":"API","title":"Vulkan.ConditionalRenderingBeginInfoEXT","text":"High-level wrapper for VkConditionalRenderingBeginInfoEXT.\n\nExtension: VK_EXT_conditional_rendering\n\nAPI documentation\n\nstruct ConditionalRenderingBeginInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nbuffer::Buffer\noffset::UInt64\nflags::ConditionalRenderingFlagEXT\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ConditionalRenderingBeginInfoEXT-Tuple{Buffer, Integer}","page":"API","title":"Vulkan.ConditionalRenderingBeginInfoEXT","text":"ConditionalRenderingBeginInfoEXT(buffer::Buffer, offset::Integer; next = C_NULL, flags = 0)\n\nExtension: VK_EXT_conditional_rendering\n\nArguments:\n\nbuffer::Buffer\noffset::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nConditionalRenderingBeginInfoEXT(buffer::Buffer, offset::Integer; next, flags) -> ConditionalRenderingBeginInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ConformanceVersion","page":"API","title":"Vulkan.ConformanceVersion","text":"High-level wrapper for VkConformanceVersion.\n\nAPI documentation\n\nstruct ConformanceVersion <: Vulkan.HighLevelStruct\n\nmajor::UInt8\nminor::UInt8\nsubminor::UInt8\npatch::UInt8\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.CooperativeMatrixPropertiesNV","page":"API","title":"Vulkan.CooperativeMatrixPropertiesNV","text":"High-level wrapper for VkCooperativeMatrixPropertiesNV.\n\nExtension: VK_NV_cooperative_matrix\n\nAPI documentation\n\nstruct CooperativeMatrixPropertiesNV <: Vulkan.HighLevelStruct\n\nnext::Any\nm_size::UInt32\nn_size::UInt32\nk_size::UInt32\na_type::ComponentTypeNV\nb_type::ComponentTypeNV\nc_type::ComponentTypeNV\nd_type::ComponentTypeNV\nscope::ScopeNV\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.CooperativeMatrixPropertiesNV-Tuple{Integer, Integer, Integer, ComponentTypeNV, ComponentTypeNV, ComponentTypeNV, ComponentTypeNV, ScopeNV}","page":"API","title":"Vulkan.CooperativeMatrixPropertiesNV","text":"CooperativeMatrixPropertiesNV(m_size::Integer, n_size::Integer, k_size::Integer, a_type::ComponentTypeNV, b_type::ComponentTypeNV, c_type::ComponentTypeNV, d_type::ComponentTypeNV, scope::ScopeNV; next = C_NULL)\n\nExtension: VK_NV_cooperative_matrix\n\nArguments:\n\nm_size::Integer\nn_size::Integer\nk_size::Integer\na_type::ComponentTypeNV\nb_type::ComponentTypeNV\nc_type::ComponentTypeNV\nd_type::ComponentTypeNV\nscope::ScopeNV\nnext: defaults to C_NULL\n\nAPI documentation\n\nCooperativeMatrixPropertiesNV(m_size::Integer, n_size::Integer, k_size::Integer, a_type::ComponentTypeNV, b_type::ComponentTypeNV, c_type::ComponentTypeNV, d_type::ComponentTypeNV, scope::ScopeNV; next) -> CooperativeMatrixPropertiesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.CopyAccelerationStructureInfoKHR","page":"API","title":"Vulkan.CopyAccelerationStructureInfoKHR","text":"High-level wrapper for VkCopyAccelerationStructureInfoKHR.\n\nExtension: VK_KHR_acceleration_structure\n\nAPI documentation\n\nstruct CopyAccelerationStructureInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nsrc::AccelerationStructureKHR\ndst::AccelerationStructureKHR\nmode::CopyAccelerationStructureModeKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.CopyAccelerationStructureInfoKHR-Tuple{AccelerationStructureKHR, AccelerationStructureKHR, CopyAccelerationStructureModeKHR}","page":"API","title":"Vulkan.CopyAccelerationStructureInfoKHR","text":"CopyAccelerationStructureInfoKHR(src::AccelerationStructureKHR, dst::AccelerationStructureKHR, mode::CopyAccelerationStructureModeKHR; next = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\nsrc::AccelerationStructureKHR\ndst::AccelerationStructureKHR\nmode::CopyAccelerationStructureModeKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\nCopyAccelerationStructureInfoKHR(src::AccelerationStructureKHR, dst::AccelerationStructureKHR, mode::CopyAccelerationStructureModeKHR; next) -> CopyAccelerationStructureInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.CopyAccelerationStructureToMemoryInfoKHR","page":"API","title":"Vulkan.CopyAccelerationStructureToMemoryInfoKHR","text":"High-level wrapper for VkCopyAccelerationStructureToMemoryInfoKHR.\n\nExtension: VK_KHR_acceleration_structure\n\nAPI documentation\n\nstruct CopyAccelerationStructureToMemoryInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nsrc::AccelerationStructureKHR\ndst::DeviceOrHostAddressKHR\nmode::CopyAccelerationStructureModeKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.CopyAccelerationStructureToMemoryInfoKHR-Tuple{AccelerationStructureKHR, DeviceOrHostAddressKHR, CopyAccelerationStructureModeKHR}","page":"API","title":"Vulkan.CopyAccelerationStructureToMemoryInfoKHR","text":"CopyAccelerationStructureToMemoryInfoKHR(src::AccelerationStructureKHR, dst::DeviceOrHostAddressKHR, mode::CopyAccelerationStructureModeKHR; next = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\nsrc::AccelerationStructureKHR\ndst::DeviceOrHostAddressKHR\nmode::CopyAccelerationStructureModeKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\nCopyAccelerationStructureToMemoryInfoKHR(src::AccelerationStructureKHR, dst::DeviceOrHostAddressKHR, mode::CopyAccelerationStructureModeKHR; next) -> CopyAccelerationStructureToMemoryInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.CopyBufferInfo2KHR","page":"API","title":"Vulkan.CopyBufferInfo2KHR","text":"High-level wrapper for VkCopyBufferInfo2KHR.\n\nExtension: VK_KHR_copy_commands2\n\nAPI documentation\n\nstruct CopyBufferInfo2KHR <: Vulkan.HighLevelStruct\n\nnext::Any\nsrc_buffer::Buffer\ndst_buffer::Buffer\nregions::Vector{BufferCopy2KHR}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.CopyBufferInfo2KHR-Tuple{Buffer, Buffer, AbstractArray}","page":"API","title":"Vulkan.CopyBufferInfo2KHR","text":"CopyBufferInfo2KHR(src_buffer::Buffer, dst_buffer::Buffer, regions::AbstractArray{BufferCopy2KHR}; next = C_NULL)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\nsrc_buffer::Buffer\ndst_buffer::Buffer\nregions::AbstractArray{BufferCopy2KHR}\nnext: defaults to C_NULL\n\nAPI documentation\n\nCopyBufferInfo2KHR(src_buffer::Buffer, dst_buffer::Buffer, regions::AbstractArray; next) -> CopyBufferInfo2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.CopyBufferToImageInfo2KHR","page":"API","title":"Vulkan.CopyBufferToImageInfo2KHR","text":"High-level wrapper for VkCopyBufferToImageInfo2KHR.\n\nExtension: VK_KHR_copy_commands2\n\nAPI documentation\n\nstruct CopyBufferToImageInfo2KHR <: Vulkan.HighLevelStruct\n\nnext::Any\nsrc_buffer::Buffer\ndst_image::Image\ndst_image_layout::ImageLayout\nregions::Vector{BufferImageCopy2KHR}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.CopyBufferToImageInfo2KHR-Tuple{Buffer, Image, ImageLayout, AbstractArray}","page":"API","title":"Vulkan.CopyBufferToImageInfo2KHR","text":"CopyBufferToImageInfo2KHR(src_buffer::Buffer, dst_image::Image, dst_image_layout::ImageLayout, regions::AbstractArray{BufferImageCopy2KHR}; next = C_NULL)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\nsrc_buffer::Buffer\ndst_image::Image\ndst_image_layout::ImageLayout\nregions::AbstractArray{BufferImageCopy2KHR}\nnext: defaults to C_NULL\n\nAPI documentation\n\nCopyBufferToImageInfo2KHR(src_buffer::Buffer, dst_image::Image, dst_image_layout::ImageLayout, regions::AbstractArray; next) -> CopyBufferToImageInfo2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.CopyCommandTransformInfoQCOM","page":"API","title":"Vulkan.CopyCommandTransformInfoQCOM","text":"High-level wrapper for VkCopyCommandTransformInfoQCOM.\n\nExtension: VK_QCOM_rotated_copy_commands\n\nAPI documentation\n\nstruct CopyCommandTransformInfoQCOM <: Vulkan.HighLevelStruct\n\nnext::Any\ntransform::SurfaceTransformFlagKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.CopyCommandTransformInfoQCOM-Tuple{SurfaceTransformFlagKHR}","page":"API","title":"Vulkan.CopyCommandTransformInfoQCOM","text":"CopyCommandTransformInfoQCOM(transform::SurfaceTransformFlagKHR; next = C_NULL)\n\nExtension: VK_QCOM_rotated_copy_commands\n\nArguments:\n\ntransform::SurfaceTransformFlagKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\nCopyCommandTransformInfoQCOM(transform::SurfaceTransformFlagKHR; next) -> CopyCommandTransformInfoQCOM\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.CopyDescriptorSet","page":"API","title":"Vulkan.CopyDescriptorSet","text":"High-level wrapper for VkCopyDescriptorSet.\n\nAPI documentation\n\nstruct CopyDescriptorSet <: Vulkan.HighLevelStruct\n\nnext::Any\nsrc_set::DescriptorSet\nsrc_binding::UInt32\nsrc_array_element::UInt32\ndst_set::DescriptorSet\ndst_binding::UInt32\ndst_array_element::UInt32\ndescriptor_count::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.CopyDescriptorSet-Tuple{DescriptorSet, Integer, Integer, DescriptorSet, Integer, Integer, Integer}","page":"API","title":"Vulkan.CopyDescriptorSet","text":"CopyDescriptorSet(src_set::DescriptorSet, src_binding::Integer, src_array_element::Integer, dst_set::DescriptorSet, dst_binding::Integer, dst_array_element::Integer, descriptor_count::Integer; next = C_NULL)\n\nArguments:\n\nsrc_set::DescriptorSet\nsrc_binding::Integer\nsrc_array_element::Integer\ndst_set::DescriptorSet\ndst_binding::Integer\ndst_array_element::Integer\ndescriptor_count::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nCopyDescriptorSet(src_set::DescriptorSet, src_binding::Integer, src_array_element::Integer, dst_set::DescriptorSet, dst_binding::Integer, dst_array_element::Integer, descriptor_count::Integer; next) -> CopyDescriptorSet\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.CopyImageInfo2KHR","page":"API","title":"Vulkan.CopyImageInfo2KHR","text":"High-level wrapper for VkCopyImageInfo2KHR.\n\nExtension: VK_KHR_copy_commands2\n\nAPI documentation\n\nstruct CopyImageInfo2KHR <: Vulkan.HighLevelStruct\n\nnext::Any\nsrc_image::Image\nsrc_image_layout::ImageLayout\ndst_image::Image\ndst_image_layout::ImageLayout\nregions::Vector{ImageCopy2KHR}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.CopyImageInfo2KHR-Tuple{Image, ImageLayout, Image, ImageLayout, AbstractArray}","page":"API","title":"Vulkan.CopyImageInfo2KHR","text":"CopyImageInfo2KHR(src_image::Image, src_image_layout::ImageLayout, dst_image::Image, dst_image_layout::ImageLayout, regions::AbstractArray{ImageCopy2KHR}; next = C_NULL)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\nsrc_image::Image\nsrc_image_layout::ImageLayout\ndst_image::Image\ndst_image_layout::ImageLayout\nregions::AbstractArray{ImageCopy2KHR}\nnext: defaults to C_NULL\n\nAPI documentation\n\nCopyImageInfo2KHR(src_image::Image, src_image_layout::ImageLayout, dst_image::Image, dst_image_layout::ImageLayout, regions::AbstractArray; next) -> CopyImageInfo2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.CopyImageToBufferInfo2KHR","page":"API","title":"Vulkan.CopyImageToBufferInfo2KHR","text":"High-level wrapper for VkCopyImageToBufferInfo2KHR.\n\nExtension: VK_KHR_copy_commands2\n\nAPI documentation\n\nstruct CopyImageToBufferInfo2KHR <: Vulkan.HighLevelStruct\n\nnext::Any\nsrc_image::Image\nsrc_image_layout::ImageLayout\ndst_buffer::Buffer\nregions::Vector{BufferImageCopy2KHR}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.CopyImageToBufferInfo2KHR-Tuple{Image, ImageLayout, Buffer, AbstractArray}","page":"API","title":"Vulkan.CopyImageToBufferInfo2KHR","text":"CopyImageToBufferInfo2KHR(src_image::Image, src_image_layout::ImageLayout, dst_buffer::Buffer, regions::AbstractArray{BufferImageCopy2KHR}; next = C_NULL)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\nsrc_image::Image\nsrc_image_layout::ImageLayout\ndst_buffer::Buffer\nregions::AbstractArray{BufferImageCopy2KHR}\nnext: defaults to C_NULL\n\nAPI documentation\n\nCopyImageToBufferInfo2KHR(src_image::Image, src_image_layout::ImageLayout, dst_buffer::Buffer, regions::AbstractArray; next) -> CopyImageToBufferInfo2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.CopyMemoryToAccelerationStructureInfoKHR","page":"API","title":"Vulkan.CopyMemoryToAccelerationStructureInfoKHR","text":"High-level wrapper for VkCopyMemoryToAccelerationStructureInfoKHR.\n\nExtension: VK_KHR_acceleration_structure\n\nAPI documentation\n\nstruct CopyMemoryToAccelerationStructureInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nsrc::DeviceOrHostAddressConstKHR\ndst::AccelerationStructureKHR\nmode::CopyAccelerationStructureModeKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.CopyMemoryToAccelerationStructureInfoKHR-Tuple{DeviceOrHostAddressConstKHR, AccelerationStructureKHR, CopyAccelerationStructureModeKHR}","page":"API","title":"Vulkan.CopyMemoryToAccelerationStructureInfoKHR","text":"CopyMemoryToAccelerationStructureInfoKHR(src::DeviceOrHostAddressConstKHR, dst::AccelerationStructureKHR, mode::CopyAccelerationStructureModeKHR; next = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\nsrc::DeviceOrHostAddressConstKHR\ndst::AccelerationStructureKHR\nmode::CopyAccelerationStructureModeKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\nCopyMemoryToAccelerationStructureInfoKHR(src::DeviceOrHostAddressConstKHR, dst::AccelerationStructureKHR, mode::CopyAccelerationStructureModeKHR; next) -> CopyMemoryToAccelerationStructureInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DebugMarkerMarkerInfoEXT","page":"API","title":"Vulkan.DebugMarkerMarkerInfoEXT","text":"High-level wrapper for VkDebugMarkerMarkerInfoEXT.\n\nExtension: VK_EXT_debug_marker\n\nAPI documentation\n\nstruct DebugMarkerMarkerInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nmarker_name::String\ncolor::NTuple{4, Float32}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DebugMarkerMarkerInfoEXT-Tuple{AbstractString, NTuple{4, Float32}}","page":"API","title":"Vulkan.DebugMarkerMarkerInfoEXT","text":"DebugMarkerMarkerInfoEXT(marker_name::AbstractString, color::NTuple{4, Float32}; next = C_NULL)\n\nExtension: VK_EXT_debug_marker\n\nArguments:\n\nmarker_name::AbstractString\ncolor::NTuple{4, Float32}\nnext: defaults to C_NULL\n\nAPI documentation\n\nDebugMarkerMarkerInfoEXT(marker_name::AbstractString, color::NTuple{4, Float32}; next) -> DebugMarkerMarkerInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DebugMarkerObjectNameInfoEXT","page":"API","title":"Vulkan.DebugMarkerObjectNameInfoEXT","text":"High-level wrapper for VkDebugMarkerObjectNameInfoEXT.\n\nExtension: VK_EXT_debug_marker\n\nAPI documentation\n\nstruct DebugMarkerObjectNameInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nobject_type::DebugReportObjectTypeEXT\nobject::UInt64\nobject_name::String\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DebugMarkerObjectNameInfoEXT-Tuple{DebugReportObjectTypeEXT, Integer, AbstractString}","page":"API","title":"Vulkan.DebugMarkerObjectNameInfoEXT","text":"DebugMarkerObjectNameInfoEXT(object_type::DebugReportObjectTypeEXT, object::Integer, object_name::AbstractString; next = C_NULL)\n\nExtension: VK_EXT_debug_marker\n\nArguments:\n\nobject_type::DebugReportObjectTypeEXT\nobject::Integer\nobject_name::AbstractString\nnext: defaults to C_NULL\n\nAPI documentation\n\nDebugMarkerObjectNameInfoEXT(object_type::DebugReportObjectTypeEXT, object::Integer, object_name::AbstractString; next) -> DebugMarkerObjectNameInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DebugMarkerObjectTagInfoEXT","page":"API","title":"Vulkan.DebugMarkerObjectTagInfoEXT","text":"High-level wrapper for VkDebugMarkerObjectTagInfoEXT.\n\nExtension: VK_EXT_debug_marker\n\nAPI documentation\n\nstruct DebugMarkerObjectTagInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nobject_type::DebugReportObjectTypeEXT\nobject::UInt64\ntag_name::UInt64\ntag_size::UInt64\ntag::Ptr{Nothing}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DebugMarkerObjectTagInfoEXT-Tuple{DebugReportObjectTypeEXT, Integer, Integer, Integer, Ptr{Nothing}}","page":"API","title":"Vulkan.DebugMarkerObjectTagInfoEXT","text":"DebugMarkerObjectTagInfoEXT(object_type::DebugReportObjectTypeEXT, object::Integer, tag_name::Integer, tag_size::Integer, tag::Ptr{Cvoid}; next = C_NULL)\n\nExtension: VK_EXT_debug_marker\n\nArguments:\n\nobject_type::DebugReportObjectTypeEXT\nobject::Integer\ntag_name::Integer\ntag_size::Integer\ntag::Ptr{Cvoid}\nnext: defaults to C_NULL\n\nAPI documentation\n\nDebugMarkerObjectTagInfoEXT(object_type::DebugReportObjectTypeEXT, object::Integer, tag_name::Integer, tag_size::Integer, tag::Ptr{Nothing}; next) -> DebugMarkerObjectTagInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DebugReportCallbackCreateInfoEXT","page":"API","title":"Vulkan.DebugReportCallbackCreateInfoEXT","text":"High-level wrapper for VkDebugReportCallbackCreateInfoEXT.\n\nExtension: VK_EXT_debug_report\n\nAPI documentation\n\nstruct DebugReportCallbackCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::DebugReportFlagEXT\npfn_callback::Union{Ptr{Nothing}, Base.CFunction}\nuser_data::Ptr{Nothing}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DebugReportCallbackCreateInfoEXT-Tuple{Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.DebugReportCallbackCreateInfoEXT","text":"DebugReportCallbackCreateInfoEXT(pfn_callback::FunctionPtr; next = C_NULL, flags = 0, user_data = C_NULL)\n\nExtension: VK_EXT_debug_report\n\nArguments:\n\npfn_callback::FunctionPtr\nnext: defaults to C_NULL\nflags: defaults to 0\nuser_data: defaults to C_NULL\n\nAPI documentation\n\nDebugReportCallbackCreateInfoEXT(pfn_callback::Union{Ptr{Nothing}, Base.CFunction}; next, flags, user_data) -> DebugReportCallbackCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DebugReportCallbackEXT-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.DebugReportCallbackEXT","text":"DebugReportCallbackEXT(instance, pfn_callback::FunctionPtr, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0, user_data = C_NULL)\n\nDebugReportCallbackEXT(instance, pfn_callback::Union{Ptr{Nothing}, Base.CFunction}, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags, user_data) -> DebugReportCallbackEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DebugReportCallbackEXT-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.DebugReportCallbackEXT","text":"DebugReportCallbackEXT(instance, pfn_callback::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0, user_data = C_NULL)\n\nDebugReportCallbackEXT(instance, pfn_callback::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags, user_data) -> DebugReportCallbackEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DebugUtilsLabelEXT","page":"API","title":"Vulkan.DebugUtilsLabelEXT","text":"High-level wrapper for VkDebugUtilsLabelEXT.\n\nExtension: VK_EXT_debug_utils\n\nAPI documentation\n\nstruct DebugUtilsLabelEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nlabel_name::String\ncolor::NTuple{4, Float32}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DebugUtilsLabelEXT-Tuple{AbstractString, NTuple{4, Float32}}","page":"API","title":"Vulkan.DebugUtilsLabelEXT","text":"DebugUtilsLabelEXT(label_name::AbstractString, color::NTuple{4, Float32}; next = C_NULL)\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\nlabel_name::AbstractString\ncolor::NTuple{4, Float32}\nnext: defaults to C_NULL\n\nAPI documentation\n\nDebugUtilsLabelEXT(label_name::AbstractString, color::NTuple{4, Float32}; next) -> DebugUtilsLabelEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DebugUtilsMessengerCallbackDataEXT","page":"API","title":"Vulkan.DebugUtilsMessengerCallbackDataEXT","text":"High-level wrapper for VkDebugUtilsMessengerCallbackDataEXT.\n\nExtension: VK_EXT_debug_utils\n\nAPI documentation\n\nstruct DebugUtilsMessengerCallbackDataEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\nmessage_id_name::String\nmessage_id_number::Int32\nmessage::String\nqueue_labels::Vector{DebugUtilsLabelEXT}\ncmd_buf_labels::Vector{DebugUtilsLabelEXT}\nobjects::Vector{DebugUtilsObjectNameInfoEXT}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DebugUtilsMessengerCallbackDataEXT-Tuple{Integer, AbstractString, AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.DebugUtilsMessengerCallbackDataEXT","text":"DebugUtilsMessengerCallbackDataEXT(message_id_number::Integer, message::AbstractString, queue_labels::AbstractArray{DebugUtilsLabelEXT}, cmd_buf_labels::AbstractArray{DebugUtilsLabelEXT}, objects::AbstractArray{DebugUtilsObjectNameInfoEXT}; next = C_NULL, flags = 0, message_id_name = \"\")\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\nmessage_id_number::Integer\nmessage::AbstractString\nqueue_labels::AbstractArray{DebugUtilsLabelEXT}\ncmd_buf_labels::AbstractArray{DebugUtilsLabelEXT}\nobjects::AbstractArray{DebugUtilsObjectNameInfoEXT}\nnext: defaults to C_NULL\nflags: defaults to 0\nmessage_id_name: defaults to ``\n\nAPI documentation\n\nDebugUtilsMessengerCallbackDataEXT(message_id_number::Integer, message::AbstractString, queue_labels::AbstractArray, cmd_buf_labels::AbstractArray, objects::AbstractArray; next, flags, message_id_name) -> DebugUtilsMessengerCallbackDataEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DebugUtilsMessengerCreateInfoEXT","page":"API","title":"Vulkan.DebugUtilsMessengerCreateInfoEXT","text":"High-level wrapper for VkDebugUtilsMessengerCreateInfoEXT.\n\nExtension: VK_EXT_debug_utils\n\nAPI documentation\n\nstruct DebugUtilsMessengerCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\nmessage_severity::DebugUtilsMessageSeverityFlagEXT\nmessage_type::DebugUtilsMessageTypeFlagEXT\npfn_user_callback::Union{Ptr{Nothing}, Base.CFunction}\nuser_data::Ptr{Nothing}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DebugUtilsMessengerCreateInfoEXT-Tuple{DebugUtilsMessageSeverityFlagEXT, DebugUtilsMessageTypeFlagEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.DebugUtilsMessengerCreateInfoEXT","text":"DebugUtilsMessengerCreateInfoEXT(message_severity::DebugUtilsMessageSeverityFlagEXT, message_type::DebugUtilsMessageTypeFlagEXT, pfn_user_callback::FunctionPtr; next = C_NULL, flags = 0, user_data = C_NULL)\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\nmessage_severity::DebugUtilsMessageSeverityFlagEXT\nmessage_type::DebugUtilsMessageTypeFlagEXT\npfn_user_callback::FunctionPtr\nnext: defaults to C_NULL\nflags: defaults to 0\nuser_data: defaults to C_NULL\n\nAPI documentation\n\nDebugUtilsMessengerCreateInfoEXT(message_severity::DebugUtilsMessageSeverityFlagEXT, message_type::DebugUtilsMessageTypeFlagEXT, pfn_user_callback::Union{Ptr{Nothing}, Base.CFunction}; next, flags, user_data) -> DebugUtilsMessengerCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DebugUtilsMessengerEXT-Tuple{Any, DebugUtilsMessageSeverityFlagEXT, DebugUtilsMessageTypeFlagEXT, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.DebugUtilsMessengerEXT","text":"DebugUtilsMessengerEXT(instance, message_severity::DebugUtilsMessageSeverityFlagEXT, message_type::DebugUtilsMessageTypeFlagEXT, pfn_user_callback::FunctionPtr, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0, user_data = C_NULL)\n\nDebugUtilsMessengerEXT(instance, message_severity::DebugUtilsMessageSeverityFlagEXT, message_type::DebugUtilsMessageTypeFlagEXT, pfn_user_callback::Union{Ptr{Nothing}, Base.CFunction}, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags, user_data) -> DebugUtilsMessengerEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DebugUtilsMessengerEXT-Tuple{Any, DebugUtilsMessageSeverityFlagEXT, DebugUtilsMessageTypeFlagEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.DebugUtilsMessengerEXT","text":"DebugUtilsMessengerEXT(instance, message_severity::DebugUtilsMessageSeverityFlagEXT, message_type::DebugUtilsMessageTypeFlagEXT, pfn_user_callback::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0, user_data = C_NULL)\n\nDebugUtilsMessengerEXT(instance, message_severity::DebugUtilsMessageSeverityFlagEXT, message_type::DebugUtilsMessageTypeFlagEXT, pfn_user_callback::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags, user_data) -> DebugUtilsMessengerEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DebugUtilsMessengerEXT-Tuple{Instance, Ptr{Nothing}}","page":"API","title":"Vulkan.DebugUtilsMessengerEXT","text":"Register a user-defined callback and return the corresponding messenger. All the levels from min_severity will be included. Note that this controls only what messages are sent to the callback. The logging function may use logging macros such as @info or @error to easily filter logs through the Julia logging system.\n\nA default function default_debug_callback can be converted to a function pointer to use as a callback.\n\nwarning: Warning\ncallback must be a function pointer of type Ptr{Nothing} obtained from a callback_f function as follows:   callback = @cfunction(callback_f, UInt32, (DebugUtilsMessageSeverityFlagBitsEXT, DebugUtilsMessageTypeFlagBitsEXT, Ptr{VkCore.VkDebugUtilsMessengerCallbackDataEXT}, Ptr{Cvoid}))   with callback_f a Julia function with a signature matching the @cfunction call.\n\nDebugUtilsMessengerEXT(instance::Instance, callback::Ptr{Nothing}; min_severity, types) -> DebugUtilsMessengerEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DebugUtilsObjectNameInfoEXT","page":"API","title":"Vulkan.DebugUtilsObjectNameInfoEXT","text":"High-level wrapper for VkDebugUtilsObjectNameInfoEXT.\n\nExtension: VK_EXT_debug_utils\n\nAPI documentation\n\nstruct DebugUtilsObjectNameInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nobject_type::ObjectType\nobject_handle::UInt64\nobject_name::String\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DebugUtilsObjectNameInfoEXT-Tuple{ObjectType, Integer}","page":"API","title":"Vulkan.DebugUtilsObjectNameInfoEXT","text":"DebugUtilsObjectNameInfoEXT(object_type::ObjectType, object_handle::Integer; next = C_NULL, object_name = \"\")\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\nobject_type::ObjectType\nobject_handle::Integer\nnext: defaults to C_NULL\nobject_name: defaults to ``\n\nAPI documentation\n\nDebugUtilsObjectNameInfoEXT(object_type::ObjectType, object_handle::Integer; next, object_name) -> DebugUtilsObjectNameInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DebugUtilsObjectTagInfoEXT","page":"API","title":"Vulkan.DebugUtilsObjectTagInfoEXT","text":"High-level wrapper for VkDebugUtilsObjectTagInfoEXT.\n\nExtension: VK_EXT_debug_utils\n\nAPI documentation\n\nstruct DebugUtilsObjectTagInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nobject_type::ObjectType\nobject_handle::UInt64\ntag_name::UInt64\ntag_size::UInt64\ntag::Ptr{Nothing}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DebugUtilsObjectTagInfoEXT-Tuple{ObjectType, Integer, Integer, Integer, Ptr{Nothing}}","page":"API","title":"Vulkan.DebugUtilsObjectTagInfoEXT","text":"DebugUtilsObjectTagInfoEXT(object_type::ObjectType, object_handle::Integer, tag_name::Integer, tag_size::Integer, tag::Ptr{Cvoid}; next = C_NULL)\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\nobject_type::ObjectType\nobject_handle::Integer\ntag_name::Integer\ntag_size::Integer\ntag::Ptr{Cvoid}\nnext: defaults to C_NULL\n\nAPI documentation\n\nDebugUtilsObjectTagInfoEXT(object_type::ObjectType, object_handle::Integer, tag_name::Integer, tag_size::Integer, tag::Ptr{Nothing}; next) -> DebugUtilsObjectTagInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DedicatedAllocationBufferCreateInfoNV","page":"API","title":"Vulkan.DedicatedAllocationBufferCreateInfoNV","text":"High-level wrapper for VkDedicatedAllocationBufferCreateInfoNV.\n\nExtension: VK_NV_dedicated_allocation\n\nAPI documentation\n\nstruct DedicatedAllocationBufferCreateInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\ndedicated_allocation::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DedicatedAllocationBufferCreateInfoNV-Tuple{Bool}","page":"API","title":"Vulkan.DedicatedAllocationBufferCreateInfoNV","text":"DedicatedAllocationBufferCreateInfoNV(dedicated_allocation::Bool; next = C_NULL)\n\nExtension: VK_NV_dedicated_allocation\n\nArguments:\n\ndedicated_allocation::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nDedicatedAllocationBufferCreateInfoNV(dedicated_allocation::Bool; next) -> DedicatedAllocationBufferCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DedicatedAllocationImageCreateInfoNV","page":"API","title":"Vulkan.DedicatedAllocationImageCreateInfoNV","text":"High-level wrapper for VkDedicatedAllocationImageCreateInfoNV.\n\nExtension: VK_NV_dedicated_allocation\n\nAPI documentation\n\nstruct DedicatedAllocationImageCreateInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\ndedicated_allocation::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DedicatedAllocationImageCreateInfoNV-Tuple{Bool}","page":"API","title":"Vulkan.DedicatedAllocationImageCreateInfoNV","text":"DedicatedAllocationImageCreateInfoNV(dedicated_allocation::Bool; next = C_NULL)\n\nExtension: VK_NV_dedicated_allocation\n\nArguments:\n\ndedicated_allocation::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nDedicatedAllocationImageCreateInfoNV(dedicated_allocation::Bool; next) -> DedicatedAllocationImageCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DedicatedAllocationMemoryAllocateInfoNV","page":"API","title":"Vulkan.DedicatedAllocationMemoryAllocateInfoNV","text":"High-level wrapper for VkDedicatedAllocationMemoryAllocateInfoNV.\n\nExtension: VK_NV_dedicated_allocation\n\nAPI documentation\n\nstruct DedicatedAllocationMemoryAllocateInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\nimage::Union{Ptr{Nothing}, Image}\nbuffer::Union{Ptr{Nothing}, Buffer}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DedicatedAllocationMemoryAllocateInfoNV-Tuple{}","page":"API","title":"Vulkan.DedicatedAllocationMemoryAllocateInfoNV","text":"DedicatedAllocationMemoryAllocateInfoNV(; next = C_NULL, image = C_NULL, buffer = C_NULL)\n\nExtension: VK_NV_dedicated_allocation\n\nArguments:\n\nnext: defaults to C_NULL\nimage: defaults to C_NULL\nbuffer: defaults to C_NULL\n\nAPI documentation\n\nDedicatedAllocationMemoryAllocateInfoNV(; next, image, buffer) -> DedicatedAllocationMemoryAllocateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DeferredOperationKHR-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.DeferredOperationKHR","text":"DeferredOperationKHR(device, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)\n\nDeferredOperationKHR(device, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> DeferredOperationKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DeferredOperationKHR-Tuple{Any}","page":"API","title":"Vulkan.DeferredOperationKHR","text":"DeferredOperationKHR(device; allocator = C_NULL)\n\nDeferredOperationKHR(device; allocator) -> DeferredOperationKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DependencyInfoKHR","page":"API","title":"Vulkan.DependencyInfoKHR","text":"High-level wrapper for VkDependencyInfoKHR.\n\nExtension: VK_KHR_synchronization2\n\nAPI documentation\n\nstruct DependencyInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\ndependency_flags::DependencyFlag\nmemory_barriers::Vector{MemoryBarrier2KHR}\nbuffer_memory_barriers::Vector{BufferMemoryBarrier2KHR}\nimage_memory_barriers::Vector{ImageMemoryBarrier2KHR}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DependencyInfoKHR-Tuple{AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.DependencyInfoKHR","text":"DependencyInfoKHR(memory_barriers::AbstractArray{MemoryBarrier2KHR}, buffer_memory_barriers::AbstractArray{BufferMemoryBarrier2KHR}, image_memory_barriers::AbstractArray{ImageMemoryBarrier2KHR}; next = C_NULL, dependency_flags = 0)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\nmemory_barriers::AbstractArray{MemoryBarrier2KHR}\nbuffer_memory_barriers::AbstractArray{BufferMemoryBarrier2KHR}\nimage_memory_barriers::AbstractArray{ImageMemoryBarrier2KHR}\nnext: defaults to C_NULL\ndependency_flags: defaults to 0\n\nAPI documentation\n\nDependencyInfoKHR(memory_barriers::AbstractArray, buffer_memory_barriers::AbstractArray, image_memory_barriers::AbstractArray; next, dependency_flags) -> DependencyInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DescriptorBufferInfo","page":"API","title":"Vulkan.DescriptorBufferInfo","text":"High-level wrapper for VkDescriptorBufferInfo.\n\nAPI documentation\n\nstruct DescriptorBufferInfo <: Vulkan.HighLevelStruct\n\nbuffer::Union{Ptr{Nothing}, Buffer}\noffset::UInt64\nrange::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DescriptorBufferInfo-Tuple{Integer, Integer}","page":"API","title":"Vulkan.DescriptorBufferInfo","text":"DescriptorBufferInfo(offset::Integer, range::Integer; buffer = C_NULL)\n\nArguments:\n\noffset::Integer\nrange::Integer\nbuffer: defaults to C_NULL\n\nAPI documentation\n\nDescriptorBufferInfo(offset::Integer, range::Integer; buffer) -> DescriptorBufferInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DescriptorImageInfo","page":"API","title":"Vulkan.DescriptorImageInfo","text":"High-level wrapper for VkDescriptorImageInfo.\n\nAPI documentation\n\nstruct DescriptorImageInfo <: Vulkan.HighLevelStruct\n\nsampler::Sampler\nimage_view::ImageView\nimage_layout::ImageLayout\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DescriptorPool-Tuple{Any, Integer, AbstractArray{_DescriptorPoolSize}, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.DescriptorPool","text":"DescriptorPool(device, max_sets::Integer, pool_sizes::AbstractArray{_DescriptorPoolSize}, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0)\n\nDescriptorPool(device, max_sets::Integer, pool_sizes::AbstractArray{_DescriptorPoolSize}, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags) -> DescriptorPool\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DescriptorPool-Tuple{Any, Integer, AbstractArray{_DescriptorPoolSize}}","page":"API","title":"Vulkan.DescriptorPool","text":"DescriptorPool(device, max_sets::Integer, pool_sizes::AbstractArray{_DescriptorPoolSize}; allocator = C_NULL, next = C_NULL, flags = 0)\n\nDescriptorPool(device, max_sets::Integer, pool_sizes::AbstractArray{_DescriptorPoolSize}; allocator, next, flags) -> DescriptorPool\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DescriptorPoolCreateInfo","page":"API","title":"Vulkan.DescriptorPoolCreateInfo","text":"High-level wrapper for VkDescriptorPoolCreateInfo.\n\nAPI documentation\n\nstruct DescriptorPoolCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::DescriptorPoolCreateFlag\nmax_sets::UInt32\npool_sizes::Vector{DescriptorPoolSize}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DescriptorPoolCreateInfo-Tuple{Integer, AbstractArray}","page":"API","title":"Vulkan.DescriptorPoolCreateInfo","text":"DescriptorPoolCreateInfo(max_sets::Integer, pool_sizes::AbstractArray{DescriptorPoolSize}; next = C_NULL, flags = 0)\n\nArguments:\n\nmax_sets::Integer\npool_sizes::AbstractArray{DescriptorPoolSize}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nDescriptorPoolCreateInfo(max_sets::Integer, pool_sizes::AbstractArray; next, flags) -> DescriptorPoolCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DescriptorPoolInlineUniformBlockCreateInfoEXT","page":"API","title":"Vulkan.DescriptorPoolInlineUniformBlockCreateInfoEXT","text":"High-level wrapper for VkDescriptorPoolInlineUniformBlockCreateInfoEXT.\n\nExtension: VK_EXT_inline_uniform_block\n\nAPI documentation\n\nstruct DescriptorPoolInlineUniformBlockCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nmax_inline_uniform_block_bindings::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DescriptorPoolInlineUniformBlockCreateInfoEXT-Tuple{Integer}","page":"API","title":"Vulkan.DescriptorPoolInlineUniformBlockCreateInfoEXT","text":"DescriptorPoolInlineUniformBlockCreateInfoEXT(max_inline_uniform_block_bindings::Integer; next = C_NULL)\n\nExtension: VK_EXT_inline_uniform_block\n\nArguments:\n\nmax_inline_uniform_block_bindings::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nDescriptorPoolInlineUniformBlockCreateInfoEXT(max_inline_uniform_block_bindings::Integer; next) -> DescriptorPoolInlineUniformBlockCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DescriptorPoolSize","page":"API","title":"Vulkan.DescriptorPoolSize","text":"High-level wrapper for VkDescriptorPoolSize.\n\nAPI documentation\n\nstruct DescriptorPoolSize <: Vulkan.HighLevelStruct\n\ntype::DescriptorType\ndescriptor_count::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DescriptorSetAllocateInfo","page":"API","title":"Vulkan.DescriptorSetAllocateInfo","text":"High-level wrapper for VkDescriptorSetAllocateInfo.\n\nAPI documentation\n\nstruct DescriptorSetAllocateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\ndescriptor_pool::DescriptorPool\nset_layouts::Vector{DescriptorSetLayout}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DescriptorSetAllocateInfo-Tuple{DescriptorPool, AbstractArray}","page":"API","title":"Vulkan.DescriptorSetAllocateInfo","text":"DescriptorSetAllocateInfo(descriptor_pool::DescriptorPool, set_layouts::AbstractArray{DescriptorSetLayout}; next = C_NULL)\n\nArguments:\n\ndescriptor_pool::DescriptorPool\nset_layouts::AbstractArray{DescriptorSetLayout}\nnext: defaults to C_NULL\n\nAPI documentation\n\nDescriptorSetAllocateInfo(descriptor_pool::DescriptorPool, set_layouts::AbstractArray; next) -> DescriptorSetAllocateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DescriptorSetLayout-Tuple{Any, AbstractArray{_DescriptorSetLayoutBinding}, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.DescriptorSetLayout","text":"DescriptorSetLayout(device, bindings::AbstractArray{_DescriptorSetLayoutBinding}, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0)\n\nDescriptorSetLayout(device, bindings::AbstractArray{_DescriptorSetLayoutBinding}, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags) -> DescriptorSetLayout\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DescriptorSetLayout-Tuple{Any, AbstractArray{_DescriptorSetLayoutBinding}}","page":"API","title":"Vulkan.DescriptorSetLayout","text":"DescriptorSetLayout(device, bindings::AbstractArray{_DescriptorSetLayoutBinding}; allocator = C_NULL, next = C_NULL, flags = 0)\n\nDescriptorSetLayout(device, bindings::AbstractArray{_DescriptorSetLayoutBinding}; allocator, next, flags) -> DescriptorSetLayout\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DescriptorSetLayoutBinding","page":"API","title":"Vulkan.DescriptorSetLayoutBinding","text":"High-level wrapper for VkDescriptorSetLayoutBinding.\n\nAPI documentation\n\nstruct DescriptorSetLayoutBinding <: Vulkan.HighLevelStruct\n\nbinding::UInt32\ndescriptor_type::DescriptorType\ndescriptor_count::UInt32\nstage_flags::ShaderStageFlag\nimmutable_samplers::Union{Ptr{Nothing}, Vector{Sampler}}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DescriptorSetLayoutBinding-Tuple{Integer, DescriptorType, ShaderStageFlag}","page":"API","title":"Vulkan.DescriptorSetLayoutBinding","text":"DescriptorSetLayoutBinding(binding::Integer, descriptor_type::DescriptorType, stage_flags::ShaderStageFlag; descriptor_count = 0, immutable_samplers = C_NULL)\n\nArguments:\n\nbinding::Integer\ndescriptor_type::DescriptorType\nstage_flags::ShaderStageFlag\ndescriptor_count: defaults to 0\nimmutable_samplers: defaults to C_NULL\n\nAPI documentation\n\nDescriptorSetLayoutBinding(binding::Integer, descriptor_type::DescriptorType, stage_flags::ShaderStageFlag; descriptor_count, immutable_samplers) -> DescriptorSetLayoutBinding\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DescriptorSetLayoutBindingFlagsCreateInfo","page":"API","title":"Vulkan.DescriptorSetLayoutBindingFlagsCreateInfo","text":"High-level wrapper for VkDescriptorSetLayoutBindingFlagsCreateInfo.\n\nAPI documentation\n\nstruct DescriptorSetLayoutBindingFlagsCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nbinding_flags::Vector{DescriptorBindingFlag}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DescriptorSetLayoutBindingFlagsCreateInfo-Tuple{AbstractArray}","page":"API","title":"Vulkan.DescriptorSetLayoutBindingFlagsCreateInfo","text":"DescriptorSetLayoutBindingFlagsCreateInfo(binding_flags::AbstractArray{DescriptorBindingFlag}; next = C_NULL)\n\nArguments:\n\nbinding_flags::AbstractArray{DescriptorBindingFlag}\nnext: defaults to C_NULL\n\nAPI documentation\n\nDescriptorSetLayoutBindingFlagsCreateInfo(binding_flags::AbstractArray; next) -> DescriptorSetLayoutBindingFlagsCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DescriptorSetLayoutCreateInfo","page":"API","title":"Vulkan.DescriptorSetLayoutCreateInfo","text":"High-level wrapper for VkDescriptorSetLayoutCreateInfo.\n\nAPI documentation\n\nstruct DescriptorSetLayoutCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::DescriptorSetLayoutCreateFlag\nbindings::Vector{DescriptorSetLayoutBinding}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DescriptorSetLayoutCreateInfo-Tuple{AbstractArray}","page":"API","title":"Vulkan.DescriptorSetLayoutCreateInfo","text":"DescriptorSetLayoutCreateInfo(bindings::AbstractArray{DescriptorSetLayoutBinding}; next = C_NULL, flags = 0)\n\nArguments:\n\nbindings::AbstractArray{DescriptorSetLayoutBinding}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nDescriptorSetLayoutCreateInfo(bindings::AbstractArray; next, flags) -> DescriptorSetLayoutCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DescriptorSetLayoutSupport","page":"API","title":"Vulkan.DescriptorSetLayoutSupport","text":"High-level wrapper for VkDescriptorSetLayoutSupport.\n\nAPI documentation\n\nstruct DescriptorSetLayoutSupport <: Vulkan.HighLevelStruct\n\nnext::Any\nsupported::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DescriptorSetLayoutSupport-Tuple{Bool}","page":"API","title":"Vulkan.DescriptorSetLayoutSupport","text":"DescriptorSetLayoutSupport(supported::Bool; next = C_NULL)\n\nArguments:\n\nsupported::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nDescriptorSetLayoutSupport(supported::Bool; next) -> DescriptorSetLayoutSupport\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DescriptorSetVariableDescriptorCountAllocateInfo","page":"API","title":"Vulkan.DescriptorSetVariableDescriptorCountAllocateInfo","text":"High-level wrapper for VkDescriptorSetVariableDescriptorCountAllocateInfo.\n\nAPI documentation\n\nstruct DescriptorSetVariableDescriptorCountAllocateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\ndescriptor_counts::Vector{UInt32}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DescriptorSetVariableDescriptorCountAllocateInfo-Tuple{AbstractArray}","page":"API","title":"Vulkan.DescriptorSetVariableDescriptorCountAllocateInfo","text":"DescriptorSetVariableDescriptorCountAllocateInfo(descriptor_counts::AbstractArray{<:Integer}; next = C_NULL)\n\nArguments:\n\ndescriptor_counts::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\nAPI documentation\n\nDescriptorSetVariableDescriptorCountAllocateInfo(descriptor_counts::AbstractArray; next) -> DescriptorSetVariableDescriptorCountAllocateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DescriptorSetVariableDescriptorCountLayoutSupport","page":"API","title":"Vulkan.DescriptorSetVariableDescriptorCountLayoutSupport","text":"High-level wrapper for VkDescriptorSetVariableDescriptorCountLayoutSupport.\n\nAPI documentation\n\nstruct DescriptorSetVariableDescriptorCountLayoutSupport <: Vulkan.HighLevelStruct\n\nnext::Any\nmax_variable_descriptor_count::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DescriptorSetVariableDescriptorCountLayoutSupport-Tuple{Integer}","page":"API","title":"Vulkan.DescriptorSetVariableDescriptorCountLayoutSupport","text":"DescriptorSetVariableDescriptorCountLayoutSupport(max_variable_descriptor_count::Integer; next = C_NULL)\n\nArguments:\n\nmax_variable_descriptor_count::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nDescriptorSetVariableDescriptorCountLayoutSupport(max_variable_descriptor_count::Integer; next) -> DescriptorSetVariableDescriptorCountLayoutSupport\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DescriptorUpdateTemplate-Tuple{Any, AbstractArray{_DescriptorUpdateTemplateEntry}, DescriptorUpdateTemplateType, Any, PipelineBindPoint, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.DescriptorUpdateTemplate","text":"DescriptorUpdateTemplate(device, descriptor_update_entries::AbstractArray{_DescriptorUpdateTemplateEntry}, template_type::DescriptorUpdateTemplateType, descriptor_set_layout, pipeline_bind_point::PipelineBindPoint, pipeline_layout, set::Integer, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0)\n\nDescriptorUpdateTemplate(device, descriptor_update_entries::AbstractArray{_DescriptorUpdateTemplateEntry}, template_type::DescriptorUpdateTemplateType, descriptor_set_layout, pipeline_bind_point::PipelineBindPoint, pipeline_layout, set::Integer, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags) -> DescriptorUpdateTemplate\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DescriptorUpdateTemplate-Tuple{Any, AbstractArray{_DescriptorUpdateTemplateEntry}, DescriptorUpdateTemplateType, Any, PipelineBindPoint, Any, Integer}","page":"API","title":"Vulkan.DescriptorUpdateTemplate","text":"DescriptorUpdateTemplate(device, descriptor_update_entries::AbstractArray{_DescriptorUpdateTemplateEntry}, template_type::DescriptorUpdateTemplateType, descriptor_set_layout, pipeline_bind_point::PipelineBindPoint, pipeline_layout, set::Integer; allocator = C_NULL, next = C_NULL, flags = 0)\n\nDescriptorUpdateTemplate(device, descriptor_update_entries::AbstractArray{_DescriptorUpdateTemplateEntry}, template_type::DescriptorUpdateTemplateType, descriptor_set_layout, pipeline_bind_point::PipelineBindPoint, pipeline_layout, set::Integer; allocator, next, flags) -> DescriptorUpdateTemplate\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DescriptorUpdateTemplateCreateInfo","page":"API","title":"Vulkan.DescriptorUpdateTemplateCreateInfo","text":"High-level wrapper for VkDescriptorUpdateTemplateCreateInfo.\n\nAPI documentation\n\nstruct DescriptorUpdateTemplateCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\ndescriptor_update_entries::Vector{DescriptorUpdateTemplateEntry}\ntemplate_type::DescriptorUpdateTemplateType\ndescriptor_set_layout::DescriptorSetLayout\npipeline_bind_point::PipelineBindPoint\npipeline_layout::PipelineLayout\nset::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DescriptorUpdateTemplateCreateInfo-Tuple{AbstractArray, DescriptorUpdateTemplateType, DescriptorSetLayout, PipelineBindPoint, PipelineLayout, Integer}","page":"API","title":"Vulkan.DescriptorUpdateTemplateCreateInfo","text":"DescriptorUpdateTemplateCreateInfo(descriptor_update_entries::AbstractArray{DescriptorUpdateTemplateEntry}, template_type::DescriptorUpdateTemplateType, descriptor_set_layout::DescriptorSetLayout, pipeline_bind_point::PipelineBindPoint, pipeline_layout::PipelineLayout, set::Integer; next = C_NULL, flags = 0)\n\nArguments:\n\ndescriptor_update_entries::AbstractArray{DescriptorUpdateTemplateEntry}\ntemplate_type::DescriptorUpdateTemplateType\ndescriptor_set_layout::DescriptorSetLayout\npipeline_bind_point::PipelineBindPoint\npipeline_layout::PipelineLayout\nset::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nDescriptorUpdateTemplateCreateInfo(descriptor_update_entries::AbstractArray, template_type::DescriptorUpdateTemplateType, descriptor_set_layout::DescriptorSetLayout, pipeline_bind_point::PipelineBindPoint, pipeline_layout::PipelineLayout, set::Integer; next, flags) -> DescriptorUpdateTemplateCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DescriptorUpdateTemplateEntry","page":"API","title":"Vulkan.DescriptorUpdateTemplateEntry","text":"High-level wrapper for VkDescriptorUpdateTemplateEntry.\n\nAPI documentation\n\nstruct DescriptorUpdateTemplateEntry <: Vulkan.HighLevelStruct\n\ndst_binding::UInt32\ndst_array_element::UInt32\ndescriptor_count::UInt32\ndescriptor_type::DescriptorType\noffset::UInt64\nstride::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.Device-Tuple{Any, AbstractArray{_DeviceQueueCreateInfo}, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.Device","text":"Device(physical_device, queue_create_infos::AbstractArray{_DeviceQueueCreateInfo}, enabled_layer_names::AbstractArray{<:AbstractString}, enabled_extension_names::AbstractArray{<:AbstractString}, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0, enabled_features = C_NULL)\n\nDevice(physical_device, queue_create_infos::AbstractArray{_DeviceQueueCreateInfo}, enabled_layer_names::AbstractArray, enabled_extension_names::AbstractArray, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags, enabled_features) -> Device\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.Device-Tuple{Any, AbstractArray{_DeviceQueueCreateInfo}, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.Device","text":"Device(physical_device, queue_create_infos::AbstractArray{_DeviceQueueCreateInfo}, enabled_layer_names::AbstractArray{<:AbstractString}, enabled_extension_names::AbstractArray{<:AbstractString}; allocator = C_NULL, next = C_NULL, flags = 0, enabled_features = C_NULL)\n\nDevice(physical_device, queue_create_infos::AbstractArray{_DeviceQueueCreateInfo}, enabled_layer_names::AbstractArray, enabled_extension_names::AbstractArray; allocator, next, flags, enabled_features) -> Device\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DeviceCreateInfo","page":"API","title":"Vulkan.DeviceCreateInfo","text":"High-level wrapper for VkDeviceCreateInfo.\n\nAPI documentation\n\nstruct DeviceCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\nqueue_create_infos::Vector{DeviceQueueCreateInfo}\nenabled_layer_names::Vector{String}\nenabled_extension_names::Vector{String}\nenabled_features::Union{Ptr{Nothing}, PhysicalDeviceFeatures}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DeviceCreateInfo-Tuple{AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.DeviceCreateInfo","text":"DeviceCreateInfo(queue_create_infos::AbstractArray{DeviceQueueCreateInfo}, enabled_layer_names::AbstractArray{<:AbstractString}, enabled_extension_names::AbstractArray{<:AbstractString}; next = C_NULL, flags = 0, enabled_features = C_NULL)\n\nArguments:\n\nqueue_create_infos::AbstractArray{DeviceQueueCreateInfo}\nenabled_layer_names::AbstractArray{<:AbstractString}\nenabled_extension_names::AbstractArray{<:AbstractString}\nnext: defaults to C_NULL\nflags: defaults to 0\nenabled_features: defaults to C_NULL\n\nAPI documentation\n\nDeviceCreateInfo(queue_create_infos::AbstractArray, enabled_layer_names::AbstractArray, enabled_extension_names::AbstractArray; next, flags, enabled_features) -> DeviceCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DeviceDeviceMemoryReportCreateInfoEXT","page":"API","title":"Vulkan.DeviceDeviceMemoryReportCreateInfoEXT","text":"High-level wrapper for VkDeviceDeviceMemoryReportCreateInfoEXT.\n\nExtension: VK_EXT_device_memory_report\n\nAPI documentation\n\nstruct DeviceDeviceMemoryReportCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\npfn_user_callback::Union{Ptr{Nothing}, Base.CFunction}\nuser_data::Ptr{Nothing}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DeviceDeviceMemoryReportCreateInfoEXT-Tuple{Integer, Union{Ptr{Nothing}, Base.CFunction}, Ptr{Nothing}}","page":"API","title":"Vulkan.DeviceDeviceMemoryReportCreateInfoEXT","text":"DeviceDeviceMemoryReportCreateInfoEXT(flags::Integer, pfn_user_callback::FunctionPtr, user_data::Ptr{Cvoid}; next = C_NULL)\n\nExtension: VK_EXT_device_memory_report\n\nArguments:\n\nflags::Integer\npfn_user_callback::FunctionPtr\nuser_data::Ptr{Cvoid}\nnext: defaults to C_NULL\n\nAPI documentation\n\nDeviceDeviceMemoryReportCreateInfoEXT(flags::Integer, pfn_user_callback::Union{Ptr{Nothing}, Base.CFunction}, user_data::Ptr{Nothing}; next) -> DeviceDeviceMemoryReportCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DeviceDiagnosticsConfigCreateInfoNV","page":"API","title":"Vulkan.DeviceDiagnosticsConfigCreateInfoNV","text":"High-level wrapper for VkDeviceDiagnosticsConfigCreateInfoNV.\n\nExtension: VK_NV_device_diagnostics_config\n\nAPI documentation\n\nstruct DeviceDiagnosticsConfigCreateInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::DeviceDiagnosticsConfigFlagNV\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DeviceDiagnosticsConfigCreateInfoNV-Tuple{}","page":"API","title":"Vulkan.DeviceDiagnosticsConfigCreateInfoNV","text":"DeviceDiagnosticsConfigCreateInfoNV(; next = C_NULL, flags = 0)\n\nExtension: VK_NV_device_diagnostics_config\n\nArguments:\n\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nDeviceDiagnosticsConfigCreateInfoNV(; next, flags) -> DeviceDiagnosticsConfigCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DeviceEventInfoEXT","page":"API","title":"Vulkan.DeviceEventInfoEXT","text":"High-level wrapper for VkDeviceEventInfoEXT.\n\nExtension: VK_EXT_display_control\n\nAPI documentation\n\nstruct DeviceEventInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\ndevice_event::DeviceEventTypeEXT\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DeviceEventInfoEXT-Tuple{DeviceEventTypeEXT}","page":"API","title":"Vulkan.DeviceEventInfoEXT","text":"DeviceEventInfoEXT(device_event::DeviceEventTypeEXT; next = C_NULL)\n\nExtension: VK_EXT_display_control\n\nArguments:\n\ndevice_event::DeviceEventTypeEXT\nnext: defaults to C_NULL\n\nAPI documentation\n\nDeviceEventInfoEXT(device_event::DeviceEventTypeEXT; next) -> DeviceEventInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DeviceGroupBindSparseInfo","page":"API","title":"Vulkan.DeviceGroupBindSparseInfo","text":"High-level wrapper for VkDeviceGroupBindSparseInfo.\n\nAPI documentation\n\nstruct DeviceGroupBindSparseInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nresource_device_index::UInt32\nmemory_device_index::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DeviceGroupBindSparseInfo-Tuple{Integer, Integer}","page":"API","title":"Vulkan.DeviceGroupBindSparseInfo","text":"DeviceGroupBindSparseInfo(resource_device_index::Integer, memory_device_index::Integer; next = C_NULL)\n\nArguments:\n\nresource_device_index::Integer\nmemory_device_index::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nDeviceGroupBindSparseInfo(resource_device_index::Integer, memory_device_index::Integer; next) -> DeviceGroupBindSparseInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DeviceGroupCommandBufferBeginInfo","page":"API","title":"Vulkan.DeviceGroupCommandBufferBeginInfo","text":"High-level wrapper for VkDeviceGroupCommandBufferBeginInfo.\n\nAPI documentation\n\nstruct DeviceGroupCommandBufferBeginInfo <: Vulkan.HighLevelStruct\n\nnext::Any\ndevice_mask::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DeviceGroupCommandBufferBeginInfo-Tuple{Integer}","page":"API","title":"Vulkan.DeviceGroupCommandBufferBeginInfo","text":"DeviceGroupCommandBufferBeginInfo(device_mask::Integer; next = C_NULL)\n\nArguments:\n\ndevice_mask::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nDeviceGroupCommandBufferBeginInfo(device_mask::Integer; next) -> DeviceGroupCommandBufferBeginInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DeviceGroupDeviceCreateInfo","page":"API","title":"Vulkan.DeviceGroupDeviceCreateInfo","text":"High-level wrapper for VkDeviceGroupDeviceCreateInfo.\n\nAPI documentation\n\nstruct DeviceGroupDeviceCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nphysical_devices::Vector{PhysicalDevice}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DeviceGroupDeviceCreateInfo-Tuple{AbstractArray}","page":"API","title":"Vulkan.DeviceGroupDeviceCreateInfo","text":"DeviceGroupDeviceCreateInfo(physical_devices::AbstractArray{PhysicalDevice}; next = C_NULL)\n\nArguments:\n\nphysical_devices::AbstractArray{PhysicalDevice}\nnext: defaults to C_NULL\n\nAPI documentation\n\nDeviceGroupDeviceCreateInfo(physical_devices::AbstractArray; next) -> DeviceGroupDeviceCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DeviceGroupPresentCapabilitiesKHR","page":"API","title":"Vulkan.DeviceGroupPresentCapabilitiesKHR","text":"High-level wrapper for VkDeviceGroupPresentCapabilitiesKHR.\n\nExtension: VK_KHR_swapchain\n\nAPI documentation\n\nstruct DeviceGroupPresentCapabilitiesKHR <: Vulkan.HighLevelStruct\n\nnext::Any\npresent_mask::NTuple{32, UInt32}\nmodes::DeviceGroupPresentModeFlagKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DeviceGroupPresentCapabilitiesKHR-Tuple{NTuple{32, UInt32}, DeviceGroupPresentModeFlagKHR}","page":"API","title":"Vulkan.DeviceGroupPresentCapabilitiesKHR","text":"DeviceGroupPresentCapabilitiesKHR(present_mask::NTuple{Int(VK_MAX_DEVICE_GROUP_SIZE), UInt32}, modes::DeviceGroupPresentModeFlagKHR; next = C_NULL)\n\nExtension: VK_KHR_swapchain\n\nArguments:\n\npresent_mask::NTuple{Int(VK_MAX_DEVICE_GROUP_SIZE), UInt32}\nmodes::DeviceGroupPresentModeFlagKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\nDeviceGroupPresentCapabilitiesKHR(present_mask::NTuple{32, UInt32}, modes::DeviceGroupPresentModeFlagKHR; next) -> DeviceGroupPresentCapabilitiesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DeviceGroupPresentInfoKHR","page":"API","title":"Vulkan.DeviceGroupPresentInfoKHR","text":"High-level wrapper for VkDeviceGroupPresentInfoKHR.\n\nExtension: VK_KHR_swapchain\n\nAPI documentation\n\nstruct DeviceGroupPresentInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\ndevice_masks::Vector{UInt32}\nmode::DeviceGroupPresentModeFlagKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DeviceGroupPresentInfoKHR-Tuple{AbstractArray, DeviceGroupPresentModeFlagKHR}","page":"API","title":"Vulkan.DeviceGroupPresentInfoKHR","text":"DeviceGroupPresentInfoKHR(device_masks::AbstractArray{<:Integer}, mode::DeviceGroupPresentModeFlagKHR; next = C_NULL)\n\nExtension: VK_KHR_swapchain\n\nArguments:\n\ndevice_masks::AbstractArray{<:Integer}\nmode::DeviceGroupPresentModeFlagKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\nDeviceGroupPresentInfoKHR(device_masks::AbstractArray, mode::DeviceGroupPresentModeFlagKHR; next) -> DeviceGroupPresentInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DeviceGroupRenderPassBeginInfo","page":"API","title":"Vulkan.DeviceGroupRenderPassBeginInfo","text":"High-level wrapper for VkDeviceGroupRenderPassBeginInfo.\n\nAPI documentation\n\nstruct DeviceGroupRenderPassBeginInfo <: Vulkan.HighLevelStruct\n\nnext::Any\ndevice_mask::UInt32\ndevice_render_areas::Vector{Rect2D}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DeviceGroupRenderPassBeginInfo-Tuple{Integer, AbstractArray}","page":"API","title":"Vulkan.DeviceGroupRenderPassBeginInfo","text":"DeviceGroupRenderPassBeginInfo(device_mask::Integer, device_render_areas::AbstractArray{Rect2D}; next = C_NULL)\n\nArguments:\n\ndevice_mask::Integer\ndevice_render_areas::AbstractArray{Rect2D}\nnext: defaults to C_NULL\n\nAPI documentation\n\nDeviceGroupRenderPassBeginInfo(device_mask::Integer, device_render_areas::AbstractArray; next) -> DeviceGroupRenderPassBeginInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DeviceGroupSubmitInfo","page":"API","title":"Vulkan.DeviceGroupSubmitInfo","text":"High-level wrapper for VkDeviceGroupSubmitInfo.\n\nAPI documentation\n\nstruct DeviceGroupSubmitInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nwait_semaphore_device_indices::Vector{UInt32}\ncommand_buffer_device_masks::Vector{UInt32}\nsignal_semaphore_device_indices::Vector{UInt32}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DeviceGroupSubmitInfo-Tuple{AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.DeviceGroupSubmitInfo","text":"DeviceGroupSubmitInfo(wait_semaphore_device_indices::AbstractArray{<:Integer}, command_buffer_device_masks::AbstractArray{<:Integer}, signal_semaphore_device_indices::AbstractArray{<:Integer}; next = C_NULL)\n\nArguments:\n\nwait_semaphore_device_indices::AbstractArray{<:Integer}\ncommand_buffer_device_masks::AbstractArray{<:Integer}\nsignal_semaphore_device_indices::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\nAPI documentation\n\nDeviceGroupSubmitInfo(wait_semaphore_device_indices::AbstractArray, command_buffer_device_masks::AbstractArray, signal_semaphore_device_indices::AbstractArray; next) -> DeviceGroupSubmitInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DeviceGroupSwapchainCreateInfoKHR","page":"API","title":"Vulkan.DeviceGroupSwapchainCreateInfoKHR","text":"High-level wrapper for VkDeviceGroupSwapchainCreateInfoKHR.\n\nExtension: VK_KHR_swapchain\n\nAPI documentation\n\nstruct DeviceGroupSwapchainCreateInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nmodes::DeviceGroupPresentModeFlagKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DeviceGroupSwapchainCreateInfoKHR-Tuple{DeviceGroupPresentModeFlagKHR}","page":"API","title":"Vulkan.DeviceGroupSwapchainCreateInfoKHR","text":"DeviceGroupSwapchainCreateInfoKHR(modes::DeviceGroupPresentModeFlagKHR; next = C_NULL)\n\nExtension: VK_KHR_swapchain\n\nArguments:\n\nmodes::DeviceGroupPresentModeFlagKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\nDeviceGroupSwapchainCreateInfoKHR(modes::DeviceGroupPresentModeFlagKHR; next) -> DeviceGroupSwapchainCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DeviceMemory-Tuple{Any, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.DeviceMemory","text":"DeviceMemory(device, allocation_size::Integer, memory_type_index::Integer, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL)\n\nDeviceMemory(device, allocation_size::Integer, memory_type_index::Integer, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next) -> DeviceMemory\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DeviceMemory-Tuple{Any, Integer, Integer}","page":"API","title":"Vulkan.DeviceMemory","text":"DeviceMemory(device, allocation_size::Integer, memory_type_index::Integer; allocator = C_NULL, next = C_NULL)\n\nDeviceMemory(device, allocation_size::Integer, memory_type_index::Integer; allocator, next) -> DeviceMemory\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DeviceMemoryOpaqueCaptureAddressInfo","page":"API","title":"Vulkan.DeviceMemoryOpaqueCaptureAddressInfo","text":"High-level wrapper for VkDeviceMemoryOpaqueCaptureAddressInfo.\n\nAPI documentation\n\nstruct DeviceMemoryOpaqueCaptureAddressInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nmemory::DeviceMemory\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DeviceMemoryOpaqueCaptureAddressInfo-Tuple{DeviceMemory}","page":"API","title":"Vulkan.DeviceMemoryOpaqueCaptureAddressInfo","text":"DeviceMemoryOpaqueCaptureAddressInfo(memory::DeviceMemory; next = C_NULL)\n\nArguments:\n\nmemory::DeviceMemory\nnext: defaults to C_NULL\n\nAPI documentation\n\nDeviceMemoryOpaqueCaptureAddressInfo(memory::DeviceMemory; next) -> DeviceMemoryOpaqueCaptureAddressInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DeviceMemoryOverallocationCreateInfoAMD","page":"API","title":"Vulkan.DeviceMemoryOverallocationCreateInfoAMD","text":"High-level wrapper for VkDeviceMemoryOverallocationCreateInfoAMD.\n\nExtension: VK_AMD_memory_overallocation_behavior\n\nAPI documentation\n\nstruct DeviceMemoryOverallocationCreateInfoAMD <: Vulkan.HighLevelStruct\n\nnext::Any\noverallocation_behavior::MemoryOverallocationBehaviorAMD\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DeviceMemoryOverallocationCreateInfoAMD-Tuple{MemoryOverallocationBehaviorAMD}","page":"API","title":"Vulkan.DeviceMemoryOverallocationCreateInfoAMD","text":"DeviceMemoryOverallocationCreateInfoAMD(overallocation_behavior::MemoryOverallocationBehaviorAMD; next = C_NULL)\n\nExtension: VK_AMD_memory_overallocation_behavior\n\nArguments:\n\noverallocation_behavior::MemoryOverallocationBehaviorAMD\nnext: defaults to C_NULL\n\nAPI documentation\n\nDeviceMemoryOverallocationCreateInfoAMD(overallocation_behavior::MemoryOverallocationBehaviorAMD; next) -> DeviceMemoryOverallocationCreateInfoAMD\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DeviceMemoryReportCallbackDataEXT","page":"API","title":"Vulkan.DeviceMemoryReportCallbackDataEXT","text":"High-level wrapper for VkDeviceMemoryReportCallbackDataEXT.\n\nExtension: VK_EXT_device_memory_report\n\nAPI documentation\n\nstruct DeviceMemoryReportCallbackDataEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\ntype::DeviceMemoryReportEventTypeEXT\nmemory_object_id::UInt64\nsize::UInt64\nobject_type::ObjectType\nobject_handle::UInt64\nheap_index::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DeviceMemoryReportCallbackDataEXT-Tuple{Integer, DeviceMemoryReportEventTypeEXT, Integer, Integer, ObjectType, Integer, Integer}","page":"API","title":"Vulkan.DeviceMemoryReportCallbackDataEXT","text":"DeviceMemoryReportCallbackDataEXT(flags::Integer, type::DeviceMemoryReportEventTypeEXT, memory_object_id::Integer, size::Integer, object_type::ObjectType, object_handle::Integer, heap_index::Integer; next = C_NULL)\n\nExtension: VK_EXT_device_memory_report\n\nArguments:\n\nflags::Integer\ntype::DeviceMemoryReportEventTypeEXT\nmemory_object_id::Integer\nsize::Integer\nobject_type::ObjectType\nobject_handle::Integer\nheap_index::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nDeviceMemoryReportCallbackDataEXT(flags::Integer, type::DeviceMemoryReportEventTypeEXT, memory_object_id::Integer, size::Integer, object_type::ObjectType, object_handle::Integer, heap_index::Integer; next) -> DeviceMemoryReportCallbackDataEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DeviceOrHostAddressConstKHR","page":"API","title":"Vulkan.DeviceOrHostAddressConstKHR","text":"High-level wrapper for VkDeviceOrHostAddressConstKHR.\n\nExtension: VK_KHR_acceleration_structure\n\nAPI documentation\n\nstruct DeviceOrHostAddressConstKHR <: Vulkan.HighLevelStruct\n\nvks::VulkanCore.LibVulkan.VkDeviceOrHostAddressConstKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DeviceOrHostAddressKHR","page":"API","title":"Vulkan.DeviceOrHostAddressKHR","text":"High-level wrapper for VkDeviceOrHostAddressKHR.\n\nExtension: VK_KHR_acceleration_structure\n\nAPI documentation\n\nstruct DeviceOrHostAddressKHR <: Vulkan.HighLevelStruct\n\nvks::VulkanCore.LibVulkan.VkDeviceOrHostAddressKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DevicePrivateDataCreateInfoEXT","page":"API","title":"Vulkan.DevicePrivateDataCreateInfoEXT","text":"High-level wrapper for VkDevicePrivateDataCreateInfoEXT.\n\nExtension: VK_EXT_private_data\n\nAPI documentation\n\nstruct DevicePrivateDataCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nprivate_data_slot_request_count::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DevicePrivateDataCreateInfoEXT-Tuple{Integer}","page":"API","title":"Vulkan.DevicePrivateDataCreateInfoEXT","text":"DevicePrivateDataCreateInfoEXT(private_data_slot_request_count::Integer; next = C_NULL)\n\nExtension: VK_EXT_private_data\n\nArguments:\n\nprivate_data_slot_request_count::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nDevicePrivateDataCreateInfoEXT(private_data_slot_request_count::Integer; next) -> DevicePrivateDataCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DeviceQueueCreateInfo","page":"API","title":"Vulkan.DeviceQueueCreateInfo","text":"High-level wrapper for VkDeviceQueueCreateInfo.\n\nAPI documentation\n\nstruct DeviceQueueCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::DeviceQueueCreateFlag\nqueue_family_index::UInt32\nqueue_priorities::Vector{Float32}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DeviceQueueCreateInfo-Tuple{Integer, AbstractArray}","page":"API","title":"Vulkan.DeviceQueueCreateInfo","text":"DeviceQueueCreateInfo(queue_family_index::Integer, queue_priorities::AbstractArray{<:Real}; next = C_NULL, flags = 0)\n\nArguments:\n\nqueue_family_index::Integer\nqueue_priorities::AbstractArray{<:Real}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nDeviceQueueCreateInfo(queue_family_index::Integer, queue_priorities::AbstractArray; next, flags) -> DeviceQueueCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DeviceQueueGlobalPriorityCreateInfoEXT","page":"API","title":"Vulkan.DeviceQueueGlobalPriorityCreateInfoEXT","text":"High-level wrapper for VkDeviceQueueGlobalPriorityCreateInfoEXT.\n\nExtension: VK_EXT_global_priority\n\nAPI documentation\n\nstruct DeviceQueueGlobalPriorityCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nglobal_priority::QueueGlobalPriorityEXT\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DeviceQueueGlobalPriorityCreateInfoEXT-Tuple{QueueGlobalPriorityEXT}","page":"API","title":"Vulkan.DeviceQueueGlobalPriorityCreateInfoEXT","text":"DeviceQueueGlobalPriorityCreateInfoEXT(global_priority::QueueGlobalPriorityEXT; next = C_NULL)\n\nExtension: VK_EXT_global_priority\n\nArguments:\n\nglobal_priority::QueueGlobalPriorityEXT\nnext: defaults to C_NULL\n\nAPI documentation\n\nDeviceQueueGlobalPriorityCreateInfoEXT(global_priority::QueueGlobalPriorityEXT; next) -> DeviceQueueGlobalPriorityCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DeviceQueueInfo2","page":"API","title":"Vulkan.DeviceQueueInfo2","text":"High-level wrapper for VkDeviceQueueInfo2.\n\nAPI documentation\n\nstruct DeviceQueueInfo2 <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::DeviceQueueCreateFlag\nqueue_family_index::UInt32\nqueue_index::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DeviceQueueInfo2-Tuple{Integer, Integer}","page":"API","title":"Vulkan.DeviceQueueInfo2","text":"DeviceQueueInfo2(queue_family_index::Integer, queue_index::Integer; next = C_NULL, flags = 0)\n\nArguments:\n\nqueue_family_index::Integer\nqueue_index::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nDeviceQueueInfo2(queue_family_index::Integer, queue_index::Integer; next, flags) -> DeviceQueueInfo2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DispatchIndirectCommand","page":"API","title":"Vulkan.DispatchIndirectCommand","text":"High-level wrapper for VkDispatchIndirectCommand.\n\nAPI documentation\n\nstruct DispatchIndirectCommand <: Vulkan.HighLevelStruct\n\nx::UInt32\ny::UInt32\nz::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DisplayEventInfoEXT","page":"API","title":"Vulkan.DisplayEventInfoEXT","text":"High-level wrapper for VkDisplayEventInfoEXT.\n\nExtension: VK_EXT_display_control\n\nAPI documentation\n\nstruct DisplayEventInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\ndisplay_event::DisplayEventTypeEXT\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DisplayEventInfoEXT-Tuple{DisplayEventTypeEXT}","page":"API","title":"Vulkan.DisplayEventInfoEXT","text":"DisplayEventInfoEXT(display_event::DisplayEventTypeEXT; next = C_NULL)\n\nExtension: VK_EXT_display_control\n\nArguments:\n\ndisplay_event::DisplayEventTypeEXT\nnext: defaults to C_NULL\n\nAPI documentation\n\nDisplayEventInfoEXT(display_event::DisplayEventTypeEXT; next) -> DisplayEventInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DisplayModeCreateInfoKHR","page":"API","title":"Vulkan.DisplayModeCreateInfoKHR","text":"High-level wrapper for VkDisplayModeCreateInfoKHR.\n\nExtension: VK_KHR_display\n\nAPI documentation\n\nstruct DisplayModeCreateInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\nparameters::DisplayModeParametersKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DisplayModeCreateInfoKHR-Tuple{DisplayModeParametersKHR}","page":"API","title":"Vulkan.DisplayModeCreateInfoKHR","text":"DisplayModeCreateInfoKHR(parameters::DisplayModeParametersKHR; next = C_NULL, flags = 0)\n\nExtension: VK_KHR_display\n\nArguments:\n\nparameters::DisplayModeParametersKHR\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nDisplayModeCreateInfoKHR(parameters::DisplayModeParametersKHR; next, flags) -> DisplayModeCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DisplayModeKHR-Tuple{Any, Any, _DisplayModeParametersKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.DisplayModeKHR","text":"DisplayModeKHR(physical_device, display, parameters::_DisplayModeParametersKHR, fptr_create::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0)\n\nDisplayModeKHR(physical_device, display, parameters::_DisplayModeParametersKHR, fptr_create::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags) -> DisplayModeKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DisplayModeKHR-Tuple{Any, Any, _DisplayModeParametersKHR}","page":"API","title":"Vulkan.DisplayModeKHR","text":"DisplayModeKHR(physical_device, display, parameters::_DisplayModeParametersKHR; allocator = C_NULL, next = C_NULL, flags = 0)\n\nDisplayModeKHR(physical_device, display, parameters::_DisplayModeParametersKHR; allocator, next, flags) -> DisplayModeKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DisplayModeParametersKHR","page":"API","title":"Vulkan.DisplayModeParametersKHR","text":"High-level wrapper for VkDisplayModeParametersKHR.\n\nExtension: VK_KHR_display\n\nAPI documentation\n\nstruct DisplayModeParametersKHR <: Vulkan.HighLevelStruct\n\nvisible_region::Extent2D\nrefresh_rate::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DisplayModeProperties2KHR","page":"API","title":"Vulkan.DisplayModeProperties2KHR","text":"High-level wrapper for VkDisplayModeProperties2KHR.\n\nExtension: VK_KHR_get_display_properties2\n\nAPI documentation\n\nstruct DisplayModeProperties2KHR <: Vulkan.HighLevelStruct\n\nnext::Any\ndisplay_mode_properties::DisplayModePropertiesKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DisplayModeProperties2KHR-Tuple{DisplayModePropertiesKHR}","page":"API","title":"Vulkan.DisplayModeProperties2KHR","text":"DisplayModeProperties2KHR(display_mode_properties::DisplayModePropertiesKHR; next = C_NULL)\n\nExtension: VK_KHR_get_display_properties2\n\nArguments:\n\ndisplay_mode_properties::DisplayModePropertiesKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\nDisplayModeProperties2KHR(display_mode_properties::DisplayModePropertiesKHR; next) -> DisplayModeProperties2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DisplayModePropertiesKHR","page":"API","title":"Vulkan.DisplayModePropertiesKHR","text":"High-level wrapper for VkDisplayModePropertiesKHR.\n\nExtension: VK_KHR_display\n\nAPI documentation\n\nstruct DisplayModePropertiesKHR <: Vulkan.HighLevelStruct\n\ndisplay_mode::DisplayModeKHR\nparameters::DisplayModeParametersKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DisplayNativeHdrSurfaceCapabilitiesAMD","page":"API","title":"Vulkan.DisplayNativeHdrSurfaceCapabilitiesAMD","text":"High-level wrapper for VkDisplayNativeHdrSurfaceCapabilitiesAMD.\n\nExtension: VK_AMD_display_native_hdr\n\nAPI documentation\n\nstruct DisplayNativeHdrSurfaceCapabilitiesAMD <: Vulkan.HighLevelStruct\n\nnext::Any\nlocal_dimming_support::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DisplayNativeHdrSurfaceCapabilitiesAMD-Tuple{Bool}","page":"API","title":"Vulkan.DisplayNativeHdrSurfaceCapabilitiesAMD","text":"DisplayNativeHdrSurfaceCapabilitiesAMD(local_dimming_support::Bool; next = C_NULL)\n\nExtension: VK_AMD_display_native_hdr\n\nArguments:\n\nlocal_dimming_support::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nDisplayNativeHdrSurfaceCapabilitiesAMD(local_dimming_support::Bool; next) -> DisplayNativeHdrSurfaceCapabilitiesAMD\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DisplayPlaneCapabilities2KHR","page":"API","title":"Vulkan.DisplayPlaneCapabilities2KHR","text":"High-level wrapper for VkDisplayPlaneCapabilities2KHR.\n\nExtension: VK_KHR_get_display_properties2\n\nAPI documentation\n\nstruct DisplayPlaneCapabilities2KHR <: Vulkan.HighLevelStruct\n\nnext::Any\ncapabilities::DisplayPlaneCapabilitiesKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DisplayPlaneCapabilities2KHR-Tuple{DisplayPlaneCapabilitiesKHR}","page":"API","title":"Vulkan.DisplayPlaneCapabilities2KHR","text":"DisplayPlaneCapabilities2KHR(capabilities::DisplayPlaneCapabilitiesKHR; next = C_NULL)\n\nExtension: VK_KHR_get_display_properties2\n\nArguments:\n\ncapabilities::DisplayPlaneCapabilitiesKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\nDisplayPlaneCapabilities2KHR(capabilities::DisplayPlaneCapabilitiesKHR; next) -> DisplayPlaneCapabilities2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DisplayPlaneCapabilitiesKHR","page":"API","title":"Vulkan.DisplayPlaneCapabilitiesKHR","text":"High-level wrapper for VkDisplayPlaneCapabilitiesKHR.\n\nExtension: VK_KHR_display\n\nAPI documentation\n\nstruct DisplayPlaneCapabilitiesKHR <: Vulkan.HighLevelStruct\n\nsupported_alpha::DisplayPlaneAlphaFlagKHR\nmin_src_position::Offset2D\nmax_src_position::Offset2D\nmin_src_extent::Extent2D\nmax_src_extent::Extent2D\nmin_dst_position::Offset2D\nmax_dst_position::Offset2D\nmin_dst_extent::Extent2D\nmax_dst_extent::Extent2D\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DisplayPlaneCapabilitiesKHR-Tuple{Offset2D, Offset2D, Extent2D, Extent2D, Offset2D, Offset2D, Extent2D, Extent2D}","page":"API","title":"Vulkan.DisplayPlaneCapabilitiesKHR","text":"DisplayPlaneCapabilitiesKHR(min_src_position::Offset2D, max_src_position::Offset2D, min_src_extent::Extent2D, max_src_extent::Extent2D, min_dst_position::Offset2D, max_dst_position::Offset2D, min_dst_extent::Extent2D, max_dst_extent::Extent2D; supported_alpha = 0)\n\nExtension: VK_KHR_display\n\nArguments:\n\nmin_src_position::Offset2D\nmax_src_position::Offset2D\nmin_src_extent::Extent2D\nmax_src_extent::Extent2D\nmin_dst_position::Offset2D\nmax_dst_position::Offset2D\nmin_dst_extent::Extent2D\nmax_dst_extent::Extent2D\nsupported_alpha: defaults to 0\n\nAPI documentation\n\nDisplayPlaneCapabilitiesKHR(min_src_position::Offset2D, max_src_position::Offset2D, min_src_extent::Extent2D, max_src_extent::Extent2D, min_dst_position::Offset2D, max_dst_position::Offset2D, min_dst_extent::Extent2D, max_dst_extent::Extent2D; supported_alpha) -> DisplayPlaneCapabilitiesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DisplayPlaneInfo2KHR","page":"API","title":"Vulkan.DisplayPlaneInfo2KHR","text":"High-level wrapper for VkDisplayPlaneInfo2KHR.\n\nExtension: VK_KHR_get_display_properties2\n\nAPI documentation\n\nstruct DisplayPlaneInfo2KHR <: Vulkan.HighLevelStruct\n\nnext::Any\nmode::DisplayModeKHR\nplane_index::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DisplayPlaneInfo2KHR-Tuple{DisplayModeKHR, Integer}","page":"API","title":"Vulkan.DisplayPlaneInfo2KHR","text":"DisplayPlaneInfo2KHR(mode::DisplayModeKHR, plane_index::Integer; next = C_NULL)\n\nExtension: VK_KHR_get_display_properties2\n\nArguments:\n\nmode::DisplayModeKHR (externsync)\nplane_index::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nDisplayPlaneInfo2KHR(mode::DisplayModeKHR, plane_index::Integer; next) -> DisplayPlaneInfo2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DisplayPlaneProperties2KHR","page":"API","title":"Vulkan.DisplayPlaneProperties2KHR","text":"High-level wrapper for VkDisplayPlaneProperties2KHR.\n\nExtension: VK_KHR_get_display_properties2\n\nAPI documentation\n\nstruct DisplayPlaneProperties2KHR <: Vulkan.HighLevelStruct\n\nnext::Any\ndisplay_plane_properties::DisplayPlanePropertiesKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DisplayPlaneProperties2KHR-Tuple{DisplayPlanePropertiesKHR}","page":"API","title":"Vulkan.DisplayPlaneProperties2KHR","text":"DisplayPlaneProperties2KHR(display_plane_properties::DisplayPlanePropertiesKHR; next = C_NULL)\n\nExtension: VK_KHR_get_display_properties2\n\nArguments:\n\ndisplay_plane_properties::DisplayPlanePropertiesKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\nDisplayPlaneProperties2KHR(display_plane_properties::DisplayPlanePropertiesKHR; next) -> DisplayPlaneProperties2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DisplayPlanePropertiesKHR","page":"API","title":"Vulkan.DisplayPlanePropertiesKHR","text":"High-level wrapper for VkDisplayPlanePropertiesKHR.\n\nExtension: VK_KHR_display\n\nAPI documentation\n\nstruct DisplayPlanePropertiesKHR <: Vulkan.HighLevelStruct\n\ncurrent_display::DisplayKHR\ncurrent_stack_index::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DisplayPowerInfoEXT","page":"API","title":"Vulkan.DisplayPowerInfoEXT","text":"High-level wrapper for VkDisplayPowerInfoEXT.\n\nExtension: VK_EXT_display_control\n\nAPI documentation\n\nstruct DisplayPowerInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\npower_state::DisplayPowerStateEXT\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DisplayPowerInfoEXT-Tuple{DisplayPowerStateEXT}","page":"API","title":"Vulkan.DisplayPowerInfoEXT","text":"DisplayPowerInfoEXT(power_state::DisplayPowerStateEXT; next = C_NULL)\n\nExtension: VK_EXT_display_control\n\nArguments:\n\npower_state::DisplayPowerStateEXT\nnext: defaults to C_NULL\n\nAPI documentation\n\nDisplayPowerInfoEXT(power_state::DisplayPowerStateEXT; next) -> DisplayPowerInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DisplayPresentInfoKHR","page":"API","title":"Vulkan.DisplayPresentInfoKHR","text":"High-level wrapper for VkDisplayPresentInfoKHR.\n\nExtension: VK_KHR_display_swapchain\n\nAPI documentation\n\nstruct DisplayPresentInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nsrc_rect::Rect2D\ndst_rect::Rect2D\npersistent::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DisplayPresentInfoKHR-Tuple{Rect2D, Rect2D, Bool}","page":"API","title":"Vulkan.DisplayPresentInfoKHR","text":"DisplayPresentInfoKHR(src_rect::Rect2D, dst_rect::Rect2D, persistent::Bool; next = C_NULL)\n\nExtension: VK_KHR_display_swapchain\n\nArguments:\n\nsrc_rect::Rect2D\ndst_rect::Rect2D\npersistent::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nDisplayPresentInfoKHR(src_rect::Rect2D, dst_rect::Rect2D, persistent::Bool; next) -> DisplayPresentInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DisplayProperties2KHR","page":"API","title":"Vulkan.DisplayProperties2KHR","text":"High-level wrapper for VkDisplayProperties2KHR.\n\nExtension: VK_KHR_get_display_properties2\n\nAPI documentation\n\nstruct DisplayProperties2KHR <: Vulkan.HighLevelStruct\n\nnext::Any\ndisplay_properties::DisplayPropertiesKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DisplayProperties2KHR-Tuple{DisplayPropertiesKHR}","page":"API","title":"Vulkan.DisplayProperties2KHR","text":"DisplayProperties2KHR(display_properties::DisplayPropertiesKHR; next = C_NULL)\n\nExtension: VK_KHR_get_display_properties2\n\nArguments:\n\ndisplay_properties::DisplayPropertiesKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\nDisplayProperties2KHR(display_properties::DisplayPropertiesKHR; next) -> DisplayProperties2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DisplayPropertiesKHR","page":"API","title":"Vulkan.DisplayPropertiesKHR","text":"High-level wrapper for VkDisplayPropertiesKHR.\n\nExtension: VK_KHR_display\n\nAPI documentation\n\nstruct DisplayPropertiesKHR <: Vulkan.HighLevelStruct\n\ndisplay::DisplayKHR\ndisplay_name::String\nphysical_dimensions::Extent2D\nphysical_resolution::Extent2D\nsupported_transforms::SurfaceTransformFlagKHR\nplane_reorder_possible::Bool\npersistent_content::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DisplayPropertiesKHR-Tuple{DisplayKHR, AbstractString, Extent2D, Extent2D, Bool, Bool}","page":"API","title":"Vulkan.DisplayPropertiesKHR","text":"DisplayPropertiesKHR(display::DisplayKHR, display_name::AbstractString, physical_dimensions::Extent2D, physical_resolution::Extent2D, plane_reorder_possible::Bool, persistent_content::Bool; supported_transforms = 0)\n\nExtension: VK_KHR_display\n\nArguments:\n\ndisplay::DisplayKHR\ndisplay_name::AbstractString\nphysical_dimensions::Extent2D\nphysical_resolution::Extent2D\nplane_reorder_possible::Bool\npersistent_content::Bool\nsupported_transforms: defaults to 0\n\nAPI documentation\n\nDisplayPropertiesKHR(display::DisplayKHR, display_name::AbstractString, physical_dimensions::Extent2D, physical_resolution::Extent2D, plane_reorder_possible::Bool, persistent_content::Bool; supported_transforms) -> DisplayPropertiesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DisplaySurfaceCreateInfoKHR","page":"API","title":"Vulkan.DisplaySurfaceCreateInfoKHR","text":"High-level wrapper for VkDisplaySurfaceCreateInfoKHR.\n\nExtension: VK_KHR_display\n\nAPI documentation\n\nstruct DisplaySurfaceCreateInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\ndisplay_mode::DisplayModeKHR\nplane_index::UInt32\nplane_stack_index::UInt32\ntransform::SurfaceTransformFlagKHR\nglobal_alpha::Float32\nalpha_mode::DisplayPlaneAlphaFlagKHR\nimage_extent::Extent2D\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DisplaySurfaceCreateInfoKHR-Tuple{DisplayModeKHR, Integer, Integer, SurfaceTransformFlagKHR, Real, DisplayPlaneAlphaFlagKHR, Extent2D}","page":"API","title":"Vulkan.DisplaySurfaceCreateInfoKHR","text":"DisplaySurfaceCreateInfoKHR(display_mode::DisplayModeKHR, plane_index::Integer, plane_stack_index::Integer, transform::SurfaceTransformFlagKHR, global_alpha::Real, alpha_mode::DisplayPlaneAlphaFlagKHR, image_extent::Extent2D; next = C_NULL, flags = 0)\n\nExtension: VK_KHR_display\n\nArguments:\n\ndisplay_mode::DisplayModeKHR\nplane_index::Integer\nplane_stack_index::Integer\ntransform::SurfaceTransformFlagKHR\nglobal_alpha::Real\nalpha_mode::DisplayPlaneAlphaFlagKHR\nimage_extent::Extent2D\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nDisplaySurfaceCreateInfoKHR(display_mode::DisplayModeKHR, plane_index::Integer, plane_stack_index::Integer, transform::SurfaceTransformFlagKHR, global_alpha::Real, alpha_mode::DisplayPlaneAlphaFlagKHR, image_extent::Extent2D; next, flags) -> DisplaySurfaceCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DrawIndexedIndirectCommand","page":"API","title":"Vulkan.DrawIndexedIndirectCommand","text":"High-level wrapper for VkDrawIndexedIndirectCommand.\n\nAPI documentation\n\nstruct DrawIndexedIndirectCommand <: Vulkan.HighLevelStruct\n\nindex_count::UInt32\ninstance_count::UInt32\nfirst_index::UInt32\nvertex_offset::Int32\nfirst_instance::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DrawIndirectCommand","page":"API","title":"Vulkan.DrawIndirectCommand","text":"High-level wrapper for VkDrawIndirectCommand.\n\nAPI documentation\n\nstruct DrawIndirectCommand <: Vulkan.HighLevelStruct\n\nvertex_count::UInt32\ninstance_count::UInt32\nfirst_vertex::UInt32\nfirst_instance::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DrawMeshTasksIndirectCommandNV","page":"API","title":"Vulkan.DrawMeshTasksIndirectCommandNV","text":"High-level wrapper for VkDrawMeshTasksIndirectCommandNV.\n\nExtension: VK_NV_mesh_shader\n\nAPI documentation\n\nstruct DrawMeshTasksIndirectCommandNV <: Vulkan.HighLevelStruct\n\ntask_count::UInt32\nfirst_task::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DrmFormatModifierPropertiesEXT","page":"API","title":"Vulkan.DrmFormatModifierPropertiesEXT","text":"High-level wrapper for VkDrmFormatModifierPropertiesEXT.\n\nExtension: VK_EXT_image_drm_format_modifier\n\nAPI documentation\n\nstruct DrmFormatModifierPropertiesEXT <: Vulkan.HighLevelStruct\n\ndrm_format_modifier::UInt64\ndrm_format_modifier_plane_count::UInt32\ndrm_format_modifier_tiling_features::FormatFeatureFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DrmFormatModifierPropertiesListEXT","page":"API","title":"Vulkan.DrmFormatModifierPropertiesListEXT","text":"High-level wrapper for VkDrmFormatModifierPropertiesListEXT.\n\nExtension: VK_EXT_image_drm_format_modifier\n\nAPI documentation\n\nstruct DrmFormatModifierPropertiesListEXT <: Vulkan.HighLevelStruct\n\nnext::Any\ndrm_format_modifier_properties::Union{Ptr{Nothing}, Vector{DrmFormatModifierPropertiesEXT}}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.DrmFormatModifierPropertiesListEXT-Tuple{}","page":"API","title":"Vulkan.DrmFormatModifierPropertiesListEXT","text":"DrmFormatModifierPropertiesListEXT(; next = C_NULL, drm_format_modifier_properties = C_NULL)\n\nExtension: VK_EXT_image_drm_format_modifier\n\nArguments:\n\nnext: defaults to C_NULL\ndrm_format_modifier_properties: defaults to C_NULL\n\nAPI documentation\n\nDrmFormatModifierPropertiesListEXT(; next, drm_format_modifier_properties) -> DrmFormatModifierPropertiesListEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.Event-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.Event","text":"Event(device, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0)\n\nEvent(device, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags) -> Event\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.Event-Tuple{Any}","page":"API","title":"Vulkan.Event","text":"Event(device; allocator = C_NULL, next = C_NULL, flags = 0)\n\nEvent(device; allocator, next, flags) -> Event\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.EventCreateInfo","page":"API","title":"Vulkan.EventCreateInfo","text":"High-level wrapper for VkEventCreateInfo.\n\nAPI documentation\n\nstruct EventCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::EventCreateFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.EventCreateInfo-Tuple{}","page":"API","title":"Vulkan.EventCreateInfo","text":"EventCreateInfo(; next = C_NULL, flags = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nEventCreateInfo(; next, flags) -> EventCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ExportFenceCreateInfo","page":"API","title":"Vulkan.ExportFenceCreateInfo","text":"High-level wrapper for VkExportFenceCreateInfo.\n\nAPI documentation\n\nstruct ExportFenceCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nhandle_types::ExternalFenceHandleTypeFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ExportFenceCreateInfo-Tuple{}","page":"API","title":"Vulkan.ExportFenceCreateInfo","text":"ExportFenceCreateInfo(; next = C_NULL, handle_types = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nhandle_types: defaults to 0\n\nAPI documentation\n\nExportFenceCreateInfo(; next, handle_types) -> ExportFenceCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ExportMemoryAllocateInfo","page":"API","title":"Vulkan.ExportMemoryAllocateInfo","text":"High-level wrapper for VkExportMemoryAllocateInfo.\n\nAPI documentation\n\nstruct ExportMemoryAllocateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nhandle_types::ExternalMemoryHandleTypeFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ExportMemoryAllocateInfo-Tuple{}","page":"API","title":"Vulkan.ExportMemoryAllocateInfo","text":"ExportMemoryAllocateInfo(; next = C_NULL, handle_types = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nhandle_types: defaults to 0\n\nAPI documentation\n\nExportMemoryAllocateInfo(; next, handle_types) -> ExportMemoryAllocateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ExportMemoryAllocateInfoNV","page":"API","title":"Vulkan.ExportMemoryAllocateInfoNV","text":"High-level wrapper for VkExportMemoryAllocateInfoNV.\n\nExtension: VK_NV_external_memory\n\nAPI documentation\n\nstruct ExportMemoryAllocateInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\nhandle_types::ExternalMemoryHandleTypeFlagNV\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ExportMemoryAllocateInfoNV-Tuple{}","page":"API","title":"Vulkan.ExportMemoryAllocateInfoNV","text":"ExportMemoryAllocateInfoNV(; next = C_NULL, handle_types = 0)\n\nExtension: VK_NV_external_memory\n\nArguments:\n\nnext: defaults to C_NULL\nhandle_types: defaults to 0\n\nAPI documentation\n\nExportMemoryAllocateInfoNV(; next, handle_types) -> ExportMemoryAllocateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ExportSemaphoreCreateInfo","page":"API","title":"Vulkan.ExportSemaphoreCreateInfo","text":"High-level wrapper for VkExportSemaphoreCreateInfo.\n\nAPI documentation\n\nstruct ExportSemaphoreCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nhandle_types::ExternalSemaphoreHandleTypeFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ExportSemaphoreCreateInfo-Tuple{}","page":"API","title":"Vulkan.ExportSemaphoreCreateInfo","text":"ExportSemaphoreCreateInfo(; next = C_NULL, handle_types = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nhandle_types: defaults to 0\n\nAPI documentation\n\nExportSemaphoreCreateInfo(; next, handle_types) -> ExportSemaphoreCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ExtensionProperties","page":"API","title":"Vulkan.ExtensionProperties","text":"High-level wrapper for VkExtensionProperties.\n\nAPI documentation\n\nstruct ExtensionProperties <: Vulkan.HighLevelStruct\n\nextension_name::String\nspec_version::VersionNumber\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.Extent2D","page":"API","title":"Vulkan.Extent2D","text":"High-level wrapper for VkExtent2D.\n\nAPI documentation\n\nstruct Extent2D <: Vulkan.HighLevelStruct\n\nwidth::UInt32\nheight::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.Extent3D","page":"API","title":"Vulkan.Extent3D","text":"High-level wrapper for VkExtent3D.\n\nAPI documentation\n\nstruct Extent3D <: Vulkan.HighLevelStruct\n\nwidth::UInt32\nheight::UInt32\ndepth::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ExternalBufferProperties","page":"API","title":"Vulkan.ExternalBufferProperties","text":"High-level wrapper for VkExternalBufferProperties.\n\nAPI documentation\n\nstruct ExternalBufferProperties <: Vulkan.HighLevelStruct\n\nnext::Any\nexternal_memory_properties::ExternalMemoryProperties\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ExternalBufferProperties-Tuple{ExternalMemoryProperties}","page":"API","title":"Vulkan.ExternalBufferProperties","text":"ExternalBufferProperties(external_memory_properties::ExternalMemoryProperties; next = C_NULL)\n\nArguments:\n\nexternal_memory_properties::ExternalMemoryProperties\nnext: defaults to C_NULL\n\nAPI documentation\n\nExternalBufferProperties(external_memory_properties::ExternalMemoryProperties; next) -> ExternalBufferProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ExternalFenceProperties","page":"API","title":"Vulkan.ExternalFenceProperties","text":"High-level wrapper for VkExternalFenceProperties.\n\nAPI documentation\n\nstruct ExternalFenceProperties <: Vulkan.HighLevelStruct\n\nnext::Any\nexport_from_imported_handle_types::ExternalFenceHandleTypeFlag\ncompatible_handle_types::ExternalFenceHandleTypeFlag\nexternal_fence_features::ExternalFenceFeatureFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ExternalFenceProperties-Tuple{ExternalFenceHandleTypeFlag, ExternalFenceHandleTypeFlag}","page":"API","title":"Vulkan.ExternalFenceProperties","text":"ExternalFenceProperties(export_from_imported_handle_types::ExternalFenceHandleTypeFlag, compatible_handle_types::ExternalFenceHandleTypeFlag; next = C_NULL, external_fence_features = 0)\n\nArguments:\n\nexport_from_imported_handle_types::ExternalFenceHandleTypeFlag\ncompatible_handle_types::ExternalFenceHandleTypeFlag\nnext: defaults to C_NULL\nexternal_fence_features: defaults to 0\n\nAPI documentation\n\nExternalFenceProperties(export_from_imported_handle_types::ExternalFenceHandleTypeFlag, compatible_handle_types::ExternalFenceHandleTypeFlag; next, external_fence_features) -> ExternalFenceProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ExternalImageFormatProperties","page":"API","title":"Vulkan.ExternalImageFormatProperties","text":"High-level wrapper for VkExternalImageFormatProperties.\n\nAPI documentation\n\nstruct ExternalImageFormatProperties <: Vulkan.HighLevelStruct\n\nnext::Any\nexternal_memory_properties::ExternalMemoryProperties\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ExternalImageFormatProperties-Tuple{ExternalMemoryProperties}","page":"API","title":"Vulkan.ExternalImageFormatProperties","text":"ExternalImageFormatProperties(external_memory_properties::ExternalMemoryProperties; next = C_NULL)\n\nArguments:\n\nexternal_memory_properties::ExternalMemoryProperties\nnext: defaults to C_NULL\n\nAPI documentation\n\nExternalImageFormatProperties(external_memory_properties::ExternalMemoryProperties; next) -> ExternalImageFormatProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ExternalImageFormatPropertiesNV","page":"API","title":"Vulkan.ExternalImageFormatPropertiesNV","text":"High-level wrapper for VkExternalImageFormatPropertiesNV.\n\nExtension: VK_NV_external_memory_capabilities\n\nAPI documentation\n\nstruct ExternalImageFormatPropertiesNV <: Vulkan.HighLevelStruct\n\nimage_format_properties::ImageFormatProperties\nexternal_memory_features::ExternalMemoryFeatureFlagNV\nexport_from_imported_handle_types::ExternalMemoryHandleTypeFlagNV\ncompatible_handle_types::ExternalMemoryHandleTypeFlagNV\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ExternalImageFormatPropertiesNV-Tuple{ImageFormatProperties}","page":"API","title":"Vulkan.ExternalImageFormatPropertiesNV","text":"ExternalImageFormatPropertiesNV(image_format_properties::ImageFormatProperties; external_memory_features = 0, export_from_imported_handle_types = 0, compatible_handle_types = 0)\n\nExtension: VK_NV_external_memory_capabilities\n\nArguments:\n\nimage_format_properties::ImageFormatProperties\nexternal_memory_features: defaults to 0\nexport_from_imported_handle_types: defaults to 0\ncompatible_handle_types: defaults to 0\n\nAPI documentation\n\nExternalImageFormatPropertiesNV(image_format_properties::ImageFormatProperties; external_memory_features, export_from_imported_handle_types, compatible_handle_types) -> ExternalImageFormatPropertiesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ExternalMemoryBufferCreateInfo","page":"API","title":"Vulkan.ExternalMemoryBufferCreateInfo","text":"High-level wrapper for VkExternalMemoryBufferCreateInfo.\n\nAPI documentation\n\nstruct ExternalMemoryBufferCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nhandle_types::ExternalMemoryHandleTypeFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ExternalMemoryBufferCreateInfo-Tuple{}","page":"API","title":"Vulkan.ExternalMemoryBufferCreateInfo","text":"ExternalMemoryBufferCreateInfo(; next = C_NULL, handle_types = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nhandle_types: defaults to 0\n\nAPI documentation\n\nExternalMemoryBufferCreateInfo(; next, handle_types) -> ExternalMemoryBufferCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ExternalMemoryImageCreateInfo","page":"API","title":"Vulkan.ExternalMemoryImageCreateInfo","text":"High-level wrapper for VkExternalMemoryImageCreateInfo.\n\nAPI documentation\n\nstruct ExternalMemoryImageCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nhandle_types::ExternalMemoryHandleTypeFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ExternalMemoryImageCreateInfo-Tuple{}","page":"API","title":"Vulkan.ExternalMemoryImageCreateInfo","text":"ExternalMemoryImageCreateInfo(; next = C_NULL, handle_types = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nhandle_types: defaults to 0\n\nAPI documentation\n\nExternalMemoryImageCreateInfo(; next, handle_types) -> ExternalMemoryImageCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ExternalMemoryImageCreateInfoNV","page":"API","title":"Vulkan.ExternalMemoryImageCreateInfoNV","text":"High-level wrapper for VkExternalMemoryImageCreateInfoNV.\n\nExtension: VK_NV_external_memory\n\nAPI documentation\n\nstruct ExternalMemoryImageCreateInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\nhandle_types::ExternalMemoryHandleTypeFlagNV\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ExternalMemoryImageCreateInfoNV-Tuple{}","page":"API","title":"Vulkan.ExternalMemoryImageCreateInfoNV","text":"ExternalMemoryImageCreateInfoNV(; next = C_NULL, handle_types = 0)\n\nExtension: VK_NV_external_memory\n\nArguments:\n\nnext: defaults to C_NULL\nhandle_types: defaults to 0\n\nAPI documentation\n\nExternalMemoryImageCreateInfoNV(; next, handle_types) -> ExternalMemoryImageCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ExternalMemoryProperties","page":"API","title":"Vulkan.ExternalMemoryProperties","text":"High-level wrapper for VkExternalMemoryProperties.\n\nAPI documentation\n\nstruct ExternalMemoryProperties <: Vulkan.HighLevelStruct\n\nexternal_memory_features::ExternalMemoryFeatureFlag\nexport_from_imported_handle_types::ExternalMemoryHandleTypeFlag\ncompatible_handle_types::ExternalMemoryHandleTypeFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ExternalMemoryProperties-Tuple{ExternalMemoryFeatureFlag, ExternalMemoryHandleTypeFlag}","page":"API","title":"Vulkan.ExternalMemoryProperties","text":"ExternalMemoryProperties(external_memory_features::ExternalMemoryFeatureFlag, compatible_handle_types::ExternalMemoryHandleTypeFlag; export_from_imported_handle_types = 0)\n\nArguments:\n\nexternal_memory_features::ExternalMemoryFeatureFlag\ncompatible_handle_types::ExternalMemoryHandleTypeFlag\nexport_from_imported_handle_types: defaults to 0\n\nAPI documentation\n\nExternalMemoryProperties(external_memory_features::ExternalMemoryFeatureFlag, compatible_handle_types::ExternalMemoryHandleTypeFlag; export_from_imported_handle_types) -> ExternalMemoryProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ExternalSemaphoreProperties","page":"API","title":"Vulkan.ExternalSemaphoreProperties","text":"High-level wrapper for VkExternalSemaphoreProperties.\n\nAPI documentation\n\nstruct ExternalSemaphoreProperties <: Vulkan.HighLevelStruct\n\nnext::Any\nexport_from_imported_handle_types::ExternalSemaphoreHandleTypeFlag\ncompatible_handle_types::ExternalSemaphoreHandleTypeFlag\nexternal_semaphore_features::ExternalSemaphoreFeatureFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ExternalSemaphoreProperties-Tuple{ExternalSemaphoreHandleTypeFlag, ExternalSemaphoreHandleTypeFlag}","page":"API","title":"Vulkan.ExternalSemaphoreProperties","text":"ExternalSemaphoreProperties(export_from_imported_handle_types::ExternalSemaphoreHandleTypeFlag, compatible_handle_types::ExternalSemaphoreHandleTypeFlag; next = C_NULL, external_semaphore_features = 0)\n\nArguments:\n\nexport_from_imported_handle_types::ExternalSemaphoreHandleTypeFlag\ncompatible_handle_types::ExternalSemaphoreHandleTypeFlag\nnext: defaults to C_NULL\nexternal_semaphore_features: defaults to 0\n\nAPI documentation\n\nExternalSemaphoreProperties(export_from_imported_handle_types::ExternalSemaphoreHandleTypeFlag, compatible_handle_types::ExternalSemaphoreHandleTypeFlag; next, external_semaphore_features) -> ExternalSemaphoreProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.Fence-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.Fence","text":"Fence(device, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0)\n\nFence(device, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags) -> Fence\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.Fence-Tuple{Any}","page":"API","title":"Vulkan.Fence","text":"Fence(device; allocator = C_NULL, next = C_NULL, flags = 0)\n\nFence(device; allocator, next, flags) -> Fence\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.FenceCreateInfo","page":"API","title":"Vulkan.FenceCreateInfo","text":"High-level wrapper for VkFenceCreateInfo.\n\nAPI documentation\n\nstruct FenceCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::FenceCreateFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.FenceCreateInfo-Tuple{}","page":"API","title":"Vulkan.FenceCreateInfo","text":"FenceCreateInfo(; next = C_NULL, flags = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nFenceCreateInfo(; next, flags) -> FenceCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.FenceGetFdInfoKHR","page":"API","title":"Vulkan.FenceGetFdInfoKHR","text":"High-level wrapper for VkFenceGetFdInfoKHR.\n\nExtension: VK_KHR_external_fence_fd\n\nAPI documentation\n\nstruct FenceGetFdInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nfence::Fence\nhandle_type::ExternalFenceHandleTypeFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.FenceGetFdInfoKHR-Tuple{Fence, ExternalFenceHandleTypeFlag}","page":"API","title":"Vulkan.FenceGetFdInfoKHR","text":"FenceGetFdInfoKHR(fence::Fence, handle_type::ExternalFenceHandleTypeFlag; next = C_NULL)\n\nExtension: VK_KHR_external_fence_fd\n\nArguments:\n\nfence::Fence\nhandle_type::ExternalFenceHandleTypeFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\nFenceGetFdInfoKHR(fence::Fence, handle_type::ExternalFenceHandleTypeFlag; next) -> FenceGetFdInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.FilterCubicImageViewImageFormatPropertiesEXT","page":"API","title":"Vulkan.FilterCubicImageViewImageFormatPropertiesEXT","text":"High-level wrapper for VkFilterCubicImageViewImageFormatPropertiesEXT.\n\nExtension: VK_EXT_filter_cubic\n\nAPI documentation\n\nstruct FilterCubicImageViewImageFormatPropertiesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nfilter_cubic::Bool\nfilter_cubic_minmax::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.FilterCubicImageViewImageFormatPropertiesEXT-Tuple{Bool, Bool}","page":"API","title":"Vulkan.FilterCubicImageViewImageFormatPropertiesEXT","text":"FilterCubicImageViewImageFormatPropertiesEXT(filter_cubic::Bool, filter_cubic_minmax::Bool; next = C_NULL)\n\nExtension: VK_EXT_filter_cubic\n\nArguments:\n\nfilter_cubic::Bool\nfilter_cubic_minmax::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nFilterCubicImageViewImageFormatPropertiesEXT(filter_cubic::Bool, filter_cubic_minmax::Bool; next) -> FilterCubicImageViewImageFormatPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.FormatProperties","page":"API","title":"Vulkan.FormatProperties","text":"High-level wrapper for VkFormatProperties.\n\nAPI documentation\n\nstruct FormatProperties <: Vulkan.HighLevelStruct\n\nlinear_tiling_features::FormatFeatureFlag\noptimal_tiling_features::FormatFeatureFlag\nbuffer_features::FormatFeatureFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.FormatProperties-Tuple{}","page":"API","title":"Vulkan.FormatProperties","text":"FormatProperties(; linear_tiling_features = 0, optimal_tiling_features = 0, buffer_features = 0)\n\nArguments:\n\nlinear_tiling_features: defaults to 0\noptimal_tiling_features: defaults to 0\nbuffer_features: defaults to 0\n\nAPI documentation\n\nFormatProperties(; linear_tiling_features, optimal_tiling_features, buffer_features) -> FormatProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.FormatProperties2","page":"API","title":"Vulkan.FormatProperties2","text":"High-level wrapper for VkFormatProperties2.\n\nAPI documentation\n\nstruct FormatProperties2 <: Vulkan.HighLevelStruct\n\nnext::Any\nformat_properties::FormatProperties\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.FormatProperties2-Tuple{FormatProperties}","page":"API","title":"Vulkan.FormatProperties2","text":"FormatProperties2(format_properties::FormatProperties; next = C_NULL)\n\nArguments:\n\nformat_properties::FormatProperties\nnext: defaults to C_NULL\n\nAPI documentation\n\nFormatProperties2(format_properties::FormatProperties; next) -> FormatProperties2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.FragmentShadingRateAttachmentInfoKHR","page":"API","title":"Vulkan.FragmentShadingRateAttachmentInfoKHR","text":"High-level wrapper for VkFragmentShadingRateAttachmentInfoKHR.\n\nExtension: VK_KHR_fragment_shading_rate\n\nAPI documentation\n\nstruct FragmentShadingRateAttachmentInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nfragment_shading_rate_attachment::AttachmentReference2\nshading_rate_attachment_texel_size::Extent2D\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.FragmentShadingRateAttachmentInfoKHR-Tuple{AttachmentReference2, Extent2D}","page":"API","title":"Vulkan.FragmentShadingRateAttachmentInfoKHR","text":"FragmentShadingRateAttachmentInfoKHR(fragment_shading_rate_attachment::AttachmentReference2, shading_rate_attachment_texel_size::Extent2D; next = C_NULL)\n\nExtension: VK_KHR_fragment_shading_rate\n\nArguments:\n\nfragment_shading_rate_attachment::AttachmentReference2\nshading_rate_attachment_texel_size::Extent2D\nnext: defaults to C_NULL\n\nAPI documentation\n\nFragmentShadingRateAttachmentInfoKHR(fragment_shading_rate_attachment::AttachmentReference2, shading_rate_attachment_texel_size::Extent2D; next) -> FragmentShadingRateAttachmentInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.Framebuffer-Tuple{Any, Any, AbstractArray, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.Framebuffer","text":"Framebuffer(device, render_pass, attachments::AbstractArray{ImageView}, width::Integer, height::Integer, layers::Integer, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0)\n\nFramebuffer(device, render_pass, attachments::AbstractArray, width::Integer, height::Integer, layers::Integer, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags) -> Framebuffer\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.Framebuffer-Tuple{Any, Any, AbstractArray, Integer, Integer, Integer}","page":"API","title":"Vulkan.Framebuffer","text":"Framebuffer(device, render_pass, attachments::AbstractArray{ImageView}, width::Integer, height::Integer, layers::Integer; allocator = C_NULL, next = C_NULL, flags = 0)\n\nFramebuffer(device, render_pass, attachments::AbstractArray, width::Integer, height::Integer, layers::Integer; allocator, next, flags) -> Framebuffer\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.FramebufferAttachmentImageInfo","page":"API","title":"Vulkan.FramebufferAttachmentImageInfo","text":"High-level wrapper for VkFramebufferAttachmentImageInfo.\n\nAPI documentation\n\nstruct FramebufferAttachmentImageInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::ImageCreateFlag\nusage::ImageUsageFlag\nwidth::UInt32\nheight::UInt32\nlayer_count::UInt32\nview_formats::Vector{Format}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.FramebufferAttachmentImageInfo-Tuple{ImageUsageFlag, Integer, Integer, Integer, AbstractArray}","page":"API","title":"Vulkan.FramebufferAttachmentImageInfo","text":"FramebufferAttachmentImageInfo(usage::ImageUsageFlag, width::Integer, height::Integer, layer_count::Integer, view_formats::AbstractArray{Format}; next = C_NULL, flags = 0)\n\nArguments:\n\nusage::ImageUsageFlag\nwidth::Integer\nheight::Integer\nlayer_count::Integer\nview_formats::AbstractArray{Format}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nFramebufferAttachmentImageInfo(usage::ImageUsageFlag, width::Integer, height::Integer, layer_count::Integer, view_formats::AbstractArray; next, flags) -> FramebufferAttachmentImageInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.FramebufferAttachmentsCreateInfo","page":"API","title":"Vulkan.FramebufferAttachmentsCreateInfo","text":"High-level wrapper for VkFramebufferAttachmentsCreateInfo.\n\nAPI documentation\n\nstruct FramebufferAttachmentsCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nattachment_image_infos::Vector{FramebufferAttachmentImageInfo}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.FramebufferAttachmentsCreateInfo-Tuple{AbstractArray}","page":"API","title":"Vulkan.FramebufferAttachmentsCreateInfo","text":"FramebufferAttachmentsCreateInfo(attachment_image_infos::AbstractArray{FramebufferAttachmentImageInfo}; next = C_NULL)\n\nArguments:\n\nattachment_image_infos::AbstractArray{FramebufferAttachmentImageInfo}\nnext: defaults to C_NULL\n\nAPI documentation\n\nFramebufferAttachmentsCreateInfo(attachment_image_infos::AbstractArray; next) -> FramebufferAttachmentsCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.FramebufferCreateInfo","page":"API","title":"Vulkan.FramebufferCreateInfo","text":"High-level wrapper for VkFramebufferCreateInfo.\n\nAPI documentation\n\nstruct FramebufferCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::FramebufferCreateFlag\nrender_pass::RenderPass\nattachments::Vector{ImageView}\nwidth::UInt32\nheight::UInt32\nlayers::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.FramebufferCreateInfo-Tuple{RenderPass, AbstractArray, Integer, Integer, Integer}","page":"API","title":"Vulkan.FramebufferCreateInfo","text":"FramebufferCreateInfo(render_pass::RenderPass, attachments::AbstractArray{ImageView}, width::Integer, height::Integer, layers::Integer; next = C_NULL, flags = 0)\n\nArguments:\n\nrender_pass::RenderPass\nattachments::AbstractArray{ImageView}\nwidth::Integer\nheight::Integer\nlayers::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nFramebufferCreateInfo(render_pass::RenderPass, attachments::AbstractArray, width::Integer, height::Integer, layers::Integer; next, flags) -> FramebufferCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.FramebufferMixedSamplesCombinationNV","page":"API","title":"Vulkan.FramebufferMixedSamplesCombinationNV","text":"High-level wrapper for VkFramebufferMixedSamplesCombinationNV.\n\nExtension: VK_NV_coverage_reduction_mode\n\nAPI documentation\n\nstruct FramebufferMixedSamplesCombinationNV <: Vulkan.HighLevelStruct\n\nnext::Any\ncoverage_reduction_mode::CoverageReductionModeNV\nrasterization_samples::SampleCountFlag\ndepth_stencil_samples::SampleCountFlag\ncolor_samples::SampleCountFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.FramebufferMixedSamplesCombinationNV-Tuple{CoverageReductionModeNV, SampleCountFlag, SampleCountFlag, SampleCountFlag}","page":"API","title":"Vulkan.FramebufferMixedSamplesCombinationNV","text":"FramebufferMixedSamplesCombinationNV(coverage_reduction_mode::CoverageReductionModeNV, rasterization_samples::SampleCountFlag, depth_stencil_samples::SampleCountFlag, color_samples::SampleCountFlag; next = C_NULL)\n\nExtension: VK_NV_coverage_reduction_mode\n\nArguments:\n\ncoverage_reduction_mode::CoverageReductionModeNV\nrasterization_samples::SampleCountFlag\ndepth_stencil_samples::SampleCountFlag\ncolor_samples::SampleCountFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\nFramebufferMixedSamplesCombinationNV(coverage_reduction_mode::CoverageReductionModeNV, rasterization_samples::SampleCountFlag, depth_stencil_samples::SampleCountFlag, color_samples::SampleCountFlag; next) -> FramebufferMixedSamplesCombinationNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.GeneratedCommandsInfoNV","page":"API","title":"Vulkan.GeneratedCommandsInfoNV","text":"High-level wrapper for VkGeneratedCommandsInfoNV.\n\nExtension: VK_NV_device_generated_commands\n\nAPI documentation\n\nstruct GeneratedCommandsInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\npipeline_bind_point::PipelineBindPoint\npipeline::Pipeline\nindirect_commands_layout::IndirectCommandsLayoutNV\nstreams::Vector{IndirectCommandsStreamNV}\nsequences_count::UInt32\npreprocess_buffer::Buffer\npreprocess_offset::UInt64\npreprocess_size::UInt64\nsequences_count_buffer::Union{Ptr{Nothing}, Buffer}\nsequences_count_offset::UInt64\nsequences_index_buffer::Union{Ptr{Nothing}, Buffer}\nsequences_index_offset::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.GeneratedCommandsInfoNV-Tuple{PipelineBindPoint, Pipeline, IndirectCommandsLayoutNV, AbstractArray, Integer, Buffer, Integer, Integer, Integer, Integer}","page":"API","title":"Vulkan.GeneratedCommandsInfoNV","text":"GeneratedCommandsInfoNV(pipeline_bind_point::PipelineBindPoint, pipeline::Pipeline, indirect_commands_layout::IndirectCommandsLayoutNV, streams::AbstractArray{IndirectCommandsStreamNV}, sequences_count::Integer, preprocess_buffer::Buffer, preprocess_offset::Integer, preprocess_size::Integer, sequences_count_offset::Integer, sequences_index_offset::Integer; next = C_NULL, sequences_count_buffer = C_NULL, sequences_index_buffer = C_NULL)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\npipeline_bind_point::PipelineBindPoint\npipeline::Pipeline\nindirect_commands_layout::IndirectCommandsLayoutNV\nstreams::AbstractArray{IndirectCommandsStreamNV}\nsequences_count::Integer\npreprocess_buffer::Buffer\npreprocess_offset::Integer\npreprocess_size::Integer\nsequences_count_offset::Integer\nsequences_index_offset::Integer\nnext: defaults to C_NULL\nsequences_count_buffer: defaults to C_NULL\nsequences_index_buffer: defaults to C_NULL\n\nAPI documentation\n\nGeneratedCommandsInfoNV(pipeline_bind_point::PipelineBindPoint, pipeline::Pipeline, indirect_commands_layout::IndirectCommandsLayoutNV, streams::AbstractArray, sequences_count::Integer, preprocess_buffer::Buffer, preprocess_offset::Integer, preprocess_size::Integer, sequences_count_offset::Integer, sequences_index_offset::Integer; next, sequences_count_buffer, sequences_index_buffer) -> GeneratedCommandsInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.GeneratedCommandsMemoryRequirementsInfoNV","page":"API","title":"Vulkan.GeneratedCommandsMemoryRequirementsInfoNV","text":"High-level wrapper for VkGeneratedCommandsMemoryRequirementsInfoNV.\n\nExtension: VK_NV_device_generated_commands\n\nAPI documentation\n\nstruct GeneratedCommandsMemoryRequirementsInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\npipeline_bind_point::PipelineBindPoint\npipeline::Pipeline\nindirect_commands_layout::IndirectCommandsLayoutNV\nmax_sequences_count::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.GeneratedCommandsMemoryRequirementsInfoNV-Tuple{PipelineBindPoint, Pipeline, IndirectCommandsLayoutNV, Integer}","page":"API","title":"Vulkan.GeneratedCommandsMemoryRequirementsInfoNV","text":"GeneratedCommandsMemoryRequirementsInfoNV(pipeline_bind_point::PipelineBindPoint, pipeline::Pipeline, indirect_commands_layout::IndirectCommandsLayoutNV, max_sequences_count::Integer; next = C_NULL)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\npipeline_bind_point::PipelineBindPoint\npipeline::Pipeline\nindirect_commands_layout::IndirectCommandsLayoutNV\nmax_sequences_count::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nGeneratedCommandsMemoryRequirementsInfoNV(pipeline_bind_point::PipelineBindPoint, pipeline::Pipeline, indirect_commands_layout::IndirectCommandsLayoutNV, max_sequences_count::Integer; next) -> GeneratedCommandsMemoryRequirementsInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.GeometryAABBNV","page":"API","title":"Vulkan.GeometryAABBNV","text":"High-level wrapper for VkGeometryAABBNV.\n\nExtension: VK_NV_ray_tracing\n\nAPI documentation\n\nstruct GeometryAABBNV <: Vulkan.HighLevelStruct\n\nnext::Any\naabb_data::Union{Ptr{Nothing}, Buffer}\nnum_aab_bs::UInt32\nstride::UInt32\noffset::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.GeometryAABBNV-Tuple{Integer, Integer, Integer}","page":"API","title":"Vulkan.GeometryAABBNV","text":"GeometryAABBNV(num_aab_bs::Integer, stride::Integer, offset::Integer; next = C_NULL, aabb_data = C_NULL)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\nnum_aab_bs::Integer\nstride::Integer\noffset::Integer\nnext: defaults to C_NULL\naabb_data: defaults to C_NULL\n\nAPI documentation\n\nGeometryAABBNV(num_aab_bs::Integer, stride::Integer, offset::Integer; next, aabb_data) -> GeometryAABBNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.GeometryDataNV","page":"API","title":"Vulkan.GeometryDataNV","text":"High-level wrapper for VkGeometryDataNV.\n\nExtension: VK_NV_ray_tracing\n\nAPI documentation\n\nstruct GeometryDataNV <: Vulkan.HighLevelStruct\n\ntriangles::GeometryTrianglesNV\naabbs::GeometryAABBNV\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.GeometryNV","page":"API","title":"Vulkan.GeometryNV","text":"High-level wrapper for VkGeometryNV.\n\nExtension: VK_NV_ray_tracing\n\nAPI documentation\n\nstruct GeometryNV <: Vulkan.HighLevelStruct\n\nnext::Any\ngeometry_type::GeometryTypeKHR\ngeometry::GeometryDataNV\nflags::GeometryFlagKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.GeometryNV-Tuple{GeometryTypeKHR, GeometryDataNV}","page":"API","title":"Vulkan.GeometryNV","text":"GeometryNV(geometry_type::GeometryTypeKHR, geometry::GeometryDataNV; next = C_NULL, flags = 0)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ngeometry_type::GeometryTypeKHR\ngeometry::GeometryDataNV\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nGeometryNV(geometry_type::GeometryTypeKHR, geometry::GeometryDataNV; next, flags) -> GeometryNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.GeometryTrianglesNV","page":"API","title":"Vulkan.GeometryTrianglesNV","text":"High-level wrapper for VkGeometryTrianglesNV.\n\nExtension: VK_NV_ray_tracing\n\nAPI documentation\n\nstruct GeometryTrianglesNV <: Vulkan.HighLevelStruct\n\nnext::Any\nvertex_data::Union{Ptr{Nothing}, Buffer}\nvertex_offset::UInt64\nvertex_count::UInt32\nvertex_stride::UInt64\nvertex_format::Format\nindex_data::Union{Ptr{Nothing}, Buffer}\nindex_offset::UInt64\nindex_count::UInt32\nindex_type::IndexType\ntransform_data::Union{Ptr{Nothing}, Buffer}\ntransform_offset::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.GeometryTrianglesNV-Tuple{Integer, Integer, Integer, Format, Integer, Integer, IndexType, Integer}","page":"API","title":"Vulkan.GeometryTrianglesNV","text":"GeometryTrianglesNV(vertex_offset::Integer, vertex_count::Integer, vertex_stride::Integer, vertex_format::Format, index_offset::Integer, index_count::Integer, index_type::IndexType, transform_offset::Integer; next = C_NULL, vertex_data = C_NULL, index_data = C_NULL, transform_data = C_NULL)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\nvertex_offset::Integer\nvertex_count::Integer\nvertex_stride::Integer\nvertex_format::Format\nindex_offset::Integer\nindex_count::Integer\nindex_type::IndexType\ntransform_offset::Integer\nnext: defaults to C_NULL\nvertex_data: defaults to C_NULL\nindex_data: defaults to C_NULL\ntransform_data: defaults to C_NULL\n\nAPI documentation\n\nGeometryTrianglesNV(vertex_offset::Integer, vertex_count::Integer, vertex_stride::Integer, vertex_format::Format, index_offset::Integer, index_count::Integer, index_type::IndexType, transform_offset::Integer; next, vertex_data, index_data, transform_data) -> GeometryTrianglesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.GraphicsPipelineCreateInfo","page":"API","title":"Vulkan.GraphicsPipelineCreateInfo","text":"High-level wrapper for VkGraphicsPipelineCreateInfo.\n\nAPI documentation\n\nstruct GraphicsPipelineCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::PipelineCreateFlag\nstages::Vector{PipelineShaderStageCreateInfo}\nvertex_input_state::Union{Ptr{Nothing}, PipelineVertexInputStateCreateInfo}\ninput_assembly_state::Union{Ptr{Nothing}, PipelineInputAssemblyStateCreateInfo}\ntessellation_state::Union{Ptr{Nothing}, PipelineTessellationStateCreateInfo}\nviewport_state::Union{Ptr{Nothing}, PipelineViewportStateCreateInfo}\nrasterization_state::PipelineRasterizationStateCreateInfo\nmultisample_state::Union{Ptr{Nothing}, PipelineMultisampleStateCreateInfo}\ndepth_stencil_state::Union{Ptr{Nothing}, PipelineDepthStencilStateCreateInfo}\ncolor_blend_state::Union{Ptr{Nothing}, PipelineColorBlendStateCreateInfo}\ndynamic_state::Union{Ptr{Nothing}, PipelineDynamicStateCreateInfo}\nlayout::PipelineLayout\nrender_pass::RenderPass\nsubpass::UInt32\nbase_pipeline_handle::Union{Ptr{Nothing}, Pipeline}\nbase_pipeline_index::Int32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.GraphicsPipelineCreateInfo-Tuple{AbstractArray, PipelineRasterizationStateCreateInfo, PipelineLayout, RenderPass, Integer, Integer}","page":"API","title":"Vulkan.GraphicsPipelineCreateInfo","text":"GraphicsPipelineCreateInfo(stages::AbstractArray{PipelineShaderStageCreateInfo}, rasterization_state::PipelineRasterizationStateCreateInfo, layout::PipelineLayout, render_pass::RenderPass, subpass::Integer, base_pipeline_index::Integer; next = C_NULL, flags = 0, vertex_input_state = C_NULL, input_assembly_state = C_NULL, tessellation_state = C_NULL, viewport_state = C_NULL, multisample_state = C_NULL, depth_stencil_state = C_NULL, color_blend_state = C_NULL, dynamic_state = C_NULL, base_pipeline_handle = C_NULL)\n\nArguments:\n\nstages::AbstractArray{PipelineShaderStageCreateInfo}\nrasterization_state::PipelineRasterizationStateCreateInfo\nlayout::PipelineLayout\nrender_pass::RenderPass\nsubpass::Integer\nbase_pipeline_index::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\nvertex_input_state: defaults to C_NULL\ninput_assembly_state: defaults to C_NULL\ntessellation_state: defaults to C_NULL\nviewport_state: defaults to C_NULL\nmultisample_state: defaults to C_NULL\ndepth_stencil_state: defaults to C_NULL\ncolor_blend_state: defaults to C_NULL\ndynamic_state: defaults to C_NULL\nbase_pipeline_handle: defaults to C_NULL\n\nAPI documentation\n\nGraphicsPipelineCreateInfo(stages::AbstractArray, rasterization_state::PipelineRasterizationStateCreateInfo, layout::PipelineLayout, render_pass::RenderPass, subpass::Integer, base_pipeline_index::Integer; next, flags, vertex_input_state, input_assembly_state, tessellation_state, viewport_state, multisample_state, depth_stencil_state, color_blend_state, dynamic_state, base_pipeline_handle) -> GraphicsPipelineCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.GraphicsPipelineShaderGroupsCreateInfoNV","page":"API","title":"Vulkan.GraphicsPipelineShaderGroupsCreateInfoNV","text":"High-level wrapper for VkGraphicsPipelineShaderGroupsCreateInfoNV.\n\nExtension: VK_NV_device_generated_commands\n\nAPI documentation\n\nstruct GraphicsPipelineShaderGroupsCreateInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\ngroups::Vector{GraphicsShaderGroupCreateInfoNV}\npipelines::Vector{Pipeline}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.GraphicsPipelineShaderGroupsCreateInfoNV-Tuple{AbstractArray, AbstractArray}","page":"API","title":"Vulkan.GraphicsPipelineShaderGroupsCreateInfoNV","text":"GraphicsPipelineShaderGroupsCreateInfoNV(groups::AbstractArray{GraphicsShaderGroupCreateInfoNV}, pipelines::AbstractArray{Pipeline}; next = C_NULL)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ngroups::AbstractArray{GraphicsShaderGroupCreateInfoNV}\npipelines::AbstractArray{Pipeline}\nnext: defaults to C_NULL\n\nAPI documentation\n\nGraphicsPipelineShaderGroupsCreateInfoNV(groups::AbstractArray, pipelines::AbstractArray; next) -> GraphicsPipelineShaderGroupsCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.GraphicsShaderGroupCreateInfoNV","page":"API","title":"Vulkan.GraphicsShaderGroupCreateInfoNV","text":"High-level wrapper for VkGraphicsShaderGroupCreateInfoNV.\n\nExtension: VK_NV_device_generated_commands\n\nAPI documentation\n\nstruct GraphicsShaderGroupCreateInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\nstages::Vector{PipelineShaderStageCreateInfo}\nvertex_input_state::Union{Ptr{Nothing}, PipelineVertexInputStateCreateInfo}\ntessellation_state::Union{Ptr{Nothing}, PipelineTessellationStateCreateInfo}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.GraphicsShaderGroupCreateInfoNV-Tuple{AbstractArray}","page":"API","title":"Vulkan.GraphicsShaderGroupCreateInfoNV","text":"GraphicsShaderGroupCreateInfoNV(stages::AbstractArray{PipelineShaderStageCreateInfo}; next = C_NULL, vertex_input_state = C_NULL, tessellation_state = C_NULL)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\nstages::AbstractArray{PipelineShaderStageCreateInfo}\nnext: defaults to C_NULL\nvertex_input_state: defaults to C_NULL\ntessellation_state: defaults to C_NULL\n\nAPI documentation\n\nGraphicsShaderGroupCreateInfoNV(stages::AbstractArray; next, vertex_input_state, tessellation_state) -> GraphicsShaderGroupCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.Handle","page":"API","title":"Vulkan.Handle","text":"Opaque handle referring to internal Vulkan data. Finalizer registration is taken care of by constructors.\n\nabstract type Handle <: VulkanStruct{false}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.HdrMetadataEXT","page":"API","title":"Vulkan.HdrMetadataEXT","text":"High-level wrapper for VkHdrMetadataEXT.\n\nExtension: VK_EXT_hdr_metadata\n\nAPI documentation\n\nstruct HdrMetadataEXT <: Vulkan.HighLevelStruct\n\nnext::Any\ndisplay_primary_red::XYColorEXT\ndisplay_primary_green::XYColorEXT\ndisplay_primary_blue::XYColorEXT\nwhite_point::XYColorEXT\nmax_luminance::Float32\nmin_luminance::Float32\nmax_content_light_level::Float32\nmax_frame_average_light_level::Float32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.HdrMetadataEXT-Tuple{XYColorEXT, XYColorEXT, XYColorEXT, XYColorEXT, Real, Real, Real, Real}","page":"API","title":"Vulkan.HdrMetadataEXT","text":"HdrMetadataEXT(display_primary_red::XYColorEXT, display_primary_green::XYColorEXT, display_primary_blue::XYColorEXT, white_point::XYColorEXT, max_luminance::Real, min_luminance::Real, max_content_light_level::Real, max_frame_average_light_level::Real; next = C_NULL)\n\nExtension: VK_EXT_hdr_metadata\n\nArguments:\n\ndisplay_primary_red::XYColorEXT\ndisplay_primary_green::XYColorEXT\ndisplay_primary_blue::XYColorEXT\nwhite_point::XYColorEXT\nmax_luminance::Real\nmin_luminance::Real\nmax_content_light_level::Real\nmax_frame_average_light_level::Real\nnext: defaults to C_NULL\n\nAPI documentation\n\nHdrMetadataEXT(display_primary_red::XYColorEXT, display_primary_green::XYColorEXT, display_primary_blue::XYColorEXT, white_point::XYColorEXT, max_luminance::Real, min_luminance::Real, max_content_light_level::Real, max_frame_average_light_level::Real; next) -> HdrMetadataEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.HeadlessSurfaceCreateInfoEXT","page":"API","title":"Vulkan.HeadlessSurfaceCreateInfoEXT","text":"High-level wrapper for VkHeadlessSurfaceCreateInfoEXT.\n\nExtension: VK_EXT_headless_surface\n\nAPI documentation\n\nstruct HeadlessSurfaceCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.HeadlessSurfaceCreateInfoEXT-Tuple{}","page":"API","title":"Vulkan.HeadlessSurfaceCreateInfoEXT","text":"HeadlessSurfaceCreateInfoEXT(; next = C_NULL, flags = 0)\n\nExtension: VK_EXT_headless_surface\n\nArguments:\n\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nHeadlessSurfaceCreateInfoEXT(; next, flags) -> HeadlessSurfaceCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.Image-Tuple{Any, ImageType, Format, _Extent3D, Integer, Integer, SampleCountFlag, ImageTiling, ImageUsageFlag, SharingMode, AbstractArray, ImageLayout, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.Image","text":"Image(device, image_type::ImageType, format::Format, extent::_Extent3D, mip_levels::Integer, array_layers::Integer, samples::SampleCountFlag, tiling::ImageTiling, usage::ImageUsageFlag, sharing_mode::SharingMode, queue_family_indices::AbstractArray{<:Integer}, initial_layout::ImageLayout, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0)\n\nImage(device, image_type::ImageType, format::Format, extent::_Extent3D, mip_levels::Integer, array_layers::Integer, samples::SampleCountFlag, tiling::ImageTiling, usage::ImageUsageFlag, sharing_mode::SharingMode, queue_family_indices::AbstractArray, initial_layout::ImageLayout, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags) -> Image\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.Image-Tuple{Any, ImageType, Format, _Extent3D, Integer, Integer, SampleCountFlag, ImageTiling, ImageUsageFlag, SharingMode, AbstractArray, ImageLayout}","page":"API","title":"Vulkan.Image","text":"Image(device, image_type::ImageType, format::Format, extent::_Extent3D, mip_levels::Integer, array_layers::Integer, samples::SampleCountFlag, tiling::ImageTiling, usage::ImageUsageFlag, sharing_mode::SharingMode, queue_family_indices::AbstractArray{<:Integer}, initial_layout::ImageLayout; allocator = C_NULL, next = C_NULL, flags = 0)\n\nImage(device, image_type::ImageType, format::Format, extent::_Extent3D, mip_levels::Integer, array_layers::Integer, samples::SampleCountFlag, tiling::ImageTiling, usage::ImageUsageFlag, sharing_mode::SharingMode, queue_family_indices::AbstractArray, initial_layout::ImageLayout; allocator, next, flags) -> Image\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImageBlit","page":"API","title":"Vulkan.ImageBlit","text":"High-level wrapper for VkImageBlit.\n\nAPI documentation\n\nstruct ImageBlit <: Vulkan.HighLevelStruct\n\nsrc_subresource::ImageSubresourceLayers\nsrc_offsets::Tuple{Offset3D, Offset3D}\ndst_subresource::ImageSubresourceLayers\ndst_offsets::Tuple{Offset3D, Offset3D}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImageBlit2KHR","page":"API","title":"Vulkan.ImageBlit2KHR","text":"High-level wrapper for VkImageBlit2KHR.\n\nExtension: VK_KHR_copy_commands2\n\nAPI documentation\n\nstruct ImageBlit2KHR <: Vulkan.HighLevelStruct\n\nnext::Any\nsrc_subresource::ImageSubresourceLayers\nsrc_offsets::Tuple{Offset3D, Offset3D}\ndst_subresource::ImageSubresourceLayers\ndst_offsets::Tuple{Offset3D, Offset3D}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImageBlit2KHR-Tuple{ImageSubresourceLayers, Tuple{Offset3D, Offset3D}, ImageSubresourceLayers, Tuple{Offset3D, Offset3D}}","page":"API","title":"Vulkan.ImageBlit2KHR","text":"ImageBlit2KHR(src_subresource::ImageSubresourceLayers, src_offsets::NTuple{2, Offset3D}, dst_subresource::ImageSubresourceLayers, dst_offsets::NTuple{2, Offset3D}; next = C_NULL)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\nsrc_subresource::ImageSubresourceLayers\nsrc_offsets::NTuple{2, Offset3D}\ndst_subresource::ImageSubresourceLayers\ndst_offsets::NTuple{2, Offset3D}\nnext: defaults to C_NULL\n\nAPI documentation\n\nImageBlit2KHR(src_subresource::ImageSubresourceLayers, src_offsets::Tuple{Offset3D, Offset3D}, dst_subresource::ImageSubresourceLayers, dst_offsets::Tuple{Offset3D, Offset3D}; next) -> ImageBlit2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImageCopy","page":"API","title":"Vulkan.ImageCopy","text":"High-level wrapper for VkImageCopy.\n\nAPI documentation\n\nstruct ImageCopy <: Vulkan.HighLevelStruct\n\nsrc_subresource::ImageSubresourceLayers\nsrc_offset::Offset3D\ndst_subresource::ImageSubresourceLayers\ndst_offset::Offset3D\nextent::Extent3D\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImageCopy2KHR","page":"API","title":"Vulkan.ImageCopy2KHR","text":"High-level wrapper for VkImageCopy2KHR.\n\nExtension: VK_KHR_copy_commands2\n\nAPI documentation\n\nstruct ImageCopy2KHR <: Vulkan.HighLevelStruct\n\nnext::Any\nsrc_subresource::ImageSubresourceLayers\nsrc_offset::Offset3D\ndst_subresource::ImageSubresourceLayers\ndst_offset::Offset3D\nextent::Extent3D\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImageCopy2KHR-Tuple{ImageSubresourceLayers, Offset3D, ImageSubresourceLayers, Offset3D, Extent3D}","page":"API","title":"Vulkan.ImageCopy2KHR","text":"ImageCopy2KHR(src_subresource::ImageSubresourceLayers, src_offset::Offset3D, dst_subresource::ImageSubresourceLayers, dst_offset::Offset3D, extent::Extent3D; next = C_NULL)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\nsrc_subresource::ImageSubresourceLayers\nsrc_offset::Offset3D\ndst_subresource::ImageSubresourceLayers\ndst_offset::Offset3D\nextent::Extent3D\nnext: defaults to C_NULL\n\nAPI documentation\n\nImageCopy2KHR(src_subresource::ImageSubresourceLayers, src_offset::Offset3D, dst_subresource::ImageSubresourceLayers, dst_offset::Offset3D, extent::Extent3D; next) -> ImageCopy2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImageCreateInfo","page":"API","title":"Vulkan.ImageCreateInfo","text":"High-level wrapper for VkImageCreateInfo.\n\nAPI documentation\n\nstruct ImageCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::ImageCreateFlag\nimage_type::ImageType\nformat::Format\nextent::Extent3D\nmip_levels::UInt32\narray_layers::UInt32\nsamples::SampleCountFlag\ntiling::ImageTiling\nusage::ImageUsageFlag\nsharing_mode::SharingMode\nqueue_family_indices::Vector{UInt32}\ninitial_layout::ImageLayout\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImageCreateInfo-Tuple{ImageType, Format, Extent3D, Integer, Integer, SampleCountFlag, ImageTiling, ImageUsageFlag, SharingMode, AbstractArray, ImageLayout}","page":"API","title":"Vulkan.ImageCreateInfo","text":"ImageCreateInfo(image_type::ImageType, format::Format, extent::Extent3D, mip_levels::Integer, array_layers::Integer, samples::SampleCountFlag, tiling::ImageTiling, usage::ImageUsageFlag, sharing_mode::SharingMode, queue_family_indices::AbstractArray{<:Integer}, initial_layout::ImageLayout; next = C_NULL, flags = 0)\n\nArguments:\n\nimage_type::ImageType\nformat::Format\nextent::Extent3D\nmip_levels::Integer\narray_layers::Integer\nsamples::SampleCountFlag\ntiling::ImageTiling\nusage::ImageUsageFlag\nsharing_mode::SharingMode\nqueue_family_indices::AbstractArray{<:Integer}\ninitial_layout::ImageLayout\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nImageCreateInfo(image_type::ImageType, format::Format, extent::Extent3D, mip_levels::Integer, array_layers::Integer, samples::SampleCountFlag, tiling::ImageTiling, usage::ImageUsageFlag, sharing_mode::SharingMode, queue_family_indices::AbstractArray, initial_layout::ImageLayout; next, flags) -> ImageCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImageDrmFormatModifierExplicitCreateInfoEXT","page":"API","title":"Vulkan.ImageDrmFormatModifierExplicitCreateInfoEXT","text":"High-level wrapper for VkImageDrmFormatModifierExplicitCreateInfoEXT.\n\nExtension: VK_EXT_image_drm_format_modifier\n\nAPI documentation\n\nstruct ImageDrmFormatModifierExplicitCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\ndrm_format_modifier::UInt64\nplane_layouts::Vector{SubresourceLayout}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImageDrmFormatModifierExplicitCreateInfoEXT-Tuple{Integer, AbstractArray}","page":"API","title":"Vulkan.ImageDrmFormatModifierExplicitCreateInfoEXT","text":"ImageDrmFormatModifierExplicitCreateInfoEXT(drm_format_modifier::Integer, plane_layouts::AbstractArray{SubresourceLayout}; next = C_NULL)\n\nExtension: VK_EXT_image_drm_format_modifier\n\nArguments:\n\ndrm_format_modifier::Integer\nplane_layouts::AbstractArray{SubresourceLayout}\nnext: defaults to C_NULL\n\nAPI documentation\n\nImageDrmFormatModifierExplicitCreateInfoEXT(drm_format_modifier::Integer, plane_layouts::AbstractArray; next) -> ImageDrmFormatModifierExplicitCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImageDrmFormatModifierListCreateInfoEXT","page":"API","title":"Vulkan.ImageDrmFormatModifierListCreateInfoEXT","text":"High-level wrapper for VkImageDrmFormatModifierListCreateInfoEXT.\n\nExtension: VK_EXT_image_drm_format_modifier\n\nAPI documentation\n\nstruct ImageDrmFormatModifierListCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\ndrm_format_modifiers::Vector{UInt64}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImageDrmFormatModifierListCreateInfoEXT-Tuple{AbstractArray}","page":"API","title":"Vulkan.ImageDrmFormatModifierListCreateInfoEXT","text":"ImageDrmFormatModifierListCreateInfoEXT(drm_format_modifiers::AbstractArray{<:Integer}; next = C_NULL)\n\nExtension: VK_EXT_image_drm_format_modifier\n\nArguments:\n\ndrm_format_modifiers::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\nAPI documentation\n\nImageDrmFormatModifierListCreateInfoEXT(drm_format_modifiers::AbstractArray; next) -> ImageDrmFormatModifierListCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImageDrmFormatModifierPropertiesEXT","page":"API","title":"Vulkan.ImageDrmFormatModifierPropertiesEXT","text":"High-level wrapper for VkImageDrmFormatModifierPropertiesEXT.\n\nExtension: VK_EXT_image_drm_format_modifier\n\nAPI documentation\n\nstruct ImageDrmFormatModifierPropertiesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\ndrm_format_modifier::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImageDrmFormatModifierPropertiesEXT-Tuple{Integer}","page":"API","title":"Vulkan.ImageDrmFormatModifierPropertiesEXT","text":"ImageDrmFormatModifierPropertiesEXT(drm_format_modifier::Integer; next = C_NULL)\n\nExtension: VK_EXT_image_drm_format_modifier\n\nArguments:\n\ndrm_format_modifier::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nImageDrmFormatModifierPropertiesEXT(drm_format_modifier::Integer; next) -> ImageDrmFormatModifierPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImageFormatListCreateInfo","page":"API","title":"Vulkan.ImageFormatListCreateInfo","text":"High-level wrapper for VkImageFormatListCreateInfo.\n\nAPI documentation\n\nstruct ImageFormatListCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nview_formats::Vector{Format}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImageFormatListCreateInfo-Tuple{AbstractArray}","page":"API","title":"Vulkan.ImageFormatListCreateInfo","text":"ImageFormatListCreateInfo(view_formats::AbstractArray{Format}; next = C_NULL)\n\nArguments:\n\nview_formats::AbstractArray{Format}\nnext: defaults to C_NULL\n\nAPI documentation\n\nImageFormatListCreateInfo(view_formats::AbstractArray; next) -> ImageFormatListCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImageFormatProperties","page":"API","title":"Vulkan.ImageFormatProperties","text":"High-level wrapper for VkImageFormatProperties.\n\nAPI documentation\n\nstruct ImageFormatProperties <: Vulkan.HighLevelStruct\n\nmax_extent::Extent3D\nmax_mip_levels::UInt32\nmax_array_layers::UInt32\nsample_counts::SampleCountFlag\nmax_resource_size::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImageFormatProperties-Tuple{Extent3D, Integer, Integer, Integer}","page":"API","title":"Vulkan.ImageFormatProperties","text":"ImageFormatProperties(max_extent::Extent3D, max_mip_levels::Integer, max_array_layers::Integer, max_resource_size::Integer; sample_counts = 0)\n\nArguments:\n\nmax_extent::Extent3D\nmax_mip_levels::Integer\nmax_array_layers::Integer\nmax_resource_size::Integer\nsample_counts: defaults to 0\n\nAPI documentation\n\nImageFormatProperties(max_extent::Extent3D, max_mip_levels::Integer, max_array_layers::Integer, max_resource_size::Integer; sample_counts) -> ImageFormatProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImageFormatProperties2","page":"API","title":"Vulkan.ImageFormatProperties2","text":"High-level wrapper for VkImageFormatProperties2.\n\nAPI documentation\n\nstruct ImageFormatProperties2 <: Vulkan.HighLevelStruct\n\nnext::Any\nimage_format_properties::ImageFormatProperties\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImageFormatProperties2-Tuple{ImageFormatProperties}","page":"API","title":"Vulkan.ImageFormatProperties2","text":"ImageFormatProperties2(image_format_properties::ImageFormatProperties; next = C_NULL)\n\nArguments:\n\nimage_format_properties::ImageFormatProperties\nnext: defaults to C_NULL\n\nAPI documentation\n\nImageFormatProperties2(image_format_properties::ImageFormatProperties; next) -> ImageFormatProperties2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImageMemoryBarrier","page":"API","title":"Vulkan.ImageMemoryBarrier","text":"High-level wrapper for VkImageMemoryBarrier.\n\nAPI documentation\n\nstruct ImageMemoryBarrier <: Vulkan.HighLevelStruct\n\nnext::Any\nsrc_access_mask::AccessFlag\ndst_access_mask::AccessFlag\nold_layout::ImageLayout\nnew_layout::ImageLayout\nsrc_queue_family_index::UInt32\ndst_queue_family_index::UInt32\nimage::Image\nsubresource_range::ImageSubresourceRange\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImageMemoryBarrier-Tuple{AccessFlag, AccessFlag, ImageLayout, ImageLayout, Integer, Integer, Image, ImageSubresourceRange}","page":"API","title":"Vulkan.ImageMemoryBarrier","text":"ImageMemoryBarrier(src_access_mask::AccessFlag, dst_access_mask::AccessFlag, old_layout::ImageLayout, new_layout::ImageLayout, src_queue_family_index::Integer, dst_queue_family_index::Integer, image::Image, subresource_range::ImageSubresourceRange; next = C_NULL)\n\nArguments:\n\nsrc_access_mask::AccessFlag\ndst_access_mask::AccessFlag\nold_layout::ImageLayout\nnew_layout::ImageLayout\nsrc_queue_family_index::Integer\ndst_queue_family_index::Integer\nimage::Image\nsubresource_range::ImageSubresourceRange\nnext: defaults to C_NULL\n\nAPI documentation\n\nImageMemoryBarrier(src_access_mask::AccessFlag, dst_access_mask::AccessFlag, old_layout::ImageLayout, new_layout::ImageLayout, src_queue_family_index::Integer, dst_queue_family_index::Integer, image::Image, subresource_range::ImageSubresourceRange; next) -> ImageMemoryBarrier\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImageMemoryBarrier2KHR","page":"API","title":"Vulkan.ImageMemoryBarrier2KHR","text":"High-level wrapper for VkImageMemoryBarrier2KHR.\n\nExtension: VK_KHR_synchronization2\n\nAPI documentation\n\nstruct ImageMemoryBarrier2KHR <: Vulkan.HighLevelStruct\n\nnext::Any\nsrc_stage_mask::UInt64\nsrc_access_mask::UInt64\ndst_stage_mask::UInt64\ndst_access_mask::UInt64\nold_layout::ImageLayout\nnew_layout::ImageLayout\nsrc_queue_family_index::UInt32\ndst_queue_family_index::UInt32\nimage::Image\nsubresource_range::ImageSubresourceRange\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImageMemoryBarrier2KHR-Tuple{ImageLayout, ImageLayout, Integer, Integer, Image, ImageSubresourceRange}","page":"API","title":"Vulkan.ImageMemoryBarrier2KHR","text":"ImageMemoryBarrier2KHR(old_layout::ImageLayout, new_layout::ImageLayout, src_queue_family_index::Integer, dst_queue_family_index::Integer, image::Image, subresource_range::ImageSubresourceRange; next = C_NULL, src_stage_mask = 0, src_access_mask = 0, dst_stage_mask = 0, dst_access_mask = 0)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\nold_layout::ImageLayout\nnew_layout::ImageLayout\nsrc_queue_family_index::Integer\ndst_queue_family_index::Integer\nimage::Image\nsubresource_range::ImageSubresourceRange\nnext: defaults to C_NULL\nsrc_stage_mask: defaults to 0\nsrc_access_mask: defaults to 0\ndst_stage_mask: defaults to 0\ndst_access_mask: defaults to 0\n\nAPI documentation\n\nImageMemoryBarrier2KHR(old_layout::ImageLayout, new_layout::ImageLayout, src_queue_family_index::Integer, dst_queue_family_index::Integer, image::Image, subresource_range::ImageSubresourceRange; next, src_stage_mask, src_access_mask, dst_stage_mask, dst_access_mask) -> ImageMemoryBarrier2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImageMemoryRequirementsInfo2","page":"API","title":"Vulkan.ImageMemoryRequirementsInfo2","text":"High-level wrapper for VkImageMemoryRequirementsInfo2.\n\nAPI documentation\n\nstruct ImageMemoryRequirementsInfo2 <: Vulkan.HighLevelStruct\n\nnext::Any\nimage::Image\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImageMemoryRequirementsInfo2-Tuple{Image}","page":"API","title":"Vulkan.ImageMemoryRequirementsInfo2","text":"ImageMemoryRequirementsInfo2(image::Image; next = C_NULL)\n\nArguments:\n\nimage::Image\nnext: defaults to C_NULL\n\nAPI documentation\n\nImageMemoryRequirementsInfo2(image::Image; next) -> ImageMemoryRequirementsInfo2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImagePlaneMemoryRequirementsInfo","page":"API","title":"Vulkan.ImagePlaneMemoryRequirementsInfo","text":"High-level wrapper for VkImagePlaneMemoryRequirementsInfo.\n\nAPI documentation\n\nstruct ImagePlaneMemoryRequirementsInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nplane_aspect::ImageAspectFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImagePlaneMemoryRequirementsInfo-Tuple{ImageAspectFlag}","page":"API","title":"Vulkan.ImagePlaneMemoryRequirementsInfo","text":"ImagePlaneMemoryRequirementsInfo(plane_aspect::ImageAspectFlag; next = C_NULL)\n\nArguments:\n\nplane_aspect::ImageAspectFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\nImagePlaneMemoryRequirementsInfo(plane_aspect::ImageAspectFlag; next) -> ImagePlaneMemoryRequirementsInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImageResolve","page":"API","title":"Vulkan.ImageResolve","text":"High-level wrapper for VkImageResolve.\n\nAPI documentation\n\nstruct ImageResolve <: Vulkan.HighLevelStruct\n\nsrc_subresource::ImageSubresourceLayers\nsrc_offset::Offset3D\ndst_subresource::ImageSubresourceLayers\ndst_offset::Offset3D\nextent::Extent3D\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImageResolve2KHR","page":"API","title":"Vulkan.ImageResolve2KHR","text":"High-level wrapper for VkImageResolve2KHR.\n\nExtension: VK_KHR_copy_commands2\n\nAPI documentation\n\nstruct ImageResolve2KHR <: Vulkan.HighLevelStruct\n\nnext::Any\nsrc_subresource::ImageSubresourceLayers\nsrc_offset::Offset3D\ndst_subresource::ImageSubresourceLayers\ndst_offset::Offset3D\nextent::Extent3D\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImageResolve2KHR-Tuple{ImageSubresourceLayers, Offset3D, ImageSubresourceLayers, Offset3D, Extent3D}","page":"API","title":"Vulkan.ImageResolve2KHR","text":"ImageResolve2KHR(src_subresource::ImageSubresourceLayers, src_offset::Offset3D, dst_subresource::ImageSubresourceLayers, dst_offset::Offset3D, extent::Extent3D; next = C_NULL)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\nsrc_subresource::ImageSubresourceLayers\nsrc_offset::Offset3D\ndst_subresource::ImageSubresourceLayers\ndst_offset::Offset3D\nextent::Extent3D\nnext: defaults to C_NULL\n\nAPI documentation\n\nImageResolve2KHR(src_subresource::ImageSubresourceLayers, src_offset::Offset3D, dst_subresource::ImageSubresourceLayers, dst_offset::Offset3D, extent::Extent3D; next) -> ImageResolve2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImageSparseMemoryRequirementsInfo2","page":"API","title":"Vulkan.ImageSparseMemoryRequirementsInfo2","text":"High-level wrapper for VkImageSparseMemoryRequirementsInfo2.\n\nAPI documentation\n\nstruct ImageSparseMemoryRequirementsInfo2 <: Vulkan.HighLevelStruct\n\nnext::Any\nimage::Image\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImageSparseMemoryRequirementsInfo2-Tuple{Image}","page":"API","title":"Vulkan.ImageSparseMemoryRequirementsInfo2","text":"ImageSparseMemoryRequirementsInfo2(image::Image; next = C_NULL)\n\nArguments:\n\nimage::Image\nnext: defaults to C_NULL\n\nAPI documentation\n\nImageSparseMemoryRequirementsInfo2(image::Image; next) -> ImageSparseMemoryRequirementsInfo2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImageStencilUsageCreateInfo","page":"API","title":"Vulkan.ImageStencilUsageCreateInfo","text":"High-level wrapper for VkImageStencilUsageCreateInfo.\n\nAPI documentation\n\nstruct ImageStencilUsageCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nstencil_usage::ImageUsageFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImageStencilUsageCreateInfo-Tuple{ImageUsageFlag}","page":"API","title":"Vulkan.ImageStencilUsageCreateInfo","text":"ImageStencilUsageCreateInfo(stencil_usage::ImageUsageFlag; next = C_NULL)\n\nArguments:\n\nstencil_usage::ImageUsageFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\nImageStencilUsageCreateInfo(stencil_usage::ImageUsageFlag; next) -> ImageStencilUsageCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImageSubresource","page":"API","title":"Vulkan.ImageSubresource","text":"High-level wrapper for VkImageSubresource.\n\nAPI documentation\n\nstruct ImageSubresource <: Vulkan.HighLevelStruct\n\naspect_mask::ImageAspectFlag\nmip_level::UInt32\narray_layer::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImageSubresourceLayers","page":"API","title":"Vulkan.ImageSubresourceLayers","text":"High-level wrapper for VkImageSubresourceLayers.\n\nAPI documentation\n\nstruct ImageSubresourceLayers <: Vulkan.HighLevelStruct\n\naspect_mask::ImageAspectFlag\nmip_level::UInt32\nbase_array_layer::UInt32\nlayer_count::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImageSubresourceRange","page":"API","title":"Vulkan.ImageSubresourceRange","text":"High-level wrapper for VkImageSubresourceRange.\n\nAPI documentation\n\nstruct ImageSubresourceRange <: Vulkan.HighLevelStruct\n\naspect_mask::ImageAspectFlag\nbase_mip_level::UInt32\nlevel_count::UInt32\nbase_array_layer::UInt32\nlayer_count::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImageSwapchainCreateInfoKHR","page":"API","title":"Vulkan.ImageSwapchainCreateInfoKHR","text":"High-level wrapper for VkImageSwapchainCreateInfoKHR.\n\nExtension: VK_KHR_swapchain\n\nAPI documentation\n\nstruct ImageSwapchainCreateInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nswapchain::Union{Ptr{Nothing}, SwapchainKHR}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImageSwapchainCreateInfoKHR-Tuple{}","page":"API","title":"Vulkan.ImageSwapchainCreateInfoKHR","text":"ImageSwapchainCreateInfoKHR(; next = C_NULL, swapchain = C_NULL)\n\nExtension: VK_KHR_swapchain\n\nArguments:\n\nnext: defaults to C_NULL\nswapchain: defaults to C_NULL\n\nAPI documentation\n\nImageSwapchainCreateInfoKHR(; next, swapchain) -> ImageSwapchainCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImageView-Tuple{Any, Any, ImageViewType, Format, _ComponentMapping, _ImageSubresourceRange, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.ImageView","text":"ImageView(device, image, view_type::ImageViewType, format::Format, components::_ComponentMapping, subresource_range::_ImageSubresourceRange, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0)\n\nImageView(device, image, view_type::ImageViewType, format::Format, components::_ComponentMapping, subresource_range::_ImageSubresourceRange, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags) -> ImageView\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImageView-Tuple{Any, Any, ImageViewType, Format, _ComponentMapping, _ImageSubresourceRange}","page":"API","title":"Vulkan.ImageView","text":"ImageView(device, image, view_type::ImageViewType, format::Format, components::_ComponentMapping, subresource_range::_ImageSubresourceRange; allocator = C_NULL, next = C_NULL, flags = 0)\n\nImageView(device, image, view_type::ImageViewType, format::Format, components::_ComponentMapping, subresource_range::_ImageSubresourceRange; allocator, next, flags) -> ImageView\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImageViewASTCDecodeModeEXT","page":"API","title":"Vulkan.ImageViewASTCDecodeModeEXT","text":"High-level wrapper for VkImageViewASTCDecodeModeEXT.\n\nExtension: VK_EXT_astc_decode_mode\n\nAPI documentation\n\nstruct ImageViewASTCDecodeModeEXT <: Vulkan.HighLevelStruct\n\nnext::Any\ndecode_mode::Format\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImageViewASTCDecodeModeEXT-Tuple{Format}","page":"API","title":"Vulkan.ImageViewASTCDecodeModeEXT","text":"ImageViewASTCDecodeModeEXT(decode_mode::Format; next = C_NULL)\n\nExtension: VK_EXT_astc_decode_mode\n\nArguments:\n\ndecode_mode::Format\nnext: defaults to C_NULL\n\nAPI documentation\n\nImageViewASTCDecodeModeEXT(decode_mode::Format; next) -> ImageViewASTCDecodeModeEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImageViewAddressPropertiesNVX","page":"API","title":"Vulkan.ImageViewAddressPropertiesNVX","text":"High-level wrapper for VkImageViewAddressPropertiesNVX.\n\nExtension: VK_NVX_image_view_handle\n\nAPI documentation\n\nstruct ImageViewAddressPropertiesNVX <: Vulkan.HighLevelStruct\n\nnext::Any\ndevice_address::UInt64\nsize::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImageViewAddressPropertiesNVX-Tuple{Integer, Integer}","page":"API","title":"Vulkan.ImageViewAddressPropertiesNVX","text":"ImageViewAddressPropertiesNVX(device_address::Integer, size::Integer; next = C_NULL)\n\nExtension: VK_NVX_image_view_handle\n\nArguments:\n\ndevice_address::Integer\nsize::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nImageViewAddressPropertiesNVX(device_address::Integer, size::Integer; next) -> ImageViewAddressPropertiesNVX\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImageViewCreateInfo","page":"API","title":"Vulkan.ImageViewCreateInfo","text":"High-level wrapper for VkImageViewCreateInfo.\n\nAPI documentation\n\nstruct ImageViewCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::ImageViewCreateFlag\nimage::Image\nview_type::ImageViewType\nformat::Format\ncomponents::ComponentMapping\nsubresource_range::ImageSubresourceRange\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImageViewCreateInfo-Tuple{Image, ImageViewType, Format, ComponentMapping, ImageSubresourceRange}","page":"API","title":"Vulkan.ImageViewCreateInfo","text":"ImageViewCreateInfo(image::Image, view_type::ImageViewType, format::Format, components::ComponentMapping, subresource_range::ImageSubresourceRange; next = C_NULL, flags = 0)\n\nArguments:\n\nimage::Image\nview_type::ImageViewType\nformat::Format\ncomponents::ComponentMapping\nsubresource_range::ImageSubresourceRange\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nImageViewCreateInfo(image::Image, view_type::ImageViewType, format::Format, components::ComponentMapping, subresource_range::ImageSubresourceRange; next, flags) -> ImageViewCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImageViewHandleInfoNVX","page":"API","title":"Vulkan.ImageViewHandleInfoNVX","text":"High-level wrapper for VkImageViewHandleInfoNVX.\n\nExtension: VK_NVX_image_view_handle\n\nAPI documentation\n\nstruct ImageViewHandleInfoNVX <: Vulkan.HighLevelStruct\n\nnext::Any\nimage_view::ImageView\ndescriptor_type::DescriptorType\nsampler::Union{Ptr{Nothing}, Sampler}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImageViewHandleInfoNVX-Tuple{ImageView, DescriptorType}","page":"API","title":"Vulkan.ImageViewHandleInfoNVX","text":"ImageViewHandleInfoNVX(image_view::ImageView, descriptor_type::DescriptorType; next = C_NULL, sampler = C_NULL)\n\nExtension: VK_NVX_image_view_handle\n\nArguments:\n\nimage_view::ImageView\ndescriptor_type::DescriptorType\nnext: defaults to C_NULL\nsampler: defaults to C_NULL\n\nAPI documentation\n\nImageViewHandleInfoNVX(image_view::ImageView, descriptor_type::DescriptorType; next, sampler) -> ImageViewHandleInfoNVX\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImageViewUsageCreateInfo","page":"API","title":"Vulkan.ImageViewUsageCreateInfo","text":"High-level wrapper for VkImageViewUsageCreateInfo.\n\nAPI documentation\n\nstruct ImageViewUsageCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nusage::ImageUsageFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImageViewUsageCreateInfo-Tuple{ImageUsageFlag}","page":"API","title":"Vulkan.ImageViewUsageCreateInfo","text":"ImageViewUsageCreateInfo(usage::ImageUsageFlag; next = C_NULL)\n\nArguments:\n\nusage::ImageUsageFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\nImageViewUsageCreateInfo(usage::ImageUsageFlag; next) -> ImageViewUsageCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImportFenceFdInfoKHR","page":"API","title":"Vulkan.ImportFenceFdInfoKHR","text":"High-level wrapper for VkImportFenceFdInfoKHR.\n\nExtension: VK_KHR_external_fence_fd\n\nAPI documentation\n\nstruct ImportFenceFdInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nfence::Fence\nflags::FenceImportFlag\nhandle_type::ExternalFenceHandleTypeFlag\nfd::Int64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImportFenceFdInfoKHR-Tuple{Fence, ExternalFenceHandleTypeFlag, Integer}","page":"API","title":"Vulkan.ImportFenceFdInfoKHR","text":"ImportFenceFdInfoKHR(fence::Fence, handle_type::ExternalFenceHandleTypeFlag, fd::Integer; next = C_NULL, flags = 0)\n\nExtension: VK_KHR_external_fence_fd\n\nArguments:\n\nfence::Fence (externsync)\nhandle_type::ExternalFenceHandleTypeFlag\nfd::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nImportFenceFdInfoKHR(fence::Fence, handle_type::ExternalFenceHandleTypeFlag, fd::Integer; next, flags) -> ImportFenceFdInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImportMemoryFdInfoKHR","page":"API","title":"Vulkan.ImportMemoryFdInfoKHR","text":"High-level wrapper for VkImportMemoryFdInfoKHR.\n\nExtension: VK_KHR_external_memory_fd\n\nAPI documentation\n\nstruct ImportMemoryFdInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nhandle_type::ExternalMemoryHandleTypeFlag\nfd::Int64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImportMemoryFdInfoKHR-Tuple{Integer}","page":"API","title":"Vulkan.ImportMemoryFdInfoKHR","text":"ImportMemoryFdInfoKHR(fd::Integer; next = C_NULL, handle_type = 0)\n\nExtension: VK_KHR_external_memory_fd\n\nArguments:\n\nfd::Integer\nnext: defaults to C_NULL\nhandle_type: defaults to 0\n\nAPI documentation\n\nImportMemoryFdInfoKHR(fd::Integer; next, handle_type) -> ImportMemoryFdInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImportMemoryHostPointerInfoEXT","page":"API","title":"Vulkan.ImportMemoryHostPointerInfoEXT","text":"High-level wrapper for VkImportMemoryHostPointerInfoEXT.\n\nExtension: VK_EXT_external_memory_host\n\nAPI documentation\n\nstruct ImportMemoryHostPointerInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nhandle_type::ExternalMemoryHandleTypeFlag\nhost_pointer::Ptr{Nothing}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImportMemoryHostPointerInfoEXT-Tuple{ExternalMemoryHandleTypeFlag, Ptr{Nothing}}","page":"API","title":"Vulkan.ImportMemoryHostPointerInfoEXT","text":"ImportMemoryHostPointerInfoEXT(handle_type::ExternalMemoryHandleTypeFlag, host_pointer::Ptr{Cvoid}; next = C_NULL)\n\nExtension: VK_EXT_external_memory_host\n\nArguments:\n\nhandle_type::ExternalMemoryHandleTypeFlag\nhost_pointer::Ptr{Cvoid}\nnext: defaults to C_NULL\n\nAPI documentation\n\nImportMemoryHostPointerInfoEXT(handle_type::ExternalMemoryHandleTypeFlag, host_pointer::Ptr{Nothing}; next) -> ImportMemoryHostPointerInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImportSemaphoreFdInfoKHR","page":"API","title":"Vulkan.ImportSemaphoreFdInfoKHR","text":"High-level wrapper for VkImportSemaphoreFdInfoKHR.\n\nExtension: VK_KHR_external_semaphore_fd\n\nAPI documentation\n\nstruct ImportSemaphoreFdInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nsemaphore::Semaphore\nflags::SemaphoreImportFlag\nhandle_type::ExternalSemaphoreHandleTypeFlag\nfd::Int64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ImportSemaphoreFdInfoKHR-Tuple{Semaphore, ExternalSemaphoreHandleTypeFlag, Integer}","page":"API","title":"Vulkan.ImportSemaphoreFdInfoKHR","text":"ImportSemaphoreFdInfoKHR(semaphore::Semaphore, handle_type::ExternalSemaphoreHandleTypeFlag, fd::Integer; next = C_NULL, flags = 0)\n\nExtension: VK_KHR_external_semaphore_fd\n\nArguments:\n\nsemaphore::Semaphore (externsync)\nhandle_type::ExternalSemaphoreHandleTypeFlag\nfd::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nImportSemaphoreFdInfoKHR(semaphore::Semaphore, handle_type::ExternalSemaphoreHandleTypeFlag, fd::Integer; next, flags) -> ImportSemaphoreFdInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.IndirectCommandsLayoutCreateInfoNV","page":"API","title":"Vulkan.IndirectCommandsLayoutCreateInfoNV","text":"High-level wrapper for VkIndirectCommandsLayoutCreateInfoNV.\n\nExtension: VK_NV_device_generated_commands\n\nAPI documentation\n\nstruct IndirectCommandsLayoutCreateInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::IndirectCommandsLayoutUsageFlagNV\npipeline_bind_point::PipelineBindPoint\ntokens::Vector{IndirectCommandsLayoutTokenNV}\nstream_strides::Vector{UInt32}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.IndirectCommandsLayoutCreateInfoNV-Tuple{PipelineBindPoint, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.IndirectCommandsLayoutCreateInfoNV","text":"IndirectCommandsLayoutCreateInfoNV(pipeline_bind_point::PipelineBindPoint, tokens::AbstractArray{IndirectCommandsLayoutTokenNV}, stream_strides::AbstractArray{<:Integer}; next = C_NULL, flags = 0)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\npipeline_bind_point::PipelineBindPoint\ntokens::AbstractArray{IndirectCommandsLayoutTokenNV}\nstream_strides::AbstractArray{<:Integer}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nIndirectCommandsLayoutCreateInfoNV(pipeline_bind_point::PipelineBindPoint, tokens::AbstractArray, stream_strides::AbstractArray; next, flags) -> IndirectCommandsLayoutCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.IndirectCommandsLayoutNV-Tuple{Any, PipelineBindPoint, AbstractArray{_IndirectCommandsLayoutTokenNV}, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.IndirectCommandsLayoutNV","text":"IndirectCommandsLayoutNV(device, pipeline_bind_point::PipelineBindPoint, tokens::AbstractArray{_IndirectCommandsLayoutTokenNV}, stream_strides::AbstractArray{<:Integer}, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0)\n\nIndirectCommandsLayoutNV(device, pipeline_bind_point::PipelineBindPoint, tokens::AbstractArray{_IndirectCommandsLayoutTokenNV}, stream_strides::AbstractArray, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags) -> IndirectCommandsLayoutNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.IndirectCommandsLayoutNV-Tuple{Any, PipelineBindPoint, AbstractArray{_IndirectCommandsLayoutTokenNV}, AbstractArray}","page":"API","title":"Vulkan.IndirectCommandsLayoutNV","text":"IndirectCommandsLayoutNV(device, pipeline_bind_point::PipelineBindPoint, tokens::AbstractArray{_IndirectCommandsLayoutTokenNV}, stream_strides::AbstractArray{<:Integer}; allocator = C_NULL, next = C_NULL, flags = 0)\n\nIndirectCommandsLayoutNV(device, pipeline_bind_point::PipelineBindPoint, tokens::AbstractArray{_IndirectCommandsLayoutTokenNV}, stream_strides::AbstractArray; allocator, next, flags) -> IndirectCommandsLayoutNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.IndirectCommandsLayoutTokenNV","page":"API","title":"Vulkan.IndirectCommandsLayoutTokenNV","text":"High-level wrapper for VkIndirectCommandsLayoutTokenNV.\n\nExtension: VK_NV_device_generated_commands\n\nAPI documentation\n\nstruct IndirectCommandsLayoutTokenNV <: Vulkan.HighLevelStruct\n\nnext::Any\ntoken_type::IndirectCommandsTokenTypeNV\nstream::UInt32\noffset::UInt32\nvertex_binding_unit::UInt32\nvertex_dynamic_stride::Bool\npushconstant_pipeline_layout::Union{Ptr{Nothing}, PipelineLayout}\npushconstant_shader_stage_flags::ShaderStageFlag\npushconstant_offset::UInt32\npushconstant_size::UInt32\nindirect_state_flags::IndirectStateFlagNV\nindex_types::Vector{IndexType}\nindex_type_values::Vector{UInt32}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.IndirectCommandsLayoutTokenNV-Tuple{IndirectCommandsTokenTypeNV, Integer, Integer, Integer, Bool, Integer, Integer, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.IndirectCommandsLayoutTokenNV","text":"IndirectCommandsLayoutTokenNV(token_type::IndirectCommandsTokenTypeNV, stream::Integer, offset::Integer, vertex_binding_unit::Integer, vertex_dynamic_stride::Bool, pushconstant_offset::Integer, pushconstant_size::Integer, index_types::AbstractArray{IndexType}, index_type_values::AbstractArray{<:Integer}; next = C_NULL, pushconstant_pipeline_layout = C_NULL, pushconstant_shader_stage_flags = 0, indirect_state_flags = 0)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ntoken_type::IndirectCommandsTokenTypeNV\nstream::Integer\noffset::Integer\nvertex_binding_unit::Integer\nvertex_dynamic_stride::Bool\npushconstant_offset::Integer\npushconstant_size::Integer\nindex_types::AbstractArray{IndexType}\nindex_type_values::AbstractArray{<:Integer}\nnext: defaults to C_NULL\npushconstant_pipeline_layout: defaults to C_NULL\npushconstant_shader_stage_flags: defaults to 0\nindirect_state_flags: defaults to 0\n\nAPI documentation\n\nIndirectCommandsLayoutTokenNV(token_type::IndirectCommandsTokenTypeNV, stream::Integer, offset::Integer, vertex_binding_unit::Integer, vertex_dynamic_stride::Bool, pushconstant_offset::Integer, pushconstant_size::Integer, index_types::AbstractArray, index_type_values::AbstractArray; next, pushconstant_pipeline_layout, pushconstant_shader_stage_flags, indirect_state_flags) -> IndirectCommandsLayoutTokenNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.IndirectCommandsStreamNV","page":"API","title":"Vulkan.IndirectCommandsStreamNV","text":"High-level wrapper for VkIndirectCommandsStreamNV.\n\nExtension: VK_NV_device_generated_commands\n\nAPI documentation\n\nstruct IndirectCommandsStreamNV <: Vulkan.HighLevelStruct\n\nbuffer::Buffer\noffset::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.InitializePerformanceApiInfoINTEL","page":"API","title":"Vulkan.InitializePerformanceApiInfoINTEL","text":"High-level wrapper for VkInitializePerformanceApiInfoINTEL.\n\nExtension: VK_INTEL_performance_query\n\nAPI documentation\n\nstruct InitializePerformanceApiInfoINTEL <: Vulkan.HighLevelStruct\n\nnext::Any\nuser_data::Ptr{Nothing}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.InitializePerformanceApiInfoINTEL-Tuple{}","page":"API","title":"Vulkan.InitializePerformanceApiInfoINTEL","text":"InitializePerformanceApiInfoINTEL(; next = C_NULL, user_data = C_NULL)\n\nExtension: VK_INTEL_performance_query\n\nArguments:\n\nnext: defaults to C_NULL\nuser_data: defaults to C_NULL\n\nAPI documentation\n\nInitializePerformanceApiInfoINTEL(; next, user_data) -> InitializePerformanceApiInfoINTEL\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.InputAttachmentAspectReference","page":"API","title":"Vulkan.InputAttachmentAspectReference","text":"High-level wrapper for VkInputAttachmentAspectReference.\n\nAPI documentation\n\nstruct InputAttachmentAspectReference <: Vulkan.HighLevelStruct\n\nsubpass::UInt32\ninput_attachment_index::UInt32\naspect_mask::ImageAspectFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.Instance-Tuple{AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.Instance","text":"Instance(enabled_layer_names::AbstractArray{<:AbstractString}, enabled_extension_names::AbstractArray{<:AbstractString}, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0, application_info = C_NULL)\n\nInstance(enabled_layer_names::AbstractArray, enabled_extension_names::AbstractArray, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags, application_info) -> Instance\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.Instance-Tuple{AbstractArray, AbstractArray}","page":"API","title":"Vulkan.Instance","text":"Instance(enabled_layer_names::AbstractArray{<:AbstractString}, enabled_extension_names::AbstractArray{<:AbstractString}; allocator = C_NULL, next = C_NULL, flags = 0, application_info = C_NULL)\n\nInstance(enabled_layer_names::AbstractArray, enabled_extension_names::AbstractArray; allocator, next, flags, application_info) -> Instance\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.InstanceCreateInfo","page":"API","title":"Vulkan.InstanceCreateInfo","text":"High-level wrapper for VkInstanceCreateInfo.\n\nAPI documentation\n\nstruct InstanceCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\napplication_info::Union{Ptr{Nothing}, ApplicationInfo}\nenabled_layer_names::Vector{String}\nenabled_extension_names::Vector{String}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.InstanceCreateInfo-Tuple{AbstractArray, AbstractArray}","page":"API","title":"Vulkan.InstanceCreateInfo","text":"InstanceCreateInfo(enabled_layer_names::AbstractArray{<:AbstractString}, enabled_extension_names::AbstractArray{<:AbstractString}; next = C_NULL, flags = 0, application_info = C_NULL)\n\nArguments:\n\nenabled_layer_names::AbstractArray{<:AbstractString}\nenabled_extension_names::AbstractArray{<:AbstractString}\nnext: defaults to C_NULL\nflags: defaults to 0\napplication_info: defaults to C_NULL\n\nAPI documentation\n\nInstanceCreateInfo(enabled_layer_names::AbstractArray, enabled_extension_names::AbstractArray; next, flags, application_info) -> InstanceCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.LayerProperties","page":"API","title":"Vulkan.LayerProperties","text":"High-level wrapper for VkLayerProperties.\n\nAPI documentation\n\nstruct LayerProperties <: Vulkan.HighLevelStruct\n\nlayer_name::String\nspec_version::VersionNumber\nimplementation_version::VersionNumber\ndescription::String\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.MappedMemoryRange","page":"API","title":"Vulkan.MappedMemoryRange","text":"High-level wrapper for VkMappedMemoryRange.\n\nAPI documentation\n\nstruct MappedMemoryRange <: Vulkan.HighLevelStruct\n\nnext::Any\nmemory::DeviceMemory\noffset::UInt64\nsize::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.MappedMemoryRange-Tuple{DeviceMemory, Integer, Integer}","page":"API","title":"Vulkan.MappedMemoryRange","text":"MappedMemoryRange(memory::DeviceMemory, offset::Integer, size::Integer; next = C_NULL)\n\nArguments:\n\nmemory::DeviceMemory\noffset::Integer\nsize::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nMappedMemoryRange(memory::DeviceMemory, offset::Integer, size::Integer; next) -> MappedMemoryRange\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.MemoryAllocateFlagsInfo","page":"API","title":"Vulkan.MemoryAllocateFlagsInfo","text":"High-level wrapper for VkMemoryAllocateFlagsInfo.\n\nAPI documentation\n\nstruct MemoryAllocateFlagsInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::MemoryAllocateFlag\ndevice_mask::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.MemoryAllocateFlagsInfo-Tuple{Integer}","page":"API","title":"Vulkan.MemoryAllocateFlagsInfo","text":"MemoryAllocateFlagsInfo(device_mask::Integer; next = C_NULL, flags = 0)\n\nArguments:\n\ndevice_mask::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nMemoryAllocateFlagsInfo(device_mask::Integer; next, flags) -> MemoryAllocateFlagsInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.MemoryAllocateInfo","page":"API","title":"Vulkan.MemoryAllocateInfo","text":"High-level wrapper for VkMemoryAllocateInfo.\n\nAPI documentation\n\nstruct MemoryAllocateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nallocation_size::UInt64\nmemory_type_index::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.MemoryAllocateInfo-Tuple{Integer, Integer}","page":"API","title":"Vulkan.MemoryAllocateInfo","text":"MemoryAllocateInfo(allocation_size::Integer, memory_type_index::Integer; next = C_NULL)\n\nArguments:\n\nallocation_size::Integer\nmemory_type_index::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nMemoryAllocateInfo(allocation_size::Integer, memory_type_index::Integer; next) -> MemoryAllocateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.MemoryBarrier","page":"API","title":"Vulkan.MemoryBarrier","text":"High-level wrapper for VkMemoryBarrier.\n\nAPI documentation\n\nstruct MemoryBarrier <: Vulkan.HighLevelStruct\n\nnext::Any\nsrc_access_mask::AccessFlag\ndst_access_mask::AccessFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.MemoryBarrier-Tuple{}","page":"API","title":"Vulkan.MemoryBarrier","text":"MemoryBarrier(; next = C_NULL, src_access_mask = 0, dst_access_mask = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nsrc_access_mask: defaults to 0\ndst_access_mask: defaults to 0\n\nAPI documentation\n\nMemoryBarrier(; next, src_access_mask, dst_access_mask) -> MemoryBarrier\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.MemoryBarrier2KHR","page":"API","title":"Vulkan.MemoryBarrier2KHR","text":"High-level wrapper for VkMemoryBarrier2KHR.\n\nExtension: VK_KHR_synchronization2\n\nAPI documentation\n\nstruct MemoryBarrier2KHR <: Vulkan.HighLevelStruct\n\nnext::Any\nsrc_stage_mask::UInt64\nsrc_access_mask::UInt64\ndst_stage_mask::UInt64\ndst_access_mask::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.MemoryBarrier2KHR-Tuple{}","page":"API","title":"Vulkan.MemoryBarrier2KHR","text":"MemoryBarrier2KHR(; next = C_NULL, src_stage_mask = 0, src_access_mask = 0, dst_stage_mask = 0, dst_access_mask = 0)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\nnext: defaults to C_NULL\nsrc_stage_mask: defaults to 0\nsrc_access_mask: defaults to 0\ndst_stage_mask: defaults to 0\ndst_access_mask: defaults to 0\n\nAPI documentation\n\nMemoryBarrier2KHR(; next, src_stage_mask, src_access_mask, dst_stage_mask, dst_access_mask) -> MemoryBarrier2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.MemoryDedicatedAllocateInfo","page":"API","title":"Vulkan.MemoryDedicatedAllocateInfo","text":"High-level wrapper for VkMemoryDedicatedAllocateInfo.\n\nAPI documentation\n\nstruct MemoryDedicatedAllocateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nimage::Union{Ptr{Nothing}, Image}\nbuffer::Union{Ptr{Nothing}, Buffer}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.MemoryDedicatedAllocateInfo-Tuple{}","page":"API","title":"Vulkan.MemoryDedicatedAllocateInfo","text":"MemoryDedicatedAllocateInfo(; next = C_NULL, image = C_NULL, buffer = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\nimage: defaults to C_NULL\nbuffer: defaults to C_NULL\n\nAPI documentation\n\nMemoryDedicatedAllocateInfo(; next, image, buffer) -> MemoryDedicatedAllocateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.MemoryDedicatedRequirements","page":"API","title":"Vulkan.MemoryDedicatedRequirements","text":"High-level wrapper for VkMemoryDedicatedRequirements.\n\nAPI documentation\n\nstruct MemoryDedicatedRequirements <: Vulkan.HighLevelStruct\n\nnext::Any\nprefers_dedicated_allocation::Bool\nrequires_dedicated_allocation::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.MemoryDedicatedRequirements-Tuple{Bool, Bool}","page":"API","title":"Vulkan.MemoryDedicatedRequirements","text":"MemoryDedicatedRequirements(prefers_dedicated_allocation::Bool, requires_dedicated_allocation::Bool; next = C_NULL)\n\nArguments:\n\nprefers_dedicated_allocation::Bool\nrequires_dedicated_allocation::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nMemoryDedicatedRequirements(prefers_dedicated_allocation::Bool, requires_dedicated_allocation::Bool; next) -> MemoryDedicatedRequirements\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.MemoryFdPropertiesKHR","page":"API","title":"Vulkan.MemoryFdPropertiesKHR","text":"High-level wrapper for VkMemoryFdPropertiesKHR.\n\nExtension: VK_KHR_external_memory_fd\n\nAPI documentation\n\nstruct MemoryFdPropertiesKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nmemory_type_bits::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.MemoryFdPropertiesKHR-Tuple{Integer}","page":"API","title":"Vulkan.MemoryFdPropertiesKHR","text":"MemoryFdPropertiesKHR(memory_type_bits::Integer; next = C_NULL)\n\nExtension: VK_KHR_external_memory_fd\n\nArguments:\n\nmemory_type_bits::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nMemoryFdPropertiesKHR(memory_type_bits::Integer; next) -> MemoryFdPropertiesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.MemoryGetFdInfoKHR","page":"API","title":"Vulkan.MemoryGetFdInfoKHR","text":"High-level wrapper for VkMemoryGetFdInfoKHR.\n\nExtension: VK_KHR_external_memory_fd\n\nAPI documentation\n\nstruct MemoryGetFdInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nmemory::DeviceMemory\nhandle_type::ExternalMemoryHandleTypeFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.MemoryGetFdInfoKHR-Tuple{DeviceMemory, ExternalMemoryHandleTypeFlag}","page":"API","title":"Vulkan.MemoryGetFdInfoKHR","text":"MemoryGetFdInfoKHR(memory::DeviceMemory, handle_type::ExternalMemoryHandleTypeFlag; next = C_NULL)\n\nExtension: VK_KHR_external_memory_fd\n\nArguments:\n\nmemory::DeviceMemory\nhandle_type::ExternalMemoryHandleTypeFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\nMemoryGetFdInfoKHR(memory::DeviceMemory, handle_type::ExternalMemoryHandleTypeFlag; next) -> MemoryGetFdInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.MemoryHeap","page":"API","title":"Vulkan.MemoryHeap","text":"High-level wrapper for VkMemoryHeap.\n\nAPI documentation\n\nstruct MemoryHeap <: Vulkan.HighLevelStruct\n\nsize::UInt64\nflags::MemoryHeapFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.MemoryHeap-Tuple{Integer}","page":"API","title":"Vulkan.MemoryHeap","text":"MemoryHeap(size::Integer; flags = 0)\n\nArguments:\n\nsize::Integer\nflags: defaults to 0\n\nAPI documentation\n\nMemoryHeap(size::Integer; flags) -> MemoryHeap\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.MemoryHostPointerPropertiesEXT","page":"API","title":"Vulkan.MemoryHostPointerPropertiesEXT","text":"High-level wrapper for VkMemoryHostPointerPropertiesEXT.\n\nExtension: VK_EXT_external_memory_host\n\nAPI documentation\n\nstruct MemoryHostPointerPropertiesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nmemory_type_bits::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.MemoryHostPointerPropertiesEXT-Tuple{Integer}","page":"API","title":"Vulkan.MemoryHostPointerPropertiesEXT","text":"MemoryHostPointerPropertiesEXT(memory_type_bits::Integer; next = C_NULL)\n\nExtension: VK_EXT_external_memory_host\n\nArguments:\n\nmemory_type_bits::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nMemoryHostPointerPropertiesEXT(memory_type_bits::Integer; next) -> MemoryHostPointerPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.MemoryOpaqueCaptureAddressAllocateInfo","page":"API","title":"Vulkan.MemoryOpaqueCaptureAddressAllocateInfo","text":"High-level wrapper for VkMemoryOpaqueCaptureAddressAllocateInfo.\n\nAPI documentation\n\nstruct MemoryOpaqueCaptureAddressAllocateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nopaque_capture_address::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.MemoryOpaqueCaptureAddressAllocateInfo-Tuple{Integer}","page":"API","title":"Vulkan.MemoryOpaqueCaptureAddressAllocateInfo","text":"MemoryOpaqueCaptureAddressAllocateInfo(opaque_capture_address::Integer; next = C_NULL)\n\nArguments:\n\nopaque_capture_address::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nMemoryOpaqueCaptureAddressAllocateInfo(opaque_capture_address::Integer; next) -> MemoryOpaqueCaptureAddressAllocateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.MemoryPriorityAllocateInfoEXT","page":"API","title":"Vulkan.MemoryPriorityAllocateInfoEXT","text":"High-level wrapper for VkMemoryPriorityAllocateInfoEXT.\n\nExtension: VK_EXT_memory_priority\n\nAPI documentation\n\nstruct MemoryPriorityAllocateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\npriority::Float32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.MemoryPriorityAllocateInfoEXT-Tuple{Real}","page":"API","title":"Vulkan.MemoryPriorityAllocateInfoEXT","text":"MemoryPriorityAllocateInfoEXT(priority::Real; next = C_NULL)\n\nExtension: VK_EXT_memory_priority\n\nArguments:\n\npriority::Real\nnext: defaults to C_NULL\n\nAPI documentation\n\nMemoryPriorityAllocateInfoEXT(priority::Real; next) -> MemoryPriorityAllocateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.MemoryRequirements","page":"API","title":"Vulkan.MemoryRequirements","text":"High-level wrapper for VkMemoryRequirements.\n\nAPI documentation\n\nstruct MemoryRequirements <: Vulkan.HighLevelStruct\n\nsize::UInt64\nalignment::UInt64\nmemory_type_bits::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.MemoryRequirements2","page":"API","title":"Vulkan.MemoryRequirements2","text":"High-level wrapper for VkMemoryRequirements2.\n\nAPI documentation\n\nstruct MemoryRequirements2 <: Vulkan.HighLevelStruct\n\nnext::Any\nmemory_requirements::MemoryRequirements\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.MemoryRequirements2-Tuple{MemoryRequirements}","page":"API","title":"Vulkan.MemoryRequirements2","text":"MemoryRequirements2(memory_requirements::MemoryRequirements; next = C_NULL)\n\nArguments:\n\nmemory_requirements::MemoryRequirements\nnext: defaults to C_NULL\n\nAPI documentation\n\nMemoryRequirements2(memory_requirements::MemoryRequirements; next) -> MemoryRequirements2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.MemoryType","page":"API","title":"Vulkan.MemoryType","text":"High-level wrapper for VkMemoryType.\n\nAPI documentation\n\nstruct MemoryType <: Vulkan.HighLevelStruct\n\nproperty_flags::MemoryPropertyFlag\nheap_index::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.MemoryType-Tuple{Integer}","page":"API","title":"Vulkan.MemoryType","text":"MemoryType(heap_index::Integer; property_flags = 0)\n\nArguments:\n\nheap_index::Integer\nproperty_flags: defaults to 0\n\nAPI documentation\n\nMemoryType(heap_index::Integer; property_flags) -> MemoryType\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.MultisamplePropertiesEXT","page":"API","title":"Vulkan.MultisamplePropertiesEXT","text":"High-level wrapper for VkMultisamplePropertiesEXT.\n\nExtension: VK_EXT_sample_locations\n\nAPI documentation\n\nstruct MultisamplePropertiesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nmax_sample_location_grid_size::Extent2D\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.MultisamplePropertiesEXT-Tuple{Extent2D}","page":"API","title":"Vulkan.MultisamplePropertiesEXT","text":"MultisamplePropertiesEXT(max_sample_location_grid_size::Extent2D; next = C_NULL)\n\nExtension: VK_EXT_sample_locations\n\nArguments:\n\nmax_sample_location_grid_size::Extent2D\nnext: defaults to C_NULL\n\nAPI documentation\n\nMultisamplePropertiesEXT(max_sample_location_grid_size::Extent2D; next) -> MultisamplePropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.MutableDescriptorTypeCreateInfoVALVE","page":"API","title":"Vulkan.MutableDescriptorTypeCreateInfoVALVE","text":"High-level wrapper for VkMutableDescriptorTypeCreateInfoVALVE.\n\nExtension: VK_VALVE_mutable_descriptor_type\n\nAPI documentation\n\nstruct MutableDescriptorTypeCreateInfoVALVE <: Vulkan.HighLevelStruct\n\nnext::Any\nmutable_descriptor_type_lists::Vector{MutableDescriptorTypeListVALVE}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.MutableDescriptorTypeCreateInfoVALVE-Tuple{AbstractArray}","page":"API","title":"Vulkan.MutableDescriptorTypeCreateInfoVALVE","text":"MutableDescriptorTypeCreateInfoVALVE(mutable_descriptor_type_lists::AbstractArray{MutableDescriptorTypeListVALVE}; next = C_NULL)\n\nExtension: VK_VALVE_mutable_descriptor_type\n\nArguments:\n\nmutable_descriptor_type_lists::AbstractArray{MutableDescriptorTypeListVALVE}\nnext: defaults to C_NULL\n\nAPI documentation\n\nMutableDescriptorTypeCreateInfoVALVE(mutable_descriptor_type_lists::AbstractArray; next) -> MutableDescriptorTypeCreateInfoVALVE\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.MutableDescriptorTypeListVALVE","page":"API","title":"Vulkan.MutableDescriptorTypeListVALVE","text":"High-level wrapper for VkMutableDescriptorTypeListVALVE.\n\nExtension: VK_VALVE_mutable_descriptor_type\n\nAPI documentation\n\nstruct MutableDescriptorTypeListVALVE <: Vulkan.HighLevelStruct\n\ndescriptor_types::Vector{DescriptorType}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.Offset2D","page":"API","title":"Vulkan.Offset2D","text":"High-level wrapper for VkOffset2D.\n\nAPI documentation\n\nstruct Offset2D <: Vulkan.HighLevelStruct\n\nx::Int32\ny::Int32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.Offset3D","page":"API","title":"Vulkan.Offset3D","text":"High-level wrapper for VkOffset3D.\n\nAPI documentation\n\nstruct Offset3D <: Vulkan.HighLevelStruct\n\nx::Int32\ny::Int32\nz::Int32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PastPresentationTimingGOOGLE","page":"API","title":"Vulkan.PastPresentationTimingGOOGLE","text":"High-level wrapper for VkPastPresentationTimingGOOGLE.\n\nExtension: VK_GOOGLE_display_timing\n\nAPI documentation\n\nstruct PastPresentationTimingGOOGLE <: Vulkan.HighLevelStruct\n\npresent_id::UInt32\ndesired_present_time::UInt64\nactual_present_time::UInt64\nearliest_present_time::UInt64\npresent_margin::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PerformanceConfigurationAcquireInfoINTEL","page":"API","title":"Vulkan.PerformanceConfigurationAcquireInfoINTEL","text":"High-level wrapper for VkPerformanceConfigurationAcquireInfoINTEL.\n\nExtension: VK_INTEL_performance_query\n\nAPI documentation\n\nstruct PerformanceConfigurationAcquireInfoINTEL <: Vulkan.HighLevelStruct\n\nnext::Any\ntype::PerformanceConfigurationTypeINTEL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PerformanceConfigurationAcquireInfoINTEL-Tuple{PerformanceConfigurationTypeINTEL}","page":"API","title":"Vulkan.PerformanceConfigurationAcquireInfoINTEL","text":"PerformanceConfigurationAcquireInfoINTEL(type::PerformanceConfigurationTypeINTEL; next = C_NULL)\n\nExtension: VK_INTEL_performance_query\n\nArguments:\n\ntype::PerformanceConfigurationTypeINTEL\nnext: defaults to C_NULL\n\nAPI documentation\n\nPerformanceConfigurationAcquireInfoINTEL(type::PerformanceConfigurationTypeINTEL; next) -> PerformanceConfigurationAcquireInfoINTEL\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PerformanceCounterDescriptionKHR","page":"API","title":"Vulkan.PerformanceCounterDescriptionKHR","text":"High-level wrapper for VkPerformanceCounterDescriptionKHR.\n\nExtension: VK_KHR_performance_query\n\nAPI documentation\n\nstruct PerformanceCounterDescriptionKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::PerformanceCounterDescriptionFlagKHR\nname::String\ncategory::String\ndescription::String\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PerformanceCounterDescriptionKHR-Tuple{AbstractString, AbstractString, AbstractString}","page":"API","title":"Vulkan.PerformanceCounterDescriptionKHR","text":"PerformanceCounterDescriptionKHR(name::AbstractString, category::AbstractString, description::AbstractString; next = C_NULL, flags = 0)\n\nExtension: VK_KHR_performance_query\n\nArguments:\n\nname::AbstractString\ncategory::AbstractString\ndescription::AbstractString\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nPerformanceCounterDescriptionKHR(name::AbstractString, category::AbstractString, description::AbstractString; next, flags) -> PerformanceCounterDescriptionKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PerformanceCounterKHR","page":"API","title":"Vulkan.PerformanceCounterKHR","text":"High-level wrapper for VkPerformanceCounterKHR.\n\nExtension: VK_KHR_performance_query\n\nAPI documentation\n\nstruct PerformanceCounterKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nunit::PerformanceCounterUnitKHR\nscope::PerformanceCounterScopeKHR\nstorage::PerformanceCounterStorageKHR\nuuid::NTuple{16, UInt8}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PerformanceCounterKHR-Tuple{PerformanceCounterUnitKHR, PerformanceCounterScopeKHR, PerformanceCounterStorageKHR, NTuple{16, UInt8}}","page":"API","title":"Vulkan.PerformanceCounterKHR","text":"PerformanceCounterKHR(unit::PerformanceCounterUnitKHR, scope::PerformanceCounterScopeKHR, storage::PerformanceCounterStorageKHR, uuid::NTuple{Int(VK_UUID_SIZE), UInt8}; next = C_NULL)\n\nExtension: VK_KHR_performance_query\n\nArguments:\n\nunit::PerformanceCounterUnitKHR\nscope::PerformanceCounterScopeKHR\nstorage::PerformanceCounterStorageKHR\nuuid::NTuple{Int(VK_UUID_SIZE), UInt8}\nnext: defaults to C_NULL\n\nAPI documentation\n\nPerformanceCounterKHR(unit::PerformanceCounterUnitKHR, scope::PerformanceCounterScopeKHR, storage::PerformanceCounterStorageKHR, uuid::NTuple{16, UInt8}; next) -> PerformanceCounterKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PerformanceCounterResultKHR","page":"API","title":"Vulkan.PerformanceCounterResultKHR","text":"High-level wrapper for VkPerformanceCounterResultKHR.\n\nExtension: VK_KHR_performance_query\n\nAPI documentation\n\nstruct PerformanceCounterResultKHR <: Vulkan.HighLevelStruct\n\nvks::VulkanCore.LibVulkan.VkPerformanceCounterResultKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PerformanceMarkerInfoINTEL","page":"API","title":"Vulkan.PerformanceMarkerInfoINTEL","text":"High-level wrapper for VkPerformanceMarkerInfoINTEL.\n\nExtension: VK_INTEL_performance_query\n\nAPI documentation\n\nstruct PerformanceMarkerInfoINTEL <: Vulkan.HighLevelStruct\n\nnext::Any\nmarker::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PerformanceMarkerInfoINTEL-Tuple{Integer}","page":"API","title":"Vulkan.PerformanceMarkerInfoINTEL","text":"PerformanceMarkerInfoINTEL(marker::Integer; next = C_NULL)\n\nExtension: VK_INTEL_performance_query\n\nArguments:\n\nmarker::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPerformanceMarkerInfoINTEL(marker::Integer; next) -> PerformanceMarkerInfoINTEL\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PerformanceOverrideInfoINTEL","page":"API","title":"Vulkan.PerformanceOverrideInfoINTEL","text":"High-level wrapper for VkPerformanceOverrideInfoINTEL.\n\nExtension: VK_INTEL_performance_query\n\nAPI documentation\n\nstruct PerformanceOverrideInfoINTEL <: Vulkan.HighLevelStruct\n\nnext::Any\ntype::PerformanceOverrideTypeINTEL\nenable::Bool\nparameter::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PerformanceOverrideInfoINTEL-Tuple{PerformanceOverrideTypeINTEL, Bool, Integer}","page":"API","title":"Vulkan.PerformanceOverrideInfoINTEL","text":"PerformanceOverrideInfoINTEL(type::PerformanceOverrideTypeINTEL, enable::Bool, parameter::Integer; next = C_NULL)\n\nExtension: VK_INTEL_performance_query\n\nArguments:\n\ntype::PerformanceOverrideTypeINTEL\nenable::Bool\nparameter::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPerformanceOverrideInfoINTEL(type::PerformanceOverrideTypeINTEL, enable::Bool, parameter::Integer; next) -> PerformanceOverrideInfoINTEL\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PerformanceQuerySubmitInfoKHR","page":"API","title":"Vulkan.PerformanceQuerySubmitInfoKHR","text":"High-level wrapper for VkPerformanceQuerySubmitInfoKHR.\n\nExtension: VK_KHR_performance_query\n\nAPI documentation\n\nstruct PerformanceQuerySubmitInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\ncounter_pass_index::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PerformanceQuerySubmitInfoKHR-Tuple{Integer}","page":"API","title":"Vulkan.PerformanceQuerySubmitInfoKHR","text":"PerformanceQuerySubmitInfoKHR(counter_pass_index::Integer; next = C_NULL)\n\nExtension: VK_KHR_performance_query\n\nArguments:\n\ncounter_pass_index::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPerformanceQuerySubmitInfoKHR(counter_pass_index::Integer; next) -> PerformanceQuerySubmitInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PerformanceStreamMarkerInfoINTEL","page":"API","title":"Vulkan.PerformanceStreamMarkerInfoINTEL","text":"High-level wrapper for VkPerformanceStreamMarkerInfoINTEL.\n\nExtension: VK_INTEL_performance_query\n\nAPI documentation\n\nstruct PerformanceStreamMarkerInfoINTEL <: Vulkan.HighLevelStruct\n\nnext::Any\nmarker::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PerformanceStreamMarkerInfoINTEL-Tuple{Integer}","page":"API","title":"Vulkan.PerformanceStreamMarkerInfoINTEL","text":"PerformanceStreamMarkerInfoINTEL(marker::Integer; next = C_NULL)\n\nExtension: VK_INTEL_performance_query\n\nArguments:\n\nmarker::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPerformanceStreamMarkerInfoINTEL(marker::Integer; next) -> PerformanceStreamMarkerInfoINTEL\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PerformanceValueDataINTEL","page":"API","title":"Vulkan.PerformanceValueDataINTEL","text":"High-level wrapper for VkPerformanceValueDataINTEL.\n\nExtension: VK_INTEL_performance_query\n\nAPI documentation\n\nstruct PerformanceValueDataINTEL <: Vulkan.HighLevelStruct\n\nvks::VulkanCore.LibVulkan.VkPerformanceValueDataINTEL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PerformanceValueINTEL","page":"API","title":"Vulkan.PerformanceValueINTEL","text":"High-level wrapper for VkPerformanceValueINTEL.\n\nExtension: VK_INTEL_performance_query\n\nAPI documentation\n\nstruct PerformanceValueINTEL <: Vulkan.HighLevelStruct\n\ntype::PerformanceValueTypeINTEL\ndata::PerformanceValueDataINTEL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDevice16BitStorageFeatures","page":"API","title":"Vulkan.PhysicalDevice16BitStorageFeatures","text":"High-level wrapper for VkPhysicalDevice16BitStorageFeatures.\n\nAPI documentation\n\nstruct PhysicalDevice16BitStorageFeatures <: Vulkan.HighLevelStruct\n\nnext::Any\nstorage_buffer_16_bit_access::Bool\nuniform_and_storage_buffer_16_bit_access::Bool\nstorage_push_constant_16::Bool\nstorage_input_output_16::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDevice16BitStorageFeatures-NTuple{4, Bool}","page":"API","title":"Vulkan.PhysicalDevice16BitStorageFeatures","text":"PhysicalDevice16BitStorageFeatures(storage_buffer_16_bit_access::Bool, uniform_and_storage_buffer_16_bit_access::Bool, storage_push_constant_16::Bool, storage_input_output_16::Bool; next = C_NULL)\n\nArguments:\n\nstorage_buffer_16_bit_access::Bool\nuniform_and_storage_buffer_16_bit_access::Bool\nstorage_push_constant_16::Bool\nstorage_input_output_16::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDevice16BitStorageFeatures(storage_buffer_16_bit_access::Bool, uniform_and_storage_buffer_16_bit_access::Bool, storage_push_constant_16::Bool, storage_input_output_16::Bool; next) -> PhysicalDevice16BitStorageFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDevice4444FormatsFeaturesEXT","page":"API","title":"Vulkan.PhysicalDevice4444FormatsFeaturesEXT","text":"High-level wrapper for VkPhysicalDevice4444FormatsFeaturesEXT.\n\nExtension: VK_EXT_4444_formats\n\nAPI documentation\n\nstruct PhysicalDevice4444FormatsFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nformat_a4r4g4b4::Bool\nformat_a4b4g4r4::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDevice4444FormatsFeaturesEXT-Tuple{Bool, Bool}","page":"API","title":"Vulkan.PhysicalDevice4444FormatsFeaturesEXT","text":"PhysicalDevice4444FormatsFeaturesEXT(format_a4r4g4b4::Bool, format_a4b4g4r4::Bool; next = C_NULL)\n\nExtension: VK_EXT_4444_formats\n\nArguments:\n\nformat_a4r4g4b4::Bool\nformat_a4b4g4r4::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDevice4444FormatsFeaturesEXT(format_a4r4g4b4::Bool, format_a4b4g4r4::Bool; next) -> PhysicalDevice4444FormatsFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDevice8BitStorageFeatures","page":"API","title":"Vulkan.PhysicalDevice8BitStorageFeatures","text":"High-level wrapper for VkPhysicalDevice8BitStorageFeatures.\n\nAPI documentation\n\nstruct PhysicalDevice8BitStorageFeatures <: Vulkan.HighLevelStruct\n\nnext::Any\nstorage_buffer_8_bit_access::Bool\nuniform_and_storage_buffer_8_bit_access::Bool\nstorage_push_constant_8::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDevice8BitStorageFeatures-Tuple{Bool, Bool, Bool}","page":"API","title":"Vulkan.PhysicalDevice8BitStorageFeatures","text":"PhysicalDevice8BitStorageFeatures(storage_buffer_8_bit_access::Bool, uniform_and_storage_buffer_8_bit_access::Bool, storage_push_constant_8::Bool; next = C_NULL)\n\nArguments:\n\nstorage_buffer_8_bit_access::Bool\nuniform_and_storage_buffer_8_bit_access::Bool\nstorage_push_constant_8::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDevice8BitStorageFeatures(storage_buffer_8_bit_access::Bool, uniform_and_storage_buffer_8_bit_access::Bool, storage_push_constant_8::Bool; next) -> PhysicalDevice8BitStorageFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceASTCDecodeFeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceASTCDecodeFeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceASTCDecodeFeaturesEXT.\n\nExtension: VK_EXT_astc_decode_mode\n\nAPI documentation\n\nstruct PhysicalDeviceASTCDecodeFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\ndecode_mode_shared_exponent::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceASTCDecodeFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceASTCDecodeFeaturesEXT","text":"PhysicalDeviceASTCDecodeFeaturesEXT(decode_mode_shared_exponent::Bool; next = C_NULL)\n\nExtension: VK_EXT_astc_decode_mode\n\nArguments:\n\ndecode_mode_shared_exponent::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceASTCDecodeFeaturesEXT(decode_mode_shared_exponent::Bool; next) -> PhysicalDeviceASTCDecodeFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceAccelerationStructureFeaturesKHR","page":"API","title":"Vulkan.PhysicalDeviceAccelerationStructureFeaturesKHR","text":"High-level wrapper for VkPhysicalDeviceAccelerationStructureFeaturesKHR.\n\nExtension: VK_KHR_acceleration_structure\n\nAPI documentation\n\nstruct PhysicalDeviceAccelerationStructureFeaturesKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nacceleration_structure::Bool\nacceleration_structure_capture_replay::Bool\nacceleration_structure_indirect_build::Bool\nacceleration_structure_host_commands::Bool\ndescriptor_binding_acceleration_structure_update_after_bind::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceAccelerationStructureFeaturesKHR-NTuple{5, Bool}","page":"API","title":"Vulkan.PhysicalDeviceAccelerationStructureFeaturesKHR","text":"PhysicalDeviceAccelerationStructureFeaturesKHR(acceleration_structure::Bool, acceleration_structure_capture_replay::Bool, acceleration_structure_indirect_build::Bool, acceleration_structure_host_commands::Bool, descriptor_binding_acceleration_structure_update_after_bind::Bool; next = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\nacceleration_structure::Bool\nacceleration_structure_capture_replay::Bool\nacceleration_structure_indirect_build::Bool\nacceleration_structure_host_commands::Bool\ndescriptor_binding_acceleration_structure_update_after_bind::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceAccelerationStructureFeaturesKHR(acceleration_structure::Bool, acceleration_structure_capture_replay::Bool, acceleration_structure_indirect_build::Bool, acceleration_structure_host_commands::Bool, descriptor_binding_acceleration_structure_update_after_bind::Bool; next) -> PhysicalDeviceAccelerationStructureFeaturesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceAccelerationStructurePropertiesKHR","page":"API","title":"Vulkan.PhysicalDeviceAccelerationStructurePropertiesKHR","text":"High-level wrapper for VkPhysicalDeviceAccelerationStructurePropertiesKHR.\n\nExtension: VK_KHR_acceleration_structure\n\nAPI documentation\n\nstruct PhysicalDeviceAccelerationStructurePropertiesKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nmax_geometry_count::UInt64\nmax_instance_count::UInt64\nmax_primitive_count::UInt64\nmax_per_stage_descriptor_acceleration_structures::UInt32\nmax_per_stage_descriptor_update_after_bind_acceleration_structures::UInt32\nmax_descriptor_set_acceleration_structures::UInt32\nmax_descriptor_set_update_after_bind_acceleration_structures::UInt32\nmin_acceleration_structure_scratch_offset_alignment::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceAccelerationStructurePropertiesKHR-NTuple{8, Integer}","page":"API","title":"Vulkan.PhysicalDeviceAccelerationStructurePropertiesKHR","text":"PhysicalDeviceAccelerationStructurePropertiesKHR(max_geometry_count::Integer, max_instance_count::Integer, max_primitive_count::Integer, max_per_stage_descriptor_acceleration_structures::Integer, max_per_stage_descriptor_update_after_bind_acceleration_structures::Integer, max_descriptor_set_acceleration_structures::Integer, max_descriptor_set_update_after_bind_acceleration_structures::Integer, min_acceleration_structure_scratch_offset_alignment::Integer; next = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\nmax_geometry_count::Integer\nmax_instance_count::Integer\nmax_primitive_count::Integer\nmax_per_stage_descriptor_acceleration_structures::Integer\nmax_per_stage_descriptor_update_after_bind_acceleration_structures::Integer\nmax_descriptor_set_acceleration_structures::Integer\nmax_descriptor_set_update_after_bind_acceleration_structures::Integer\nmin_acceleration_structure_scratch_offset_alignment::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceAccelerationStructurePropertiesKHR(max_geometry_count::Integer, max_instance_count::Integer, max_primitive_count::Integer, max_per_stage_descriptor_acceleration_structures::Integer, max_per_stage_descriptor_update_after_bind_acceleration_structures::Integer, max_descriptor_set_acceleration_structures::Integer, max_descriptor_set_update_after_bind_acceleration_structures::Integer, min_acceleration_structure_scratch_offset_alignment::Integer; next) -> PhysicalDeviceAccelerationStructurePropertiesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceBlendOperationAdvancedFeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceBlendOperationAdvancedFeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT.\n\nExtension: VK_EXT_blend_operation_advanced\n\nAPI documentation\n\nstruct PhysicalDeviceBlendOperationAdvancedFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nadvanced_blend_coherent_operations::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceBlendOperationAdvancedFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceBlendOperationAdvancedFeaturesEXT","text":"PhysicalDeviceBlendOperationAdvancedFeaturesEXT(advanced_blend_coherent_operations::Bool; next = C_NULL)\n\nExtension: VK_EXT_blend_operation_advanced\n\nArguments:\n\nadvanced_blend_coherent_operations::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceBlendOperationAdvancedFeaturesEXT(advanced_blend_coherent_operations::Bool; next) -> PhysicalDeviceBlendOperationAdvancedFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceBlendOperationAdvancedPropertiesEXT","page":"API","title":"Vulkan.PhysicalDeviceBlendOperationAdvancedPropertiesEXT","text":"High-level wrapper for VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT.\n\nExtension: VK_EXT_blend_operation_advanced\n\nAPI documentation\n\nstruct PhysicalDeviceBlendOperationAdvancedPropertiesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nadvanced_blend_max_color_attachments::UInt32\nadvanced_blend_independent_blend::Bool\nadvanced_blend_non_premultiplied_src_color::Bool\nadvanced_blend_non_premultiplied_dst_color::Bool\nadvanced_blend_correlated_overlap::Bool\nadvanced_blend_all_operations::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceBlendOperationAdvancedPropertiesEXT-Tuple{Integer, Bool, Bool, Bool, Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceBlendOperationAdvancedPropertiesEXT","text":"PhysicalDeviceBlendOperationAdvancedPropertiesEXT(advanced_blend_max_color_attachments::Integer, advanced_blend_independent_blend::Bool, advanced_blend_non_premultiplied_src_color::Bool, advanced_blend_non_premultiplied_dst_color::Bool, advanced_blend_correlated_overlap::Bool, advanced_blend_all_operations::Bool; next = C_NULL)\n\nExtension: VK_EXT_blend_operation_advanced\n\nArguments:\n\nadvanced_blend_max_color_attachments::Integer\nadvanced_blend_independent_blend::Bool\nadvanced_blend_non_premultiplied_src_color::Bool\nadvanced_blend_non_premultiplied_dst_color::Bool\nadvanced_blend_correlated_overlap::Bool\nadvanced_blend_all_operations::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceBlendOperationAdvancedPropertiesEXT(advanced_blend_max_color_attachments::Integer, advanced_blend_independent_blend::Bool, advanced_blend_non_premultiplied_src_color::Bool, advanced_blend_non_premultiplied_dst_color::Bool, advanced_blend_correlated_overlap::Bool, advanced_blend_all_operations::Bool; next) -> PhysicalDeviceBlendOperationAdvancedPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceBufferDeviceAddressFeatures","page":"API","title":"Vulkan.PhysicalDeviceBufferDeviceAddressFeatures","text":"High-level wrapper for VkPhysicalDeviceBufferDeviceAddressFeatures.\n\nAPI documentation\n\nstruct PhysicalDeviceBufferDeviceAddressFeatures <: Vulkan.HighLevelStruct\n\nnext::Any\nbuffer_device_address::Bool\nbuffer_device_address_capture_replay::Bool\nbuffer_device_address_multi_device::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceBufferDeviceAddressFeatures-Tuple{Bool, Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceBufferDeviceAddressFeatures","text":"PhysicalDeviceBufferDeviceAddressFeatures(buffer_device_address::Bool, buffer_device_address_capture_replay::Bool, buffer_device_address_multi_device::Bool; next = C_NULL)\n\nArguments:\n\nbuffer_device_address::Bool\nbuffer_device_address_capture_replay::Bool\nbuffer_device_address_multi_device::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceBufferDeviceAddressFeatures(buffer_device_address::Bool, buffer_device_address_capture_replay::Bool, buffer_device_address_multi_device::Bool; next) -> PhysicalDeviceBufferDeviceAddressFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceBufferDeviceAddressFeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceBufferDeviceAddressFeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceBufferDeviceAddressFeaturesEXT.\n\nExtension: VK_EXT_buffer_device_address\n\nAPI documentation\n\nstruct PhysicalDeviceBufferDeviceAddressFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nbuffer_device_address::Bool\nbuffer_device_address_capture_replay::Bool\nbuffer_device_address_multi_device::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceBufferDeviceAddressFeaturesEXT-Tuple{Bool, Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceBufferDeviceAddressFeaturesEXT","text":"PhysicalDeviceBufferDeviceAddressFeaturesEXT(buffer_device_address::Bool, buffer_device_address_capture_replay::Bool, buffer_device_address_multi_device::Bool; next = C_NULL)\n\nExtension: VK_EXT_buffer_device_address\n\nArguments:\n\nbuffer_device_address::Bool\nbuffer_device_address_capture_replay::Bool\nbuffer_device_address_multi_device::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceBufferDeviceAddressFeaturesEXT(buffer_device_address::Bool, buffer_device_address_capture_replay::Bool, buffer_device_address_multi_device::Bool; next) -> PhysicalDeviceBufferDeviceAddressFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceCoherentMemoryFeaturesAMD","page":"API","title":"Vulkan.PhysicalDeviceCoherentMemoryFeaturesAMD","text":"High-level wrapper for VkPhysicalDeviceCoherentMemoryFeaturesAMD.\n\nExtension: VK_AMD_device_coherent_memory\n\nAPI documentation\n\nstruct PhysicalDeviceCoherentMemoryFeaturesAMD <: Vulkan.HighLevelStruct\n\nnext::Any\ndevice_coherent_memory::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceCoherentMemoryFeaturesAMD-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceCoherentMemoryFeaturesAMD","text":"PhysicalDeviceCoherentMemoryFeaturesAMD(device_coherent_memory::Bool; next = C_NULL)\n\nExtension: VK_AMD_device_coherent_memory\n\nArguments:\n\ndevice_coherent_memory::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceCoherentMemoryFeaturesAMD(device_coherent_memory::Bool; next) -> PhysicalDeviceCoherentMemoryFeaturesAMD\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceColorWriteEnableFeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceColorWriteEnableFeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceColorWriteEnableFeaturesEXT.\n\nExtension: VK_EXT_color_write_enable\n\nAPI documentation\n\nstruct PhysicalDeviceColorWriteEnableFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\ncolor_write_enable::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceColorWriteEnableFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceColorWriteEnableFeaturesEXT","text":"PhysicalDeviceColorWriteEnableFeaturesEXT(color_write_enable::Bool; next = C_NULL)\n\nExtension: VK_EXT_color_write_enable\n\nArguments:\n\ncolor_write_enable::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceColorWriteEnableFeaturesEXT(color_write_enable::Bool; next) -> PhysicalDeviceColorWriteEnableFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceComputeShaderDerivativesFeaturesNV","page":"API","title":"Vulkan.PhysicalDeviceComputeShaderDerivativesFeaturesNV","text":"High-level wrapper for VkPhysicalDeviceComputeShaderDerivativesFeaturesNV.\n\nExtension: VK_NV_compute_shader_derivatives\n\nAPI documentation\n\nstruct PhysicalDeviceComputeShaderDerivativesFeaturesNV <: Vulkan.HighLevelStruct\n\nnext::Any\ncompute_derivative_group_quads::Bool\ncompute_derivative_group_linear::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceComputeShaderDerivativesFeaturesNV-Tuple{Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceComputeShaderDerivativesFeaturesNV","text":"PhysicalDeviceComputeShaderDerivativesFeaturesNV(compute_derivative_group_quads::Bool, compute_derivative_group_linear::Bool; next = C_NULL)\n\nExtension: VK_NV_compute_shader_derivatives\n\nArguments:\n\ncompute_derivative_group_quads::Bool\ncompute_derivative_group_linear::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceComputeShaderDerivativesFeaturesNV(compute_derivative_group_quads::Bool, compute_derivative_group_linear::Bool; next) -> PhysicalDeviceComputeShaderDerivativesFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceConditionalRenderingFeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceConditionalRenderingFeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceConditionalRenderingFeaturesEXT.\n\nExtension: VK_EXT_conditional_rendering\n\nAPI documentation\n\nstruct PhysicalDeviceConditionalRenderingFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nconditional_rendering::Bool\ninherited_conditional_rendering::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceConditionalRenderingFeaturesEXT-Tuple{Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceConditionalRenderingFeaturesEXT","text":"PhysicalDeviceConditionalRenderingFeaturesEXT(conditional_rendering::Bool, inherited_conditional_rendering::Bool; next = C_NULL)\n\nExtension: VK_EXT_conditional_rendering\n\nArguments:\n\nconditional_rendering::Bool\ninherited_conditional_rendering::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceConditionalRenderingFeaturesEXT(conditional_rendering::Bool, inherited_conditional_rendering::Bool; next) -> PhysicalDeviceConditionalRenderingFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceConservativeRasterizationPropertiesEXT","page":"API","title":"Vulkan.PhysicalDeviceConservativeRasterizationPropertiesEXT","text":"High-level wrapper for VkPhysicalDeviceConservativeRasterizationPropertiesEXT.\n\nExtension: VK_EXT_conservative_rasterization\n\nAPI documentation\n\nstruct PhysicalDeviceConservativeRasterizationPropertiesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nprimitive_overestimation_size::Float32\nmax_extra_primitive_overestimation_size::Float32\nextra_primitive_overestimation_size_granularity::Float32\nprimitive_underestimation::Bool\nconservative_point_and_line_rasterization::Bool\ndegenerate_triangles_rasterized::Bool\ndegenerate_lines_rasterized::Bool\nfully_covered_fragment_shader_input_variable::Bool\nconservative_rasterization_post_depth_coverage::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceConservativeRasterizationPropertiesEXT-Tuple{Real, Real, Real, Bool, Bool, Bool, Bool, Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceConservativeRasterizationPropertiesEXT","text":"PhysicalDeviceConservativeRasterizationPropertiesEXT(primitive_overestimation_size::Real, max_extra_primitive_overestimation_size::Real, extra_primitive_overestimation_size_granularity::Real, primitive_underestimation::Bool, conservative_point_and_line_rasterization::Bool, degenerate_triangles_rasterized::Bool, degenerate_lines_rasterized::Bool, fully_covered_fragment_shader_input_variable::Bool, conservative_rasterization_post_depth_coverage::Bool; next = C_NULL)\n\nExtension: VK_EXT_conservative_rasterization\n\nArguments:\n\nprimitive_overestimation_size::Real\nmax_extra_primitive_overestimation_size::Real\nextra_primitive_overestimation_size_granularity::Real\nprimitive_underestimation::Bool\nconservative_point_and_line_rasterization::Bool\ndegenerate_triangles_rasterized::Bool\ndegenerate_lines_rasterized::Bool\nfully_covered_fragment_shader_input_variable::Bool\nconservative_rasterization_post_depth_coverage::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceConservativeRasterizationPropertiesEXT(primitive_overestimation_size::Real, max_extra_primitive_overestimation_size::Real, extra_primitive_overestimation_size_granularity::Real, primitive_underestimation::Bool, conservative_point_and_line_rasterization::Bool, degenerate_triangles_rasterized::Bool, degenerate_lines_rasterized::Bool, fully_covered_fragment_shader_input_variable::Bool, conservative_rasterization_post_depth_coverage::Bool; next) -> PhysicalDeviceConservativeRasterizationPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceCooperativeMatrixFeaturesNV","page":"API","title":"Vulkan.PhysicalDeviceCooperativeMatrixFeaturesNV","text":"High-level wrapper for VkPhysicalDeviceCooperativeMatrixFeaturesNV.\n\nExtension: VK_NV_cooperative_matrix\n\nAPI documentation\n\nstruct PhysicalDeviceCooperativeMatrixFeaturesNV <: Vulkan.HighLevelStruct\n\nnext::Any\ncooperative_matrix::Bool\ncooperative_matrix_robust_buffer_access::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceCooperativeMatrixFeaturesNV-Tuple{Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceCooperativeMatrixFeaturesNV","text":"PhysicalDeviceCooperativeMatrixFeaturesNV(cooperative_matrix::Bool, cooperative_matrix_robust_buffer_access::Bool; next = C_NULL)\n\nExtension: VK_NV_cooperative_matrix\n\nArguments:\n\ncooperative_matrix::Bool\ncooperative_matrix_robust_buffer_access::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceCooperativeMatrixFeaturesNV(cooperative_matrix::Bool, cooperative_matrix_robust_buffer_access::Bool; next) -> PhysicalDeviceCooperativeMatrixFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceCooperativeMatrixPropertiesNV","page":"API","title":"Vulkan.PhysicalDeviceCooperativeMatrixPropertiesNV","text":"High-level wrapper for VkPhysicalDeviceCooperativeMatrixPropertiesNV.\n\nExtension: VK_NV_cooperative_matrix\n\nAPI documentation\n\nstruct PhysicalDeviceCooperativeMatrixPropertiesNV <: Vulkan.HighLevelStruct\n\nnext::Any\ncooperative_matrix_supported_stages::ShaderStageFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceCooperativeMatrixPropertiesNV-Tuple{ShaderStageFlag}","page":"API","title":"Vulkan.PhysicalDeviceCooperativeMatrixPropertiesNV","text":"PhysicalDeviceCooperativeMatrixPropertiesNV(cooperative_matrix_supported_stages::ShaderStageFlag; next = C_NULL)\n\nExtension: VK_NV_cooperative_matrix\n\nArguments:\n\ncooperative_matrix_supported_stages::ShaderStageFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceCooperativeMatrixPropertiesNV(cooperative_matrix_supported_stages::ShaderStageFlag; next) -> PhysicalDeviceCooperativeMatrixPropertiesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceCornerSampledImageFeaturesNV","page":"API","title":"Vulkan.PhysicalDeviceCornerSampledImageFeaturesNV","text":"High-level wrapper for VkPhysicalDeviceCornerSampledImageFeaturesNV.\n\nExtension: VK_NV_corner_sampled_image\n\nAPI documentation\n\nstruct PhysicalDeviceCornerSampledImageFeaturesNV <: Vulkan.HighLevelStruct\n\nnext::Any\ncorner_sampled_image::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceCornerSampledImageFeaturesNV-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceCornerSampledImageFeaturesNV","text":"PhysicalDeviceCornerSampledImageFeaturesNV(corner_sampled_image::Bool; next = C_NULL)\n\nExtension: VK_NV_corner_sampled_image\n\nArguments:\n\ncorner_sampled_image::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceCornerSampledImageFeaturesNV(corner_sampled_image::Bool; next) -> PhysicalDeviceCornerSampledImageFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceCoverageReductionModeFeaturesNV","page":"API","title":"Vulkan.PhysicalDeviceCoverageReductionModeFeaturesNV","text":"High-level wrapper for VkPhysicalDeviceCoverageReductionModeFeaturesNV.\n\nExtension: VK_NV_coverage_reduction_mode\n\nAPI documentation\n\nstruct PhysicalDeviceCoverageReductionModeFeaturesNV <: Vulkan.HighLevelStruct\n\nnext::Any\ncoverage_reduction_mode::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceCoverageReductionModeFeaturesNV-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceCoverageReductionModeFeaturesNV","text":"PhysicalDeviceCoverageReductionModeFeaturesNV(coverage_reduction_mode::Bool; next = C_NULL)\n\nExtension: VK_NV_coverage_reduction_mode\n\nArguments:\n\ncoverage_reduction_mode::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceCoverageReductionModeFeaturesNV(coverage_reduction_mode::Bool; next) -> PhysicalDeviceCoverageReductionModeFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceCustomBorderColorFeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceCustomBorderColorFeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceCustomBorderColorFeaturesEXT.\n\nExtension: VK_EXT_custom_border_color\n\nAPI documentation\n\nstruct PhysicalDeviceCustomBorderColorFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\ncustom_border_colors::Bool\ncustom_border_color_without_format::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceCustomBorderColorFeaturesEXT-Tuple{Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceCustomBorderColorFeaturesEXT","text":"PhysicalDeviceCustomBorderColorFeaturesEXT(custom_border_colors::Bool, custom_border_color_without_format::Bool; next = C_NULL)\n\nExtension: VK_EXT_custom_border_color\n\nArguments:\n\ncustom_border_colors::Bool\ncustom_border_color_without_format::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceCustomBorderColorFeaturesEXT(custom_border_colors::Bool, custom_border_color_without_format::Bool; next) -> PhysicalDeviceCustomBorderColorFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceCustomBorderColorPropertiesEXT","page":"API","title":"Vulkan.PhysicalDeviceCustomBorderColorPropertiesEXT","text":"High-level wrapper for VkPhysicalDeviceCustomBorderColorPropertiesEXT.\n\nExtension: VK_EXT_custom_border_color\n\nAPI documentation\n\nstruct PhysicalDeviceCustomBorderColorPropertiesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nmax_custom_border_color_samplers::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceCustomBorderColorPropertiesEXT-Tuple{Integer}","page":"API","title":"Vulkan.PhysicalDeviceCustomBorderColorPropertiesEXT","text":"PhysicalDeviceCustomBorderColorPropertiesEXT(max_custom_border_color_samplers::Integer; next = C_NULL)\n\nExtension: VK_EXT_custom_border_color\n\nArguments:\n\nmax_custom_border_color_samplers::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceCustomBorderColorPropertiesEXT(max_custom_border_color_samplers::Integer; next) -> PhysicalDeviceCustomBorderColorPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV","page":"API","title":"Vulkan.PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV","text":"High-level wrapper for VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV.\n\nExtension: VK_NV_dedicated_allocation_image_aliasing\n\nAPI documentation\n\nstruct PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV <: Vulkan.HighLevelStruct\n\nnext::Any\ndedicated_allocation_image_aliasing::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV","text":"PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV(dedicated_allocation_image_aliasing::Bool; next = C_NULL)\n\nExtension: VK_NV_dedicated_allocation_image_aliasing\n\nArguments:\n\ndedicated_allocation_image_aliasing::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV(dedicated_allocation_image_aliasing::Bool; next) -> PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceDepthClipEnableFeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceDepthClipEnableFeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceDepthClipEnableFeaturesEXT.\n\nExtension: VK_EXT_depth_clip_enable\n\nAPI documentation\n\nstruct PhysicalDeviceDepthClipEnableFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\ndepth_clip_enable::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceDepthClipEnableFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceDepthClipEnableFeaturesEXT","text":"PhysicalDeviceDepthClipEnableFeaturesEXT(depth_clip_enable::Bool; next = C_NULL)\n\nExtension: VK_EXT_depth_clip_enable\n\nArguments:\n\ndepth_clip_enable::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceDepthClipEnableFeaturesEXT(depth_clip_enable::Bool; next) -> PhysicalDeviceDepthClipEnableFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceDepthStencilResolveProperties","page":"API","title":"Vulkan.PhysicalDeviceDepthStencilResolveProperties","text":"High-level wrapper for VkPhysicalDeviceDepthStencilResolveProperties.\n\nAPI documentation\n\nstruct PhysicalDeviceDepthStencilResolveProperties <: Vulkan.HighLevelStruct\n\nnext::Any\nsupported_depth_resolve_modes::ResolveModeFlag\nsupported_stencil_resolve_modes::ResolveModeFlag\nindependent_resolve_none::Bool\nindependent_resolve::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceDepthStencilResolveProperties-Tuple{ResolveModeFlag, ResolveModeFlag, Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceDepthStencilResolveProperties","text":"PhysicalDeviceDepthStencilResolveProperties(supported_depth_resolve_modes::ResolveModeFlag, supported_stencil_resolve_modes::ResolveModeFlag, independent_resolve_none::Bool, independent_resolve::Bool; next = C_NULL)\n\nArguments:\n\nsupported_depth_resolve_modes::ResolveModeFlag\nsupported_stencil_resolve_modes::ResolveModeFlag\nindependent_resolve_none::Bool\nindependent_resolve::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceDepthStencilResolveProperties(supported_depth_resolve_modes::ResolveModeFlag, supported_stencil_resolve_modes::ResolveModeFlag, independent_resolve_none::Bool, independent_resolve::Bool; next) -> PhysicalDeviceDepthStencilResolveProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceDescriptorIndexingFeatures","page":"API","title":"Vulkan.PhysicalDeviceDescriptorIndexingFeatures","text":"High-level wrapper for VkPhysicalDeviceDescriptorIndexingFeatures.\n\nAPI documentation\n\nstruct PhysicalDeviceDescriptorIndexingFeatures <: Vulkan.HighLevelStruct\n\nnext::Any\nshader_input_attachment_array_dynamic_indexing::Bool\nshader_uniform_texel_buffer_array_dynamic_indexing::Bool\nshader_storage_texel_buffer_array_dynamic_indexing::Bool\nshader_uniform_buffer_array_non_uniform_indexing::Bool\nshader_sampled_image_array_non_uniform_indexing::Bool\nshader_storage_buffer_array_non_uniform_indexing::Bool\nshader_storage_image_array_non_uniform_indexing::Bool\nshader_input_attachment_array_non_uniform_indexing::Bool\nshader_uniform_texel_buffer_array_non_uniform_indexing::Bool\nshader_storage_texel_buffer_array_non_uniform_indexing::Bool\ndescriptor_binding_uniform_buffer_update_after_bind::Bool\ndescriptor_binding_sampled_image_update_after_bind::Bool\ndescriptor_binding_storage_image_update_after_bind::Bool\ndescriptor_binding_storage_buffer_update_after_bind::Bool\ndescriptor_binding_uniform_texel_buffer_update_after_bind::Bool\ndescriptor_binding_storage_texel_buffer_update_after_bind::Bool\ndescriptor_binding_update_unused_while_pending::Bool\ndescriptor_binding_partially_bound::Bool\ndescriptor_binding_variable_descriptor_count::Bool\nruntime_descriptor_array::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceDescriptorIndexingFeatures-NTuple{20, Bool}","page":"API","title":"Vulkan.PhysicalDeviceDescriptorIndexingFeatures","text":"PhysicalDeviceDescriptorIndexingFeatures(shader_input_attachment_array_dynamic_indexing::Bool, shader_uniform_texel_buffer_array_dynamic_indexing::Bool, shader_storage_texel_buffer_array_dynamic_indexing::Bool, shader_uniform_buffer_array_non_uniform_indexing::Bool, shader_sampled_image_array_non_uniform_indexing::Bool, shader_storage_buffer_array_non_uniform_indexing::Bool, shader_storage_image_array_non_uniform_indexing::Bool, shader_input_attachment_array_non_uniform_indexing::Bool, shader_uniform_texel_buffer_array_non_uniform_indexing::Bool, shader_storage_texel_buffer_array_non_uniform_indexing::Bool, descriptor_binding_uniform_buffer_update_after_bind::Bool, descriptor_binding_sampled_image_update_after_bind::Bool, descriptor_binding_storage_image_update_after_bind::Bool, descriptor_binding_storage_buffer_update_after_bind::Bool, descriptor_binding_uniform_texel_buffer_update_after_bind::Bool, descriptor_binding_storage_texel_buffer_update_after_bind::Bool, descriptor_binding_update_unused_while_pending::Bool, descriptor_binding_partially_bound::Bool, descriptor_binding_variable_descriptor_count::Bool, runtime_descriptor_array::Bool; next = C_NULL)\n\nArguments:\n\nshader_input_attachment_array_dynamic_indexing::Bool\nshader_uniform_texel_buffer_array_dynamic_indexing::Bool\nshader_storage_texel_buffer_array_dynamic_indexing::Bool\nshader_uniform_buffer_array_non_uniform_indexing::Bool\nshader_sampled_image_array_non_uniform_indexing::Bool\nshader_storage_buffer_array_non_uniform_indexing::Bool\nshader_storage_image_array_non_uniform_indexing::Bool\nshader_input_attachment_array_non_uniform_indexing::Bool\nshader_uniform_texel_buffer_array_non_uniform_indexing::Bool\nshader_storage_texel_buffer_array_non_uniform_indexing::Bool\ndescriptor_binding_uniform_buffer_update_after_bind::Bool\ndescriptor_binding_sampled_image_update_after_bind::Bool\ndescriptor_binding_storage_image_update_after_bind::Bool\ndescriptor_binding_storage_buffer_update_after_bind::Bool\ndescriptor_binding_uniform_texel_buffer_update_after_bind::Bool\ndescriptor_binding_storage_texel_buffer_update_after_bind::Bool\ndescriptor_binding_update_unused_while_pending::Bool\ndescriptor_binding_partially_bound::Bool\ndescriptor_binding_variable_descriptor_count::Bool\nruntime_descriptor_array::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceDescriptorIndexingFeatures(shader_input_attachment_array_dynamic_indexing::Bool, shader_uniform_texel_buffer_array_dynamic_indexing::Bool, shader_storage_texel_buffer_array_dynamic_indexing::Bool, shader_uniform_buffer_array_non_uniform_indexing::Bool, shader_sampled_image_array_non_uniform_indexing::Bool, shader_storage_buffer_array_non_uniform_indexing::Bool, shader_storage_image_array_non_uniform_indexing::Bool, shader_input_attachment_array_non_uniform_indexing::Bool, shader_uniform_texel_buffer_array_non_uniform_indexing::Bool, shader_storage_texel_buffer_array_non_uniform_indexing::Bool, descriptor_binding_uniform_buffer_update_after_bind::Bool, descriptor_binding_sampled_image_update_after_bind::Bool, descriptor_binding_storage_image_update_after_bind::Bool, descriptor_binding_storage_buffer_update_after_bind::Bool, descriptor_binding_uniform_texel_buffer_update_after_bind::Bool, descriptor_binding_storage_texel_buffer_update_after_bind::Bool, descriptor_binding_update_unused_while_pending::Bool, descriptor_binding_partially_bound::Bool, descriptor_binding_variable_descriptor_count::Bool, runtime_descriptor_array::Bool; next) -> PhysicalDeviceDescriptorIndexingFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceDescriptorIndexingProperties","page":"API","title":"Vulkan.PhysicalDeviceDescriptorIndexingProperties","text":"High-level wrapper for VkPhysicalDeviceDescriptorIndexingProperties.\n\nAPI documentation\n\nstruct PhysicalDeviceDescriptorIndexingProperties <: Vulkan.HighLevelStruct\n\nnext::Any\nmax_update_after_bind_descriptors_in_all_pools::UInt32\nshader_uniform_buffer_array_non_uniform_indexing_native::Bool\nshader_sampled_image_array_non_uniform_indexing_native::Bool\nshader_storage_buffer_array_non_uniform_indexing_native::Bool\nshader_storage_image_array_non_uniform_indexing_native::Bool\nshader_input_attachment_array_non_uniform_indexing_native::Bool\nrobust_buffer_access_update_after_bind::Bool\nquad_divergent_implicit_lod::Bool\nmax_per_stage_descriptor_update_after_bind_samplers::UInt32\nmax_per_stage_descriptor_update_after_bind_uniform_buffers::UInt32\nmax_per_stage_descriptor_update_after_bind_storage_buffers::UInt32\nmax_per_stage_descriptor_update_after_bind_sampled_images::UInt32\nmax_per_stage_descriptor_update_after_bind_storage_images::UInt32\nmax_per_stage_descriptor_update_after_bind_input_attachments::UInt32\nmax_per_stage_update_after_bind_resources::UInt32\nmax_descriptor_set_update_after_bind_samplers::UInt32\nmax_descriptor_set_update_after_bind_uniform_buffers::UInt32\nmax_descriptor_set_update_after_bind_uniform_buffers_dynamic::UInt32\nmax_descriptor_set_update_after_bind_storage_buffers::UInt32\nmax_descriptor_set_update_after_bind_storage_buffers_dynamic::UInt32\nmax_descriptor_set_update_after_bind_sampled_images::UInt32\nmax_descriptor_set_update_after_bind_storage_images::UInt32\nmax_descriptor_set_update_after_bind_input_attachments::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceDescriptorIndexingProperties-Tuple{Integer, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer}","page":"API","title":"Vulkan.PhysicalDeviceDescriptorIndexingProperties","text":"PhysicalDeviceDescriptorIndexingProperties(max_update_after_bind_descriptors_in_all_pools::Integer, shader_uniform_buffer_array_non_uniform_indexing_native::Bool, shader_sampled_image_array_non_uniform_indexing_native::Bool, shader_storage_buffer_array_non_uniform_indexing_native::Bool, shader_storage_image_array_non_uniform_indexing_native::Bool, shader_input_attachment_array_non_uniform_indexing_native::Bool, robust_buffer_access_update_after_bind::Bool, quad_divergent_implicit_lod::Bool, max_per_stage_descriptor_update_after_bind_samplers::Integer, max_per_stage_descriptor_update_after_bind_uniform_buffers::Integer, max_per_stage_descriptor_update_after_bind_storage_buffers::Integer, max_per_stage_descriptor_update_after_bind_sampled_images::Integer, max_per_stage_descriptor_update_after_bind_storage_images::Integer, max_per_stage_descriptor_update_after_bind_input_attachments::Integer, max_per_stage_update_after_bind_resources::Integer, max_descriptor_set_update_after_bind_samplers::Integer, max_descriptor_set_update_after_bind_uniform_buffers::Integer, max_descriptor_set_update_after_bind_uniform_buffers_dynamic::Integer, max_descriptor_set_update_after_bind_storage_buffers::Integer, max_descriptor_set_update_after_bind_storage_buffers_dynamic::Integer, max_descriptor_set_update_after_bind_sampled_images::Integer, max_descriptor_set_update_after_bind_storage_images::Integer, max_descriptor_set_update_after_bind_input_attachments::Integer; next = C_NULL)\n\nArguments:\n\nmax_update_after_bind_descriptors_in_all_pools::Integer\nshader_uniform_buffer_array_non_uniform_indexing_native::Bool\nshader_sampled_image_array_non_uniform_indexing_native::Bool\nshader_storage_buffer_array_non_uniform_indexing_native::Bool\nshader_storage_image_array_non_uniform_indexing_native::Bool\nshader_input_attachment_array_non_uniform_indexing_native::Bool\nrobust_buffer_access_update_after_bind::Bool\nquad_divergent_implicit_lod::Bool\nmax_per_stage_descriptor_update_after_bind_samplers::Integer\nmax_per_stage_descriptor_update_after_bind_uniform_buffers::Integer\nmax_per_stage_descriptor_update_after_bind_storage_buffers::Integer\nmax_per_stage_descriptor_update_after_bind_sampled_images::Integer\nmax_per_stage_descriptor_update_after_bind_storage_images::Integer\nmax_per_stage_descriptor_update_after_bind_input_attachments::Integer\nmax_per_stage_update_after_bind_resources::Integer\nmax_descriptor_set_update_after_bind_samplers::Integer\nmax_descriptor_set_update_after_bind_uniform_buffers::Integer\nmax_descriptor_set_update_after_bind_uniform_buffers_dynamic::Integer\nmax_descriptor_set_update_after_bind_storage_buffers::Integer\nmax_descriptor_set_update_after_bind_storage_buffers_dynamic::Integer\nmax_descriptor_set_update_after_bind_sampled_images::Integer\nmax_descriptor_set_update_after_bind_storage_images::Integer\nmax_descriptor_set_update_after_bind_input_attachments::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceDescriptorIndexingProperties(max_update_after_bind_descriptors_in_all_pools::Integer, shader_uniform_buffer_array_non_uniform_indexing_native::Bool, shader_sampled_image_array_non_uniform_indexing_native::Bool, shader_storage_buffer_array_non_uniform_indexing_native::Bool, shader_storage_image_array_non_uniform_indexing_native::Bool, shader_input_attachment_array_non_uniform_indexing_native::Bool, robust_buffer_access_update_after_bind::Bool, quad_divergent_implicit_lod::Bool, max_per_stage_descriptor_update_after_bind_samplers::Integer, max_per_stage_descriptor_update_after_bind_uniform_buffers::Integer, max_per_stage_descriptor_update_after_bind_storage_buffers::Integer, max_per_stage_descriptor_update_after_bind_sampled_images::Integer, max_per_stage_descriptor_update_after_bind_storage_images::Integer, max_per_stage_descriptor_update_after_bind_input_attachments::Integer, max_per_stage_update_after_bind_resources::Integer, max_descriptor_set_update_after_bind_samplers::Integer, max_descriptor_set_update_after_bind_uniform_buffers::Integer, max_descriptor_set_update_after_bind_uniform_buffers_dynamic::Integer, max_descriptor_set_update_after_bind_storage_buffers::Integer, max_descriptor_set_update_after_bind_storage_buffers_dynamic::Integer, max_descriptor_set_update_after_bind_sampled_images::Integer, max_descriptor_set_update_after_bind_storage_images::Integer, max_descriptor_set_update_after_bind_input_attachments::Integer; next) -> PhysicalDeviceDescriptorIndexingProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceDeviceGeneratedCommandsFeaturesNV","page":"API","title":"Vulkan.PhysicalDeviceDeviceGeneratedCommandsFeaturesNV","text":"High-level wrapper for VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV.\n\nExtension: VK_NV_device_generated_commands\n\nAPI documentation\n\nstruct PhysicalDeviceDeviceGeneratedCommandsFeaturesNV <: Vulkan.HighLevelStruct\n\nnext::Any\ndevice_generated_commands::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceDeviceGeneratedCommandsFeaturesNV-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceDeviceGeneratedCommandsFeaturesNV","text":"PhysicalDeviceDeviceGeneratedCommandsFeaturesNV(device_generated_commands::Bool; next = C_NULL)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ndevice_generated_commands::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceDeviceGeneratedCommandsFeaturesNV(device_generated_commands::Bool; next) -> PhysicalDeviceDeviceGeneratedCommandsFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceDeviceGeneratedCommandsPropertiesNV","page":"API","title":"Vulkan.PhysicalDeviceDeviceGeneratedCommandsPropertiesNV","text":"High-level wrapper for VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV.\n\nExtension: VK_NV_device_generated_commands\n\nAPI documentation\n\nstruct PhysicalDeviceDeviceGeneratedCommandsPropertiesNV <: Vulkan.HighLevelStruct\n\nnext::Any\nmax_graphics_shader_group_count::UInt32\nmax_indirect_sequence_count::UInt32\nmax_indirect_commands_token_count::UInt32\nmax_indirect_commands_stream_count::UInt32\nmax_indirect_commands_token_offset::UInt32\nmax_indirect_commands_stream_stride::UInt32\nmin_sequences_count_buffer_offset_alignment::UInt32\nmin_sequences_index_buffer_offset_alignment::UInt32\nmin_indirect_commands_buffer_offset_alignment::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceDeviceGeneratedCommandsPropertiesNV-NTuple{9, Integer}","page":"API","title":"Vulkan.PhysicalDeviceDeviceGeneratedCommandsPropertiesNV","text":"PhysicalDeviceDeviceGeneratedCommandsPropertiesNV(max_graphics_shader_group_count::Integer, max_indirect_sequence_count::Integer, max_indirect_commands_token_count::Integer, max_indirect_commands_stream_count::Integer, max_indirect_commands_token_offset::Integer, max_indirect_commands_stream_stride::Integer, min_sequences_count_buffer_offset_alignment::Integer, min_sequences_index_buffer_offset_alignment::Integer, min_indirect_commands_buffer_offset_alignment::Integer; next = C_NULL)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\nmax_graphics_shader_group_count::Integer\nmax_indirect_sequence_count::Integer\nmax_indirect_commands_token_count::Integer\nmax_indirect_commands_stream_count::Integer\nmax_indirect_commands_token_offset::Integer\nmax_indirect_commands_stream_stride::Integer\nmin_sequences_count_buffer_offset_alignment::Integer\nmin_sequences_index_buffer_offset_alignment::Integer\nmin_indirect_commands_buffer_offset_alignment::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceDeviceGeneratedCommandsPropertiesNV(max_graphics_shader_group_count::Integer, max_indirect_sequence_count::Integer, max_indirect_commands_token_count::Integer, max_indirect_commands_stream_count::Integer, max_indirect_commands_token_offset::Integer, max_indirect_commands_stream_stride::Integer, min_sequences_count_buffer_offset_alignment::Integer, min_sequences_index_buffer_offset_alignment::Integer, min_indirect_commands_buffer_offset_alignment::Integer; next) -> PhysicalDeviceDeviceGeneratedCommandsPropertiesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceDeviceMemoryReportFeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceDeviceMemoryReportFeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceDeviceMemoryReportFeaturesEXT.\n\nExtension: VK_EXT_device_memory_report\n\nAPI documentation\n\nstruct PhysicalDeviceDeviceMemoryReportFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\ndevice_memory_report::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceDeviceMemoryReportFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceDeviceMemoryReportFeaturesEXT","text":"PhysicalDeviceDeviceMemoryReportFeaturesEXT(device_memory_report::Bool; next = C_NULL)\n\nExtension: VK_EXT_device_memory_report\n\nArguments:\n\ndevice_memory_report::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceDeviceMemoryReportFeaturesEXT(device_memory_report::Bool; next) -> PhysicalDeviceDeviceMemoryReportFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceDiagnosticsConfigFeaturesNV","page":"API","title":"Vulkan.PhysicalDeviceDiagnosticsConfigFeaturesNV","text":"High-level wrapper for VkPhysicalDeviceDiagnosticsConfigFeaturesNV.\n\nExtension: VK_NV_device_diagnostics_config\n\nAPI documentation\n\nstruct PhysicalDeviceDiagnosticsConfigFeaturesNV <: Vulkan.HighLevelStruct\n\nnext::Any\ndiagnostics_config::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceDiagnosticsConfigFeaturesNV-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceDiagnosticsConfigFeaturesNV","text":"PhysicalDeviceDiagnosticsConfigFeaturesNV(diagnostics_config::Bool; next = C_NULL)\n\nExtension: VK_NV_device_diagnostics_config\n\nArguments:\n\ndiagnostics_config::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceDiagnosticsConfigFeaturesNV(diagnostics_config::Bool; next) -> PhysicalDeviceDiagnosticsConfigFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceDiscardRectanglePropertiesEXT","page":"API","title":"Vulkan.PhysicalDeviceDiscardRectanglePropertiesEXT","text":"High-level wrapper for VkPhysicalDeviceDiscardRectanglePropertiesEXT.\n\nExtension: VK_EXT_discard_rectangles\n\nAPI documentation\n\nstruct PhysicalDeviceDiscardRectanglePropertiesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nmax_discard_rectangles::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceDiscardRectanglePropertiesEXT-Tuple{Integer}","page":"API","title":"Vulkan.PhysicalDeviceDiscardRectanglePropertiesEXT","text":"PhysicalDeviceDiscardRectanglePropertiesEXT(max_discard_rectangles::Integer; next = C_NULL)\n\nExtension: VK_EXT_discard_rectangles\n\nArguments:\n\nmax_discard_rectangles::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceDiscardRectanglePropertiesEXT(max_discard_rectangles::Integer; next) -> PhysicalDeviceDiscardRectanglePropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceDriverProperties","page":"API","title":"Vulkan.PhysicalDeviceDriverProperties","text":"High-level wrapper for VkPhysicalDeviceDriverProperties.\n\nAPI documentation\n\nstruct PhysicalDeviceDriverProperties <: Vulkan.HighLevelStruct\n\nnext::Any\ndriver_id::DriverId\ndriver_name::String\ndriver_info::String\nconformance_version::ConformanceVersion\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceDriverProperties-Tuple{DriverId, AbstractString, AbstractString, ConformanceVersion}","page":"API","title":"Vulkan.PhysicalDeviceDriverProperties","text":"PhysicalDeviceDriverProperties(driver_id::DriverId, driver_name::AbstractString, driver_info::AbstractString, conformance_version::ConformanceVersion; next = C_NULL)\n\nArguments:\n\ndriver_id::DriverId\ndriver_name::AbstractString\ndriver_info::AbstractString\nconformance_version::ConformanceVersion\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceDriverProperties(driver_id::DriverId, driver_name::AbstractString, driver_info::AbstractString, conformance_version::ConformanceVersion; next) -> PhysicalDeviceDriverProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceExclusiveScissorFeaturesNV","page":"API","title":"Vulkan.PhysicalDeviceExclusiveScissorFeaturesNV","text":"High-level wrapper for VkPhysicalDeviceExclusiveScissorFeaturesNV.\n\nExtension: VK_NV_scissor_exclusive\n\nAPI documentation\n\nstruct PhysicalDeviceExclusiveScissorFeaturesNV <: Vulkan.HighLevelStruct\n\nnext::Any\nexclusive_scissor::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceExclusiveScissorFeaturesNV-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceExclusiveScissorFeaturesNV","text":"PhysicalDeviceExclusiveScissorFeaturesNV(exclusive_scissor::Bool; next = C_NULL)\n\nExtension: VK_NV_scissor_exclusive\n\nArguments:\n\nexclusive_scissor::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceExclusiveScissorFeaturesNV(exclusive_scissor::Bool; next) -> PhysicalDeviceExclusiveScissorFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceExtendedDynamicState2FeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceExtendedDynamicState2FeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceExtendedDynamicState2FeaturesEXT.\n\nExtension: VK_EXT_extended_dynamic_state2\n\nAPI documentation\n\nstruct PhysicalDeviceExtendedDynamicState2FeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nextended_dynamic_state_2::Bool\nextended_dynamic_state_2_logic_op::Bool\nextended_dynamic_state_2_patch_control_points::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceExtendedDynamicState2FeaturesEXT-Tuple{Bool, Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceExtendedDynamicState2FeaturesEXT","text":"PhysicalDeviceExtendedDynamicState2FeaturesEXT(extended_dynamic_state_2::Bool, extended_dynamic_state_2_logic_op::Bool, extended_dynamic_state_2_patch_control_points::Bool; next = C_NULL)\n\nExtension: VK_EXT_extended_dynamic_state2\n\nArguments:\n\nextended_dynamic_state_2::Bool\nextended_dynamic_state_2_logic_op::Bool\nextended_dynamic_state_2_patch_control_points::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceExtendedDynamicState2FeaturesEXT(extended_dynamic_state_2::Bool, extended_dynamic_state_2_logic_op::Bool, extended_dynamic_state_2_patch_control_points::Bool; next) -> PhysicalDeviceExtendedDynamicState2FeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceExtendedDynamicStateFeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceExtendedDynamicStateFeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceExtendedDynamicStateFeaturesEXT.\n\nExtension: VK_EXT_extended_dynamic_state\n\nAPI documentation\n\nstruct PhysicalDeviceExtendedDynamicStateFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nextended_dynamic_state::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceExtendedDynamicStateFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceExtendedDynamicStateFeaturesEXT","text":"PhysicalDeviceExtendedDynamicStateFeaturesEXT(extended_dynamic_state::Bool; next = C_NULL)\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\nextended_dynamic_state::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceExtendedDynamicStateFeaturesEXT(extended_dynamic_state::Bool; next) -> PhysicalDeviceExtendedDynamicStateFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceExternalBufferInfo","page":"API","title":"Vulkan.PhysicalDeviceExternalBufferInfo","text":"High-level wrapper for VkPhysicalDeviceExternalBufferInfo.\n\nAPI documentation\n\nstruct PhysicalDeviceExternalBufferInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::BufferCreateFlag\nusage::BufferUsageFlag\nhandle_type::ExternalMemoryHandleTypeFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceExternalBufferInfo-Tuple{BufferUsageFlag, ExternalMemoryHandleTypeFlag}","page":"API","title":"Vulkan.PhysicalDeviceExternalBufferInfo","text":"PhysicalDeviceExternalBufferInfo(usage::BufferUsageFlag, handle_type::ExternalMemoryHandleTypeFlag; next = C_NULL, flags = 0)\n\nArguments:\n\nusage::BufferUsageFlag\nhandle_type::ExternalMemoryHandleTypeFlag\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nPhysicalDeviceExternalBufferInfo(usage::BufferUsageFlag, handle_type::ExternalMemoryHandleTypeFlag; next, flags) -> PhysicalDeviceExternalBufferInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceExternalFenceInfo","page":"API","title":"Vulkan.PhysicalDeviceExternalFenceInfo","text":"High-level wrapper for VkPhysicalDeviceExternalFenceInfo.\n\nAPI documentation\n\nstruct PhysicalDeviceExternalFenceInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nhandle_type::ExternalFenceHandleTypeFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceExternalFenceInfo-Tuple{ExternalFenceHandleTypeFlag}","page":"API","title":"Vulkan.PhysicalDeviceExternalFenceInfo","text":"PhysicalDeviceExternalFenceInfo(handle_type::ExternalFenceHandleTypeFlag; next = C_NULL)\n\nArguments:\n\nhandle_type::ExternalFenceHandleTypeFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceExternalFenceInfo(handle_type::ExternalFenceHandleTypeFlag; next) -> PhysicalDeviceExternalFenceInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceExternalImageFormatInfo","page":"API","title":"Vulkan.PhysicalDeviceExternalImageFormatInfo","text":"High-level wrapper for VkPhysicalDeviceExternalImageFormatInfo.\n\nAPI documentation\n\nstruct PhysicalDeviceExternalImageFormatInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nhandle_type::ExternalMemoryHandleTypeFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceExternalImageFormatInfo-Tuple{}","page":"API","title":"Vulkan.PhysicalDeviceExternalImageFormatInfo","text":"PhysicalDeviceExternalImageFormatInfo(; next = C_NULL, handle_type = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nhandle_type: defaults to 0\n\nAPI documentation\n\nPhysicalDeviceExternalImageFormatInfo(; next, handle_type) -> PhysicalDeviceExternalImageFormatInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceExternalMemoryHostPropertiesEXT","page":"API","title":"Vulkan.PhysicalDeviceExternalMemoryHostPropertiesEXT","text":"High-level wrapper for VkPhysicalDeviceExternalMemoryHostPropertiesEXT.\n\nExtension: VK_EXT_external_memory_host\n\nAPI documentation\n\nstruct PhysicalDeviceExternalMemoryHostPropertiesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nmin_imported_host_pointer_alignment::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceExternalMemoryHostPropertiesEXT-Tuple{Integer}","page":"API","title":"Vulkan.PhysicalDeviceExternalMemoryHostPropertiesEXT","text":"PhysicalDeviceExternalMemoryHostPropertiesEXT(min_imported_host_pointer_alignment::Integer; next = C_NULL)\n\nExtension: VK_EXT_external_memory_host\n\nArguments:\n\nmin_imported_host_pointer_alignment::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceExternalMemoryHostPropertiesEXT(min_imported_host_pointer_alignment::Integer; next) -> PhysicalDeviceExternalMemoryHostPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceExternalSemaphoreInfo","page":"API","title":"Vulkan.PhysicalDeviceExternalSemaphoreInfo","text":"High-level wrapper for VkPhysicalDeviceExternalSemaphoreInfo.\n\nAPI documentation\n\nstruct PhysicalDeviceExternalSemaphoreInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nhandle_type::ExternalSemaphoreHandleTypeFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceExternalSemaphoreInfo-Tuple{ExternalSemaphoreHandleTypeFlag}","page":"API","title":"Vulkan.PhysicalDeviceExternalSemaphoreInfo","text":"PhysicalDeviceExternalSemaphoreInfo(handle_type::ExternalSemaphoreHandleTypeFlag; next = C_NULL)\n\nArguments:\n\nhandle_type::ExternalSemaphoreHandleTypeFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceExternalSemaphoreInfo(handle_type::ExternalSemaphoreHandleTypeFlag; next) -> PhysicalDeviceExternalSemaphoreInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceFeatures","page":"API","title":"Vulkan.PhysicalDeviceFeatures","text":"High-level wrapper for VkPhysicalDeviceFeatures.\n\nAPI documentation\n\nstruct PhysicalDeviceFeatures <: Vulkan.HighLevelStruct\n\nrobust_buffer_access::Bool\nfull_draw_index_uint_32::Bool\nimage_cube_array::Bool\nindependent_blend::Bool\ngeometry_shader::Bool\ntessellation_shader::Bool\nsample_rate_shading::Bool\ndual_src_blend::Bool\nlogic_op::Bool\nmulti_draw_indirect::Bool\ndraw_indirect_first_instance::Bool\ndepth_clamp::Bool\ndepth_bias_clamp::Bool\nfill_mode_non_solid::Bool\ndepth_bounds::Bool\nwide_lines::Bool\nlarge_points::Bool\nalpha_to_one::Bool\nmulti_viewport::Bool\nsampler_anisotropy::Bool\ntexture_compression_etc_2::Bool\ntexture_compression_astc_ldr::Bool\ntexture_compression_bc::Bool\nocclusion_query_precise::Bool\npipeline_statistics_query::Bool\nvertex_pipeline_stores_and_atomics::Bool\nfragment_stores_and_atomics::Bool\nshader_tessellation_and_geometry_point_size::Bool\nshader_image_gather_extended::Bool\nshader_storage_image_extended_formats::Bool\nshader_storage_image_multisample::Bool\nshader_storage_image_read_without_format::Bool\nshader_storage_image_write_without_format::Bool\nshader_uniform_buffer_array_dynamic_indexing::Bool\nshader_sampled_image_array_dynamic_indexing::Bool\nshader_storage_buffer_array_dynamic_indexing::Bool\nshader_storage_image_array_dynamic_indexing::Bool\nshader_clip_distance::Bool\nshader_cull_distance::Bool\nshader_float_64::Bool\nshader_int_64::Bool\nshader_int_16::Bool\nshader_resource_residency::Bool\nshader_resource_min_lod::Bool\nsparse_binding::Bool\nsparse_residency_buffer::Bool\nsparse_residency_image_2_d::Bool\nsparse_residency_image_3_d::Bool\nsparse_residency_2_samples::Bool\nsparse_residency_4_samples::Bool\nsparse_residency_8_samples::Bool\nsparse_residency_16_samples::Bool\nsparse_residency_aliased::Bool\nvariable_multisample_rate::Bool\ninherited_queries::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceFeatures-Tuple{Vararg{Symbol}}","page":"API","title":"Vulkan.PhysicalDeviceFeatures","text":"Return a PhysicalDeviceFeatures object with the provided features set to true.\n\njulia> PhysicalDeviceFeatures()\nPhysicalDeviceFeatures()\n\njulia> PhysicalDeviceFeatures(:wide_lines, :sparse_binding)\nPhysicalDeviceFeatures(wide_lines, sparse_binding)\n\nPhysicalDeviceFeatures(features::Symbol...) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceFeatures2","page":"API","title":"Vulkan.PhysicalDeviceFeatures2","text":"High-level wrapper for VkPhysicalDeviceFeatures2.\n\nAPI documentation\n\nstruct PhysicalDeviceFeatures2 <: Vulkan.HighLevelStruct\n\nnext::Any\nfeatures::PhysicalDeviceFeatures\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceFeatures2-Tuple{PhysicalDeviceFeatures}","page":"API","title":"Vulkan.PhysicalDeviceFeatures2","text":"PhysicalDeviceFeatures2(features::PhysicalDeviceFeatures; next = C_NULL)\n\nArguments:\n\nfeatures::PhysicalDeviceFeatures\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceFeatures2(features::PhysicalDeviceFeatures; next) -> PhysicalDeviceFeatures2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceFloatControlsProperties","page":"API","title":"Vulkan.PhysicalDeviceFloatControlsProperties","text":"High-level wrapper for VkPhysicalDeviceFloatControlsProperties.\n\nAPI documentation\n\nstruct PhysicalDeviceFloatControlsProperties <: Vulkan.HighLevelStruct\n\nnext::Any\ndenorm_behavior_independence::ShaderFloatControlsIndependence\nrounding_mode_independence::ShaderFloatControlsIndependence\nshader_signed_zero_inf_nan_preserve_float_16::Bool\nshader_signed_zero_inf_nan_preserve_float_32::Bool\nshader_signed_zero_inf_nan_preserve_float_64::Bool\nshader_denorm_preserve_float_16::Bool\nshader_denorm_preserve_float_32::Bool\nshader_denorm_preserve_float_64::Bool\nshader_denorm_flush_to_zero_float_16::Bool\nshader_denorm_flush_to_zero_float_32::Bool\nshader_denorm_flush_to_zero_float_64::Bool\nshader_rounding_mode_rte_float_16::Bool\nshader_rounding_mode_rte_float_32::Bool\nshader_rounding_mode_rte_float_64::Bool\nshader_rounding_mode_rtz_float_16::Bool\nshader_rounding_mode_rtz_float_32::Bool\nshader_rounding_mode_rtz_float_64::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceFloatControlsProperties-Tuple{ShaderFloatControlsIndependence, ShaderFloatControlsIndependence, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceFloatControlsProperties","text":"PhysicalDeviceFloatControlsProperties(denorm_behavior_independence::ShaderFloatControlsIndependence, rounding_mode_independence::ShaderFloatControlsIndependence, shader_signed_zero_inf_nan_preserve_float_16::Bool, shader_signed_zero_inf_nan_preserve_float_32::Bool, shader_signed_zero_inf_nan_preserve_float_64::Bool, shader_denorm_preserve_float_16::Bool, shader_denorm_preserve_float_32::Bool, shader_denorm_preserve_float_64::Bool, shader_denorm_flush_to_zero_float_16::Bool, shader_denorm_flush_to_zero_float_32::Bool, shader_denorm_flush_to_zero_float_64::Bool, shader_rounding_mode_rte_float_16::Bool, shader_rounding_mode_rte_float_32::Bool, shader_rounding_mode_rte_float_64::Bool, shader_rounding_mode_rtz_float_16::Bool, shader_rounding_mode_rtz_float_32::Bool, shader_rounding_mode_rtz_float_64::Bool; next = C_NULL)\n\nArguments:\n\ndenorm_behavior_independence::ShaderFloatControlsIndependence\nrounding_mode_independence::ShaderFloatControlsIndependence\nshader_signed_zero_inf_nan_preserve_float_16::Bool\nshader_signed_zero_inf_nan_preserve_float_32::Bool\nshader_signed_zero_inf_nan_preserve_float_64::Bool\nshader_denorm_preserve_float_16::Bool\nshader_denorm_preserve_float_32::Bool\nshader_denorm_preserve_float_64::Bool\nshader_denorm_flush_to_zero_float_16::Bool\nshader_denorm_flush_to_zero_float_32::Bool\nshader_denorm_flush_to_zero_float_64::Bool\nshader_rounding_mode_rte_float_16::Bool\nshader_rounding_mode_rte_float_32::Bool\nshader_rounding_mode_rte_float_64::Bool\nshader_rounding_mode_rtz_float_16::Bool\nshader_rounding_mode_rtz_float_32::Bool\nshader_rounding_mode_rtz_float_64::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceFloatControlsProperties(denorm_behavior_independence::ShaderFloatControlsIndependence, rounding_mode_independence::ShaderFloatControlsIndependence, shader_signed_zero_inf_nan_preserve_float_16::Bool, shader_signed_zero_inf_nan_preserve_float_32::Bool, shader_signed_zero_inf_nan_preserve_float_64::Bool, shader_denorm_preserve_float_16::Bool, shader_denorm_preserve_float_32::Bool, shader_denorm_preserve_float_64::Bool, shader_denorm_flush_to_zero_float_16::Bool, shader_denorm_flush_to_zero_float_32::Bool, shader_denorm_flush_to_zero_float_64::Bool, shader_rounding_mode_rte_float_16::Bool, shader_rounding_mode_rte_float_32::Bool, shader_rounding_mode_rte_float_64::Bool, shader_rounding_mode_rtz_float_16::Bool, shader_rounding_mode_rtz_float_32::Bool, shader_rounding_mode_rtz_float_64::Bool; next) -> PhysicalDeviceFloatControlsProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceFragmentDensityMap2FeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceFragmentDensityMap2FeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceFragmentDensityMap2FeaturesEXT.\n\nExtension: VK_EXT_fragment_density_map2\n\nAPI documentation\n\nstruct PhysicalDeviceFragmentDensityMap2FeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nfragment_density_map_deferred::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceFragmentDensityMap2FeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceFragmentDensityMap2FeaturesEXT","text":"PhysicalDeviceFragmentDensityMap2FeaturesEXT(fragment_density_map_deferred::Bool; next = C_NULL)\n\nExtension: VK_EXT_fragment_density_map2\n\nArguments:\n\nfragment_density_map_deferred::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceFragmentDensityMap2FeaturesEXT(fragment_density_map_deferred::Bool; next) -> PhysicalDeviceFragmentDensityMap2FeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceFragmentDensityMap2PropertiesEXT","page":"API","title":"Vulkan.PhysicalDeviceFragmentDensityMap2PropertiesEXT","text":"High-level wrapper for VkPhysicalDeviceFragmentDensityMap2PropertiesEXT.\n\nExtension: VK_EXT_fragment_density_map2\n\nAPI documentation\n\nstruct PhysicalDeviceFragmentDensityMap2PropertiesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nsubsampled_loads::Bool\nsubsampled_coarse_reconstruction_early_access::Bool\nmax_subsampled_array_layers::UInt32\nmax_descriptor_set_subsampled_samplers::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceFragmentDensityMap2PropertiesEXT-Tuple{Bool, Bool, Integer, Integer}","page":"API","title":"Vulkan.PhysicalDeviceFragmentDensityMap2PropertiesEXT","text":"PhysicalDeviceFragmentDensityMap2PropertiesEXT(subsampled_loads::Bool, subsampled_coarse_reconstruction_early_access::Bool, max_subsampled_array_layers::Integer, max_descriptor_set_subsampled_samplers::Integer; next = C_NULL)\n\nExtension: VK_EXT_fragment_density_map2\n\nArguments:\n\nsubsampled_loads::Bool\nsubsampled_coarse_reconstruction_early_access::Bool\nmax_subsampled_array_layers::Integer\nmax_descriptor_set_subsampled_samplers::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceFragmentDensityMap2PropertiesEXT(subsampled_loads::Bool, subsampled_coarse_reconstruction_early_access::Bool, max_subsampled_array_layers::Integer, max_descriptor_set_subsampled_samplers::Integer; next) -> PhysicalDeviceFragmentDensityMap2PropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceFragmentDensityMapFeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceFragmentDensityMapFeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceFragmentDensityMapFeaturesEXT.\n\nExtension: VK_EXT_fragment_density_map\n\nAPI documentation\n\nstruct PhysicalDeviceFragmentDensityMapFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nfragment_density_map::Bool\nfragment_density_map_dynamic::Bool\nfragment_density_map_non_subsampled_images::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceFragmentDensityMapFeaturesEXT-Tuple{Bool, Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceFragmentDensityMapFeaturesEXT","text":"PhysicalDeviceFragmentDensityMapFeaturesEXT(fragment_density_map::Bool, fragment_density_map_dynamic::Bool, fragment_density_map_non_subsampled_images::Bool; next = C_NULL)\n\nExtension: VK_EXT_fragment_density_map\n\nArguments:\n\nfragment_density_map::Bool\nfragment_density_map_dynamic::Bool\nfragment_density_map_non_subsampled_images::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceFragmentDensityMapFeaturesEXT(fragment_density_map::Bool, fragment_density_map_dynamic::Bool, fragment_density_map_non_subsampled_images::Bool; next) -> PhysicalDeviceFragmentDensityMapFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceFragmentDensityMapPropertiesEXT","page":"API","title":"Vulkan.PhysicalDeviceFragmentDensityMapPropertiesEXT","text":"High-level wrapper for VkPhysicalDeviceFragmentDensityMapPropertiesEXT.\n\nExtension: VK_EXT_fragment_density_map\n\nAPI documentation\n\nstruct PhysicalDeviceFragmentDensityMapPropertiesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nmin_fragment_density_texel_size::Extent2D\nmax_fragment_density_texel_size::Extent2D\nfragment_density_invocations::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceFragmentDensityMapPropertiesEXT-Tuple{Extent2D, Extent2D, Bool}","page":"API","title":"Vulkan.PhysicalDeviceFragmentDensityMapPropertiesEXT","text":"PhysicalDeviceFragmentDensityMapPropertiesEXT(min_fragment_density_texel_size::Extent2D, max_fragment_density_texel_size::Extent2D, fragment_density_invocations::Bool; next = C_NULL)\n\nExtension: VK_EXT_fragment_density_map\n\nArguments:\n\nmin_fragment_density_texel_size::Extent2D\nmax_fragment_density_texel_size::Extent2D\nfragment_density_invocations::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceFragmentDensityMapPropertiesEXT(min_fragment_density_texel_size::Extent2D, max_fragment_density_texel_size::Extent2D, fragment_density_invocations::Bool; next) -> PhysicalDeviceFragmentDensityMapPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceFragmentShaderBarycentricFeaturesNV","page":"API","title":"Vulkan.PhysicalDeviceFragmentShaderBarycentricFeaturesNV","text":"High-level wrapper for VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV.\n\nExtension: VK_NV_fragment_shader_barycentric\n\nAPI documentation\n\nstruct PhysicalDeviceFragmentShaderBarycentricFeaturesNV <: Vulkan.HighLevelStruct\n\nnext::Any\nfragment_shader_barycentric::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceFragmentShaderBarycentricFeaturesNV-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceFragmentShaderBarycentricFeaturesNV","text":"PhysicalDeviceFragmentShaderBarycentricFeaturesNV(fragment_shader_barycentric::Bool; next = C_NULL)\n\nExtension: VK_NV_fragment_shader_barycentric\n\nArguments:\n\nfragment_shader_barycentric::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceFragmentShaderBarycentricFeaturesNV(fragment_shader_barycentric::Bool; next) -> PhysicalDeviceFragmentShaderBarycentricFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceFragmentShaderInterlockFeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceFragmentShaderInterlockFeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT.\n\nExtension: VK_EXT_fragment_shader_interlock\n\nAPI documentation\n\nstruct PhysicalDeviceFragmentShaderInterlockFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nfragment_shader_sample_interlock::Bool\nfragment_shader_pixel_interlock::Bool\nfragment_shader_shading_rate_interlock::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceFragmentShaderInterlockFeaturesEXT-Tuple{Bool, Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceFragmentShaderInterlockFeaturesEXT","text":"PhysicalDeviceFragmentShaderInterlockFeaturesEXT(fragment_shader_sample_interlock::Bool, fragment_shader_pixel_interlock::Bool, fragment_shader_shading_rate_interlock::Bool; next = C_NULL)\n\nExtension: VK_EXT_fragment_shader_interlock\n\nArguments:\n\nfragment_shader_sample_interlock::Bool\nfragment_shader_pixel_interlock::Bool\nfragment_shader_shading_rate_interlock::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceFragmentShaderInterlockFeaturesEXT(fragment_shader_sample_interlock::Bool, fragment_shader_pixel_interlock::Bool, fragment_shader_shading_rate_interlock::Bool; next) -> PhysicalDeviceFragmentShaderInterlockFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceFragmentShadingRateEnumsFeaturesNV","page":"API","title":"Vulkan.PhysicalDeviceFragmentShadingRateEnumsFeaturesNV","text":"High-level wrapper for VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV.\n\nExtension: VK_NV_fragment_shading_rate_enums\n\nAPI documentation\n\nstruct PhysicalDeviceFragmentShadingRateEnumsFeaturesNV <: Vulkan.HighLevelStruct\n\nnext::Any\nfragment_shading_rate_enums::Bool\nsupersample_fragment_shading_rates::Bool\nno_invocation_fragment_shading_rates::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceFragmentShadingRateEnumsFeaturesNV-Tuple{Bool, Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceFragmentShadingRateEnumsFeaturesNV","text":"PhysicalDeviceFragmentShadingRateEnumsFeaturesNV(fragment_shading_rate_enums::Bool, supersample_fragment_shading_rates::Bool, no_invocation_fragment_shading_rates::Bool; next = C_NULL)\n\nExtension: VK_NV_fragment_shading_rate_enums\n\nArguments:\n\nfragment_shading_rate_enums::Bool\nsupersample_fragment_shading_rates::Bool\nno_invocation_fragment_shading_rates::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceFragmentShadingRateEnumsFeaturesNV(fragment_shading_rate_enums::Bool, supersample_fragment_shading_rates::Bool, no_invocation_fragment_shading_rates::Bool; next) -> PhysicalDeviceFragmentShadingRateEnumsFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceFragmentShadingRateEnumsPropertiesNV","page":"API","title":"Vulkan.PhysicalDeviceFragmentShadingRateEnumsPropertiesNV","text":"High-level wrapper for VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV.\n\nExtension: VK_NV_fragment_shading_rate_enums\n\nAPI documentation\n\nstruct PhysicalDeviceFragmentShadingRateEnumsPropertiesNV <: Vulkan.HighLevelStruct\n\nnext::Any\nmax_fragment_shading_rate_invocation_count::SampleCountFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceFragmentShadingRateEnumsPropertiesNV-Tuple{SampleCountFlag}","page":"API","title":"Vulkan.PhysicalDeviceFragmentShadingRateEnumsPropertiesNV","text":"PhysicalDeviceFragmentShadingRateEnumsPropertiesNV(max_fragment_shading_rate_invocation_count::SampleCountFlag; next = C_NULL)\n\nExtension: VK_NV_fragment_shading_rate_enums\n\nArguments:\n\nmax_fragment_shading_rate_invocation_count::SampleCountFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceFragmentShadingRateEnumsPropertiesNV(max_fragment_shading_rate_invocation_count::SampleCountFlag; next) -> PhysicalDeviceFragmentShadingRateEnumsPropertiesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceFragmentShadingRateFeaturesKHR","page":"API","title":"Vulkan.PhysicalDeviceFragmentShadingRateFeaturesKHR","text":"High-level wrapper for VkPhysicalDeviceFragmentShadingRateFeaturesKHR.\n\nExtension: VK_KHR_fragment_shading_rate\n\nAPI documentation\n\nstruct PhysicalDeviceFragmentShadingRateFeaturesKHR <: Vulkan.HighLevelStruct\n\nnext::Any\npipeline_fragment_shading_rate::Bool\nprimitive_fragment_shading_rate::Bool\nattachment_fragment_shading_rate::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceFragmentShadingRateFeaturesKHR-Tuple{Bool, Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceFragmentShadingRateFeaturesKHR","text":"PhysicalDeviceFragmentShadingRateFeaturesKHR(pipeline_fragment_shading_rate::Bool, primitive_fragment_shading_rate::Bool, attachment_fragment_shading_rate::Bool; next = C_NULL)\n\nExtension: VK_KHR_fragment_shading_rate\n\nArguments:\n\npipeline_fragment_shading_rate::Bool\nprimitive_fragment_shading_rate::Bool\nattachment_fragment_shading_rate::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceFragmentShadingRateFeaturesKHR(pipeline_fragment_shading_rate::Bool, primitive_fragment_shading_rate::Bool, attachment_fragment_shading_rate::Bool; next) -> PhysicalDeviceFragmentShadingRateFeaturesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceFragmentShadingRateKHR","page":"API","title":"Vulkan.PhysicalDeviceFragmentShadingRateKHR","text":"High-level wrapper for VkPhysicalDeviceFragmentShadingRateKHR.\n\nExtension: VK_KHR_fragment_shading_rate\n\nAPI documentation\n\nstruct PhysicalDeviceFragmentShadingRateKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nsample_counts::SampleCountFlag\nfragment_size::Extent2D\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceFragmentShadingRateKHR-Tuple{SampleCountFlag, Extent2D}","page":"API","title":"Vulkan.PhysicalDeviceFragmentShadingRateKHR","text":"PhysicalDeviceFragmentShadingRateKHR(sample_counts::SampleCountFlag, fragment_size::Extent2D; next = C_NULL)\n\nExtension: VK_KHR_fragment_shading_rate\n\nArguments:\n\nsample_counts::SampleCountFlag\nfragment_size::Extent2D\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceFragmentShadingRateKHR(sample_counts::SampleCountFlag, fragment_size::Extent2D; next) -> PhysicalDeviceFragmentShadingRateKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceFragmentShadingRatePropertiesKHR","page":"API","title":"Vulkan.PhysicalDeviceFragmentShadingRatePropertiesKHR","text":"High-level wrapper for VkPhysicalDeviceFragmentShadingRatePropertiesKHR.\n\nExtension: VK_KHR_fragment_shading_rate\n\nAPI documentation\n\nstruct PhysicalDeviceFragmentShadingRatePropertiesKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nmin_fragment_shading_rate_attachment_texel_size::Extent2D\nmax_fragment_shading_rate_attachment_texel_size::Extent2D\nmax_fragment_shading_rate_attachment_texel_size_aspect_ratio::UInt32\nprimitive_fragment_shading_rate_with_multiple_viewports::Bool\nlayered_shading_rate_attachments::Bool\nfragment_shading_rate_non_trivial_combiner_ops::Bool\nmax_fragment_size::Extent2D\nmax_fragment_size_aspect_ratio::UInt32\nmax_fragment_shading_rate_coverage_samples::UInt32\nmax_fragment_shading_rate_rasterization_samples::SampleCountFlag\nfragment_shading_rate_with_shader_depth_stencil_writes::Bool\nfragment_shading_rate_with_sample_mask::Bool\nfragment_shading_rate_with_shader_sample_mask::Bool\nfragment_shading_rate_with_conservative_rasterization::Bool\nfragment_shading_rate_with_fragment_shader_interlock::Bool\nfragment_shading_rate_with_custom_sample_locations::Bool\nfragment_shading_rate_strict_multiply_combiner::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceFragmentShadingRatePropertiesKHR-Tuple{Extent2D, Extent2D, Integer, Bool, Bool, Bool, Extent2D, Integer, Integer, SampleCountFlag, Bool, Bool, Bool, Bool, Bool, Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceFragmentShadingRatePropertiesKHR","text":"PhysicalDeviceFragmentShadingRatePropertiesKHR(min_fragment_shading_rate_attachment_texel_size::Extent2D, max_fragment_shading_rate_attachment_texel_size::Extent2D, max_fragment_shading_rate_attachment_texel_size_aspect_ratio::Integer, primitive_fragment_shading_rate_with_multiple_viewports::Bool, layered_shading_rate_attachments::Bool, fragment_shading_rate_non_trivial_combiner_ops::Bool, max_fragment_size::Extent2D, max_fragment_size_aspect_ratio::Integer, max_fragment_shading_rate_coverage_samples::Integer, max_fragment_shading_rate_rasterization_samples::SampleCountFlag, fragment_shading_rate_with_shader_depth_stencil_writes::Bool, fragment_shading_rate_with_sample_mask::Bool, fragment_shading_rate_with_shader_sample_mask::Bool, fragment_shading_rate_with_conservative_rasterization::Bool, fragment_shading_rate_with_fragment_shader_interlock::Bool, fragment_shading_rate_with_custom_sample_locations::Bool, fragment_shading_rate_strict_multiply_combiner::Bool; next = C_NULL)\n\nExtension: VK_KHR_fragment_shading_rate\n\nArguments:\n\nmin_fragment_shading_rate_attachment_texel_size::Extent2D\nmax_fragment_shading_rate_attachment_texel_size::Extent2D\nmax_fragment_shading_rate_attachment_texel_size_aspect_ratio::Integer\nprimitive_fragment_shading_rate_with_multiple_viewports::Bool\nlayered_shading_rate_attachments::Bool\nfragment_shading_rate_non_trivial_combiner_ops::Bool\nmax_fragment_size::Extent2D\nmax_fragment_size_aspect_ratio::Integer\nmax_fragment_shading_rate_coverage_samples::Integer\nmax_fragment_shading_rate_rasterization_samples::SampleCountFlag\nfragment_shading_rate_with_shader_depth_stencil_writes::Bool\nfragment_shading_rate_with_sample_mask::Bool\nfragment_shading_rate_with_shader_sample_mask::Bool\nfragment_shading_rate_with_conservative_rasterization::Bool\nfragment_shading_rate_with_fragment_shader_interlock::Bool\nfragment_shading_rate_with_custom_sample_locations::Bool\nfragment_shading_rate_strict_multiply_combiner::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceFragmentShadingRatePropertiesKHR(min_fragment_shading_rate_attachment_texel_size::Extent2D, max_fragment_shading_rate_attachment_texel_size::Extent2D, max_fragment_shading_rate_attachment_texel_size_aspect_ratio::Integer, primitive_fragment_shading_rate_with_multiple_viewports::Bool, layered_shading_rate_attachments::Bool, fragment_shading_rate_non_trivial_combiner_ops::Bool, max_fragment_size::Extent2D, max_fragment_size_aspect_ratio::Integer, max_fragment_shading_rate_coverage_samples::Integer, max_fragment_shading_rate_rasterization_samples::SampleCountFlag, fragment_shading_rate_with_shader_depth_stencil_writes::Bool, fragment_shading_rate_with_sample_mask::Bool, fragment_shading_rate_with_shader_sample_mask::Bool, fragment_shading_rate_with_conservative_rasterization::Bool, fragment_shading_rate_with_fragment_shader_interlock::Bool, fragment_shading_rate_with_custom_sample_locations::Bool, fragment_shading_rate_strict_multiply_combiner::Bool; next) -> PhysicalDeviceFragmentShadingRatePropertiesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceGroupProperties","page":"API","title":"Vulkan.PhysicalDeviceGroupProperties","text":"High-level wrapper for VkPhysicalDeviceGroupProperties.\n\nAPI documentation\n\nstruct PhysicalDeviceGroupProperties <: Vulkan.HighLevelStruct\n\nnext::Any\nphysical_device_count::UInt32\nphysical_devices::NTuple{32, PhysicalDevice}\nsubset_allocation::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceGroupProperties-Tuple{Integer, NTuple{32, PhysicalDevice}, Bool}","page":"API","title":"Vulkan.PhysicalDeviceGroupProperties","text":"PhysicalDeviceGroupProperties(physical_device_count::Integer, physical_devices::NTuple{Int(VK_MAX_DEVICE_GROUP_SIZE), PhysicalDevice}, subset_allocation::Bool; next = C_NULL)\n\nArguments:\n\nphysical_device_count::Integer\nphysical_devices::NTuple{Int(VK_MAX_DEVICE_GROUP_SIZE), PhysicalDevice}\nsubset_allocation::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceGroupProperties(physical_device_count::Integer, physical_devices::NTuple{32, PhysicalDevice}, subset_allocation::Bool; next) -> PhysicalDeviceGroupProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceHostQueryResetFeatures","page":"API","title":"Vulkan.PhysicalDeviceHostQueryResetFeatures","text":"High-level wrapper for VkPhysicalDeviceHostQueryResetFeatures.\n\nAPI documentation\n\nstruct PhysicalDeviceHostQueryResetFeatures <: Vulkan.HighLevelStruct\n\nnext::Any\nhost_query_reset::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceHostQueryResetFeatures-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceHostQueryResetFeatures","text":"PhysicalDeviceHostQueryResetFeatures(host_query_reset::Bool; next = C_NULL)\n\nArguments:\n\nhost_query_reset::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceHostQueryResetFeatures(host_query_reset::Bool; next) -> PhysicalDeviceHostQueryResetFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceIDProperties","page":"API","title":"Vulkan.PhysicalDeviceIDProperties","text":"High-level wrapper for VkPhysicalDeviceIDProperties.\n\nAPI documentation\n\nstruct PhysicalDeviceIDProperties <: Vulkan.HighLevelStruct\n\nnext::Any\ndevice_uuid::NTuple{16, UInt8}\ndriver_uuid::NTuple{16, UInt8}\ndevice_luid::NTuple{8, UInt8}\ndevice_node_mask::UInt32\ndevice_luid_valid::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceIDProperties-Tuple{NTuple{16, UInt8}, NTuple{16, UInt8}, NTuple{8, UInt8}, Integer, Bool}","page":"API","title":"Vulkan.PhysicalDeviceIDProperties","text":"PhysicalDeviceIDProperties(device_uuid::NTuple{Int(VK_UUID_SIZE), UInt8}, driver_uuid::NTuple{Int(VK_UUID_SIZE), UInt8}, device_luid::NTuple{Int(VK_LUID_SIZE), UInt8}, device_node_mask::Integer, device_luid_valid::Bool; next = C_NULL)\n\nArguments:\n\ndevice_uuid::NTuple{Int(VK_UUID_SIZE), UInt8}\ndriver_uuid::NTuple{Int(VK_UUID_SIZE), UInt8}\ndevice_luid::NTuple{Int(VK_LUID_SIZE), UInt8}\ndevice_node_mask::Integer\ndevice_luid_valid::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceIDProperties(device_uuid::NTuple{16, UInt8}, driver_uuid::NTuple{16, UInt8}, device_luid::NTuple{8, UInt8}, device_node_mask::Integer, device_luid_valid::Bool; next) -> PhysicalDeviceIDProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceImageDrmFormatModifierInfoEXT","page":"API","title":"Vulkan.PhysicalDeviceImageDrmFormatModifierInfoEXT","text":"High-level wrapper for VkPhysicalDeviceImageDrmFormatModifierInfoEXT.\n\nExtension: VK_EXT_image_drm_format_modifier\n\nAPI documentation\n\nstruct PhysicalDeviceImageDrmFormatModifierInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\ndrm_format_modifier::UInt64\nsharing_mode::SharingMode\nqueue_family_indices::Vector{UInt32}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceImageDrmFormatModifierInfoEXT-Tuple{Integer, SharingMode, AbstractArray}","page":"API","title":"Vulkan.PhysicalDeviceImageDrmFormatModifierInfoEXT","text":"PhysicalDeviceImageDrmFormatModifierInfoEXT(drm_format_modifier::Integer, sharing_mode::SharingMode, queue_family_indices::AbstractArray{<:Integer}; next = C_NULL)\n\nExtension: VK_EXT_image_drm_format_modifier\n\nArguments:\n\ndrm_format_modifier::Integer\nsharing_mode::SharingMode\nqueue_family_indices::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceImageDrmFormatModifierInfoEXT(drm_format_modifier::Integer, sharing_mode::SharingMode, queue_family_indices::AbstractArray; next) -> PhysicalDeviceImageDrmFormatModifierInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceImageFormatInfo2","page":"API","title":"Vulkan.PhysicalDeviceImageFormatInfo2","text":"High-level wrapper for VkPhysicalDeviceImageFormatInfo2.\n\nAPI documentation\n\nstruct PhysicalDeviceImageFormatInfo2 <: Vulkan.HighLevelStruct\n\nnext::Any\nformat::Format\ntype::ImageType\ntiling::ImageTiling\nusage::ImageUsageFlag\nflags::ImageCreateFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceImageFormatInfo2-Tuple{Format, ImageType, ImageTiling, ImageUsageFlag}","page":"API","title":"Vulkan.PhysicalDeviceImageFormatInfo2","text":"PhysicalDeviceImageFormatInfo2(format::Format, type::ImageType, tiling::ImageTiling, usage::ImageUsageFlag; next = C_NULL, flags = 0)\n\nArguments:\n\nformat::Format\ntype::ImageType\ntiling::ImageTiling\nusage::ImageUsageFlag\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nPhysicalDeviceImageFormatInfo2(format::Format, type::ImageType, tiling::ImageTiling, usage::ImageUsageFlag; next, flags) -> PhysicalDeviceImageFormatInfo2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceImageRobustnessFeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceImageRobustnessFeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceImageRobustnessFeaturesEXT.\n\nExtension: VK_EXT_image_robustness\n\nAPI documentation\n\nstruct PhysicalDeviceImageRobustnessFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nrobust_image_access::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceImageRobustnessFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceImageRobustnessFeaturesEXT","text":"PhysicalDeviceImageRobustnessFeaturesEXT(robust_image_access::Bool; next = C_NULL)\n\nExtension: VK_EXT_image_robustness\n\nArguments:\n\nrobust_image_access::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceImageRobustnessFeaturesEXT(robust_image_access::Bool; next) -> PhysicalDeviceImageRobustnessFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceImageViewImageFormatInfoEXT","page":"API","title":"Vulkan.PhysicalDeviceImageViewImageFormatInfoEXT","text":"High-level wrapper for VkPhysicalDeviceImageViewImageFormatInfoEXT.\n\nExtension: VK_EXT_filter_cubic\n\nAPI documentation\n\nstruct PhysicalDeviceImageViewImageFormatInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nimage_view_type::ImageViewType\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceImageViewImageFormatInfoEXT-Tuple{ImageViewType}","page":"API","title":"Vulkan.PhysicalDeviceImageViewImageFormatInfoEXT","text":"PhysicalDeviceImageViewImageFormatInfoEXT(image_view_type::ImageViewType; next = C_NULL)\n\nExtension: VK_EXT_filter_cubic\n\nArguments:\n\nimage_view_type::ImageViewType\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceImageViewImageFormatInfoEXT(image_view_type::ImageViewType; next) -> PhysicalDeviceImageViewImageFormatInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceImagelessFramebufferFeatures","page":"API","title":"Vulkan.PhysicalDeviceImagelessFramebufferFeatures","text":"High-level wrapper for VkPhysicalDeviceImagelessFramebufferFeatures.\n\nAPI documentation\n\nstruct PhysicalDeviceImagelessFramebufferFeatures <: Vulkan.HighLevelStruct\n\nnext::Any\nimageless_framebuffer::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceImagelessFramebufferFeatures-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceImagelessFramebufferFeatures","text":"PhysicalDeviceImagelessFramebufferFeatures(imageless_framebuffer::Bool; next = C_NULL)\n\nArguments:\n\nimageless_framebuffer::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceImagelessFramebufferFeatures(imageless_framebuffer::Bool; next) -> PhysicalDeviceImagelessFramebufferFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceIndexTypeUint8FeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceIndexTypeUint8FeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceIndexTypeUint8FeaturesEXT.\n\nExtension: VK_EXT_index_type_uint8\n\nAPI documentation\n\nstruct PhysicalDeviceIndexTypeUint8FeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nindex_type_uint_8::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceIndexTypeUint8FeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceIndexTypeUint8FeaturesEXT","text":"PhysicalDeviceIndexTypeUint8FeaturesEXT(index_type_uint_8::Bool; next = C_NULL)\n\nExtension: VK_EXT_index_type_uint8\n\nArguments:\n\nindex_type_uint_8::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceIndexTypeUint8FeaturesEXT(index_type_uint_8::Bool; next) -> PhysicalDeviceIndexTypeUint8FeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceInheritedViewportScissorFeaturesNV","page":"API","title":"Vulkan.PhysicalDeviceInheritedViewportScissorFeaturesNV","text":"High-level wrapper for VkPhysicalDeviceInheritedViewportScissorFeaturesNV.\n\nExtension: VK_NV_inherited_viewport_scissor\n\nAPI documentation\n\nstruct PhysicalDeviceInheritedViewportScissorFeaturesNV <: Vulkan.HighLevelStruct\n\nnext::Any\ninherited_viewport_scissor_2_d::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceInheritedViewportScissorFeaturesNV-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceInheritedViewportScissorFeaturesNV","text":"PhysicalDeviceInheritedViewportScissorFeaturesNV(inherited_viewport_scissor_2_d::Bool; next = C_NULL)\n\nExtension: VK_NV_inherited_viewport_scissor\n\nArguments:\n\ninherited_viewport_scissor_2_d::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceInheritedViewportScissorFeaturesNV(inherited_viewport_scissor_2_d::Bool; next) -> PhysicalDeviceInheritedViewportScissorFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceInlineUniformBlockFeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceInlineUniformBlockFeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceInlineUniformBlockFeaturesEXT.\n\nExtension: VK_EXT_inline_uniform_block\n\nAPI documentation\n\nstruct PhysicalDeviceInlineUniformBlockFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\ninline_uniform_block::Bool\ndescriptor_binding_inline_uniform_block_update_after_bind::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceInlineUniformBlockFeaturesEXT-Tuple{Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceInlineUniformBlockFeaturesEXT","text":"PhysicalDeviceInlineUniformBlockFeaturesEXT(inline_uniform_block::Bool, descriptor_binding_inline_uniform_block_update_after_bind::Bool; next = C_NULL)\n\nExtension: VK_EXT_inline_uniform_block\n\nArguments:\n\ninline_uniform_block::Bool\ndescriptor_binding_inline_uniform_block_update_after_bind::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceInlineUniformBlockFeaturesEXT(inline_uniform_block::Bool, descriptor_binding_inline_uniform_block_update_after_bind::Bool; next) -> PhysicalDeviceInlineUniformBlockFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceInlineUniformBlockPropertiesEXT","page":"API","title":"Vulkan.PhysicalDeviceInlineUniformBlockPropertiesEXT","text":"High-level wrapper for VkPhysicalDeviceInlineUniformBlockPropertiesEXT.\n\nExtension: VK_EXT_inline_uniform_block\n\nAPI documentation\n\nstruct PhysicalDeviceInlineUniformBlockPropertiesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nmax_inline_uniform_block_size::UInt32\nmax_per_stage_descriptor_inline_uniform_blocks::UInt32\nmax_per_stage_descriptor_update_after_bind_inline_uniform_blocks::UInt32\nmax_descriptor_set_inline_uniform_blocks::UInt32\nmax_descriptor_set_update_after_bind_inline_uniform_blocks::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceInlineUniformBlockPropertiesEXT-NTuple{5, Integer}","page":"API","title":"Vulkan.PhysicalDeviceInlineUniformBlockPropertiesEXT","text":"PhysicalDeviceInlineUniformBlockPropertiesEXT(max_inline_uniform_block_size::Integer, max_per_stage_descriptor_inline_uniform_blocks::Integer, max_per_stage_descriptor_update_after_bind_inline_uniform_blocks::Integer, max_descriptor_set_inline_uniform_blocks::Integer, max_descriptor_set_update_after_bind_inline_uniform_blocks::Integer; next = C_NULL)\n\nExtension: VK_EXT_inline_uniform_block\n\nArguments:\n\nmax_inline_uniform_block_size::Integer\nmax_per_stage_descriptor_inline_uniform_blocks::Integer\nmax_per_stage_descriptor_update_after_bind_inline_uniform_blocks::Integer\nmax_descriptor_set_inline_uniform_blocks::Integer\nmax_descriptor_set_update_after_bind_inline_uniform_blocks::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceInlineUniformBlockPropertiesEXT(max_inline_uniform_block_size::Integer, max_per_stage_descriptor_inline_uniform_blocks::Integer, max_per_stage_descriptor_update_after_bind_inline_uniform_blocks::Integer, max_descriptor_set_inline_uniform_blocks::Integer, max_descriptor_set_update_after_bind_inline_uniform_blocks::Integer; next) -> PhysicalDeviceInlineUniformBlockPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceLimits","page":"API","title":"Vulkan.PhysicalDeviceLimits","text":"High-level wrapper for VkPhysicalDeviceLimits.\n\nAPI documentation\n\nstruct PhysicalDeviceLimits <: Vulkan.HighLevelStruct\n\nmax_image_dimension_1_d::UInt32\nmax_image_dimension_2_d::UInt32\nmax_image_dimension_3_d::UInt32\nmax_image_dimension_cube::UInt32\nmax_image_array_layers::UInt32\nmax_texel_buffer_elements::UInt32\nmax_uniform_buffer_range::UInt32\nmax_storage_buffer_range::UInt32\nmax_push_constants_size::UInt32\nmax_memory_allocation_count::UInt32\nmax_sampler_allocation_count::UInt32\nbuffer_image_granularity::UInt64\nsparse_address_space_size::UInt64\nmax_bound_descriptor_sets::UInt32\nmax_per_stage_descriptor_samplers::UInt32\nmax_per_stage_descriptor_uniform_buffers::UInt32\nmax_per_stage_descriptor_storage_buffers::UInt32\nmax_per_stage_descriptor_sampled_images::UInt32\nmax_per_stage_descriptor_storage_images::UInt32\nmax_per_stage_descriptor_input_attachments::UInt32\nmax_per_stage_resources::UInt32\nmax_descriptor_set_samplers::UInt32\nmax_descriptor_set_uniform_buffers::UInt32\nmax_descriptor_set_uniform_buffers_dynamic::UInt32\nmax_descriptor_set_storage_buffers::UInt32\nmax_descriptor_set_storage_buffers_dynamic::UInt32\nmax_descriptor_set_sampled_images::UInt32\nmax_descriptor_set_storage_images::UInt32\nmax_descriptor_set_input_attachments::UInt32\nmax_vertex_input_attributes::UInt32\nmax_vertex_input_bindings::UInt32\nmax_vertex_input_attribute_offset::UInt32\nmax_vertex_input_binding_stride::UInt32\nmax_vertex_output_components::UInt32\nmax_tessellation_generation_level::UInt32\nmax_tessellation_patch_size::UInt32\nmax_tessellation_control_per_vertex_input_components::UInt32\nmax_tessellation_control_per_vertex_output_components::UInt32\nmax_tessellation_control_per_patch_output_components::UInt32\nmax_tessellation_control_total_output_components::UInt32\nmax_tessellation_evaluation_input_components::UInt32\nmax_tessellation_evaluation_output_components::UInt32\nmax_geometry_shader_invocations::UInt32\nmax_geometry_input_components::UInt32\nmax_geometry_output_components::UInt32\nmax_geometry_output_vertices::UInt32\nmax_geometry_total_output_components::UInt32\nmax_fragment_input_components::UInt32\nmax_fragment_output_attachments::UInt32\nmax_fragment_dual_src_attachments::UInt32\nmax_fragment_combined_output_resources::UInt32\nmax_compute_shared_memory_size::UInt32\nmax_compute_work_group_count::Tuple{UInt32, UInt32, UInt32}\nmax_compute_work_group_invocations::UInt32\nmax_compute_work_group_size::Tuple{UInt32, UInt32, UInt32}\nsub_pixel_precision_bits::UInt32\nsub_texel_precision_bits::UInt32\nmipmap_precision_bits::UInt32\nmax_draw_indexed_index_value::UInt32\nmax_draw_indirect_count::UInt32\nmax_sampler_lod_bias::Float32\nmax_sampler_anisotropy::Float32\nmax_viewports::UInt32\nmax_viewport_dimensions::Tuple{UInt32, UInt32}\nviewport_bounds_range::Tuple{Float32, Float32}\nviewport_sub_pixel_bits::UInt32\nmin_memory_map_alignment::UInt64\nmin_texel_buffer_offset_alignment::UInt64\nmin_uniform_buffer_offset_alignment::UInt64\nmin_storage_buffer_offset_alignment::UInt64\nmin_texel_offset::Int32\nmax_texel_offset::UInt32\nmin_texel_gather_offset::Int32\nmax_texel_gather_offset::UInt32\nmin_interpolation_offset::Float32\nmax_interpolation_offset::Float32\nsub_pixel_interpolation_offset_bits::UInt32\nmax_framebuffer_width::UInt32\nmax_framebuffer_height::UInt32\nmax_framebuffer_layers::UInt32\nframebuffer_color_sample_counts::SampleCountFlag\nframebuffer_depth_sample_counts::SampleCountFlag\nframebuffer_stencil_sample_counts::SampleCountFlag\nframebuffer_no_attachments_sample_counts::SampleCountFlag\nmax_color_attachments::UInt32\nsampled_image_color_sample_counts::SampleCountFlag\nsampled_image_integer_sample_counts::SampleCountFlag\nsampled_image_depth_sample_counts::SampleCountFlag\nsampled_image_stencil_sample_counts::SampleCountFlag\nstorage_image_sample_counts::SampleCountFlag\nmax_sample_mask_words::UInt32\ntimestamp_compute_and_graphics::Bool\ntimestamp_period::Float32\nmax_clip_distances::UInt32\nmax_cull_distances::UInt32\nmax_combined_clip_and_cull_distances::UInt32\ndiscrete_queue_priorities::UInt32\npoint_size_range::Tuple{Float32, Float32}\nline_width_range::Tuple{Float32, Float32}\npoint_size_granularity::Float32\nline_width_granularity::Float32\nstrict_lines::Bool\nstandard_sample_locations::Bool\noptimal_buffer_copy_offset_alignment::UInt64\noptimal_buffer_copy_row_pitch_alignment::UInt64\nnon_coherent_atom_size::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceLimits-Tuple{Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Tuple{UInt32, UInt32, UInt32}, Integer, Tuple{UInt32, UInt32, UInt32}, Integer, Integer, Integer, Integer, Integer, Real, Real, Integer, Tuple{UInt32, UInt32}, Tuple{Float32, Float32}, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Real, Real, Integer, Integer, Integer, Integer, Integer, Integer, Bool, Real, Integer, Integer, Integer, Integer, Tuple{Float32, Float32}, Tuple{Float32, Float32}, Real, Real, Bool, Bool, Integer, Integer, Integer}","page":"API","title":"Vulkan.PhysicalDeviceLimits","text":"PhysicalDeviceLimits(max_image_dimension_1_d::Integer, max_image_dimension_2_d::Integer, max_image_dimension_3_d::Integer, max_image_dimension_cube::Integer, max_image_array_layers::Integer, max_texel_buffer_elements::Integer, max_uniform_buffer_range::Integer, max_storage_buffer_range::Integer, max_push_constants_size::Integer, max_memory_allocation_count::Integer, max_sampler_allocation_count::Integer, buffer_image_granularity::Integer, sparse_address_space_size::Integer, max_bound_descriptor_sets::Integer, max_per_stage_descriptor_samplers::Integer, max_per_stage_descriptor_uniform_buffers::Integer, max_per_stage_descriptor_storage_buffers::Integer, max_per_stage_descriptor_sampled_images::Integer, max_per_stage_descriptor_storage_images::Integer, max_per_stage_descriptor_input_attachments::Integer, max_per_stage_resources::Integer, max_descriptor_set_samplers::Integer, max_descriptor_set_uniform_buffers::Integer, max_descriptor_set_uniform_buffers_dynamic::Integer, max_descriptor_set_storage_buffers::Integer, max_descriptor_set_storage_buffers_dynamic::Integer, max_descriptor_set_sampled_images::Integer, max_descriptor_set_storage_images::Integer, max_descriptor_set_input_attachments::Integer, max_vertex_input_attributes::Integer, max_vertex_input_bindings::Integer, max_vertex_input_attribute_offset::Integer, max_vertex_input_binding_stride::Integer, max_vertex_output_components::Integer, max_tessellation_generation_level::Integer, max_tessellation_patch_size::Integer, max_tessellation_control_per_vertex_input_components::Integer, max_tessellation_control_per_vertex_output_components::Integer, max_tessellation_control_per_patch_output_components::Integer, max_tessellation_control_total_output_components::Integer, max_tessellation_evaluation_input_components::Integer, max_tessellation_evaluation_output_components::Integer, max_geometry_shader_invocations::Integer, max_geometry_input_components::Integer, max_geometry_output_components::Integer, max_geometry_output_vertices::Integer, max_geometry_total_output_components::Integer, max_fragment_input_components::Integer, max_fragment_output_attachments::Integer, max_fragment_dual_src_attachments::Integer, max_fragment_combined_output_resources::Integer, max_compute_shared_memory_size::Integer, max_compute_work_group_count::NTuple{3, UInt32}, max_compute_work_group_invocations::Integer, max_compute_work_group_size::NTuple{3, UInt32}, sub_pixel_precision_bits::Integer, sub_texel_precision_bits::Integer, mipmap_precision_bits::Integer, max_draw_indexed_index_value::Integer, max_draw_indirect_count::Integer, max_sampler_lod_bias::Real, max_sampler_anisotropy::Real, max_viewports::Integer, max_viewport_dimensions::NTuple{2, UInt32}, viewport_bounds_range::NTuple{2, Float32}, viewport_sub_pixel_bits::Integer, min_memory_map_alignment::Integer, min_texel_buffer_offset_alignment::Integer, min_uniform_buffer_offset_alignment::Integer, min_storage_buffer_offset_alignment::Integer, min_texel_offset::Integer, max_texel_offset::Integer, min_texel_gather_offset::Integer, max_texel_gather_offset::Integer, min_interpolation_offset::Real, max_interpolation_offset::Real, sub_pixel_interpolation_offset_bits::Integer, max_framebuffer_width::Integer, max_framebuffer_height::Integer, max_framebuffer_layers::Integer, max_color_attachments::Integer, max_sample_mask_words::Integer, timestamp_compute_and_graphics::Bool, timestamp_period::Real, max_clip_distances::Integer, max_cull_distances::Integer, max_combined_clip_and_cull_distances::Integer, discrete_queue_priorities::Integer, point_size_range::NTuple{2, Float32}, line_width_range::NTuple{2, Float32}, point_size_granularity::Real, line_width_granularity::Real, strict_lines::Bool, standard_sample_locations::Bool, optimal_buffer_copy_offset_alignment::Integer, optimal_buffer_copy_row_pitch_alignment::Integer, non_coherent_atom_size::Integer; framebuffer_color_sample_counts = 0, framebuffer_depth_sample_counts = 0, framebuffer_stencil_sample_counts = 0, framebuffer_no_attachments_sample_counts = 0, sampled_image_color_sample_counts = 0, sampled_image_integer_sample_counts = 0, sampled_image_depth_sample_counts = 0, sampled_image_stencil_sample_counts = 0, storage_image_sample_counts = 0)\n\nArguments:\n\nmax_image_dimension_1_d::Integer\nmax_image_dimension_2_d::Integer\nmax_image_dimension_3_d::Integer\nmax_image_dimension_cube::Integer\nmax_image_array_layers::Integer\nmax_texel_buffer_elements::Integer\nmax_uniform_buffer_range::Integer\nmax_storage_buffer_range::Integer\nmax_push_constants_size::Integer\nmax_memory_allocation_count::Integer\nmax_sampler_allocation_count::Integer\nbuffer_image_granularity::Integer\nsparse_address_space_size::Integer\nmax_bound_descriptor_sets::Integer\nmax_per_stage_descriptor_samplers::Integer\nmax_per_stage_descriptor_uniform_buffers::Integer\nmax_per_stage_descriptor_storage_buffers::Integer\nmax_per_stage_descriptor_sampled_images::Integer\nmax_per_stage_descriptor_storage_images::Integer\nmax_per_stage_descriptor_input_attachments::Integer\nmax_per_stage_resources::Integer\nmax_descriptor_set_samplers::Integer\nmax_descriptor_set_uniform_buffers::Integer\nmax_descriptor_set_uniform_buffers_dynamic::Integer\nmax_descriptor_set_storage_buffers::Integer\nmax_descriptor_set_storage_buffers_dynamic::Integer\nmax_descriptor_set_sampled_images::Integer\nmax_descriptor_set_storage_images::Integer\nmax_descriptor_set_input_attachments::Integer\nmax_vertex_input_attributes::Integer\nmax_vertex_input_bindings::Integer\nmax_vertex_input_attribute_offset::Integer\nmax_vertex_input_binding_stride::Integer\nmax_vertex_output_components::Integer\nmax_tessellation_generation_level::Integer\nmax_tessellation_patch_size::Integer\nmax_tessellation_control_per_vertex_input_components::Integer\nmax_tessellation_control_per_vertex_output_components::Integer\nmax_tessellation_control_per_patch_output_components::Integer\nmax_tessellation_control_total_output_components::Integer\nmax_tessellation_evaluation_input_components::Integer\nmax_tessellation_evaluation_output_components::Integer\nmax_geometry_shader_invocations::Integer\nmax_geometry_input_components::Integer\nmax_geometry_output_components::Integer\nmax_geometry_output_vertices::Integer\nmax_geometry_total_output_components::Integer\nmax_fragment_input_components::Integer\nmax_fragment_output_attachments::Integer\nmax_fragment_dual_src_attachments::Integer\nmax_fragment_combined_output_resources::Integer\nmax_compute_shared_memory_size::Integer\nmax_compute_work_group_count::NTuple{3, UInt32}\nmax_compute_work_group_invocations::Integer\nmax_compute_work_group_size::NTuple{3, UInt32}\nsub_pixel_precision_bits::Integer\nsub_texel_precision_bits::Integer\nmipmap_precision_bits::Integer\nmax_draw_indexed_index_value::Integer\nmax_draw_indirect_count::Integer\nmax_sampler_lod_bias::Real\nmax_sampler_anisotropy::Real\nmax_viewports::Integer\nmax_viewport_dimensions::NTuple{2, UInt32}\nviewport_bounds_range::NTuple{2, Float32}\nviewport_sub_pixel_bits::Integer\nmin_memory_map_alignment::Integer\nmin_texel_buffer_offset_alignment::Integer\nmin_uniform_buffer_offset_alignment::Integer\nmin_storage_buffer_offset_alignment::Integer\nmin_texel_offset::Integer\nmax_texel_offset::Integer\nmin_texel_gather_offset::Integer\nmax_texel_gather_offset::Integer\nmin_interpolation_offset::Real\nmax_interpolation_offset::Real\nsub_pixel_interpolation_offset_bits::Integer\nmax_framebuffer_width::Integer\nmax_framebuffer_height::Integer\nmax_framebuffer_layers::Integer\nmax_color_attachments::Integer\nmax_sample_mask_words::Integer\ntimestamp_compute_and_graphics::Bool\ntimestamp_period::Real\nmax_clip_distances::Integer\nmax_cull_distances::Integer\nmax_combined_clip_and_cull_distances::Integer\ndiscrete_queue_priorities::Integer\npoint_size_range::NTuple{2, Float32}\nline_width_range::NTuple{2, Float32}\npoint_size_granularity::Real\nline_width_granularity::Real\nstrict_lines::Bool\nstandard_sample_locations::Bool\noptimal_buffer_copy_offset_alignment::Integer\noptimal_buffer_copy_row_pitch_alignment::Integer\nnon_coherent_atom_size::Integer\nframebuffer_color_sample_counts: defaults to 0\nframebuffer_depth_sample_counts: defaults to 0\nframebuffer_stencil_sample_counts: defaults to 0\nframebuffer_no_attachments_sample_counts: defaults to 0\nsampled_image_color_sample_counts: defaults to 0\nsampled_image_integer_sample_counts: defaults to 0\nsampled_image_depth_sample_counts: defaults to 0\nsampled_image_stencil_sample_counts: defaults to 0\nstorage_image_sample_counts: defaults to 0\n\nAPI documentation\n\nPhysicalDeviceLimits(max_image_dimension_1_d::Integer, max_image_dimension_2_d::Integer, max_image_dimension_3_d::Integer, max_image_dimension_cube::Integer, max_image_array_layers::Integer, max_texel_buffer_elements::Integer, max_uniform_buffer_range::Integer, max_storage_buffer_range::Integer, max_push_constants_size::Integer, max_memory_allocation_count::Integer, max_sampler_allocation_count::Integer, buffer_image_granularity::Integer, sparse_address_space_size::Integer, max_bound_descriptor_sets::Integer, max_per_stage_descriptor_samplers::Integer, max_per_stage_descriptor_uniform_buffers::Integer, max_per_stage_descriptor_storage_buffers::Integer, max_per_stage_descriptor_sampled_images::Integer, max_per_stage_descriptor_storage_images::Integer, max_per_stage_descriptor_input_attachments::Integer, max_per_stage_resources::Integer, max_descriptor_set_samplers::Integer, max_descriptor_set_uniform_buffers::Integer, max_descriptor_set_uniform_buffers_dynamic::Integer, max_descriptor_set_storage_buffers::Integer, max_descriptor_set_storage_buffers_dynamic::Integer, max_descriptor_set_sampled_images::Integer, max_descriptor_set_storage_images::Integer, max_descriptor_set_input_attachments::Integer, max_vertex_input_attributes::Integer, max_vertex_input_bindings::Integer, max_vertex_input_attribute_offset::Integer, max_vertex_input_binding_stride::Integer, max_vertex_output_components::Integer, max_tessellation_generation_level::Integer, max_tessellation_patch_size::Integer, max_tessellation_control_per_vertex_input_components::Integer, max_tessellation_control_per_vertex_output_components::Integer, max_tessellation_control_per_patch_output_components::Integer, max_tessellation_control_total_output_components::Integer, max_tessellation_evaluation_input_components::Integer, max_tessellation_evaluation_output_components::Integer, max_geometry_shader_invocations::Integer, max_geometry_input_components::Integer, max_geometry_output_components::Integer, max_geometry_output_vertices::Integer, max_geometry_total_output_components::Integer, max_fragment_input_components::Integer, max_fragment_output_attachments::Integer, max_fragment_dual_src_attachments::Integer, max_fragment_combined_output_resources::Integer, max_compute_shared_memory_size::Integer, max_compute_work_group_count::Tuple{UInt32, UInt32, UInt32}, max_compute_work_group_invocations::Integer, max_compute_work_group_size::Tuple{UInt32, UInt32, UInt32}, sub_pixel_precision_bits::Integer, sub_texel_precision_bits::Integer, mipmap_precision_bits::Integer, max_draw_indexed_index_value::Integer, max_draw_indirect_count::Integer, max_sampler_lod_bias::Real, max_sampler_anisotropy::Real, max_viewports::Integer, max_viewport_dimensions::Tuple{UInt32, UInt32}, viewport_bounds_range::Tuple{Float32, Float32}, viewport_sub_pixel_bits::Integer, min_memory_map_alignment::Integer, min_texel_buffer_offset_alignment::Integer, min_uniform_buffer_offset_alignment::Integer, min_storage_buffer_offset_alignment::Integer, min_texel_offset::Integer, max_texel_offset::Integer, min_texel_gather_offset::Integer, max_texel_gather_offset::Integer, min_interpolation_offset::Real, max_interpolation_offset::Real, sub_pixel_interpolation_offset_bits::Integer, max_framebuffer_width::Integer, max_framebuffer_height::Integer, max_framebuffer_layers::Integer, max_color_attachments::Integer, max_sample_mask_words::Integer, timestamp_compute_and_graphics::Bool, timestamp_period::Real, max_clip_distances::Integer, max_cull_distances::Integer, max_combined_clip_and_cull_distances::Integer, discrete_queue_priorities::Integer, point_size_range::Tuple{Float32, Float32}, line_width_range::Tuple{Float32, Float32}, point_size_granularity::Real, line_width_granularity::Real, strict_lines::Bool, standard_sample_locations::Bool, optimal_buffer_copy_offset_alignment::Integer, optimal_buffer_copy_row_pitch_alignment::Integer, non_coherent_atom_size::Integer; framebuffer_color_sample_counts, framebuffer_depth_sample_counts, framebuffer_stencil_sample_counts, framebuffer_no_attachments_sample_counts, sampled_image_color_sample_counts, sampled_image_integer_sample_counts, sampled_image_depth_sample_counts, sampled_image_stencil_sample_counts, storage_image_sample_counts) -> PhysicalDeviceLimits\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceLineRasterizationFeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceLineRasterizationFeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceLineRasterizationFeaturesEXT.\n\nExtension: VK_EXT_line_rasterization\n\nAPI documentation\n\nstruct PhysicalDeviceLineRasterizationFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nrectangular_lines::Bool\nbresenham_lines::Bool\nsmooth_lines::Bool\nstippled_rectangular_lines::Bool\nstippled_bresenham_lines::Bool\nstippled_smooth_lines::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceLineRasterizationFeaturesEXT-NTuple{6, Bool}","page":"API","title":"Vulkan.PhysicalDeviceLineRasterizationFeaturesEXT","text":"PhysicalDeviceLineRasterizationFeaturesEXT(rectangular_lines::Bool, bresenham_lines::Bool, smooth_lines::Bool, stippled_rectangular_lines::Bool, stippled_bresenham_lines::Bool, stippled_smooth_lines::Bool; next = C_NULL)\n\nExtension: VK_EXT_line_rasterization\n\nArguments:\n\nrectangular_lines::Bool\nbresenham_lines::Bool\nsmooth_lines::Bool\nstippled_rectangular_lines::Bool\nstippled_bresenham_lines::Bool\nstippled_smooth_lines::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceLineRasterizationFeaturesEXT(rectangular_lines::Bool, bresenham_lines::Bool, smooth_lines::Bool, stippled_rectangular_lines::Bool, stippled_bresenham_lines::Bool, stippled_smooth_lines::Bool; next) -> PhysicalDeviceLineRasterizationFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceLineRasterizationPropertiesEXT","page":"API","title":"Vulkan.PhysicalDeviceLineRasterizationPropertiesEXT","text":"High-level wrapper for VkPhysicalDeviceLineRasterizationPropertiesEXT.\n\nExtension: VK_EXT_line_rasterization\n\nAPI documentation\n\nstruct PhysicalDeviceLineRasterizationPropertiesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nline_sub_pixel_precision_bits::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceLineRasterizationPropertiesEXT-Tuple{Integer}","page":"API","title":"Vulkan.PhysicalDeviceLineRasterizationPropertiesEXT","text":"PhysicalDeviceLineRasterizationPropertiesEXT(line_sub_pixel_precision_bits::Integer; next = C_NULL)\n\nExtension: VK_EXT_line_rasterization\n\nArguments:\n\nline_sub_pixel_precision_bits::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceLineRasterizationPropertiesEXT(line_sub_pixel_precision_bits::Integer; next) -> PhysicalDeviceLineRasterizationPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceMaintenance3Properties","page":"API","title":"Vulkan.PhysicalDeviceMaintenance3Properties","text":"High-level wrapper for VkPhysicalDeviceMaintenance3Properties.\n\nAPI documentation\n\nstruct PhysicalDeviceMaintenance3Properties <: Vulkan.HighLevelStruct\n\nnext::Any\nmax_per_set_descriptors::UInt32\nmax_memory_allocation_size::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceMaintenance3Properties-Tuple{Integer, Integer}","page":"API","title":"Vulkan.PhysicalDeviceMaintenance3Properties","text":"PhysicalDeviceMaintenance3Properties(max_per_set_descriptors::Integer, max_memory_allocation_size::Integer; next = C_NULL)\n\nArguments:\n\nmax_per_set_descriptors::Integer\nmax_memory_allocation_size::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceMaintenance3Properties(max_per_set_descriptors::Integer, max_memory_allocation_size::Integer; next) -> PhysicalDeviceMaintenance3Properties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceMemoryBudgetPropertiesEXT","page":"API","title":"Vulkan.PhysicalDeviceMemoryBudgetPropertiesEXT","text":"High-level wrapper for VkPhysicalDeviceMemoryBudgetPropertiesEXT.\n\nExtension: VK_EXT_memory_budget\n\nAPI documentation\n\nstruct PhysicalDeviceMemoryBudgetPropertiesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nheap_budget::NTuple{16, UInt64}\nheap_usage::NTuple{16, UInt64}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceMemoryBudgetPropertiesEXT-Tuple{NTuple{16, UInt64}, NTuple{16, UInt64}}","page":"API","title":"Vulkan.PhysicalDeviceMemoryBudgetPropertiesEXT","text":"PhysicalDeviceMemoryBudgetPropertiesEXT(heap_budget::NTuple{Int(VK_MAX_MEMORY_HEAPS), UInt64}, heap_usage::NTuple{Int(VK_MAX_MEMORY_HEAPS), UInt64}; next = C_NULL)\n\nExtension: VK_EXT_memory_budget\n\nArguments:\n\nheap_budget::NTuple{Int(VK_MAX_MEMORY_HEAPS), UInt64}\nheap_usage::NTuple{Int(VK_MAX_MEMORY_HEAPS), UInt64}\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceMemoryBudgetPropertiesEXT(heap_budget::NTuple{16, UInt64}, heap_usage::NTuple{16, UInt64}; next) -> PhysicalDeviceMemoryBudgetPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceMemoryPriorityFeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceMemoryPriorityFeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceMemoryPriorityFeaturesEXT.\n\nExtension: VK_EXT_memory_priority\n\nAPI documentation\n\nstruct PhysicalDeviceMemoryPriorityFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nmemory_priority::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceMemoryPriorityFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceMemoryPriorityFeaturesEXT","text":"PhysicalDeviceMemoryPriorityFeaturesEXT(memory_priority::Bool; next = C_NULL)\n\nExtension: VK_EXT_memory_priority\n\nArguments:\n\nmemory_priority::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceMemoryPriorityFeaturesEXT(memory_priority::Bool; next) -> PhysicalDeviceMemoryPriorityFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceMemoryProperties","page":"API","title":"Vulkan.PhysicalDeviceMemoryProperties","text":"High-level wrapper for VkPhysicalDeviceMemoryProperties.\n\nAPI documentation\n\nstruct PhysicalDeviceMemoryProperties <: Vulkan.HighLevelStruct\n\nmemory_type_count::UInt32\nmemory_types::NTuple{32, MemoryType}\nmemory_heap_count::UInt32\nmemory_heaps::NTuple{16, MemoryHeap}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceMemoryProperties2","page":"API","title":"Vulkan.PhysicalDeviceMemoryProperties2","text":"High-level wrapper for VkPhysicalDeviceMemoryProperties2.\n\nAPI documentation\n\nstruct PhysicalDeviceMemoryProperties2 <: Vulkan.HighLevelStruct\n\nnext::Any\nmemory_properties::PhysicalDeviceMemoryProperties\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceMemoryProperties2-Tuple{PhysicalDeviceMemoryProperties}","page":"API","title":"Vulkan.PhysicalDeviceMemoryProperties2","text":"PhysicalDeviceMemoryProperties2(memory_properties::PhysicalDeviceMemoryProperties; next = C_NULL)\n\nArguments:\n\nmemory_properties::PhysicalDeviceMemoryProperties\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceMemoryProperties2(memory_properties::PhysicalDeviceMemoryProperties; next) -> PhysicalDeviceMemoryProperties2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceMeshShaderFeaturesNV","page":"API","title":"Vulkan.PhysicalDeviceMeshShaderFeaturesNV","text":"High-level wrapper for VkPhysicalDeviceMeshShaderFeaturesNV.\n\nExtension: VK_NV_mesh_shader\n\nAPI documentation\n\nstruct PhysicalDeviceMeshShaderFeaturesNV <: Vulkan.HighLevelStruct\n\nnext::Any\ntask_shader::Bool\nmesh_shader::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceMeshShaderFeaturesNV-Tuple{Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceMeshShaderFeaturesNV","text":"PhysicalDeviceMeshShaderFeaturesNV(task_shader::Bool, mesh_shader::Bool; next = C_NULL)\n\nExtension: VK_NV_mesh_shader\n\nArguments:\n\ntask_shader::Bool\nmesh_shader::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceMeshShaderFeaturesNV(task_shader::Bool, mesh_shader::Bool; next) -> PhysicalDeviceMeshShaderFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceMeshShaderPropertiesNV","page":"API","title":"Vulkan.PhysicalDeviceMeshShaderPropertiesNV","text":"High-level wrapper for VkPhysicalDeviceMeshShaderPropertiesNV.\n\nExtension: VK_NV_mesh_shader\n\nAPI documentation\n\nstruct PhysicalDeviceMeshShaderPropertiesNV <: Vulkan.HighLevelStruct\n\nnext::Any\nmax_draw_mesh_tasks_count::UInt32\nmax_task_work_group_invocations::UInt32\nmax_task_work_group_size::Tuple{UInt32, UInt32, UInt32}\nmax_task_total_memory_size::UInt32\nmax_task_output_count::UInt32\nmax_mesh_work_group_invocations::UInt32\nmax_mesh_work_group_size::Tuple{UInt32, UInt32, UInt32}\nmax_mesh_total_memory_size::UInt32\nmax_mesh_output_vertices::UInt32\nmax_mesh_output_primitives::UInt32\nmax_mesh_multiview_view_count::UInt32\nmesh_output_per_vertex_granularity::UInt32\nmesh_output_per_primitive_granularity::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceMeshShaderPropertiesNV-Tuple{Integer, Integer, Tuple{UInt32, UInt32, UInt32}, Integer, Integer, Integer, Tuple{UInt32, UInt32, UInt32}, Integer, Integer, Integer, Integer, Integer, Integer}","page":"API","title":"Vulkan.PhysicalDeviceMeshShaderPropertiesNV","text":"PhysicalDeviceMeshShaderPropertiesNV(max_draw_mesh_tasks_count::Integer, max_task_work_group_invocations::Integer, max_task_work_group_size::NTuple{3, UInt32}, max_task_total_memory_size::Integer, max_task_output_count::Integer, max_mesh_work_group_invocations::Integer, max_mesh_work_group_size::NTuple{3, UInt32}, max_mesh_total_memory_size::Integer, max_mesh_output_vertices::Integer, max_mesh_output_primitives::Integer, max_mesh_multiview_view_count::Integer, mesh_output_per_vertex_granularity::Integer, mesh_output_per_primitive_granularity::Integer; next = C_NULL)\n\nExtension: VK_NV_mesh_shader\n\nArguments:\n\nmax_draw_mesh_tasks_count::Integer\nmax_task_work_group_invocations::Integer\nmax_task_work_group_size::NTuple{3, UInt32}\nmax_task_total_memory_size::Integer\nmax_task_output_count::Integer\nmax_mesh_work_group_invocations::Integer\nmax_mesh_work_group_size::NTuple{3, UInt32}\nmax_mesh_total_memory_size::Integer\nmax_mesh_output_vertices::Integer\nmax_mesh_output_primitives::Integer\nmax_mesh_multiview_view_count::Integer\nmesh_output_per_vertex_granularity::Integer\nmesh_output_per_primitive_granularity::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceMeshShaderPropertiesNV(max_draw_mesh_tasks_count::Integer, max_task_work_group_invocations::Integer, max_task_work_group_size::Tuple{UInt32, UInt32, UInt32}, max_task_total_memory_size::Integer, max_task_output_count::Integer, max_mesh_work_group_invocations::Integer, max_mesh_work_group_size::Tuple{UInt32, UInt32, UInt32}, max_mesh_total_memory_size::Integer, max_mesh_output_vertices::Integer, max_mesh_output_primitives::Integer, max_mesh_multiview_view_count::Integer, mesh_output_per_vertex_granularity::Integer, mesh_output_per_primitive_granularity::Integer; next) -> PhysicalDeviceMeshShaderPropertiesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceMultiviewFeatures","page":"API","title":"Vulkan.PhysicalDeviceMultiviewFeatures","text":"High-level wrapper for VkPhysicalDeviceMultiviewFeatures.\n\nAPI documentation\n\nstruct PhysicalDeviceMultiviewFeatures <: Vulkan.HighLevelStruct\n\nnext::Any\nmultiview::Bool\nmultiview_geometry_shader::Bool\nmultiview_tessellation_shader::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceMultiviewFeatures-Tuple{Bool, Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceMultiviewFeatures","text":"PhysicalDeviceMultiviewFeatures(multiview::Bool, multiview_geometry_shader::Bool, multiview_tessellation_shader::Bool; next = C_NULL)\n\nArguments:\n\nmultiview::Bool\nmultiview_geometry_shader::Bool\nmultiview_tessellation_shader::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceMultiviewFeatures(multiview::Bool, multiview_geometry_shader::Bool, multiview_tessellation_shader::Bool; next) -> PhysicalDeviceMultiviewFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX","page":"API","title":"Vulkan.PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX","text":"High-level wrapper for VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX.\n\nExtension: VK_NVX_multiview_per_view_attributes\n\nAPI documentation\n\nstruct PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX <: Vulkan.HighLevelStruct\n\nnext::Any\nper_view_position_all_components::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX","text":"PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX(per_view_position_all_components::Bool; next = C_NULL)\n\nExtension: VK_NVX_multiview_per_view_attributes\n\nArguments:\n\nper_view_position_all_components::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX(per_view_position_all_components::Bool; next) -> PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceMultiviewProperties","page":"API","title":"Vulkan.PhysicalDeviceMultiviewProperties","text":"High-level wrapper for VkPhysicalDeviceMultiviewProperties.\n\nAPI documentation\n\nstruct PhysicalDeviceMultiviewProperties <: Vulkan.HighLevelStruct\n\nnext::Any\nmax_multiview_view_count::UInt32\nmax_multiview_instance_index::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceMultiviewProperties-Tuple{Integer, Integer}","page":"API","title":"Vulkan.PhysicalDeviceMultiviewProperties","text":"PhysicalDeviceMultiviewProperties(max_multiview_view_count::Integer, max_multiview_instance_index::Integer; next = C_NULL)\n\nArguments:\n\nmax_multiview_view_count::Integer\nmax_multiview_instance_index::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceMultiviewProperties(max_multiview_view_count::Integer, max_multiview_instance_index::Integer; next) -> PhysicalDeviceMultiviewProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceMutableDescriptorTypeFeaturesVALVE","page":"API","title":"Vulkan.PhysicalDeviceMutableDescriptorTypeFeaturesVALVE","text":"High-level wrapper for VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE.\n\nExtension: VK_VALVE_mutable_descriptor_type\n\nAPI documentation\n\nstruct PhysicalDeviceMutableDescriptorTypeFeaturesVALVE <: Vulkan.HighLevelStruct\n\nnext::Any\nmutable_descriptor_type::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceMutableDescriptorTypeFeaturesVALVE-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceMutableDescriptorTypeFeaturesVALVE","text":"PhysicalDeviceMutableDescriptorTypeFeaturesVALVE(mutable_descriptor_type::Bool; next = C_NULL)\n\nExtension: VK_VALVE_mutable_descriptor_type\n\nArguments:\n\nmutable_descriptor_type::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceMutableDescriptorTypeFeaturesVALVE(mutable_descriptor_type::Bool; next) -> PhysicalDeviceMutableDescriptorTypeFeaturesVALVE\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDevicePCIBusInfoPropertiesEXT","page":"API","title":"Vulkan.PhysicalDevicePCIBusInfoPropertiesEXT","text":"High-level wrapper for VkPhysicalDevicePCIBusInfoPropertiesEXT.\n\nExtension: VK_EXT_pci_bus_info\n\nAPI documentation\n\nstruct PhysicalDevicePCIBusInfoPropertiesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\npci_domain::UInt32\npci_bus::UInt32\npci_device::UInt32\npci_function::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDevicePCIBusInfoPropertiesEXT-NTuple{4, Integer}","page":"API","title":"Vulkan.PhysicalDevicePCIBusInfoPropertiesEXT","text":"PhysicalDevicePCIBusInfoPropertiesEXT(pci_domain::Integer, pci_bus::Integer, pci_device::Integer, pci_function::Integer; next = C_NULL)\n\nExtension: VK_EXT_pci_bus_info\n\nArguments:\n\npci_domain::Integer\npci_bus::Integer\npci_device::Integer\npci_function::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDevicePCIBusInfoPropertiesEXT(pci_domain::Integer, pci_bus::Integer, pci_device::Integer, pci_function::Integer; next) -> PhysicalDevicePCIBusInfoPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDevicePerformanceQueryFeaturesKHR","page":"API","title":"Vulkan.PhysicalDevicePerformanceQueryFeaturesKHR","text":"High-level wrapper for VkPhysicalDevicePerformanceQueryFeaturesKHR.\n\nExtension: VK_KHR_performance_query\n\nAPI documentation\n\nstruct PhysicalDevicePerformanceQueryFeaturesKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nperformance_counter_query_pools::Bool\nperformance_counter_multiple_query_pools::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDevicePerformanceQueryFeaturesKHR-Tuple{Bool, Bool}","page":"API","title":"Vulkan.PhysicalDevicePerformanceQueryFeaturesKHR","text":"PhysicalDevicePerformanceQueryFeaturesKHR(performance_counter_query_pools::Bool, performance_counter_multiple_query_pools::Bool; next = C_NULL)\n\nExtension: VK_KHR_performance_query\n\nArguments:\n\nperformance_counter_query_pools::Bool\nperformance_counter_multiple_query_pools::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDevicePerformanceQueryFeaturesKHR(performance_counter_query_pools::Bool, performance_counter_multiple_query_pools::Bool; next) -> PhysicalDevicePerformanceQueryFeaturesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDevicePerformanceQueryPropertiesKHR","page":"API","title":"Vulkan.PhysicalDevicePerformanceQueryPropertiesKHR","text":"High-level wrapper for VkPhysicalDevicePerformanceQueryPropertiesKHR.\n\nExtension: VK_KHR_performance_query\n\nAPI documentation\n\nstruct PhysicalDevicePerformanceQueryPropertiesKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nallow_command_buffer_query_copies::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDevicePerformanceQueryPropertiesKHR-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDevicePerformanceQueryPropertiesKHR","text":"PhysicalDevicePerformanceQueryPropertiesKHR(allow_command_buffer_query_copies::Bool; next = C_NULL)\n\nExtension: VK_KHR_performance_query\n\nArguments:\n\nallow_command_buffer_query_copies::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDevicePerformanceQueryPropertiesKHR(allow_command_buffer_query_copies::Bool; next) -> PhysicalDevicePerformanceQueryPropertiesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDevicePipelineCreationCacheControlFeaturesEXT","page":"API","title":"Vulkan.PhysicalDevicePipelineCreationCacheControlFeaturesEXT","text":"High-level wrapper for VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT.\n\nExtension: VK_EXT_pipeline_creation_cache_control\n\nAPI documentation\n\nstruct PhysicalDevicePipelineCreationCacheControlFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\npipeline_creation_cache_control::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDevicePipelineCreationCacheControlFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDevicePipelineCreationCacheControlFeaturesEXT","text":"PhysicalDevicePipelineCreationCacheControlFeaturesEXT(pipeline_creation_cache_control::Bool; next = C_NULL)\n\nExtension: VK_EXT_pipeline_creation_cache_control\n\nArguments:\n\npipeline_creation_cache_control::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDevicePipelineCreationCacheControlFeaturesEXT(pipeline_creation_cache_control::Bool; next) -> PhysicalDevicePipelineCreationCacheControlFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDevicePipelineExecutablePropertiesFeaturesKHR","page":"API","title":"Vulkan.PhysicalDevicePipelineExecutablePropertiesFeaturesKHR","text":"High-level wrapper for VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR.\n\nExtension: VK_KHR_pipeline_executable_properties\n\nAPI documentation\n\nstruct PhysicalDevicePipelineExecutablePropertiesFeaturesKHR <: Vulkan.HighLevelStruct\n\nnext::Any\npipeline_executable_info::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDevicePipelineExecutablePropertiesFeaturesKHR-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDevicePipelineExecutablePropertiesFeaturesKHR","text":"PhysicalDevicePipelineExecutablePropertiesFeaturesKHR(pipeline_executable_info::Bool; next = C_NULL)\n\nExtension: VK_KHR_pipeline_executable_properties\n\nArguments:\n\npipeline_executable_info::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDevicePipelineExecutablePropertiesFeaturesKHR(pipeline_executable_info::Bool; next) -> PhysicalDevicePipelineExecutablePropertiesFeaturesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDevicePointClippingProperties","page":"API","title":"Vulkan.PhysicalDevicePointClippingProperties","text":"High-level wrapper for VkPhysicalDevicePointClippingProperties.\n\nAPI documentation\n\nstruct PhysicalDevicePointClippingProperties <: Vulkan.HighLevelStruct\n\nnext::Any\npoint_clipping_behavior::PointClippingBehavior\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDevicePointClippingProperties-Tuple{PointClippingBehavior}","page":"API","title":"Vulkan.PhysicalDevicePointClippingProperties","text":"PhysicalDevicePointClippingProperties(point_clipping_behavior::PointClippingBehavior; next = C_NULL)\n\nArguments:\n\npoint_clipping_behavior::PointClippingBehavior\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDevicePointClippingProperties(point_clipping_behavior::PointClippingBehavior; next) -> PhysicalDevicePointClippingProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDevicePrivateDataFeaturesEXT","page":"API","title":"Vulkan.PhysicalDevicePrivateDataFeaturesEXT","text":"High-level wrapper for VkPhysicalDevicePrivateDataFeaturesEXT.\n\nExtension: VK_EXT_private_data\n\nAPI documentation\n\nstruct PhysicalDevicePrivateDataFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nprivate_data::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDevicePrivateDataFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDevicePrivateDataFeaturesEXT","text":"PhysicalDevicePrivateDataFeaturesEXT(private_data::Bool; next = C_NULL)\n\nExtension: VK_EXT_private_data\n\nArguments:\n\nprivate_data::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDevicePrivateDataFeaturesEXT(private_data::Bool; next) -> PhysicalDevicePrivateDataFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceProperties","page":"API","title":"Vulkan.PhysicalDeviceProperties","text":"High-level wrapper for VkPhysicalDeviceProperties.\n\nAPI documentation\n\nstruct PhysicalDeviceProperties <: Vulkan.HighLevelStruct\n\napi_version::VersionNumber\ndriver_version::VersionNumber\nvendor_id::UInt32\ndevice_id::UInt32\ndevice_type::PhysicalDeviceType\ndevice_name::String\npipeline_cache_uuid::NTuple{16, UInt8}\nlimits::PhysicalDeviceLimits\nsparse_properties::PhysicalDeviceSparseProperties\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceProperties2","page":"API","title":"Vulkan.PhysicalDeviceProperties2","text":"High-level wrapper for VkPhysicalDeviceProperties2.\n\nAPI documentation\n\nstruct PhysicalDeviceProperties2 <: Vulkan.HighLevelStruct\n\nnext::Any\nproperties::PhysicalDeviceProperties\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceProperties2-Tuple{PhysicalDeviceProperties}","page":"API","title":"Vulkan.PhysicalDeviceProperties2","text":"PhysicalDeviceProperties2(properties::PhysicalDeviceProperties; next = C_NULL)\n\nArguments:\n\nproperties::PhysicalDeviceProperties\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceProperties2(properties::PhysicalDeviceProperties; next) -> PhysicalDeviceProperties2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceProtectedMemoryFeatures","page":"API","title":"Vulkan.PhysicalDeviceProtectedMemoryFeatures","text":"High-level wrapper for VkPhysicalDeviceProtectedMemoryFeatures.\n\nAPI documentation\n\nstruct PhysicalDeviceProtectedMemoryFeatures <: Vulkan.HighLevelStruct\n\nnext::Any\nprotected_memory::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceProtectedMemoryFeatures-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceProtectedMemoryFeatures","text":"PhysicalDeviceProtectedMemoryFeatures(protected_memory::Bool; next = C_NULL)\n\nArguments:\n\nprotected_memory::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceProtectedMemoryFeatures(protected_memory::Bool; next) -> PhysicalDeviceProtectedMemoryFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceProtectedMemoryProperties","page":"API","title":"Vulkan.PhysicalDeviceProtectedMemoryProperties","text":"High-level wrapper for VkPhysicalDeviceProtectedMemoryProperties.\n\nAPI documentation\n\nstruct PhysicalDeviceProtectedMemoryProperties <: Vulkan.HighLevelStruct\n\nnext::Any\nprotected_no_fault::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceProtectedMemoryProperties-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceProtectedMemoryProperties","text":"PhysicalDeviceProtectedMemoryProperties(protected_no_fault::Bool; next = C_NULL)\n\nArguments:\n\nprotected_no_fault::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceProtectedMemoryProperties(protected_no_fault::Bool; next) -> PhysicalDeviceProtectedMemoryProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceProvokingVertexFeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceProvokingVertexFeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceProvokingVertexFeaturesEXT.\n\nExtension: VK_EXT_provoking_vertex\n\nAPI documentation\n\nstruct PhysicalDeviceProvokingVertexFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nprovoking_vertex_last::Bool\ntransform_feedback_preserves_provoking_vertex::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceProvokingVertexFeaturesEXT-Tuple{Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceProvokingVertexFeaturesEXT","text":"PhysicalDeviceProvokingVertexFeaturesEXT(provoking_vertex_last::Bool, transform_feedback_preserves_provoking_vertex::Bool; next = C_NULL)\n\nExtension: VK_EXT_provoking_vertex\n\nArguments:\n\nprovoking_vertex_last::Bool\ntransform_feedback_preserves_provoking_vertex::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceProvokingVertexFeaturesEXT(provoking_vertex_last::Bool, transform_feedback_preserves_provoking_vertex::Bool; next) -> PhysicalDeviceProvokingVertexFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceProvokingVertexPropertiesEXT","page":"API","title":"Vulkan.PhysicalDeviceProvokingVertexPropertiesEXT","text":"High-level wrapper for VkPhysicalDeviceProvokingVertexPropertiesEXT.\n\nExtension: VK_EXT_provoking_vertex\n\nAPI documentation\n\nstruct PhysicalDeviceProvokingVertexPropertiesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nprovoking_vertex_mode_per_pipeline::Bool\ntransform_feedback_preserves_triangle_fan_provoking_vertex::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceProvokingVertexPropertiesEXT-Tuple{Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceProvokingVertexPropertiesEXT","text":"PhysicalDeviceProvokingVertexPropertiesEXT(provoking_vertex_mode_per_pipeline::Bool, transform_feedback_preserves_triangle_fan_provoking_vertex::Bool; next = C_NULL)\n\nExtension: VK_EXT_provoking_vertex\n\nArguments:\n\nprovoking_vertex_mode_per_pipeline::Bool\ntransform_feedback_preserves_triangle_fan_provoking_vertex::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceProvokingVertexPropertiesEXT(provoking_vertex_mode_per_pipeline::Bool, transform_feedback_preserves_triangle_fan_provoking_vertex::Bool; next) -> PhysicalDeviceProvokingVertexPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDevicePushDescriptorPropertiesKHR","page":"API","title":"Vulkan.PhysicalDevicePushDescriptorPropertiesKHR","text":"High-level wrapper for VkPhysicalDevicePushDescriptorPropertiesKHR.\n\nExtension: VK_KHR_push_descriptor\n\nAPI documentation\n\nstruct PhysicalDevicePushDescriptorPropertiesKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nmax_push_descriptors::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDevicePushDescriptorPropertiesKHR-Tuple{Integer}","page":"API","title":"Vulkan.PhysicalDevicePushDescriptorPropertiesKHR","text":"PhysicalDevicePushDescriptorPropertiesKHR(max_push_descriptors::Integer; next = C_NULL)\n\nExtension: VK_KHR_push_descriptor\n\nArguments:\n\nmax_push_descriptors::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDevicePushDescriptorPropertiesKHR(max_push_descriptors::Integer; next) -> PhysicalDevicePushDescriptorPropertiesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceRayQueryFeaturesKHR","page":"API","title":"Vulkan.PhysicalDeviceRayQueryFeaturesKHR","text":"High-level wrapper for VkPhysicalDeviceRayQueryFeaturesKHR.\n\nExtension: VK_KHR_ray_query\n\nAPI documentation\n\nstruct PhysicalDeviceRayQueryFeaturesKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nray_query::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceRayQueryFeaturesKHR-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceRayQueryFeaturesKHR","text":"PhysicalDeviceRayQueryFeaturesKHR(ray_query::Bool; next = C_NULL)\n\nExtension: VK_KHR_ray_query\n\nArguments:\n\nray_query::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceRayQueryFeaturesKHR(ray_query::Bool; next) -> PhysicalDeviceRayQueryFeaturesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceRayTracingPipelineFeaturesKHR","page":"API","title":"Vulkan.PhysicalDeviceRayTracingPipelineFeaturesKHR","text":"High-level wrapper for VkPhysicalDeviceRayTracingPipelineFeaturesKHR.\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nAPI documentation\n\nstruct PhysicalDeviceRayTracingPipelineFeaturesKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nray_tracing_pipeline::Bool\nray_tracing_pipeline_shader_group_handle_capture_replay::Bool\nray_tracing_pipeline_shader_group_handle_capture_replay_mixed::Bool\nray_tracing_pipeline_trace_rays_indirect::Bool\nray_traversal_primitive_culling::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceRayTracingPipelineFeaturesKHR-NTuple{5, Bool}","page":"API","title":"Vulkan.PhysicalDeviceRayTracingPipelineFeaturesKHR","text":"PhysicalDeviceRayTracingPipelineFeaturesKHR(ray_tracing_pipeline::Bool, ray_tracing_pipeline_shader_group_handle_capture_replay::Bool, ray_tracing_pipeline_shader_group_handle_capture_replay_mixed::Bool, ray_tracing_pipeline_trace_rays_indirect::Bool, ray_traversal_primitive_culling::Bool; next = C_NULL)\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\nray_tracing_pipeline::Bool\nray_tracing_pipeline_shader_group_handle_capture_replay::Bool\nray_tracing_pipeline_shader_group_handle_capture_replay_mixed::Bool\nray_tracing_pipeline_trace_rays_indirect::Bool\nray_traversal_primitive_culling::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceRayTracingPipelineFeaturesKHR(ray_tracing_pipeline::Bool, ray_tracing_pipeline_shader_group_handle_capture_replay::Bool, ray_tracing_pipeline_shader_group_handle_capture_replay_mixed::Bool, ray_tracing_pipeline_trace_rays_indirect::Bool, ray_traversal_primitive_culling::Bool; next) -> PhysicalDeviceRayTracingPipelineFeaturesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceRayTracingPipelinePropertiesKHR","page":"API","title":"Vulkan.PhysicalDeviceRayTracingPipelinePropertiesKHR","text":"High-level wrapper for VkPhysicalDeviceRayTracingPipelinePropertiesKHR.\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nAPI documentation\n\nstruct PhysicalDeviceRayTracingPipelinePropertiesKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nshader_group_handle_size::UInt32\nmax_ray_recursion_depth::UInt32\nmax_shader_group_stride::UInt32\nshader_group_base_alignment::UInt32\nshader_group_handle_capture_replay_size::UInt32\nmax_ray_dispatch_invocation_count::UInt32\nshader_group_handle_alignment::UInt32\nmax_ray_hit_attribute_size::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceRayTracingPipelinePropertiesKHR-NTuple{8, Integer}","page":"API","title":"Vulkan.PhysicalDeviceRayTracingPipelinePropertiesKHR","text":"PhysicalDeviceRayTracingPipelinePropertiesKHR(shader_group_handle_size::Integer, max_ray_recursion_depth::Integer, max_shader_group_stride::Integer, shader_group_base_alignment::Integer, shader_group_handle_capture_replay_size::Integer, max_ray_dispatch_invocation_count::Integer, shader_group_handle_alignment::Integer, max_ray_hit_attribute_size::Integer; next = C_NULL)\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\nshader_group_handle_size::Integer\nmax_ray_recursion_depth::Integer\nmax_shader_group_stride::Integer\nshader_group_base_alignment::Integer\nshader_group_handle_capture_replay_size::Integer\nmax_ray_dispatch_invocation_count::Integer\nshader_group_handle_alignment::Integer\nmax_ray_hit_attribute_size::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceRayTracingPipelinePropertiesKHR(shader_group_handle_size::Integer, max_ray_recursion_depth::Integer, max_shader_group_stride::Integer, shader_group_base_alignment::Integer, shader_group_handle_capture_replay_size::Integer, max_ray_dispatch_invocation_count::Integer, shader_group_handle_alignment::Integer, max_ray_hit_attribute_size::Integer; next) -> PhysicalDeviceRayTracingPipelinePropertiesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceRayTracingPropertiesNV","page":"API","title":"Vulkan.PhysicalDeviceRayTracingPropertiesNV","text":"High-level wrapper for VkPhysicalDeviceRayTracingPropertiesNV.\n\nExtension: VK_NV_ray_tracing\n\nAPI documentation\n\nstruct PhysicalDeviceRayTracingPropertiesNV <: Vulkan.HighLevelStruct\n\nnext::Any\nshader_group_handle_size::UInt32\nmax_recursion_depth::UInt32\nmax_shader_group_stride::UInt32\nshader_group_base_alignment::UInt32\nmax_geometry_count::UInt64\nmax_instance_count::UInt64\nmax_triangle_count::UInt64\nmax_descriptor_set_acceleration_structures::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceRayTracingPropertiesNV-NTuple{8, Integer}","page":"API","title":"Vulkan.PhysicalDeviceRayTracingPropertiesNV","text":"PhysicalDeviceRayTracingPropertiesNV(shader_group_handle_size::Integer, max_recursion_depth::Integer, max_shader_group_stride::Integer, shader_group_base_alignment::Integer, max_geometry_count::Integer, max_instance_count::Integer, max_triangle_count::Integer, max_descriptor_set_acceleration_structures::Integer; next = C_NULL)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\nshader_group_handle_size::Integer\nmax_recursion_depth::Integer\nmax_shader_group_stride::Integer\nshader_group_base_alignment::Integer\nmax_geometry_count::Integer\nmax_instance_count::Integer\nmax_triangle_count::Integer\nmax_descriptor_set_acceleration_structures::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceRayTracingPropertiesNV(shader_group_handle_size::Integer, max_recursion_depth::Integer, max_shader_group_stride::Integer, shader_group_base_alignment::Integer, max_geometry_count::Integer, max_instance_count::Integer, max_triangle_count::Integer, max_descriptor_set_acceleration_structures::Integer; next) -> PhysicalDeviceRayTracingPropertiesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceRepresentativeFragmentTestFeaturesNV","page":"API","title":"Vulkan.PhysicalDeviceRepresentativeFragmentTestFeaturesNV","text":"High-level wrapper for VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV.\n\nExtension: VK_NV_representative_fragment_test\n\nAPI documentation\n\nstruct PhysicalDeviceRepresentativeFragmentTestFeaturesNV <: Vulkan.HighLevelStruct\n\nnext::Any\nrepresentative_fragment_test::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceRepresentativeFragmentTestFeaturesNV-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceRepresentativeFragmentTestFeaturesNV","text":"PhysicalDeviceRepresentativeFragmentTestFeaturesNV(representative_fragment_test::Bool; next = C_NULL)\n\nExtension: VK_NV_representative_fragment_test\n\nArguments:\n\nrepresentative_fragment_test::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceRepresentativeFragmentTestFeaturesNV(representative_fragment_test::Bool; next) -> PhysicalDeviceRepresentativeFragmentTestFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceRobustness2FeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceRobustness2FeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceRobustness2FeaturesEXT.\n\nExtension: VK_EXT_robustness2\n\nAPI documentation\n\nstruct PhysicalDeviceRobustness2FeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nrobust_buffer_access_2::Bool\nrobust_image_access_2::Bool\nnull_descriptor::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceRobustness2FeaturesEXT-Tuple{Bool, Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceRobustness2FeaturesEXT","text":"PhysicalDeviceRobustness2FeaturesEXT(robust_buffer_access_2::Bool, robust_image_access_2::Bool, null_descriptor::Bool; next = C_NULL)\n\nExtension: VK_EXT_robustness2\n\nArguments:\n\nrobust_buffer_access_2::Bool\nrobust_image_access_2::Bool\nnull_descriptor::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceRobustness2FeaturesEXT(robust_buffer_access_2::Bool, robust_image_access_2::Bool, null_descriptor::Bool; next) -> PhysicalDeviceRobustness2FeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceRobustness2PropertiesEXT","page":"API","title":"Vulkan.PhysicalDeviceRobustness2PropertiesEXT","text":"High-level wrapper for VkPhysicalDeviceRobustness2PropertiesEXT.\n\nExtension: VK_EXT_robustness2\n\nAPI documentation\n\nstruct PhysicalDeviceRobustness2PropertiesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nrobust_storage_buffer_access_size_alignment::UInt64\nrobust_uniform_buffer_access_size_alignment::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceRobustness2PropertiesEXT-Tuple{Integer, Integer}","page":"API","title":"Vulkan.PhysicalDeviceRobustness2PropertiesEXT","text":"PhysicalDeviceRobustness2PropertiesEXT(robust_storage_buffer_access_size_alignment::Integer, robust_uniform_buffer_access_size_alignment::Integer; next = C_NULL)\n\nExtension: VK_EXT_robustness2\n\nArguments:\n\nrobust_storage_buffer_access_size_alignment::Integer\nrobust_uniform_buffer_access_size_alignment::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceRobustness2PropertiesEXT(robust_storage_buffer_access_size_alignment::Integer, robust_uniform_buffer_access_size_alignment::Integer; next) -> PhysicalDeviceRobustness2PropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceSampleLocationsPropertiesEXT","page":"API","title":"Vulkan.PhysicalDeviceSampleLocationsPropertiesEXT","text":"High-level wrapper for VkPhysicalDeviceSampleLocationsPropertiesEXT.\n\nExtension: VK_EXT_sample_locations\n\nAPI documentation\n\nstruct PhysicalDeviceSampleLocationsPropertiesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nsample_location_sample_counts::SampleCountFlag\nmax_sample_location_grid_size::Extent2D\nsample_location_coordinate_range::Tuple{Float32, Float32}\nsample_location_sub_pixel_bits::UInt32\nvariable_sample_locations::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceSampleLocationsPropertiesEXT-Tuple{SampleCountFlag, Extent2D, Tuple{Float32, Float32}, Integer, Bool}","page":"API","title":"Vulkan.PhysicalDeviceSampleLocationsPropertiesEXT","text":"PhysicalDeviceSampleLocationsPropertiesEXT(sample_location_sample_counts::SampleCountFlag, max_sample_location_grid_size::Extent2D, sample_location_coordinate_range::NTuple{2, Float32}, sample_location_sub_pixel_bits::Integer, variable_sample_locations::Bool; next = C_NULL)\n\nExtension: VK_EXT_sample_locations\n\nArguments:\n\nsample_location_sample_counts::SampleCountFlag\nmax_sample_location_grid_size::Extent2D\nsample_location_coordinate_range::NTuple{2, Float32}\nsample_location_sub_pixel_bits::Integer\nvariable_sample_locations::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceSampleLocationsPropertiesEXT(sample_location_sample_counts::SampleCountFlag, max_sample_location_grid_size::Extent2D, sample_location_coordinate_range::Tuple{Float32, Float32}, sample_location_sub_pixel_bits::Integer, variable_sample_locations::Bool; next) -> PhysicalDeviceSampleLocationsPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceSamplerFilterMinmaxProperties","page":"API","title":"Vulkan.PhysicalDeviceSamplerFilterMinmaxProperties","text":"High-level wrapper for VkPhysicalDeviceSamplerFilterMinmaxProperties.\n\nAPI documentation\n\nstruct PhysicalDeviceSamplerFilterMinmaxProperties <: Vulkan.HighLevelStruct\n\nnext::Any\nfilter_minmax_single_component_formats::Bool\nfilter_minmax_image_component_mapping::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceSamplerFilterMinmaxProperties-Tuple{Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceSamplerFilterMinmaxProperties","text":"PhysicalDeviceSamplerFilterMinmaxProperties(filter_minmax_single_component_formats::Bool, filter_minmax_image_component_mapping::Bool; next = C_NULL)\n\nArguments:\n\nfilter_minmax_single_component_formats::Bool\nfilter_minmax_image_component_mapping::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceSamplerFilterMinmaxProperties(filter_minmax_single_component_formats::Bool, filter_minmax_image_component_mapping::Bool; next) -> PhysicalDeviceSamplerFilterMinmaxProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceSamplerYcbcrConversionFeatures","page":"API","title":"Vulkan.PhysicalDeviceSamplerYcbcrConversionFeatures","text":"High-level wrapper for VkPhysicalDeviceSamplerYcbcrConversionFeatures.\n\nAPI documentation\n\nstruct PhysicalDeviceSamplerYcbcrConversionFeatures <: Vulkan.HighLevelStruct\n\nnext::Any\nsampler_ycbcr_conversion::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceSamplerYcbcrConversionFeatures-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceSamplerYcbcrConversionFeatures","text":"PhysicalDeviceSamplerYcbcrConversionFeatures(sampler_ycbcr_conversion::Bool; next = C_NULL)\n\nArguments:\n\nsampler_ycbcr_conversion::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceSamplerYcbcrConversionFeatures(sampler_ycbcr_conversion::Bool; next) -> PhysicalDeviceSamplerYcbcrConversionFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceScalarBlockLayoutFeatures","page":"API","title":"Vulkan.PhysicalDeviceScalarBlockLayoutFeatures","text":"High-level wrapper for VkPhysicalDeviceScalarBlockLayoutFeatures.\n\nAPI documentation\n\nstruct PhysicalDeviceScalarBlockLayoutFeatures <: Vulkan.HighLevelStruct\n\nnext::Any\nscalar_block_layout::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceScalarBlockLayoutFeatures-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceScalarBlockLayoutFeatures","text":"PhysicalDeviceScalarBlockLayoutFeatures(scalar_block_layout::Bool; next = C_NULL)\n\nArguments:\n\nscalar_block_layout::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceScalarBlockLayoutFeatures(scalar_block_layout::Bool; next) -> PhysicalDeviceScalarBlockLayoutFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceSeparateDepthStencilLayoutsFeatures","page":"API","title":"Vulkan.PhysicalDeviceSeparateDepthStencilLayoutsFeatures","text":"High-level wrapper for VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures.\n\nAPI documentation\n\nstruct PhysicalDeviceSeparateDepthStencilLayoutsFeatures <: Vulkan.HighLevelStruct\n\nnext::Any\nseparate_depth_stencil_layouts::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceSeparateDepthStencilLayoutsFeatures-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceSeparateDepthStencilLayoutsFeatures","text":"PhysicalDeviceSeparateDepthStencilLayoutsFeatures(separate_depth_stencil_layouts::Bool; next = C_NULL)\n\nArguments:\n\nseparate_depth_stencil_layouts::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceSeparateDepthStencilLayoutsFeatures(separate_depth_stencil_layouts::Bool; next) -> PhysicalDeviceSeparateDepthStencilLayoutsFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceShaderAtomicFloatFeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceShaderAtomicFloatFeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceShaderAtomicFloatFeaturesEXT.\n\nExtension: VK_EXT_shader_atomic_float\n\nAPI documentation\n\nstruct PhysicalDeviceShaderAtomicFloatFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nshader_buffer_float_32_atomics::Bool\nshader_buffer_float_32_atomic_add::Bool\nshader_buffer_float_64_atomics::Bool\nshader_buffer_float_64_atomic_add::Bool\nshader_shared_float_32_atomics::Bool\nshader_shared_float_32_atomic_add::Bool\nshader_shared_float_64_atomics::Bool\nshader_shared_float_64_atomic_add::Bool\nshader_image_float_32_atomics::Bool\nshader_image_float_32_atomic_add::Bool\nsparse_image_float_32_atomics::Bool\nsparse_image_float_32_atomic_add::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceShaderAtomicFloatFeaturesEXT-NTuple{12, Bool}","page":"API","title":"Vulkan.PhysicalDeviceShaderAtomicFloatFeaturesEXT","text":"PhysicalDeviceShaderAtomicFloatFeaturesEXT(shader_buffer_float_32_atomics::Bool, shader_buffer_float_32_atomic_add::Bool, shader_buffer_float_64_atomics::Bool, shader_buffer_float_64_atomic_add::Bool, shader_shared_float_32_atomics::Bool, shader_shared_float_32_atomic_add::Bool, shader_shared_float_64_atomics::Bool, shader_shared_float_64_atomic_add::Bool, shader_image_float_32_atomics::Bool, shader_image_float_32_atomic_add::Bool, sparse_image_float_32_atomics::Bool, sparse_image_float_32_atomic_add::Bool; next = C_NULL)\n\nExtension: VK_EXT_shader_atomic_float\n\nArguments:\n\nshader_buffer_float_32_atomics::Bool\nshader_buffer_float_32_atomic_add::Bool\nshader_buffer_float_64_atomics::Bool\nshader_buffer_float_64_atomic_add::Bool\nshader_shared_float_32_atomics::Bool\nshader_shared_float_32_atomic_add::Bool\nshader_shared_float_64_atomics::Bool\nshader_shared_float_64_atomic_add::Bool\nshader_image_float_32_atomics::Bool\nshader_image_float_32_atomic_add::Bool\nsparse_image_float_32_atomics::Bool\nsparse_image_float_32_atomic_add::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceShaderAtomicFloatFeaturesEXT(shader_buffer_float_32_atomics::Bool, shader_buffer_float_32_atomic_add::Bool, shader_buffer_float_64_atomics::Bool, shader_buffer_float_64_atomic_add::Bool, shader_shared_float_32_atomics::Bool, shader_shared_float_32_atomic_add::Bool, shader_shared_float_64_atomics::Bool, shader_shared_float_64_atomic_add::Bool, shader_image_float_32_atomics::Bool, shader_image_float_32_atomic_add::Bool, sparse_image_float_32_atomics::Bool, sparse_image_float_32_atomic_add::Bool; next) -> PhysicalDeviceShaderAtomicFloatFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceShaderAtomicInt64Features","page":"API","title":"Vulkan.PhysicalDeviceShaderAtomicInt64Features","text":"High-level wrapper for VkPhysicalDeviceShaderAtomicInt64Features.\n\nAPI documentation\n\nstruct PhysicalDeviceShaderAtomicInt64Features <: Vulkan.HighLevelStruct\n\nnext::Any\nshader_buffer_int_64_atomics::Bool\nshader_shared_int_64_atomics::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceShaderAtomicInt64Features-Tuple{Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceShaderAtomicInt64Features","text":"PhysicalDeviceShaderAtomicInt64Features(shader_buffer_int_64_atomics::Bool, shader_shared_int_64_atomics::Bool; next = C_NULL)\n\nArguments:\n\nshader_buffer_int_64_atomics::Bool\nshader_shared_int_64_atomics::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceShaderAtomicInt64Features(shader_buffer_int_64_atomics::Bool, shader_shared_int_64_atomics::Bool; next) -> PhysicalDeviceShaderAtomicInt64Features\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceShaderClockFeaturesKHR","page":"API","title":"Vulkan.PhysicalDeviceShaderClockFeaturesKHR","text":"High-level wrapper for VkPhysicalDeviceShaderClockFeaturesKHR.\n\nExtension: VK_KHR_shader_clock\n\nAPI documentation\n\nstruct PhysicalDeviceShaderClockFeaturesKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nshader_subgroup_clock::Bool\nshader_device_clock::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceShaderClockFeaturesKHR-Tuple{Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceShaderClockFeaturesKHR","text":"PhysicalDeviceShaderClockFeaturesKHR(shader_subgroup_clock::Bool, shader_device_clock::Bool; next = C_NULL)\n\nExtension: VK_KHR_shader_clock\n\nArguments:\n\nshader_subgroup_clock::Bool\nshader_device_clock::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceShaderClockFeaturesKHR(shader_subgroup_clock::Bool, shader_device_clock::Bool; next) -> PhysicalDeviceShaderClockFeaturesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceShaderCoreProperties2AMD","page":"API","title":"Vulkan.PhysicalDeviceShaderCoreProperties2AMD","text":"High-level wrapper for VkPhysicalDeviceShaderCoreProperties2AMD.\n\nExtension: VK_AMD_shader_core_properties2\n\nAPI documentation\n\nstruct PhysicalDeviceShaderCoreProperties2AMD <: Vulkan.HighLevelStruct\n\nnext::Any\nshader_core_features::ShaderCorePropertiesFlagAMD\nactive_compute_unit_count::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceShaderCoreProperties2AMD-Tuple{ShaderCorePropertiesFlagAMD, Integer}","page":"API","title":"Vulkan.PhysicalDeviceShaderCoreProperties2AMD","text":"PhysicalDeviceShaderCoreProperties2AMD(shader_core_features::ShaderCorePropertiesFlagAMD, active_compute_unit_count::Integer; next = C_NULL)\n\nExtension: VK_AMD_shader_core_properties2\n\nArguments:\n\nshader_core_features::ShaderCorePropertiesFlagAMD\nactive_compute_unit_count::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceShaderCoreProperties2AMD(shader_core_features::ShaderCorePropertiesFlagAMD, active_compute_unit_count::Integer; next) -> PhysicalDeviceShaderCoreProperties2AMD\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceShaderCorePropertiesAMD","page":"API","title":"Vulkan.PhysicalDeviceShaderCorePropertiesAMD","text":"High-level wrapper for VkPhysicalDeviceShaderCorePropertiesAMD.\n\nExtension: VK_AMD_shader_core_properties\n\nAPI documentation\n\nstruct PhysicalDeviceShaderCorePropertiesAMD <: Vulkan.HighLevelStruct\n\nnext::Any\nshader_engine_count::UInt32\nshader_arrays_per_engine_count::UInt32\ncompute_units_per_shader_array::UInt32\nsimd_per_compute_unit::UInt32\nwavefronts_per_simd::UInt32\nwavefront_size::UInt32\nsgprs_per_simd::UInt32\nmin_sgpr_allocation::UInt32\nmax_sgpr_allocation::UInt32\nsgpr_allocation_granularity::UInt32\nvgprs_per_simd::UInt32\nmin_vgpr_allocation::UInt32\nmax_vgpr_allocation::UInt32\nvgpr_allocation_granularity::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceShaderCorePropertiesAMD-NTuple{14, Integer}","page":"API","title":"Vulkan.PhysicalDeviceShaderCorePropertiesAMD","text":"PhysicalDeviceShaderCorePropertiesAMD(shader_engine_count::Integer, shader_arrays_per_engine_count::Integer, compute_units_per_shader_array::Integer, simd_per_compute_unit::Integer, wavefronts_per_simd::Integer, wavefront_size::Integer, sgprs_per_simd::Integer, min_sgpr_allocation::Integer, max_sgpr_allocation::Integer, sgpr_allocation_granularity::Integer, vgprs_per_simd::Integer, min_vgpr_allocation::Integer, max_vgpr_allocation::Integer, vgpr_allocation_granularity::Integer; next = C_NULL)\n\nExtension: VK_AMD_shader_core_properties\n\nArguments:\n\nshader_engine_count::Integer\nshader_arrays_per_engine_count::Integer\ncompute_units_per_shader_array::Integer\nsimd_per_compute_unit::Integer\nwavefronts_per_simd::Integer\nwavefront_size::Integer\nsgprs_per_simd::Integer\nmin_sgpr_allocation::Integer\nmax_sgpr_allocation::Integer\nsgpr_allocation_granularity::Integer\nvgprs_per_simd::Integer\nmin_vgpr_allocation::Integer\nmax_vgpr_allocation::Integer\nvgpr_allocation_granularity::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceShaderCorePropertiesAMD(shader_engine_count::Integer, shader_arrays_per_engine_count::Integer, compute_units_per_shader_array::Integer, simd_per_compute_unit::Integer, wavefronts_per_simd::Integer, wavefront_size::Integer, sgprs_per_simd::Integer, min_sgpr_allocation::Integer, max_sgpr_allocation::Integer, sgpr_allocation_granularity::Integer, vgprs_per_simd::Integer, min_vgpr_allocation::Integer, max_vgpr_allocation::Integer, vgpr_allocation_granularity::Integer; next) -> PhysicalDeviceShaderCorePropertiesAMD\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT.\n\nExtension: VK_EXT_shader_demote_to_helper_invocation\n\nAPI documentation\n\nstruct PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nshader_demote_to_helper_invocation::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT","text":"PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT(shader_demote_to_helper_invocation::Bool; next = C_NULL)\n\nExtension: VK_EXT_shader_demote_to_helper_invocation\n\nArguments:\n\nshader_demote_to_helper_invocation::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT(shader_demote_to_helper_invocation::Bool; next) -> PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceShaderDrawParametersFeatures","page":"API","title":"Vulkan.PhysicalDeviceShaderDrawParametersFeatures","text":"High-level wrapper for VkPhysicalDeviceShaderDrawParametersFeatures.\n\nAPI documentation\n\nstruct PhysicalDeviceShaderDrawParametersFeatures <: Vulkan.HighLevelStruct\n\nnext::Any\nshader_draw_parameters::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceShaderDrawParametersFeatures-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceShaderDrawParametersFeatures","text":"PhysicalDeviceShaderDrawParametersFeatures(shader_draw_parameters::Bool; next = C_NULL)\n\nArguments:\n\nshader_draw_parameters::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceShaderDrawParametersFeatures(shader_draw_parameters::Bool; next) -> PhysicalDeviceShaderDrawParametersFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceShaderFloat16Int8Features","page":"API","title":"Vulkan.PhysicalDeviceShaderFloat16Int8Features","text":"High-level wrapper for VkPhysicalDeviceShaderFloat16Int8Features.\n\nAPI documentation\n\nstruct PhysicalDeviceShaderFloat16Int8Features <: Vulkan.HighLevelStruct\n\nnext::Any\nshader_float_16::Bool\nshader_int_8::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceShaderFloat16Int8Features-Tuple{Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceShaderFloat16Int8Features","text":"PhysicalDeviceShaderFloat16Int8Features(shader_float_16::Bool, shader_int_8::Bool; next = C_NULL)\n\nArguments:\n\nshader_float_16::Bool\nshader_int_8::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceShaderFloat16Int8Features(shader_float_16::Bool, shader_int_8::Bool; next) -> PhysicalDeviceShaderFloat16Int8Features\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceShaderImageAtomicInt64FeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceShaderImageAtomicInt64FeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT.\n\nExtension: VK_EXT_shader_image_atomic_int64\n\nAPI documentation\n\nstruct PhysicalDeviceShaderImageAtomicInt64FeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nshader_image_int_64_atomics::Bool\nsparse_image_int_64_atomics::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceShaderImageAtomicInt64FeaturesEXT-Tuple{Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceShaderImageAtomicInt64FeaturesEXT","text":"PhysicalDeviceShaderImageAtomicInt64FeaturesEXT(shader_image_int_64_atomics::Bool, sparse_image_int_64_atomics::Bool; next = C_NULL)\n\nExtension: VK_EXT_shader_image_atomic_int64\n\nArguments:\n\nshader_image_int_64_atomics::Bool\nsparse_image_int_64_atomics::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceShaderImageAtomicInt64FeaturesEXT(shader_image_int_64_atomics::Bool, sparse_image_int_64_atomics::Bool; next) -> PhysicalDeviceShaderImageAtomicInt64FeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceShaderImageFootprintFeaturesNV","page":"API","title":"Vulkan.PhysicalDeviceShaderImageFootprintFeaturesNV","text":"High-level wrapper for VkPhysicalDeviceShaderImageFootprintFeaturesNV.\n\nExtension: VK_NV_shader_image_footprint\n\nAPI documentation\n\nstruct PhysicalDeviceShaderImageFootprintFeaturesNV <: Vulkan.HighLevelStruct\n\nnext::Any\nimage_footprint::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceShaderImageFootprintFeaturesNV-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceShaderImageFootprintFeaturesNV","text":"PhysicalDeviceShaderImageFootprintFeaturesNV(image_footprint::Bool; next = C_NULL)\n\nExtension: VK_NV_shader_image_footprint\n\nArguments:\n\nimage_footprint::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceShaderImageFootprintFeaturesNV(image_footprint::Bool; next) -> PhysicalDeviceShaderImageFootprintFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL","page":"API","title":"Vulkan.PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL","text":"High-level wrapper for VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL.\n\nExtension: VK_INTEL_shader_integer_functions2\n\nAPI documentation\n\nstruct PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL <: Vulkan.HighLevelStruct\n\nnext::Any\nshader_integer_functions_2::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL","text":"PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL(shader_integer_functions_2::Bool; next = C_NULL)\n\nExtension: VK_INTEL_shader_integer_functions2\n\nArguments:\n\nshader_integer_functions_2::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL(shader_integer_functions_2::Bool; next) -> PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceShaderSMBuiltinsFeaturesNV","page":"API","title":"Vulkan.PhysicalDeviceShaderSMBuiltinsFeaturesNV","text":"High-level wrapper for VkPhysicalDeviceShaderSMBuiltinsFeaturesNV.\n\nExtension: VK_NV_shader_sm_builtins\n\nAPI documentation\n\nstruct PhysicalDeviceShaderSMBuiltinsFeaturesNV <: Vulkan.HighLevelStruct\n\nnext::Any\nshader_sm_builtins::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceShaderSMBuiltinsFeaturesNV-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceShaderSMBuiltinsFeaturesNV","text":"PhysicalDeviceShaderSMBuiltinsFeaturesNV(shader_sm_builtins::Bool; next = C_NULL)\n\nExtension: VK_NV_shader_sm_builtins\n\nArguments:\n\nshader_sm_builtins::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceShaderSMBuiltinsFeaturesNV(shader_sm_builtins::Bool; next) -> PhysicalDeviceShaderSMBuiltinsFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceShaderSMBuiltinsPropertiesNV","page":"API","title":"Vulkan.PhysicalDeviceShaderSMBuiltinsPropertiesNV","text":"High-level wrapper for VkPhysicalDeviceShaderSMBuiltinsPropertiesNV.\n\nExtension: VK_NV_shader_sm_builtins\n\nAPI documentation\n\nstruct PhysicalDeviceShaderSMBuiltinsPropertiesNV <: Vulkan.HighLevelStruct\n\nnext::Any\nshader_sm_count::UInt32\nshader_warps_per_sm::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceShaderSMBuiltinsPropertiesNV-Tuple{Integer, Integer}","page":"API","title":"Vulkan.PhysicalDeviceShaderSMBuiltinsPropertiesNV","text":"PhysicalDeviceShaderSMBuiltinsPropertiesNV(shader_sm_count::Integer, shader_warps_per_sm::Integer; next = C_NULL)\n\nExtension: VK_NV_shader_sm_builtins\n\nArguments:\n\nshader_sm_count::Integer\nshader_warps_per_sm::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceShaderSMBuiltinsPropertiesNV(shader_sm_count::Integer, shader_warps_per_sm::Integer; next) -> PhysicalDeviceShaderSMBuiltinsPropertiesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceShaderSubgroupExtendedTypesFeatures","page":"API","title":"Vulkan.PhysicalDeviceShaderSubgroupExtendedTypesFeatures","text":"High-level wrapper for VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures.\n\nAPI documentation\n\nstruct PhysicalDeviceShaderSubgroupExtendedTypesFeatures <: Vulkan.HighLevelStruct\n\nnext::Any\nshader_subgroup_extended_types::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceShaderSubgroupExtendedTypesFeatures-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceShaderSubgroupExtendedTypesFeatures","text":"PhysicalDeviceShaderSubgroupExtendedTypesFeatures(shader_subgroup_extended_types::Bool; next = C_NULL)\n\nArguments:\n\nshader_subgroup_extended_types::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceShaderSubgroupExtendedTypesFeatures(shader_subgroup_extended_types::Bool; next) -> PhysicalDeviceShaderSubgroupExtendedTypesFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceShaderTerminateInvocationFeaturesKHR","page":"API","title":"Vulkan.PhysicalDeviceShaderTerminateInvocationFeaturesKHR","text":"High-level wrapper for VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR.\n\nExtension: VK_KHR_shader_terminate_invocation\n\nAPI documentation\n\nstruct PhysicalDeviceShaderTerminateInvocationFeaturesKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nshader_terminate_invocation::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceShaderTerminateInvocationFeaturesKHR-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceShaderTerminateInvocationFeaturesKHR","text":"PhysicalDeviceShaderTerminateInvocationFeaturesKHR(shader_terminate_invocation::Bool; next = C_NULL)\n\nExtension: VK_KHR_shader_terminate_invocation\n\nArguments:\n\nshader_terminate_invocation::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceShaderTerminateInvocationFeaturesKHR(shader_terminate_invocation::Bool; next) -> PhysicalDeviceShaderTerminateInvocationFeaturesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceShadingRateImageFeaturesNV","page":"API","title":"Vulkan.PhysicalDeviceShadingRateImageFeaturesNV","text":"High-level wrapper for VkPhysicalDeviceShadingRateImageFeaturesNV.\n\nExtension: VK_NV_shading_rate_image\n\nAPI documentation\n\nstruct PhysicalDeviceShadingRateImageFeaturesNV <: Vulkan.HighLevelStruct\n\nnext::Any\nshading_rate_image::Bool\nshading_rate_coarse_sample_order::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceShadingRateImageFeaturesNV-Tuple{Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceShadingRateImageFeaturesNV","text":"PhysicalDeviceShadingRateImageFeaturesNV(shading_rate_image::Bool, shading_rate_coarse_sample_order::Bool; next = C_NULL)\n\nExtension: VK_NV_shading_rate_image\n\nArguments:\n\nshading_rate_image::Bool\nshading_rate_coarse_sample_order::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceShadingRateImageFeaturesNV(shading_rate_image::Bool, shading_rate_coarse_sample_order::Bool; next) -> PhysicalDeviceShadingRateImageFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceShadingRateImagePropertiesNV","page":"API","title":"Vulkan.PhysicalDeviceShadingRateImagePropertiesNV","text":"High-level wrapper for VkPhysicalDeviceShadingRateImagePropertiesNV.\n\nExtension: VK_NV_shading_rate_image\n\nAPI documentation\n\nstruct PhysicalDeviceShadingRateImagePropertiesNV <: Vulkan.HighLevelStruct\n\nnext::Any\nshading_rate_texel_size::Extent2D\nshading_rate_palette_size::UInt32\nshading_rate_max_coarse_samples::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceShadingRateImagePropertiesNV-Tuple{Extent2D, Integer, Integer}","page":"API","title":"Vulkan.PhysicalDeviceShadingRateImagePropertiesNV","text":"PhysicalDeviceShadingRateImagePropertiesNV(shading_rate_texel_size::Extent2D, shading_rate_palette_size::Integer, shading_rate_max_coarse_samples::Integer; next = C_NULL)\n\nExtension: VK_NV_shading_rate_image\n\nArguments:\n\nshading_rate_texel_size::Extent2D\nshading_rate_palette_size::Integer\nshading_rate_max_coarse_samples::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceShadingRateImagePropertiesNV(shading_rate_texel_size::Extent2D, shading_rate_palette_size::Integer, shading_rate_max_coarse_samples::Integer; next) -> PhysicalDeviceShadingRateImagePropertiesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceSparseImageFormatInfo2","page":"API","title":"Vulkan.PhysicalDeviceSparseImageFormatInfo2","text":"High-level wrapper for VkPhysicalDeviceSparseImageFormatInfo2.\n\nAPI documentation\n\nstruct PhysicalDeviceSparseImageFormatInfo2 <: Vulkan.HighLevelStruct\n\nnext::Any\nformat::Format\ntype::ImageType\nsamples::SampleCountFlag\nusage::ImageUsageFlag\ntiling::ImageTiling\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceSparseImageFormatInfo2-Tuple{Format, ImageType, SampleCountFlag, ImageUsageFlag, ImageTiling}","page":"API","title":"Vulkan.PhysicalDeviceSparseImageFormatInfo2","text":"PhysicalDeviceSparseImageFormatInfo2(format::Format, type::ImageType, samples::SampleCountFlag, usage::ImageUsageFlag, tiling::ImageTiling; next = C_NULL)\n\nArguments:\n\nformat::Format\ntype::ImageType\nsamples::SampleCountFlag\nusage::ImageUsageFlag\ntiling::ImageTiling\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceSparseImageFormatInfo2(format::Format, type::ImageType, samples::SampleCountFlag, usage::ImageUsageFlag, tiling::ImageTiling; next) -> PhysicalDeviceSparseImageFormatInfo2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceSparseProperties","page":"API","title":"Vulkan.PhysicalDeviceSparseProperties","text":"High-level wrapper for VkPhysicalDeviceSparseProperties.\n\nAPI documentation\n\nstruct PhysicalDeviceSparseProperties <: Vulkan.HighLevelStruct\n\nresidency_standard_2_d_block_shape::Bool\nresidency_standard_2_d_multisample_block_shape::Bool\nresidency_standard_3_d_block_shape::Bool\nresidency_aligned_mip_size::Bool\nresidency_non_resident_strict::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceSubgroupProperties","page":"API","title":"Vulkan.PhysicalDeviceSubgroupProperties","text":"High-level wrapper for VkPhysicalDeviceSubgroupProperties.\n\nAPI documentation\n\nstruct PhysicalDeviceSubgroupProperties <: Vulkan.HighLevelStruct\n\nnext::Any\nsubgroup_size::UInt32\nsupported_stages::ShaderStageFlag\nsupported_operations::SubgroupFeatureFlag\nquad_operations_in_all_stages::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceSubgroupProperties-Tuple{Integer, ShaderStageFlag, SubgroupFeatureFlag, Bool}","page":"API","title":"Vulkan.PhysicalDeviceSubgroupProperties","text":"PhysicalDeviceSubgroupProperties(subgroup_size::Integer, supported_stages::ShaderStageFlag, supported_operations::SubgroupFeatureFlag, quad_operations_in_all_stages::Bool; next = C_NULL)\n\nArguments:\n\nsubgroup_size::Integer\nsupported_stages::ShaderStageFlag\nsupported_operations::SubgroupFeatureFlag\nquad_operations_in_all_stages::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceSubgroupProperties(subgroup_size::Integer, supported_stages::ShaderStageFlag, supported_operations::SubgroupFeatureFlag, quad_operations_in_all_stages::Bool; next) -> PhysicalDeviceSubgroupProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceSubgroupSizeControlFeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceSubgroupSizeControlFeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceSubgroupSizeControlFeaturesEXT.\n\nExtension: VK_EXT_subgroup_size_control\n\nAPI documentation\n\nstruct PhysicalDeviceSubgroupSizeControlFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nsubgroup_size_control::Bool\ncompute_full_subgroups::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceSubgroupSizeControlFeaturesEXT-Tuple{Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceSubgroupSizeControlFeaturesEXT","text":"PhysicalDeviceSubgroupSizeControlFeaturesEXT(subgroup_size_control::Bool, compute_full_subgroups::Bool; next = C_NULL)\n\nExtension: VK_EXT_subgroup_size_control\n\nArguments:\n\nsubgroup_size_control::Bool\ncompute_full_subgroups::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceSubgroupSizeControlFeaturesEXT(subgroup_size_control::Bool, compute_full_subgroups::Bool; next) -> PhysicalDeviceSubgroupSizeControlFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceSubgroupSizeControlPropertiesEXT","page":"API","title":"Vulkan.PhysicalDeviceSubgroupSizeControlPropertiesEXT","text":"High-level wrapper for VkPhysicalDeviceSubgroupSizeControlPropertiesEXT.\n\nExtension: VK_EXT_subgroup_size_control\n\nAPI documentation\n\nstruct PhysicalDeviceSubgroupSizeControlPropertiesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nmin_subgroup_size::UInt32\nmax_subgroup_size::UInt32\nmax_compute_workgroup_subgroups::UInt32\nrequired_subgroup_size_stages::ShaderStageFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceSubgroupSizeControlPropertiesEXT-Tuple{Integer, Integer, Integer, ShaderStageFlag}","page":"API","title":"Vulkan.PhysicalDeviceSubgroupSizeControlPropertiesEXT","text":"PhysicalDeviceSubgroupSizeControlPropertiesEXT(min_subgroup_size::Integer, max_subgroup_size::Integer, max_compute_workgroup_subgroups::Integer, required_subgroup_size_stages::ShaderStageFlag; next = C_NULL)\n\nExtension: VK_EXT_subgroup_size_control\n\nArguments:\n\nmin_subgroup_size::Integer\nmax_subgroup_size::Integer\nmax_compute_workgroup_subgroups::Integer\nrequired_subgroup_size_stages::ShaderStageFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceSubgroupSizeControlPropertiesEXT(min_subgroup_size::Integer, max_subgroup_size::Integer, max_compute_workgroup_subgroups::Integer, required_subgroup_size_stages::ShaderStageFlag; next) -> PhysicalDeviceSubgroupSizeControlPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceSurfaceInfo2KHR","page":"API","title":"Vulkan.PhysicalDeviceSurfaceInfo2KHR","text":"High-level wrapper for VkPhysicalDeviceSurfaceInfo2KHR.\n\nExtension: VK_KHR_get_surface_capabilities2\n\nAPI documentation\n\nstruct PhysicalDeviceSurfaceInfo2KHR <: Vulkan.HighLevelStruct\n\nnext::Any\nsurface::SurfaceKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceSurfaceInfo2KHR-Tuple{SurfaceKHR}","page":"API","title":"Vulkan.PhysicalDeviceSurfaceInfo2KHR","text":"PhysicalDeviceSurfaceInfo2KHR(surface::SurfaceKHR; next = C_NULL)\n\nExtension: VK_KHR_get_surface_capabilities2\n\nArguments:\n\nsurface::SurfaceKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceSurfaceInfo2KHR(surface::SurfaceKHR; next) -> PhysicalDeviceSurfaceInfo2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceSynchronization2FeaturesKHR","page":"API","title":"Vulkan.PhysicalDeviceSynchronization2FeaturesKHR","text":"High-level wrapper for VkPhysicalDeviceSynchronization2FeaturesKHR.\n\nExtension: VK_KHR_synchronization2\n\nAPI documentation\n\nstruct PhysicalDeviceSynchronization2FeaturesKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nsynchronization2::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceSynchronization2FeaturesKHR-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceSynchronization2FeaturesKHR","text":"PhysicalDeviceSynchronization2FeaturesKHR(synchronization2::Bool; next = C_NULL)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\nsynchronization2::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceSynchronization2FeaturesKHR(synchronization2::Bool; next) -> PhysicalDeviceSynchronization2FeaturesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceTexelBufferAlignmentFeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceTexelBufferAlignmentFeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT.\n\nExtension: VK_EXT_texel_buffer_alignment\n\nAPI documentation\n\nstruct PhysicalDeviceTexelBufferAlignmentFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\ntexel_buffer_alignment::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceTexelBufferAlignmentFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceTexelBufferAlignmentFeaturesEXT","text":"PhysicalDeviceTexelBufferAlignmentFeaturesEXT(texel_buffer_alignment::Bool; next = C_NULL)\n\nExtension: VK_EXT_texel_buffer_alignment\n\nArguments:\n\ntexel_buffer_alignment::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceTexelBufferAlignmentFeaturesEXT(texel_buffer_alignment::Bool; next) -> PhysicalDeviceTexelBufferAlignmentFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceTexelBufferAlignmentPropertiesEXT","page":"API","title":"Vulkan.PhysicalDeviceTexelBufferAlignmentPropertiesEXT","text":"High-level wrapper for VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT.\n\nExtension: VK_EXT_texel_buffer_alignment\n\nAPI documentation\n\nstruct PhysicalDeviceTexelBufferAlignmentPropertiesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nstorage_texel_buffer_offset_alignment_bytes::UInt64\nstorage_texel_buffer_offset_single_texel_alignment::Bool\nuniform_texel_buffer_offset_alignment_bytes::UInt64\nuniform_texel_buffer_offset_single_texel_alignment::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceTexelBufferAlignmentPropertiesEXT-Tuple{Integer, Bool, Integer, Bool}","page":"API","title":"Vulkan.PhysicalDeviceTexelBufferAlignmentPropertiesEXT","text":"PhysicalDeviceTexelBufferAlignmentPropertiesEXT(storage_texel_buffer_offset_alignment_bytes::Integer, storage_texel_buffer_offset_single_texel_alignment::Bool, uniform_texel_buffer_offset_alignment_bytes::Integer, uniform_texel_buffer_offset_single_texel_alignment::Bool; next = C_NULL)\n\nExtension: VK_EXT_texel_buffer_alignment\n\nArguments:\n\nstorage_texel_buffer_offset_alignment_bytes::Integer\nstorage_texel_buffer_offset_single_texel_alignment::Bool\nuniform_texel_buffer_offset_alignment_bytes::Integer\nuniform_texel_buffer_offset_single_texel_alignment::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceTexelBufferAlignmentPropertiesEXT(storage_texel_buffer_offset_alignment_bytes::Integer, storage_texel_buffer_offset_single_texel_alignment::Bool, uniform_texel_buffer_offset_alignment_bytes::Integer, uniform_texel_buffer_offset_single_texel_alignment::Bool; next) -> PhysicalDeviceTexelBufferAlignmentPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceTextureCompressionASTCHDRFeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceTextureCompressionASTCHDRFeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT.\n\nExtension: VK_EXT_texture_compression_astc_hdr\n\nAPI documentation\n\nstruct PhysicalDeviceTextureCompressionASTCHDRFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\ntexture_compression_astc_hdr::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceTextureCompressionASTCHDRFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceTextureCompressionASTCHDRFeaturesEXT","text":"PhysicalDeviceTextureCompressionASTCHDRFeaturesEXT(texture_compression_astc_hdr::Bool; next = C_NULL)\n\nExtension: VK_EXT_texture_compression_astc_hdr\n\nArguments:\n\ntexture_compression_astc_hdr::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT(texture_compression_astc_hdr::Bool; next) -> PhysicalDeviceTextureCompressionASTCHDRFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceTimelineSemaphoreFeatures","page":"API","title":"Vulkan.PhysicalDeviceTimelineSemaphoreFeatures","text":"High-level wrapper for VkPhysicalDeviceTimelineSemaphoreFeatures.\n\nAPI documentation\n\nstruct PhysicalDeviceTimelineSemaphoreFeatures <: Vulkan.HighLevelStruct\n\nnext::Any\ntimeline_semaphore::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceTimelineSemaphoreFeatures-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceTimelineSemaphoreFeatures","text":"PhysicalDeviceTimelineSemaphoreFeatures(timeline_semaphore::Bool; next = C_NULL)\n\nArguments:\n\ntimeline_semaphore::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceTimelineSemaphoreFeatures(timeline_semaphore::Bool; next) -> PhysicalDeviceTimelineSemaphoreFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceTimelineSemaphoreProperties","page":"API","title":"Vulkan.PhysicalDeviceTimelineSemaphoreProperties","text":"High-level wrapper for VkPhysicalDeviceTimelineSemaphoreProperties.\n\nAPI documentation\n\nstruct PhysicalDeviceTimelineSemaphoreProperties <: Vulkan.HighLevelStruct\n\nnext::Any\nmax_timeline_semaphore_value_difference::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceTimelineSemaphoreProperties-Tuple{Integer}","page":"API","title":"Vulkan.PhysicalDeviceTimelineSemaphoreProperties","text":"PhysicalDeviceTimelineSemaphoreProperties(max_timeline_semaphore_value_difference::Integer; next = C_NULL)\n\nArguments:\n\nmax_timeline_semaphore_value_difference::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceTimelineSemaphoreProperties(max_timeline_semaphore_value_difference::Integer; next) -> PhysicalDeviceTimelineSemaphoreProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceToolPropertiesEXT","page":"API","title":"Vulkan.PhysicalDeviceToolPropertiesEXT","text":"High-level wrapper for VkPhysicalDeviceToolPropertiesEXT.\n\nExtension: VK_EXT_tooling_info\n\nAPI documentation\n\nstruct PhysicalDeviceToolPropertiesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nname::String\nversion::String\npurposes::ToolPurposeFlagEXT\ndescription::String\nlayer::String\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceToolPropertiesEXT-Tuple{AbstractString, AbstractString, ToolPurposeFlagEXT, AbstractString, AbstractString}","page":"API","title":"Vulkan.PhysicalDeviceToolPropertiesEXT","text":"PhysicalDeviceToolPropertiesEXT(name::AbstractString, version::AbstractString, purposes::ToolPurposeFlagEXT, description::AbstractString, layer::AbstractString; next = C_NULL)\n\nExtension: VK_EXT_tooling_info\n\nArguments:\n\nname::AbstractString\nversion::AbstractString\npurposes::ToolPurposeFlagEXT\ndescription::AbstractString\nlayer::AbstractString\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceToolPropertiesEXT(name::AbstractString, version::AbstractString, purposes::ToolPurposeFlagEXT, description::AbstractString, layer::AbstractString; next) -> PhysicalDeviceToolPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceTransformFeedbackFeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceTransformFeedbackFeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceTransformFeedbackFeaturesEXT.\n\nExtension: VK_EXT_transform_feedback\n\nAPI documentation\n\nstruct PhysicalDeviceTransformFeedbackFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\ntransform_feedback::Bool\ngeometry_streams::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceTransformFeedbackFeaturesEXT-Tuple{Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceTransformFeedbackFeaturesEXT","text":"PhysicalDeviceTransformFeedbackFeaturesEXT(transform_feedback::Bool, geometry_streams::Bool; next = C_NULL)\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\ntransform_feedback::Bool\ngeometry_streams::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceTransformFeedbackFeaturesEXT(transform_feedback::Bool, geometry_streams::Bool; next) -> PhysicalDeviceTransformFeedbackFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceTransformFeedbackPropertiesEXT","page":"API","title":"Vulkan.PhysicalDeviceTransformFeedbackPropertiesEXT","text":"High-level wrapper for VkPhysicalDeviceTransformFeedbackPropertiesEXT.\n\nExtension: VK_EXT_transform_feedback\n\nAPI documentation\n\nstruct PhysicalDeviceTransformFeedbackPropertiesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nmax_transform_feedback_streams::UInt32\nmax_transform_feedback_buffers::UInt32\nmax_transform_feedback_buffer_size::UInt64\nmax_transform_feedback_stream_data_size::UInt32\nmax_transform_feedback_buffer_data_size::UInt32\nmax_transform_feedback_buffer_data_stride::UInt32\ntransform_feedback_queries::Bool\ntransform_feedback_streams_lines_triangles::Bool\ntransform_feedback_rasterization_stream_select::Bool\ntransform_feedback_draw::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceTransformFeedbackPropertiesEXT-Tuple{Integer, Integer, Integer, Integer, Integer, Integer, Bool, Bool, Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceTransformFeedbackPropertiesEXT","text":"PhysicalDeviceTransformFeedbackPropertiesEXT(max_transform_feedback_streams::Integer, max_transform_feedback_buffers::Integer, max_transform_feedback_buffer_size::Integer, max_transform_feedback_stream_data_size::Integer, max_transform_feedback_buffer_data_size::Integer, max_transform_feedback_buffer_data_stride::Integer, transform_feedback_queries::Bool, transform_feedback_streams_lines_triangles::Bool, transform_feedback_rasterization_stream_select::Bool, transform_feedback_draw::Bool; next = C_NULL)\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\nmax_transform_feedback_streams::Integer\nmax_transform_feedback_buffers::Integer\nmax_transform_feedback_buffer_size::Integer\nmax_transform_feedback_stream_data_size::Integer\nmax_transform_feedback_buffer_data_size::Integer\nmax_transform_feedback_buffer_data_stride::Integer\ntransform_feedback_queries::Bool\ntransform_feedback_streams_lines_triangles::Bool\ntransform_feedback_rasterization_stream_select::Bool\ntransform_feedback_draw::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceTransformFeedbackPropertiesEXT(max_transform_feedback_streams::Integer, max_transform_feedback_buffers::Integer, max_transform_feedback_buffer_size::Integer, max_transform_feedback_stream_data_size::Integer, max_transform_feedback_buffer_data_size::Integer, max_transform_feedback_buffer_data_stride::Integer, transform_feedback_queries::Bool, transform_feedback_streams_lines_triangles::Bool, transform_feedback_rasterization_stream_select::Bool, transform_feedback_draw::Bool; next) -> PhysicalDeviceTransformFeedbackPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceUniformBufferStandardLayoutFeatures","page":"API","title":"Vulkan.PhysicalDeviceUniformBufferStandardLayoutFeatures","text":"High-level wrapper for VkPhysicalDeviceUniformBufferStandardLayoutFeatures.\n\nAPI documentation\n\nstruct PhysicalDeviceUniformBufferStandardLayoutFeatures <: Vulkan.HighLevelStruct\n\nnext::Any\nuniform_buffer_standard_layout::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceUniformBufferStandardLayoutFeatures-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceUniformBufferStandardLayoutFeatures","text":"PhysicalDeviceUniformBufferStandardLayoutFeatures(uniform_buffer_standard_layout::Bool; next = C_NULL)\n\nArguments:\n\nuniform_buffer_standard_layout::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceUniformBufferStandardLayoutFeatures(uniform_buffer_standard_layout::Bool; next) -> PhysicalDeviceUniformBufferStandardLayoutFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceVariablePointersFeatures","page":"API","title":"Vulkan.PhysicalDeviceVariablePointersFeatures","text":"High-level wrapper for VkPhysicalDeviceVariablePointersFeatures.\n\nAPI documentation\n\nstruct PhysicalDeviceVariablePointersFeatures <: Vulkan.HighLevelStruct\n\nnext::Any\nvariable_pointers_storage_buffer::Bool\nvariable_pointers::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceVariablePointersFeatures-Tuple{Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceVariablePointersFeatures","text":"PhysicalDeviceVariablePointersFeatures(variable_pointers_storage_buffer::Bool, variable_pointers::Bool; next = C_NULL)\n\nArguments:\n\nvariable_pointers_storage_buffer::Bool\nvariable_pointers::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceVariablePointersFeatures(variable_pointers_storage_buffer::Bool, variable_pointers::Bool; next) -> PhysicalDeviceVariablePointersFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceVertexAttributeDivisorFeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceVertexAttributeDivisorFeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT.\n\nExtension: VK_EXT_vertex_attribute_divisor\n\nAPI documentation\n\nstruct PhysicalDeviceVertexAttributeDivisorFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nvertex_attribute_instance_rate_divisor::Bool\nvertex_attribute_instance_rate_zero_divisor::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceVertexAttributeDivisorFeaturesEXT-Tuple{Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceVertexAttributeDivisorFeaturesEXT","text":"PhysicalDeviceVertexAttributeDivisorFeaturesEXT(vertex_attribute_instance_rate_divisor::Bool, vertex_attribute_instance_rate_zero_divisor::Bool; next = C_NULL)\n\nExtension: VK_EXT_vertex_attribute_divisor\n\nArguments:\n\nvertex_attribute_instance_rate_divisor::Bool\nvertex_attribute_instance_rate_zero_divisor::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceVertexAttributeDivisorFeaturesEXT(vertex_attribute_instance_rate_divisor::Bool, vertex_attribute_instance_rate_zero_divisor::Bool; next) -> PhysicalDeviceVertexAttributeDivisorFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceVertexAttributeDivisorPropertiesEXT","page":"API","title":"Vulkan.PhysicalDeviceVertexAttributeDivisorPropertiesEXT","text":"High-level wrapper for VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT.\n\nExtension: VK_EXT_vertex_attribute_divisor\n\nAPI documentation\n\nstruct PhysicalDeviceVertexAttributeDivisorPropertiesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nmax_vertex_attrib_divisor::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceVertexAttributeDivisorPropertiesEXT-Tuple{Integer}","page":"API","title":"Vulkan.PhysicalDeviceVertexAttributeDivisorPropertiesEXT","text":"PhysicalDeviceVertexAttributeDivisorPropertiesEXT(max_vertex_attrib_divisor::Integer; next = C_NULL)\n\nExtension: VK_EXT_vertex_attribute_divisor\n\nArguments:\n\nmax_vertex_attrib_divisor::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceVertexAttributeDivisorPropertiesEXT(max_vertex_attrib_divisor::Integer; next) -> PhysicalDeviceVertexAttributeDivisorPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceVertexInputDynamicStateFeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceVertexInputDynamicStateFeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT.\n\nExtension: VK_EXT_vertex_input_dynamic_state\n\nAPI documentation\n\nstruct PhysicalDeviceVertexInputDynamicStateFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nvertex_input_dynamic_state::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceVertexInputDynamicStateFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceVertexInputDynamicStateFeaturesEXT","text":"PhysicalDeviceVertexInputDynamicStateFeaturesEXT(vertex_input_dynamic_state::Bool; next = C_NULL)\n\nExtension: VK_EXT_vertex_input_dynamic_state\n\nArguments:\n\nvertex_input_dynamic_state::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceVertexInputDynamicStateFeaturesEXT(vertex_input_dynamic_state::Bool; next) -> PhysicalDeviceVertexInputDynamicStateFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceVulkan11Features","page":"API","title":"Vulkan.PhysicalDeviceVulkan11Features","text":"High-level wrapper for VkPhysicalDeviceVulkan11Features.\n\nAPI documentation\n\nstruct PhysicalDeviceVulkan11Features <: Vulkan.HighLevelStruct\n\nnext::Any\nstorage_buffer_16_bit_access::Bool\nuniform_and_storage_buffer_16_bit_access::Bool\nstorage_push_constant_16::Bool\nstorage_input_output_16::Bool\nmultiview::Bool\nmultiview_geometry_shader::Bool\nmultiview_tessellation_shader::Bool\nvariable_pointers_storage_buffer::Bool\nvariable_pointers::Bool\nprotected_memory::Bool\nsampler_ycbcr_conversion::Bool\nshader_draw_parameters::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceVulkan11Features-NTuple{12, Bool}","page":"API","title":"Vulkan.PhysicalDeviceVulkan11Features","text":"PhysicalDeviceVulkan11Features(storage_buffer_16_bit_access::Bool, uniform_and_storage_buffer_16_bit_access::Bool, storage_push_constant_16::Bool, storage_input_output_16::Bool, multiview::Bool, multiview_geometry_shader::Bool, multiview_tessellation_shader::Bool, variable_pointers_storage_buffer::Bool, variable_pointers::Bool, protected_memory::Bool, sampler_ycbcr_conversion::Bool, shader_draw_parameters::Bool; next = C_NULL)\n\nArguments:\n\nstorage_buffer_16_bit_access::Bool\nuniform_and_storage_buffer_16_bit_access::Bool\nstorage_push_constant_16::Bool\nstorage_input_output_16::Bool\nmultiview::Bool\nmultiview_geometry_shader::Bool\nmultiview_tessellation_shader::Bool\nvariable_pointers_storage_buffer::Bool\nvariable_pointers::Bool\nprotected_memory::Bool\nsampler_ycbcr_conversion::Bool\nshader_draw_parameters::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceVulkan11Features(storage_buffer_16_bit_access::Bool, uniform_and_storage_buffer_16_bit_access::Bool, storage_push_constant_16::Bool, storage_input_output_16::Bool, multiview::Bool, multiview_geometry_shader::Bool, multiview_tessellation_shader::Bool, variable_pointers_storage_buffer::Bool, variable_pointers::Bool, protected_memory::Bool, sampler_ycbcr_conversion::Bool, shader_draw_parameters::Bool; next) -> PhysicalDeviceVulkan11Features\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceVulkan11Features-Tuple{Vararg{Symbol}}","page":"API","title":"Vulkan.PhysicalDeviceVulkan11Features","text":"Return a PhysicalDeviceVulkan11Features object with the provided features set to true.\n\njulia> PhysicalDeviceVulkan11Features(; next = C_NULL)\nPhysicalDeviceVulkan11Features(next=Ptr{Nothing} @0x0000000000000000)\n\njulia> PhysicalDeviceVulkan11Features(:multiview, :variable_pointers, next = C_NULL)\nPhysicalDeviceVulkan11Features(next=Ptr{Nothing} @0x0000000000000000, multiview, variable_pointers)\n\nPhysicalDeviceVulkan11Features(features::Symbol...; next) -> PhysicalDeviceVulkan11Features\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceVulkan11Properties","page":"API","title":"Vulkan.PhysicalDeviceVulkan11Properties","text":"High-level wrapper for VkPhysicalDeviceVulkan11Properties.\n\nAPI documentation\n\nstruct PhysicalDeviceVulkan11Properties <: Vulkan.HighLevelStruct\n\nnext::Any\ndevice_uuid::NTuple{16, UInt8}\ndriver_uuid::NTuple{16, UInt8}\ndevice_luid::NTuple{8, UInt8}\ndevice_node_mask::UInt32\ndevice_luid_valid::Bool\nsubgroup_size::UInt32\nsubgroup_supported_stages::ShaderStageFlag\nsubgroup_supported_operations::SubgroupFeatureFlag\nsubgroup_quad_operations_in_all_stages::Bool\npoint_clipping_behavior::PointClippingBehavior\nmax_multiview_view_count::UInt32\nmax_multiview_instance_index::UInt32\nprotected_no_fault::Bool\nmax_per_set_descriptors::UInt32\nmax_memory_allocation_size::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceVulkan11Properties-Tuple{NTuple{16, UInt8}, NTuple{16, UInt8}, NTuple{8, UInt8}, Integer, Bool, Integer, ShaderStageFlag, SubgroupFeatureFlag, Bool, PointClippingBehavior, Integer, Integer, Bool, Integer, Integer}","page":"API","title":"Vulkan.PhysicalDeviceVulkan11Properties","text":"PhysicalDeviceVulkan11Properties(device_uuid::NTuple{Int(VK_UUID_SIZE), UInt8}, driver_uuid::NTuple{Int(VK_UUID_SIZE), UInt8}, device_luid::NTuple{Int(VK_LUID_SIZE), UInt8}, device_node_mask::Integer, device_luid_valid::Bool, subgroup_size::Integer, subgroup_supported_stages::ShaderStageFlag, subgroup_supported_operations::SubgroupFeatureFlag, subgroup_quad_operations_in_all_stages::Bool, point_clipping_behavior::PointClippingBehavior, max_multiview_view_count::Integer, max_multiview_instance_index::Integer, protected_no_fault::Bool, max_per_set_descriptors::Integer, max_memory_allocation_size::Integer; next = C_NULL)\n\nArguments:\n\ndevice_uuid::NTuple{Int(VK_UUID_SIZE), UInt8}\ndriver_uuid::NTuple{Int(VK_UUID_SIZE), UInt8}\ndevice_luid::NTuple{Int(VK_LUID_SIZE), UInt8}\ndevice_node_mask::Integer\ndevice_luid_valid::Bool\nsubgroup_size::Integer\nsubgroup_supported_stages::ShaderStageFlag\nsubgroup_supported_operations::SubgroupFeatureFlag\nsubgroup_quad_operations_in_all_stages::Bool\npoint_clipping_behavior::PointClippingBehavior\nmax_multiview_view_count::Integer\nmax_multiview_instance_index::Integer\nprotected_no_fault::Bool\nmax_per_set_descriptors::Integer\nmax_memory_allocation_size::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceVulkan11Properties(device_uuid::NTuple{16, UInt8}, driver_uuid::NTuple{16, UInt8}, device_luid::NTuple{8, UInt8}, device_node_mask::Integer, device_luid_valid::Bool, subgroup_size::Integer, subgroup_supported_stages::ShaderStageFlag, subgroup_supported_operations::SubgroupFeatureFlag, subgroup_quad_operations_in_all_stages::Bool, point_clipping_behavior::PointClippingBehavior, max_multiview_view_count::Integer, max_multiview_instance_index::Integer, protected_no_fault::Bool, max_per_set_descriptors::Integer, max_memory_allocation_size::Integer; next) -> PhysicalDeviceVulkan11Properties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceVulkan12Features","page":"API","title":"Vulkan.PhysicalDeviceVulkan12Features","text":"High-level wrapper for VkPhysicalDeviceVulkan12Features.\n\nAPI documentation\n\nstruct PhysicalDeviceVulkan12Features <: Vulkan.HighLevelStruct\n\nnext::Any\nsampler_mirror_clamp_to_edge::Bool\ndraw_indirect_count::Bool\nstorage_buffer_8_bit_access::Bool\nuniform_and_storage_buffer_8_bit_access::Bool\nstorage_push_constant_8::Bool\nshader_buffer_int_64_atomics::Bool\nshader_shared_int_64_atomics::Bool\nshader_float_16::Bool\nshader_int_8::Bool\ndescriptor_indexing::Bool\nshader_input_attachment_array_dynamic_indexing::Bool\nshader_uniform_texel_buffer_array_dynamic_indexing::Bool\nshader_storage_texel_buffer_array_dynamic_indexing::Bool\nshader_uniform_buffer_array_non_uniform_indexing::Bool\nshader_sampled_image_array_non_uniform_indexing::Bool\nshader_storage_buffer_array_non_uniform_indexing::Bool\nshader_storage_image_array_non_uniform_indexing::Bool\nshader_input_attachment_array_non_uniform_indexing::Bool\nshader_uniform_texel_buffer_array_non_uniform_indexing::Bool\nshader_storage_texel_buffer_array_non_uniform_indexing::Bool\ndescriptor_binding_uniform_buffer_update_after_bind::Bool\ndescriptor_binding_sampled_image_update_after_bind::Bool\ndescriptor_binding_storage_image_update_after_bind::Bool\ndescriptor_binding_storage_buffer_update_after_bind::Bool\ndescriptor_binding_uniform_texel_buffer_update_after_bind::Bool\ndescriptor_binding_storage_texel_buffer_update_after_bind::Bool\ndescriptor_binding_update_unused_while_pending::Bool\ndescriptor_binding_partially_bound::Bool\ndescriptor_binding_variable_descriptor_count::Bool\nruntime_descriptor_array::Bool\nsampler_filter_minmax::Bool\nscalar_block_layout::Bool\nimageless_framebuffer::Bool\nuniform_buffer_standard_layout::Bool\nshader_subgroup_extended_types::Bool\nseparate_depth_stencil_layouts::Bool\nhost_query_reset::Bool\ntimeline_semaphore::Bool\nbuffer_device_address::Bool\nbuffer_device_address_capture_replay::Bool\nbuffer_device_address_multi_device::Bool\nvulkan_memory_model::Bool\nvulkan_memory_model_device_scope::Bool\nvulkan_memory_model_availability_visibility_chains::Bool\nshader_output_viewport_index::Bool\nshader_output_layer::Bool\nsubgroup_broadcast_dynamic_id::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceVulkan12Features-NTuple{47, Bool}","page":"API","title":"Vulkan.PhysicalDeviceVulkan12Features","text":"PhysicalDeviceVulkan12Features(sampler_mirror_clamp_to_edge::Bool, draw_indirect_count::Bool, storage_buffer_8_bit_access::Bool, uniform_and_storage_buffer_8_bit_access::Bool, storage_push_constant_8::Bool, shader_buffer_int_64_atomics::Bool, shader_shared_int_64_atomics::Bool, shader_float_16::Bool, shader_int_8::Bool, descriptor_indexing::Bool, shader_input_attachment_array_dynamic_indexing::Bool, shader_uniform_texel_buffer_array_dynamic_indexing::Bool, shader_storage_texel_buffer_array_dynamic_indexing::Bool, shader_uniform_buffer_array_non_uniform_indexing::Bool, shader_sampled_image_array_non_uniform_indexing::Bool, shader_storage_buffer_array_non_uniform_indexing::Bool, shader_storage_image_array_non_uniform_indexing::Bool, shader_input_attachment_array_non_uniform_indexing::Bool, shader_uniform_texel_buffer_array_non_uniform_indexing::Bool, shader_storage_texel_buffer_array_non_uniform_indexing::Bool, descriptor_binding_uniform_buffer_update_after_bind::Bool, descriptor_binding_sampled_image_update_after_bind::Bool, descriptor_binding_storage_image_update_after_bind::Bool, descriptor_binding_storage_buffer_update_after_bind::Bool, descriptor_binding_uniform_texel_buffer_update_after_bind::Bool, descriptor_binding_storage_texel_buffer_update_after_bind::Bool, descriptor_binding_update_unused_while_pending::Bool, descriptor_binding_partially_bound::Bool, descriptor_binding_variable_descriptor_count::Bool, runtime_descriptor_array::Bool, sampler_filter_minmax::Bool, scalar_block_layout::Bool, imageless_framebuffer::Bool, uniform_buffer_standard_layout::Bool, shader_subgroup_extended_types::Bool, separate_depth_stencil_layouts::Bool, host_query_reset::Bool, timeline_semaphore::Bool, buffer_device_address::Bool, buffer_device_address_capture_replay::Bool, buffer_device_address_multi_device::Bool, vulkan_memory_model::Bool, vulkan_memory_model_device_scope::Bool, vulkan_memory_model_availability_visibility_chains::Bool, shader_output_viewport_index::Bool, shader_output_layer::Bool, subgroup_broadcast_dynamic_id::Bool; next = C_NULL)\n\nArguments:\n\nsampler_mirror_clamp_to_edge::Bool\ndraw_indirect_count::Bool\nstorage_buffer_8_bit_access::Bool\nuniform_and_storage_buffer_8_bit_access::Bool\nstorage_push_constant_8::Bool\nshader_buffer_int_64_atomics::Bool\nshader_shared_int_64_atomics::Bool\nshader_float_16::Bool\nshader_int_8::Bool\ndescriptor_indexing::Bool\nshader_input_attachment_array_dynamic_indexing::Bool\nshader_uniform_texel_buffer_array_dynamic_indexing::Bool\nshader_storage_texel_buffer_array_dynamic_indexing::Bool\nshader_uniform_buffer_array_non_uniform_indexing::Bool\nshader_sampled_image_array_non_uniform_indexing::Bool\nshader_storage_buffer_array_non_uniform_indexing::Bool\nshader_storage_image_array_non_uniform_indexing::Bool\nshader_input_attachment_array_non_uniform_indexing::Bool\nshader_uniform_texel_buffer_array_non_uniform_indexing::Bool\nshader_storage_texel_buffer_array_non_uniform_indexing::Bool\ndescriptor_binding_uniform_buffer_update_after_bind::Bool\ndescriptor_binding_sampled_image_update_after_bind::Bool\ndescriptor_binding_storage_image_update_after_bind::Bool\ndescriptor_binding_storage_buffer_update_after_bind::Bool\ndescriptor_binding_uniform_texel_buffer_update_after_bind::Bool\ndescriptor_binding_storage_texel_buffer_update_after_bind::Bool\ndescriptor_binding_update_unused_while_pending::Bool\ndescriptor_binding_partially_bound::Bool\ndescriptor_binding_variable_descriptor_count::Bool\nruntime_descriptor_array::Bool\nsampler_filter_minmax::Bool\nscalar_block_layout::Bool\nimageless_framebuffer::Bool\nuniform_buffer_standard_layout::Bool\nshader_subgroup_extended_types::Bool\nseparate_depth_stencil_layouts::Bool\nhost_query_reset::Bool\ntimeline_semaphore::Bool\nbuffer_device_address::Bool\nbuffer_device_address_capture_replay::Bool\nbuffer_device_address_multi_device::Bool\nvulkan_memory_model::Bool\nvulkan_memory_model_device_scope::Bool\nvulkan_memory_model_availability_visibility_chains::Bool\nshader_output_viewport_index::Bool\nshader_output_layer::Bool\nsubgroup_broadcast_dynamic_id::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceVulkan12Features(sampler_mirror_clamp_to_edge::Bool, draw_indirect_count::Bool, storage_buffer_8_bit_access::Bool, uniform_and_storage_buffer_8_bit_access::Bool, storage_push_constant_8::Bool, shader_buffer_int_64_atomics::Bool, shader_shared_int_64_atomics::Bool, shader_float_16::Bool, shader_int_8::Bool, descriptor_indexing::Bool, shader_input_attachment_array_dynamic_indexing::Bool, shader_uniform_texel_buffer_array_dynamic_indexing::Bool, shader_storage_texel_buffer_array_dynamic_indexing::Bool, shader_uniform_buffer_array_non_uniform_indexing::Bool, shader_sampled_image_array_non_uniform_indexing::Bool, shader_storage_buffer_array_non_uniform_indexing::Bool, shader_storage_image_array_non_uniform_indexing::Bool, shader_input_attachment_array_non_uniform_indexing::Bool, shader_uniform_texel_buffer_array_non_uniform_indexing::Bool, shader_storage_texel_buffer_array_non_uniform_indexing::Bool, descriptor_binding_uniform_buffer_update_after_bind::Bool, descriptor_binding_sampled_image_update_after_bind::Bool, descriptor_binding_storage_image_update_after_bind::Bool, descriptor_binding_storage_buffer_update_after_bind::Bool, descriptor_binding_uniform_texel_buffer_update_after_bind::Bool, descriptor_binding_storage_texel_buffer_update_after_bind::Bool, descriptor_binding_update_unused_while_pending::Bool, descriptor_binding_partially_bound::Bool, descriptor_binding_variable_descriptor_count::Bool, runtime_descriptor_array::Bool, sampler_filter_minmax::Bool, scalar_block_layout::Bool, imageless_framebuffer::Bool, uniform_buffer_standard_layout::Bool, shader_subgroup_extended_types::Bool, separate_depth_stencil_layouts::Bool, host_query_reset::Bool, timeline_semaphore::Bool, buffer_device_address::Bool, buffer_device_address_capture_replay::Bool, buffer_device_address_multi_device::Bool, vulkan_memory_model::Bool, vulkan_memory_model_device_scope::Bool, vulkan_memory_model_availability_visibility_chains::Bool, shader_output_viewport_index::Bool, shader_output_layer::Bool, subgroup_broadcast_dynamic_id::Bool; next) -> PhysicalDeviceVulkan12Features\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceVulkan12Features-Tuple{Vararg{Symbol}}","page":"API","title":"Vulkan.PhysicalDeviceVulkan12Features","text":"Return a PhysicalDeviceVulkan12Features object with the provided features set to true.\n\njulia> PhysicalDeviceVulkan12Features(; next = C_NULL)\nPhysicalDeviceVulkan12Features(next=Ptr{Nothing} @0x0000000000000000)\n\njulia> PhysicalDeviceVulkan12Features(:draw_indirect_count, :descriptor_binding_variable_descriptor_count)\nPhysicalDeviceVulkan12Features(next=Ptr{Nothing} @0x0000000000000000, draw_indirect_count, descriptor_binding_variable_descriptor_count)\n\nPhysicalDeviceVulkan12Features(features::Symbol...; next) -> PhysicalDeviceVulkan12Features\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceVulkan12Properties","page":"API","title":"Vulkan.PhysicalDeviceVulkan12Properties","text":"High-level wrapper for VkPhysicalDeviceVulkan12Properties.\n\nAPI documentation\n\nstruct PhysicalDeviceVulkan12Properties <: Vulkan.HighLevelStruct\n\nnext::Any\ndriver_id::DriverId\ndriver_name::String\ndriver_info::String\nconformance_version::ConformanceVersion\ndenorm_behavior_independence::ShaderFloatControlsIndependence\nrounding_mode_independence::ShaderFloatControlsIndependence\nshader_signed_zero_inf_nan_preserve_float_16::Bool\nshader_signed_zero_inf_nan_preserve_float_32::Bool\nshader_signed_zero_inf_nan_preserve_float_64::Bool\nshader_denorm_preserve_float_16::Bool\nshader_denorm_preserve_float_32::Bool\nshader_denorm_preserve_float_64::Bool\nshader_denorm_flush_to_zero_float_16::Bool\nshader_denorm_flush_to_zero_float_32::Bool\nshader_denorm_flush_to_zero_float_64::Bool\nshader_rounding_mode_rte_float_16::Bool\nshader_rounding_mode_rte_float_32::Bool\nshader_rounding_mode_rte_float_64::Bool\nshader_rounding_mode_rtz_float_16::Bool\nshader_rounding_mode_rtz_float_32::Bool\nshader_rounding_mode_rtz_float_64::Bool\nmax_update_after_bind_descriptors_in_all_pools::UInt32\nshader_uniform_buffer_array_non_uniform_indexing_native::Bool\nshader_sampled_image_array_non_uniform_indexing_native::Bool\nshader_storage_buffer_array_non_uniform_indexing_native::Bool\nshader_storage_image_array_non_uniform_indexing_native::Bool\nshader_input_attachment_array_non_uniform_indexing_native::Bool\nrobust_buffer_access_update_after_bind::Bool\nquad_divergent_implicit_lod::Bool\nmax_per_stage_descriptor_update_after_bind_samplers::UInt32\nmax_per_stage_descriptor_update_after_bind_uniform_buffers::UInt32\nmax_per_stage_descriptor_update_after_bind_storage_buffers::UInt32\nmax_per_stage_descriptor_update_after_bind_sampled_images::UInt32\nmax_per_stage_descriptor_update_after_bind_storage_images::UInt32\nmax_per_stage_descriptor_update_after_bind_input_attachments::UInt32\nmax_per_stage_update_after_bind_resources::UInt32\nmax_descriptor_set_update_after_bind_samplers::UInt32\nmax_descriptor_set_update_after_bind_uniform_buffers::UInt32\nmax_descriptor_set_update_after_bind_uniform_buffers_dynamic::UInt32\nmax_descriptor_set_update_after_bind_storage_buffers::UInt32\nmax_descriptor_set_update_after_bind_storage_buffers_dynamic::UInt32\nmax_descriptor_set_update_after_bind_sampled_images::UInt32\nmax_descriptor_set_update_after_bind_storage_images::UInt32\nmax_descriptor_set_update_after_bind_input_attachments::UInt32\nsupported_depth_resolve_modes::ResolveModeFlag\nsupported_stencil_resolve_modes::ResolveModeFlag\nindependent_resolve_none::Bool\nindependent_resolve::Bool\nfilter_minmax_single_component_formats::Bool\nfilter_minmax_image_component_mapping::Bool\nmax_timeline_semaphore_value_difference::UInt64\nframebuffer_integer_color_sample_counts::SampleCountFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceVulkan12Properties-Tuple{DriverId, AbstractString, AbstractString, ConformanceVersion, ShaderFloatControlsIndependence, ShaderFloatControlsIndependence, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Integer, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, ResolveModeFlag, ResolveModeFlag, Bool, Bool, Bool, Bool, Integer}","page":"API","title":"Vulkan.PhysicalDeviceVulkan12Properties","text":"PhysicalDeviceVulkan12Properties(driver_id::DriverId, driver_name::AbstractString, driver_info::AbstractString, conformance_version::ConformanceVersion, denorm_behavior_independence::ShaderFloatControlsIndependence, rounding_mode_independence::ShaderFloatControlsIndependence, shader_signed_zero_inf_nan_preserve_float_16::Bool, shader_signed_zero_inf_nan_preserve_float_32::Bool, shader_signed_zero_inf_nan_preserve_float_64::Bool, shader_denorm_preserve_float_16::Bool, shader_denorm_preserve_float_32::Bool, shader_denorm_preserve_float_64::Bool, shader_denorm_flush_to_zero_float_16::Bool, shader_denorm_flush_to_zero_float_32::Bool, shader_denorm_flush_to_zero_float_64::Bool, shader_rounding_mode_rte_float_16::Bool, shader_rounding_mode_rte_float_32::Bool, shader_rounding_mode_rte_float_64::Bool, shader_rounding_mode_rtz_float_16::Bool, shader_rounding_mode_rtz_float_32::Bool, shader_rounding_mode_rtz_float_64::Bool, max_update_after_bind_descriptors_in_all_pools::Integer, shader_uniform_buffer_array_non_uniform_indexing_native::Bool, shader_sampled_image_array_non_uniform_indexing_native::Bool, shader_storage_buffer_array_non_uniform_indexing_native::Bool, shader_storage_image_array_non_uniform_indexing_native::Bool, shader_input_attachment_array_non_uniform_indexing_native::Bool, robust_buffer_access_update_after_bind::Bool, quad_divergent_implicit_lod::Bool, max_per_stage_descriptor_update_after_bind_samplers::Integer, max_per_stage_descriptor_update_after_bind_uniform_buffers::Integer, max_per_stage_descriptor_update_after_bind_storage_buffers::Integer, max_per_stage_descriptor_update_after_bind_sampled_images::Integer, max_per_stage_descriptor_update_after_bind_storage_images::Integer, max_per_stage_descriptor_update_after_bind_input_attachments::Integer, max_per_stage_update_after_bind_resources::Integer, max_descriptor_set_update_after_bind_samplers::Integer, max_descriptor_set_update_after_bind_uniform_buffers::Integer, max_descriptor_set_update_after_bind_uniform_buffers_dynamic::Integer, max_descriptor_set_update_after_bind_storage_buffers::Integer, max_descriptor_set_update_after_bind_storage_buffers_dynamic::Integer, max_descriptor_set_update_after_bind_sampled_images::Integer, max_descriptor_set_update_after_bind_storage_images::Integer, max_descriptor_set_update_after_bind_input_attachments::Integer, supported_depth_resolve_modes::ResolveModeFlag, supported_stencil_resolve_modes::ResolveModeFlag, independent_resolve_none::Bool, independent_resolve::Bool, filter_minmax_single_component_formats::Bool, filter_minmax_image_component_mapping::Bool, max_timeline_semaphore_value_difference::Integer; next = C_NULL, framebuffer_integer_color_sample_counts = 0)\n\nArguments:\n\ndriver_id::DriverId\ndriver_name::AbstractString\ndriver_info::AbstractString\nconformance_version::ConformanceVersion\ndenorm_behavior_independence::ShaderFloatControlsIndependence\nrounding_mode_independence::ShaderFloatControlsIndependence\nshader_signed_zero_inf_nan_preserve_float_16::Bool\nshader_signed_zero_inf_nan_preserve_float_32::Bool\nshader_signed_zero_inf_nan_preserve_float_64::Bool\nshader_denorm_preserve_float_16::Bool\nshader_denorm_preserve_float_32::Bool\nshader_denorm_preserve_float_64::Bool\nshader_denorm_flush_to_zero_float_16::Bool\nshader_denorm_flush_to_zero_float_32::Bool\nshader_denorm_flush_to_zero_float_64::Bool\nshader_rounding_mode_rte_float_16::Bool\nshader_rounding_mode_rte_float_32::Bool\nshader_rounding_mode_rte_float_64::Bool\nshader_rounding_mode_rtz_float_16::Bool\nshader_rounding_mode_rtz_float_32::Bool\nshader_rounding_mode_rtz_float_64::Bool\nmax_update_after_bind_descriptors_in_all_pools::Integer\nshader_uniform_buffer_array_non_uniform_indexing_native::Bool\nshader_sampled_image_array_non_uniform_indexing_native::Bool\nshader_storage_buffer_array_non_uniform_indexing_native::Bool\nshader_storage_image_array_non_uniform_indexing_native::Bool\nshader_input_attachment_array_non_uniform_indexing_native::Bool\nrobust_buffer_access_update_after_bind::Bool\nquad_divergent_implicit_lod::Bool\nmax_per_stage_descriptor_update_after_bind_samplers::Integer\nmax_per_stage_descriptor_update_after_bind_uniform_buffers::Integer\nmax_per_stage_descriptor_update_after_bind_storage_buffers::Integer\nmax_per_stage_descriptor_update_after_bind_sampled_images::Integer\nmax_per_stage_descriptor_update_after_bind_storage_images::Integer\nmax_per_stage_descriptor_update_after_bind_input_attachments::Integer\nmax_per_stage_update_after_bind_resources::Integer\nmax_descriptor_set_update_after_bind_samplers::Integer\nmax_descriptor_set_update_after_bind_uniform_buffers::Integer\nmax_descriptor_set_update_after_bind_uniform_buffers_dynamic::Integer\nmax_descriptor_set_update_after_bind_storage_buffers::Integer\nmax_descriptor_set_update_after_bind_storage_buffers_dynamic::Integer\nmax_descriptor_set_update_after_bind_sampled_images::Integer\nmax_descriptor_set_update_after_bind_storage_images::Integer\nmax_descriptor_set_update_after_bind_input_attachments::Integer\nsupported_depth_resolve_modes::ResolveModeFlag\nsupported_stencil_resolve_modes::ResolveModeFlag\nindependent_resolve_none::Bool\nindependent_resolve::Bool\nfilter_minmax_single_component_formats::Bool\nfilter_minmax_image_component_mapping::Bool\nmax_timeline_semaphore_value_difference::Integer\nnext: defaults to C_NULL\nframebuffer_integer_color_sample_counts: defaults to 0\n\nAPI documentation\n\nPhysicalDeviceVulkan12Properties(driver_id::DriverId, driver_name::AbstractString, driver_info::AbstractString, conformance_version::ConformanceVersion, denorm_behavior_independence::ShaderFloatControlsIndependence, rounding_mode_independence::ShaderFloatControlsIndependence, shader_signed_zero_inf_nan_preserve_float_16::Bool, shader_signed_zero_inf_nan_preserve_float_32::Bool, shader_signed_zero_inf_nan_preserve_float_64::Bool, shader_denorm_preserve_float_16::Bool, shader_denorm_preserve_float_32::Bool, shader_denorm_preserve_float_64::Bool, shader_denorm_flush_to_zero_float_16::Bool, shader_denorm_flush_to_zero_float_32::Bool, shader_denorm_flush_to_zero_float_64::Bool, shader_rounding_mode_rte_float_16::Bool, shader_rounding_mode_rte_float_32::Bool, shader_rounding_mode_rte_float_64::Bool, shader_rounding_mode_rtz_float_16::Bool, shader_rounding_mode_rtz_float_32::Bool, shader_rounding_mode_rtz_float_64::Bool, max_update_after_bind_descriptors_in_all_pools::Integer, shader_uniform_buffer_array_non_uniform_indexing_native::Bool, shader_sampled_image_array_non_uniform_indexing_native::Bool, shader_storage_buffer_array_non_uniform_indexing_native::Bool, shader_storage_image_array_non_uniform_indexing_native::Bool, shader_input_attachment_array_non_uniform_indexing_native::Bool, robust_buffer_access_update_after_bind::Bool, quad_divergent_implicit_lod::Bool, max_per_stage_descriptor_update_after_bind_samplers::Integer, max_per_stage_descriptor_update_after_bind_uniform_buffers::Integer, max_per_stage_descriptor_update_after_bind_storage_buffers::Integer, max_per_stage_descriptor_update_after_bind_sampled_images::Integer, max_per_stage_descriptor_update_after_bind_storage_images::Integer, max_per_stage_descriptor_update_after_bind_input_attachments::Integer, max_per_stage_update_after_bind_resources::Integer, max_descriptor_set_update_after_bind_samplers::Integer, max_descriptor_set_update_after_bind_uniform_buffers::Integer, max_descriptor_set_update_after_bind_uniform_buffers_dynamic::Integer, max_descriptor_set_update_after_bind_storage_buffers::Integer, max_descriptor_set_update_after_bind_storage_buffers_dynamic::Integer, max_descriptor_set_update_after_bind_sampled_images::Integer, max_descriptor_set_update_after_bind_storage_images::Integer, max_descriptor_set_update_after_bind_input_attachments::Integer, supported_depth_resolve_modes::ResolveModeFlag, supported_stencil_resolve_modes::ResolveModeFlag, independent_resolve_none::Bool, independent_resolve::Bool, filter_minmax_single_component_formats::Bool, filter_minmax_image_component_mapping::Bool, max_timeline_semaphore_value_difference::Integer; next, framebuffer_integer_color_sample_counts) -> PhysicalDeviceVulkan12Properties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceVulkanMemoryModelFeatures","page":"API","title":"Vulkan.PhysicalDeviceVulkanMemoryModelFeatures","text":"High-level wrapper for VkPhysicalDeviceVulkanMemoryModelFeatures.\n\nAPI documentation\n\nstruct PhysicalDeviceVulkanMemoryModelFeatures <: Vulkan.HighLevelStruct\n\nnext::Any\nvulkan_memory_model::Bool\nvulkan_memory_model_device_scope::Bool\nvulkan_memory_model_availability_visibility_chains::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceVulkanMemoryModelFeatures-Tuple{Bool, Bool, Bool}","page":"API","title":"Vulkan.PhysicalDeviceVulkanMemoryModelFeatures","text":"PhysicalDeviceVulkanMemoryModelFeatures(vulkan_memory_model::Bool, vulkan_memory_model_device_scope::Bool, vulkan_memory_model_availability_visibility_chains::Bool; next = C_NULL)\n\nArguments:\n\nvulkan_memory_model::Bool\nvulkan_memory_model_device_scope::Bool\nvulkan_memory_model_availability_visibility_chains::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceVulkanMemoryModelFeatures(vulkan_memory_model::Bool, vulkan_memory_model_device_scope::Bool, vulkan_memory_model_availability_visibility_chains::Bool; next) -> PhysicalDeviceVulkanMemoryModelFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR","page":"API","title":"Vulkan.PhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR","text":"High-level wrapper for VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR.\n\nExtension: VK_KHR_workgroup_memory_explicit_layout\n\nAPI documentation\n\nstruct PhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nworkgroup_memory_explicit_layout::Bool\nworkgroup_memory_explicit_layout_scalar_block_layout::Bool\nworkgroup_memory_explicit_layout_8_bit_access::Bool\nworkgroup_memory_explicit_layout_16_bit_access::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR-NTuple{4, Bool}","page":"API","title":"Vulkan.PhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR","text":"PhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR(workgroup_memory_explicit_layout::Bool, workgroup_memory_explicit_layout_scalar_block_layout::Bool, workgroup_memory_explicit_layout_8_bit_access::Bool, workgroup_memory_explicit_layout_16_bit_access::Bool; next = C_NULL)\n\nExtension: VK_KHR_workgroup_memory_explicit_layout\n\nArguments:\n\nworkgroup_memory_explicit_layout::Bool\nworkgroup_memory_explicit_layout_scalar_block_layout::Bool\nworkgroup_memory_explicit_layout_8_bit_access::Bool\nworkgroup_memory_explicit_layout_16_bit_access::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR(workgroup_memory_explicit_layout::Bool, workgroup_memory_explicit_layout_scalar_block_layout::Bool, workgroup_memory_explicit_layout_8_bit_access::Bool, workgroup_memory_explicit_layout_16_bit_access::Bool; next) -> PhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT.\n\nExtension: VK_EXT_ycbcr_2plane_444_formats\n\nAPI documentation\n\nstruct PhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nycbcr_444_formats::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT","text":"PhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT(ycbcr_444_formats::Bool; next = C_NULL)\n\nExtension: VK_EXT_ycbcr_2plane_444_formats\n\nArguments:\n\nycbcr_444_formats::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT(ycbcr_444_formats::Bool; next) -> PhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceYcbcrImageArraysFeaturesEXT","page":"API","title":"Vulkan.PhysicalDeviceYcbcrImageArraysFeaturesEXT","text":"High-level wrapper for VkPhysicalDeviceYcbcrImageArraysFeaturesEXT.\n\nExtension: VK_EXT_ycbcr_image_arrays\n\nAPI documentation\n\nstruct PhysicalDeviceYcbcrImageArraysFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nycbcr_image_arrays::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceYcbcrImageArraysFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceYcbcrImageArraysFeaturesEXT","text":"PhysicalDeviceYcbcrImageArraysFeaturesEXT(ycbcr_image_arrays::Bool; next = C_NULL)\n\nExtension: VK_EXT_ycbcr_image_arrays\n\nArguments:\n\nycbcr_image_arrays::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceYcbcrImageArraysFeaturesEXT(ycbcr_image_arrays::Bool; next) -> PhysicalDeviceYcbcrImageArraysFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR","page":"API","title":"Vulkan.PhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR","text":"High-level wrapper for VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR.\n\nExtension: VK_KHR_zero_initialize_workgroup_memory\n\nAPI documentation\n\nstruct PhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nshader_zero_initialize_workgroup_memory::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR-Tuple{Bool}","page":"API","title":"Vulkan.PhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR","text":"PhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR(shader_zero_initialize_workgroup_memory::Bool; next = C_NULL)\n\nExtension: VK_KHR_zero_initialize_workgroup_memory\n\nArguments:\n\nshader_zero_initialize_workgroup_memory::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR(shader_zero_initialize_workgroup_memory::Bool; next) -> PhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineCache-Tuple{Any, Ptr{Nothing}, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.PipelineCache","text":"PipelineCache(device, initial_data::Ptr{Cvoid}, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0, initial_data_size = 0)\n\nPipelineCache(device, initial_data::Ptr{Nothing}, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags, initial_data_size) -> PipelineCache\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineCache-Tuple{Any, Ptr{Nothing}}","page":"API","title":"Vulkan.PipelineCache","text":"PipelineCache(device, initial_data::Ptr{Cvoid}; allocator = C_NULL, next = C_NULL, flags = 0, initial_data_size = 0)\n\nPipelineCache(device, initial_data::Ptr{Nothing}; allocator, next, flags, initial_data_size) -> PipelineCache\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineCacheCreateInfo","page":"API","title":"Vulkan.PipelineCacheCreateInfo","text":"High-level wrapper for VkPipelineCacheCreateInfo.\n\nAPI documentation\n\nstruct PipelineCacheCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::PipelineCacheCreateFlag\ninitial_data_size::Union{Ptr{Nothing}, UInt64}\ninitial_data::Ptr{Nothing}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineCacheCreateInfo-Tuple{Ptr{Nothing}}","page":"API","title":"Vulkan.PipelineCacheCreateInfo","text":"PipelineCacheCreateInfo(initial_data::Ptr{Cvoid}; next = C_NULL, flags = 0, initial_data_size = C_NULL)\n\nArguments:\n\ninitial_data::Ptr{Cvoid}\nnext: defaults to C_NULL\nflags: defaults to 0\ninitial_data_size: defaults to C_NULL\n\nAPI documentation\n\nPipelineCacheCreateInfo(initial_data::Ptr{Nothing}; next, flags, initial_data_size) -> PipelineCacheCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineColorBlendAdvancedStateCreateInfoEXT","page":"API","title":"Vulkan.PipelineColorBlendAdvancedStateCreateInfoEXT","text":"High-level wrapper for VkPipelineColorBlendAdvancedStateCreateInfoEXT.\n\nExtension: VK_EXT_blend_operation_advanced\n\nAPI documentation\n\nstruct PipelineColorBlendAdvancedStateCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nsrc_premultiplied::Bool\ndst_premultiplied::Bool\nblend_overlap::BlendOverlapEXT\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineColorBlendAdvancedStateCreateInfoEXT-Tuple{Bool, Bool, BlendOverlapEXT}","page":"API","title":"Vulkan.PipelineColorBlendAdvancedStateCreateInfoEXT","text":"PipelineColorBlendAdvancedStateCreateInfoEXT(src_premultiplied::Bool, dst_premultiplied::Bool, blend_overlap::BlendOverlapEXT; next = C_NULL)\n\nExtension: VK_EXT_blend_operation_advanced\n\nArguments:\n\nsrc_premultiplied::Bool\ndst_premultiplied::Bool\nblend_overlap::BlendOverlapEXT\nnext: defaults to C_NULL\n\nAPI documentation\n\nPipelineColorBlendAdvancedStateCreateInfoEXT(src_premultiplied::Bool, dst_premultiplied::Bool, blend_overlap::BlendOverlapEXT; next) -> PipelineColorBlendAdvancedStateCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineColorBlendAttachmentState","page":"API","title":"Vulkan.PipelineColorBlendAttachmentState","text":"High-level wrapper for VkPipelineColorBlendAttachmentState.\n\nAPI documentation\n\nstruct PipelineColorBlendAttachmentState <: Vulkan.HighLevelStruct\n\nblend_enable::Bool\nsrc_color_blend_factor::BlendFactor\ndst_color_blend_factor::BlendFactor\ncolor_blend_op::BlendOp\nsrc_alpha_blend_factor::BlendFactor\ndst_alpha_blend_factor::BlendFactor\nalpha_blend_op::BlendOp\ncolor_write_mask::ColorComponentFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineColorBlendAttachmentState-Tuple{Bool, BlendFactor, BlendFactor, BlendOp, BlendFactor, BlendFactor, BlendOp}","page":"API","title":"Vulkan.PipelineColorBlendAttachmentState","text":"PipelineColorBlendAttachmentState(blend_enable::Bool, src_color_blend_factor::BlendFactor, dst_color_blend_factor::BlendFactor, color_blend_op::BlendOp, src_alpha_blend_factor::BlendFactor, dst_alpha_blend_factor::BlendFactor, alpha_blend_op::BlendOp; color_write_mask = 0)\n\nArguments:\n\nblend_enable::Bool\nsrc_color_blend_factor::BlendFactor\ndst_color_blend_factor::BlendFactor\ncolor_blend_op::BlendOp\nsrc_alpha_blend_factor::BlendFactor\ndst_alpha_blend_factor::BlendFactor\nalpha_blend_op::BlendOp\ncolor_write_mask: defaults to 0\n\nAPI documentation\n\nPipelineColorBlendAttachmentState(blend_enable::Bool, src_color_blend_factor::BlendFactor, dst_color_blend_factor::BlendFactor, color_blend_op::BlendOp, src_alpha_blend_factor::BlendFactor, dst_alpha_blend_factor::BlendFactor, alpha_blend_op::BlendOp; color_write_mask) -> PipelineColorBlendAttachmentState\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineColorBlendStateCreateInfo","page":"API","title":"Vulkan.PipelineColorBlendStateCreateInfo","text":"High-level wrapper for VkPipelineColorBlendStateCreateInfo.\n\nAPI documentation\n\nstruct PipelineColorBlendStateCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\nlogic_op_enable::Bool\nlogic_op::LogicOp\nattachments::Vector{PipelineColorBlendAttachmentState}\nblend_constants::NTuple{4, Float32}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineColorBlendStateCreateInfo-Tuple{Bool, LogicOp, AbstractArray, NTuple{4, Float32}}","page":"API","title":"Vulkan.PipelineColorBlendStateCreateInfo","text":"PipelineColorBlendStateCreateInfo(logic_op_enable::Bool, logic_op::LogicOp, attachments::AbstractArray{PipelineColorBlendAttachmentState}, blend_constants::NTuple{4, Float32}; next = C_NULL, flags = 0)\n\nArguments:\n\nlogic_op_enable::Bool\nlogic_op::LogicOp\nattachments::AbstractArray{PipelineColorBlendAttachmentState}\nblend_constants::NTuple{4, Float32}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nPipelineColorBlendStateCreateInfo(logic_op_enable::Bool, logic_op::LogicOp, attachments::AbstractArray, blend_constants::NTuple{4, Float32}; next, flags) -> PipelineColorBlendStateCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineColorWriteCreateInfoEXT","page":"API","title":"Vulkan.PipelineColorWriteCreateInfoEXT","text":"High-level wrapper for VkPipelineColorWriteCreateInfoEXT.\n\nExtension: VK_EXT_color_write_enable\n\nAPI documentation\n\nstruct PipelineColorWriteCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\ncolor_write_enables::Vector{Bool}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineColorWriteCreateInfoEXT-Tuple{AbstractArray}","page":"API","title":"Vulkan.PipelineColorWriteCreateInfoEXT","text":"PipelineColorWriteCreateInfoEXT(color_write_enables::AbstractArray{Bool}; next = C_NULL)\n\nExtension: VK_EXT_color_write_enable\n\nArguments:\n\ncolor_write_enables::AbstractArray{Bool}\nnext: defaults to C_NULL\n\nAPI documentation\n\nPipelineColorWriteCreateInfoEXT(color_write_enables::AbstractArray; next) -> PipelineColorWriteCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineCompilerControlCreateInfoAMD","page":"API","title":"Vulkan.PipelineCompilerControlCreateInfoAMD","text":"High-level wrapper for VkPipelineCompilerControlCreateInfoAMD.\n\nExtension: VK_AMD_pipeline_compiler_control\n\nAPI documentation\n\nstruct PipelineCompilerControlCreateInfoAMD <: Vulkan.HighLevelStruct\n\nnext::Any\ncompiler_control_flags::PipelineCompilerControlFlagAMD\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineCompilerControlCreateInfoAMD-Tuple{}","page":"API","title":"Vulkan.PipelineCompilerControlCreateInfoAMD","text":"PipelineCompilerControlCreateInfoAMD(; next = C_NULL, compiler_control_flags = 0)\n\nExtension: VK_AMD_pipeline_compiler_control\n\nArguments:\n\nnext: defaults to C_NULL\ncompiler_control_flags: defaults to 0\n\nAPI documentation\n\nPipelineCompilerControlCreateInfoAMD(; next, compiler_control_flags) -> PipelineCompilerControlCreateInfoAMD\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineCoverageModulationStateCreateInfoNV","page":"API","title":"Vulkan.PipelineCoverageModulationStateCreateInfoNV","text":"High-level wrapper for VkPipelineCoverageModulationStateCreateInfoNV.\n\nExtension: VK_NV_framebuffer_mixed_samples\n\nAPI documentation\n\nstruct PipelineCoverageModulationStateCreateInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\ncoverage_modulation_mode::CoverageModulationModeNV\ncoverage_modulation_table_enable::Bool\ncoverage_modulation_table::Union{Ptr{Nothing}, Vector{Float32}}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineCoverageModulationStateCreateInfoNV-Tuple{CoverageModulationModeNV, Bool}","page":"API","title":"Vulkan.PipelineCoverageModulationStateCreateInfoNV","text":"PipelineCoverageModulationStateCreateInfoNV(coverage_modulation_mode::CoverageModulationModeNV, coverage_modulation_table_enable::Bool; next = C_NULL, flags = 0, coverage_modulation_table = C_NULL)\n\nExtension: VK_NV_framebuffer_mixed_samples\n\nArguments:\n\ncoverage_modulation_mode::CoverageModulationModeNV\ncoverage_modulation_table_enable::Bool\nnext: defaults to C_NULL\nflags: defaults to 0\ncoverage_modulation_table: defaults to C_NULL\n\nAPI documentation\n\nPipelineCoverageModulationStateCreateInfoNV(coverage_modulation_mode::CoverageModulationModeNV, coverage_modulation_table_enable::Bool; next, flags, coverage_modulation_table) -> PipelineCoverageModulationStateCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineCoverageReductionStateCreateInfoNV","page":"API","title":"Vulkan.PipelineCoverageReductionStateCreateInfoNV","text":"High-level wrapper for VkPipelineCoverageReductionStateCreateInfoNV.\n\nExtension: VK_NV_coverage_reduction_mode\n\nAPI documentation\n\nstruct PipelineCoverageReductionStateCreateInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\ncoverage_reduction_mode::CoverageReductionModeNV\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineCoverageReductionStateCreateInfoNV-Tuple{CoverageReductionModeNV}","page":"API","title":"Vulkan.PipelineCoverageReductionStateCreateInfoNV","text":"PipelineCoverageReductionStateCreateInfoNV(coverage_reduction_mode::CoverageReductionModeNV; next = C_NULL, flags = 0)\n\nExtension: VK_NV_coverage_reduction_mode\n\nArguments:\n\ncoverage_reduction_mode::CoverageReductionModeNV\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nPipelineCoverageReductionStateCreateInfoNV(coverage_reduction_mode::CoverageReductionModeNV; next, flags) -> PipelineCoverageReductionStateCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineCoverageToColorStateCreateInfoNV","page":"API","title":"Vulkan.PipelineCoverageToColorStateCreateInfoNV","text":"High-level wrapper for VkPipelineCoverageToColorStateCreateInfoNV.\n\nExtension: VK_NV_fragment_coverage_to_color\n\nAPI documentation\n\nstruct PipelineCoverageToColorStateCreateInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\ncoverage_to_color_enable::Bool\ncoverage_to_color_location::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineCoverageToColorStateCreateInfoNV-Tuple{Bool}","page":"API","title":"Vulkan.PipelineCoverageToColorStateCreateInfoNV","text":"PipelineCoverageToColorStateCreateInfoNV(coverage_to_color_enable::Bool; next = C_NULL, flags = 0, coverage_to_color_location = 0)\n\nExtension: VK_NV_fragment_coverage_to_color\n\nArguments:\n\ncoverage_to_color_enable::Bool\nnext: defaults to C_NULL\nflags: defaults to 0\ncoverage_to_color_location: defaults to 0\n\nAPI documentation\n\nPipelineCoverageToColorStateCreateInfoNV(coverage_to_color_enable::Bool; next, flags, coverage_to_color_location) -> PipelineCoverageToColorStateCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineCreationFeedbackCreateInfoEXT","page":"API","title":"Vulkan.PipelineCreationFeedbackCreateInfoEXT","text":"High-level wrapper for VkPipelineCreationFeedbackCreateInfoEXT.\n\nExtension: VK_EXT_pipeline_creation_feedback\n\nAPI documentation\n\nstruct PipelineCreationFeedbackCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\npipeline_creation_feedback::PipelineCreationFeedbackEXT\npipeline_stage_creation_feedbacks::Vector{PipelineCreationFeedbackEXT}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineCreationFeedbackCreateInfoEXT-Tuple{PipelineCreationFeedbackEXT, AbstractArray}","page":"API","title":"Vulkan.PipelineCreationFeedbackCreateInfoEXT","text":"PipelineCreationFeedbackCreateInfoEXT(pipeline_creation_feedback::PipelineCreationFeedbackEXT, pipeline_stage_creation_feedbacks::AbstractArray{PipelineCreationFeedbackEXT}; next = C_NULL)\n\nExtension: VK_EXT_pipeline_creation_feedback\n\nArguments:\n\npipeline_creation_feedback::PipelineCreationFeedbackEXT\npipeline_stage_creation_feedbacks::AbstractArray{PipelineCreationFeedbackEXT}\nnext: defaults to C_NULL\n\nAPI documentation\n\nPipelineCreationFeedbackCreateInfoEXT(pipeline_creation_feedback::PipelineCreationFeedbackEXT, pipeline_stage_creation_feedbacks::AbstractArray; next) -> PipelineCreationFeedbackCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineCreationFeedbackEXT","page":"API","title":"Vulkan.PipelineCreationFeedbackEXT","text":"High-level wrapper for VkPipelineCreationFeedbackEXT.\n\nExtension: VK_EXT_pipeline_creation_feedback\n\nAPI documentation\n\nstruct PipelineCreationFeedbackEXT <: Vulkan.HighLevelStruct\n\nflags::PipelineCreationFeedbackFlagEXT\nduration::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineDepthStencilStateCreateInfo","page":"API","title":"Vulkan.PipelineDepthStencilStateCreateInfo","text":"High-level wrapper for VkPipelineDepthStencilStateCreateInfo.\n\nAPI documentation\n\nstruct PipelineDepthStencilStateCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\ndepth_test_enable::Bool\ndepth_write_enable::Bool\ndepth_compare_op::CompareOp\ndepth_bounds_test_enable::Bool\nstencil_test_enable::Bool\nfront::StencilOpState\nback::StencilOpState\nmin_depth_bounds::Float32\nmax_depth_bounds::Float32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineDepthStencilStateCreateInfo-Tuple{Bool, Bool, CompareOp, Bool, Bool, StencilOpState, StencilOpState, Real, Real}","page":"API","title":"Vulkan.PipelineDepthStencilStateCreateInfo","text":"PipelineDepthStencilStateCreateInfo(depth_test_enable::Bool, depth_write_enable::Bool, depth_compare_op::CompareOp, depth_bounds_test_enable::Bool, stencil_test_enable::Bool, front::StencilOpState, back::StencilOpState, min_depth_bounds::Real, max_depth_bounds::Real; next = C_NULL, flags = 0)\n\nArguments:\n\ndepth_test_enable::Bool\ndepth_write_enable::Bool\ndepth_compare_op::CompareOp\ndepth_bounds_test_enable::Bool\nstencil_test_enable::Bool\nfront::StencilOpState\nback::StencilOpState\nmin_depth_bounds::Real\nmax_depth_bounds::Real\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nPipelineDepthStencilStateCreateInfo(depth_test_enable::Bool, depth_write_enable::Bool, depth_compare_op::CompareOp, depth_bounds_test_enable::Bool, stencil_test_enable::Bool, front::StencilOpState, back::StencilOpState, min_depth_bounds::Real, max_depth_bounds::Real; next, flags) -> PipelineDepthStencilStateCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineDiscardRectangleStateCreateInfoEXT","page":"API","title":"Vulkan.PipelineDiscardRectangleStateCreateInfoEXT","text":"High-level wrapper for VkPipelineDiscardRectangleStateCreateInfoEXT.\n\nExtension: VK_EXT_discard_rectangles\n\nAPI documentation\n\nstruct PipelineDiscardRectangleStateCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\ndiscard_rectangle_mode::DiscardRectangleModeEXT\ndiscard_rectangles::Vector{Rect2D}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineDiscardRectangleStateCreateInfoEXT-Tuple{DiscardRectangleModeEXT, AbstractArray}","page":"API","title":"Vulkan.PipelineDiscardRectangleStateCreateInfoEXT","text":"PipelineDiscardRectangleStateCreateInfoEXT(discard_rectangle_mode::DiscardRectangleModeEXT, discard_rectangles::AbstractArray{Rect2D}; next = C_NULL, flags = 0)\n\nExtension: VK_EXT_discard_rectangles\n\nArguments:\n\ndiscard_rectangle_mode::DiscardRectangleModeEXT\ndiscard_rectangles::AbstractArray{Rect2D}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nPipelineDiscardRectangleStateCreateInfoEXT(discard_rectangle_mode::DiscardRectangleModeEXT, discard_rectangles::AbstractArray; next, flags) -> PipelineDiscardRectangleStateCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineDynamicStateCreateInfo","page":"API","title":"Vulkan.PipelineDynamicStateCreateInfo","text":"High-level wrapper for VkPipelineDynamicStateCreateInfo.\n\nAPI documentation\n\nstruct PipelineDynamicStateCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\ndynamic_states::Vector{DynamicState}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineDynamicStateCreateInfo-Tuple{AbstractArray}","page":"API","title":"Vulkan.PipelineDynamicStateCreateInfo","text":"PipelineDynamicStateCreateInfo(dynamic_states::AbstractArray{DynamicState}; next = C_NULL, flags = 0)\n\nArguments:\n\ndynamic_states::AbstractArray{DynamicState}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nPipelineDynamicStateCreateInfo(dynamic_states::AbstractArray; next, flags) -> PipelineDynamicStateCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineExecutableInfoKHR","page":"API","title":"Vulkan.PipelineExecutableInfoKHR","text":"High-level wrapper for VkPipelineExecutableInfoKHR.\n\nExtension: VK_KHR_pipeline_executable_properties\n\nAPI documentation\n\nstruct PipelineExecutableInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\npipeline::Pipeline\nexecutable_index::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineExecutableInfoKHR-Tuple{Pipeline, Integer}","page":"API","title":"Vulkan.PipelineExecutableInfoKHR","text":"PipelineExecutableInfoKHR(pipeline::Pipeline, executable_index::Integer; next = C_NULL)\n\nExtension: VK_KHR_pipeline_executable_properties\n\nArguments:\n\npipeline::Pipeline\nexecutable_index::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPipelineExecutableInfoKHR(pipeline::Pipeline, executable_index::Integer; next) -> PipelineExecutableInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineExecutableInternalRepresentationKHR","page":"API","title":"Vulkan.PipelineExecutableInternalRepresentationKHR","text":"High-level wrapper for VkPipelineExecutableInternalRepresentationKHR.\n\nExtension: VK_KHR_pipeline_executable_properties\n\nAPI documentation\n\nstruct PipelineExecutableInternalRepresentationKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nname::String\ndescription::String\nis_text::Bool\ndata_size::UInt64\ndata::Ptr{Nothing}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineExecutableInternalRepresentationKHR-Tuple{AbstractString, AbstractString, Bool, Integer}","page":"API","title":"Vulkan.PipelineExecutableInternalRepresentationKHR","text":"PipelineExecutableInternalRepresentationKHR(name::AbstractString, description::AbstractString, is_text::Bool, data_size::Integer; next = C_NULL, data = C_NULL)\n\nExtension: VK_KHR_pipeline_executable_properties\n\nArguments:\n\nname::AbstractString\ndescription::AbstractString\nis_text::Bool\ndata_size::Integer\nnext: defaults to C_NULL\ndata: defaults to C_NULL\n\nAPI documentation\n\nPipelineExecutableInternalRepresentationKHR(name::AbstractString, description::AbstractString, is_text::Bool, data_size::Integer; next, data) -> PipelineExecutableInternalRepresentationKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineExecutablePropertiesKHR","page":"API","title":"Vulkan.PipelineExecutablePropertiesKHR","text":"High-level wrapper for VkPipelineExecutablePropertiesKHR.\n\nExtension: VK_KHR_pipeline_executable_properties\n\nAPI documentation\n\nstruct PipelineExecutablePropertiesKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nstages::ShaderStageFlag\nname::String\ndescription::String\nsubgroup_size::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineExecutablePropertiesKHR-Tuple{ShaderStageFlag, AbstractString, AbstractString, Integer}","page":"API","title":"Vulkan.PipelineExecutablePropertiesKHR","text":"PipelineExecutablePropertiesKHR(stages::ShaderStageFlag, name::AbstractString, description::AbstractString, subgroup_size::Integer; next = C_NULL)\n\nExtension: VK_KHR_pipeline_executable_properties\n\nArguments:\n\nstages::ShaderStageFlag\nname::AbstractString\ndescription::AbstractString\nsubgroup_size::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPipelineExecutablePropertiesKHR(stages::ShaderStageFlag, name::AbstractString, description::AbstractString, subgroup_size::Integer; next) -> PipelineExecutablePropertiesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineExecutableStatisticKHR","page":"API","title":"Vulkan.PipelineExecutableStatisticKHR","text":"High-level wrapper for VkPipelineExecutableStatisticKHR.\n\nExtension: VK_KHR_pipeline_executable_properties\n\nAPI documentation\n\nstruct PipelineExecutableStatisticKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nname::String\ndescription::String\nformat::PipelineExecutableStatisticFormatKHR\nvalue::PipelineExecutableStatisticValueKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineExecutableStatisticKHR-Tuple{AbstractString, AbstractString, PipelineExecutableStatisticFormatKHR, PipelineExecutableStatisticValueKHR}","page":"API","title":"Vulkan.PipelineExecutableStatisticKHR","text":"PipelineExecutableStatisticKHR(name::AbstractString, description::AbstractString, format::PipelineExecutableStatisticFormatKHR, value::PipelineExecutableStatisticValueKHR; next = C_NULL)\n\nExtension: VK_KHR_pipeline_executable_properties\n\nArguments:\n\nname::AbstractString\ndescription::AbstractString\nformat::PipelineExecutableStatisticFormatKHR\nvalue::PipelineExecutableStatisticValueKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\nPipelineExecutableStatisticKHR(name::AbstractString, description::AbstractString, format::PipelineExecutableStatisticFormatKHR, value::PipelineExecutableStatisticValueKHR; next) -> PipelineExecutableStatisticKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineExecutableStatisticValueKHR","page":"API","title":"Vulkan.PipelineExecutableStatisticValueKHR","text":"High-level wrapper for VkPipelineExecutableStatisticValueKHR.\n\nExtension: VK_KHR_pipeline_executable_properties\n\nAPI documentation\n\nstruct PipelineExecutableStatisticValueKHR <: Vulkan.HighLevelStruct\n\nvks::VulkanCore.LibVulkan.VkPipelineExecutableStatisticValueKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineFragmentShadingRateEnumStateCreateInfoNV","page":"API","title":"Vulkan.PipelineFragmentShadingRateEnumStateCreateInfoNV","text":"High-level wrapper for VkPipelineFragmentShadingRateEnumStateCreateInfoNV.\n\nExtension: VK_NV_fragment_shading_rate_enums\n\nAPI documentation\n\nstruct PipelineFragmentShadingRateEnumStateCreateInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\nshading_rate_type::FragmentShadingRateTypeNV\nshading_rate::FragmentShadingRateNV\ncombiner_ops::Tuple{FragmentShadingRateCombinerOpKHR, FragmentShadingRateCombinerOpKHR}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineFragmentShadingRateEnumStateCreateInfoNV-Tuple{FragmentShadingRateTypeNV, FragmentShadingRateNV, Tuple{FragmentShadingRateCombinerOpKHR, FragmentShadingRateCombinerOpKHR}}","page":"API","title":"Vulkan.PipelineFragmentShadingRateEnumStateCreateInfoNV","text":"PipelineFragmentShadingRateEnumStateCreateInfoNV(shading_rate_type::FragmentShadingRateTypeNV, shading_rate::FragmentShadingRateNV, combiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR}; next = C_NULL)\n\nExtension: VK_NV_fragment_shading_rate_enums\n\nArguments:\n\nshading_rate_type::FragmentShadingRateTypeNV\nshading_rate::FragmentShadingRateNV\ncombiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR}\nnext: defaults to C_NULL\n\nAPI documentation\n\nPipelineFragmentShadingRateEnumStateCreateInfoNV(shading_rate_type::FragmentShadingRateTypeNV, shading_rate::FragmentShadingRateNV, combiner_ops::Tuple{FragmentShadingRateCombinerOpKHR, FragmentShadingRateCombinerOpKHR}; next) -> PipelineFragmentShadingRateEnumStateCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineFragmentShadingRateStateCreateInfoKHR","page":"API","title":"Vulkan.PipelineFragmentShadingRateStateCreateInfoKHR","text":"High-level wrapper for VkPipelineFragmentShadingRateStateCreateInfoKHR.\n\nExtension: VK_KHR_fragment_shading_rate\n\nAPI documentation\n\nstruct PipelineFragmentShadingRateStateCreateInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nfragment_size::Extent2D\ncombiner_ops::Tuple{FragmentShadingRateCombinerOpKHR, FragmentShadingRateCombinerOpKHR}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineFragmentShadingRateStateCreateInfoKHR-Tuple{Extent2D, Tuple{FragmentShadingRateCombinerOpKHR, FragmentShadingRateCombinerOpKHR}}","page":"API","title":"Vulkan.PipelineFragmentShadingRateStateCreateInfoKHR","text":"PipelineFragmentShadingRateStateCreateInfoKHR(fragment_size::Extent2D, combiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR}; next = C_NULL)\n\nExtension: VK_KHR_fragment_shading_rate\n\nArguments:\n\nfragment_size::Extent2D\ncombiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR}\nnext: defaults to C_NULL\n\nAPI documentation\n\nPipelineFragmentShadingRateStateCreateInfoKHR(fragment_size::Extent2D, combiner_ops::Tuple{FragmentShadingRateCombinerOpKHR, FragmentShadingRateCombinerOpKHR}; next) -> PipelineFragmentShadingRateStateCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineInfoKHR","page":"API","title":"Vulkan.PipelineInfoKHR","text":"High-level wrapper for VkPipelineInfoKHR.\n\nExtension: VK_KHR_pipeline_executable_properties\n\nAPI documentation\n\nstruct PipelineInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\npipeline::Pipeline\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineInfoKHR-Tuple{Pipeline}","page":"API","title":"Vulkan.PipelineInfoKHR","text":"PipelineInfoKHR(pipeline::Pipeline; next = C_NULL)\n\nExtension: VK_KHR_pipeline_executable_properties\n\nArguments:\n\npipeline::Pipeline\nnext: defaults to C_NULL\n\nAPI documentation\n\nPipelineInfoKHR(pipeline::Pipeline; next) -> PipelineInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineInputAssemblyStateCreateInfo","page":"API","title":"Vulkan.PipelineInputAssemblyStateCreateInfo","text":"High-level wrapper for VkPipelineInputAssemblyStateCreateInfo.\n\nAPI documentation\n\nstruct PipelineInputAssemblyStateCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\ntopology::PrimitiveTopology\nprimitive_restart_enable::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineInputAssemblyStateCreateInfo-Tuple{PrimitiveTopology, Bool}","page":"API","title":"Vulkan.PipelineInputAssemblyStateCreateInfo","text":"PipelineInputAssemblyStateCreateInfo(topology::PrimitiveTopology, primitive_restart_enable::Bool; next = C_NULL, flags = 0)\n\nArguments:\n\ntopology::PrimitiveTopology\nprimitive_restart_enable::Bool\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nPipelineInputAssemblyStateCreateInfo(topology::PrimitiveTopology, primitive_restart_enable::Bool; next, flags) -> PipelineInputAssemblyStateCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineLayout-Tuple{Any, AbstractArray, AbstractArray{_PushConstantRange}, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.PipelineLayout","text":"PipelineLayout(device, set_layouts::AbstractArray{DescriptorSetLayout}, push_constant_ranges::AbstractArray{_PushConstantRange}, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0)\n\nPipelineLayout(device, set_layouts::AbstractArray, push_constant_ranges::AbstractArray{_PushConstantRange}, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags) -> PipelineLayout\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineLayout-Tuple{Any, AbstractArray, AbstractArray{_PushConstantRange}}","page":"API","title":"Vulkan.PipelineLayout","text":"PipelineLayout(device, set_layouts::AbstractArray{DescriptorSetLayout}, push_constant_ranges::AbstractArray{_PushConstantRange}; allocator = C_NULL, next = C_NULL, flags = 0)\n\nPipelineLayout(device, set_layouts::AbstractArray, push_constant_ranges::AbstractArray{_PushConstantRange}; allocator, next, flags) -> PipelineLayout\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineLayoutCreateInfo","page":"API","title":"Vulkan.PipelineLayoutCreateInfo","text":"High-level wrapper for VkPipelineLayoutCreateInfo.\n\nAPI documentation\n\nstruct PipelineLayoutCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\nset_layouts::Vector{DescriptorSetLayout}\npush_constant_ranges::Vector{PushConstantRange}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineLayoutCreateInfo-Tuple{AbstractArray, AbstractArray}","page":"API","title":"Vulkan.PipelineLayoutCreateInfo","text":"PipelineLayoutCreateInfo(set_layouts::AbstractArray{DescriptorSetLayout}, push_constant_ranges::AbstractArray{PushConstantRange}; next = C_NULL, flags = 0)\n\nArguments:\n\nset_layouts::AbstractArray{DescriptorSetLayout}\npush_constant_ranges::AbstractArray{PushConstantRange}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nPipelineLayoutCreateInfo(set_layouts::AbstractArray, push_constant_ranges::AbstractArray; next, flags) -> PipelineLayoutCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineLibraryCreateInfoKHR","page":"API","title":"Vulkan.PipelineLibraryCreateInfoKHR","text":"High-level wrapper for VkPipelineLibraryCreateInfoKHR.\n\nExtension: VK_KHR_pipeline_library\n\nAPI documentation\n\nstruct PipelineLibraryCreateInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nlibraries::Vector{Pipeline}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineLibraryCreateInfoKHR-Tuple{AbstractArray}","page":"API","title":"Vulkan.PipelineLibraryCreateInfoKHR","text":"PipelineLibraryCreateInfoKHR(libraries::AbstractArray{Pipeline}; next = C_NULL)\n\nExtension: VK_KHR_pipeline_library\n\nArguments:\n\nlibraries::AbstractArray{Pipeline}\nnext: defaults to C_NULL\n\nAPI documentation\n\nPipelineLibraryCreateInfoKHR(libraries::AbstractArray; next) -> PipelineLibraryCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineMultisampleStateCreateInfo","page":"API","title":"Vulkan.PipelineMultisampleStateCreateInfo","text":"High-level wrapper for VkPipelineMultisampleStateCreateInfo.\n\nAPI documentation\n\nstruct PipelineMultisampleStateCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\nrasterization_samples::SampleCountFlag\nsample_shading_enable::Bool\nmin_sample_shading::Float32\nsample_mask::Union{Ptr{Nothing}, Vector{UInt32}}\nalpha_to_coverage_enable::Bool\nalpha_to_one_enable::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineMultisampleStateCreateInfo-Tuple{SampleCountFlag, Bool, Real, Bool, Bool}","page":"API","title":"Vulkan.PipelineMultisampleStateCreateInfo","text":"PipelineMultisampleStateCreateInfo(rasterization_samples::SampleCountFlag, sample_shading_enable::Bool, min_sample_shading::Real, alpha_to_coverage_enable::Bool, alpha_to_one_enable::Bool; next = C_NULL, flags = 0, sample_mask = C_NULL)\n\nArguments:\n\nrasterization_samples::SampleCountFlag\nsample_shading_enable::Bool\nmin_sample_shading::Real\nalpha_to_coverage_enable::Bool\nalpha_to_one_enable::Bool\nnext: defaults to C_NULL\nflags: defaults to 0\nsample_mask: defaults to C_NULL\n\nAPI documentation\n\nPipelineMultisampleStateCreateInfo(rasterization_samples::SampleCountFlag, sample_shading_enable::Bool, min_sample_shading::Real, alpha_to_coverage_enable::Bool, alpha_to_one_enable::Bool; next, flags, sample_mask) -> PipelineMultisampleStateCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineRasterizationConservativeStateCreateInfoEXT","page":"API","title":"Vulkan.PipelineRasterizationConservativeStateCreateInfoEXT","text":"High-level wrapper for VkPipelineRasterizationConservativeStateCreateInfoEXT.\n\nExtension: VK_EXT_conservative_rasterization\n\nAPI documentation\n\nstruct PipelineRasterizationConservativeStateCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\nconservative_rasterization_mode::ConservativeRasterizationModeEXT\nextra_primitive_overestimation_size::Float32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineRasterizationConservativeStateCreateInfoEXT-Tuple{ConservativeRasterizationModeEXT, Real}","page":"API","title":"Vulkan.PipelineRasterizationConservativeStateCreateInfoEXT","text":"PipelineRasterizationConservativeStateCreateInfoEXT(conservative_rasterization_mode::ConservativeRasterizationModeEXT, extra_primitive_overestimation_size::Real; next = C_NULL, flags = 0)\n\nExtension: VK_EXT_conservative_rasterization\n\nArguments:\n\nconservative_rasterization_mode::ConservativeRasterizationModeEXT\nextra_primitive_overestimation_size::Real\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nPipelineRasterizationConservativeStateCreateInfoEXT(conservative_rasterization_mode::ConservativeRasterizationModeEXT, extra_primitive_overestimation_size::Real; next, flags) -> PipelineRasterizationConservativeStateCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineRasterizationDepthClipStateCreateInfoEXT","page":"API","title":"Vulkan.PipelineRasterizationDepthClipStateCreateInfoEXT","text":"High-level wrapper for VkPipelineRasterizationDepthClipStateCreateInfoEXT.\n\nExtension: VK_EXT_depth_clip_enable\n\nAPI documentation\n\nstruct PipelineRasterizationDepthClipStateCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\ndepth_clip_enable::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineRasterizationDepthClipStateCreateInfoEXT-Tuple{Bool}","page":"API","title":"Vulkan.PipelineRasterizationDepthClipStateCreateInfoEXT","text":"PipelineRasterizationDepthClipStateCreateInfoEXT(depth_clip_enable::Bool; next = C_NULL, flags = 0)\n\nExtension: VK_EXT_depth_clip_enable\n\nArguments:\n\ndepth_clip_enable::Bool\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nPipelineRasterizationDepthClipStateCreateInfoEXT(depth_clip_enable::Bool; next, flags) -> PipelineRasterizationDepthClipStateCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineRasterizationLineStateCreateInfoEXT","page":"API","title":"Vulkan.PipelineRasterizationLineStateCreateInfoEXT","text":"High-level wrapper for VkPipelineRasterizationLineStateCreateInfoEXT.\n\nExtension: VK_EXT_line_rasterization\n\nAPI documentation\n\nstruct PipelineRasterizationLineStateCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nline_rasterization_mode::LineRasterizationModeEXT\nstippled_line_enable::Bool\nline_stipple_factor::UInt32\nline_stipple_pattern::UInt16\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineRasterizationLineStateCreateInfoEXT-Tuple{LineRasterizationModeEXT, Bool, Integer, Integer}","page":"API","title":"Vulkan.PipelineRasterizationLineStateCreateInfoEXT","text":"PipelineRasterizationLineStateCreateInfoEXT(line_rasterization_mode::LineRasterizationModeEXT, stippled_line_enable::Bool, line_stipple_factor::Integer, line_stipple_pattern::Integer; next = C_NULL)\n\nExtension: VK_EXT_line_rasterization\n\nArguments:\n\nline_rasterization_mode::LineRasterizationModeEXT\nstippled_line_enable::Bool\nline_stipple_factor::Integer\nline_stipple_pattern::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPipelineRasterizationLineStateCreateInfoEXT(line_rasterization_mode::LineRasterizationModeEXT, stippled_line_enable::Bool, line_stipple_factor::Integer, line_stipple_pattern::Integer; next) -> PipelineRasterizationLineStateCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineRasterizationProvokingVertexStateCreateInfoEXT","page":"API","title":"Vulkan.PipelineRasterizationProvokingVertexStateCreateInfoEXT","text":"High-level wrapper for VkPipelineRasterizationProvokingVertexStateCreateInfoEXT.\n\nExtension: VK_EXT_provoking_vertex\n\nAPI documentation\n\nstruct PipelineRasterizationProvokingVertexStateCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nprovoking_vertex_mode::ProvokingVertexModeEXT\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineRasterizationProvokingVertexStateCreateInfoEXT-Tuple{ProvokingVertexModeEXT}","page":"API","title":"Vulkan.PipelineRasterizationProvokingVertexStateCreateInfoEXT","text":"PipelineRasterizationProvokingVertexStateCreateInfoEXT(provoking_vertex_mode::ProvokingVertexModeEXT; next = C_NULL)\n\nExtension: VK_EXT_provoking_vertex\n\nArguments:\n\nprovoking_vertex_mode::ProvokingVertexModeEXT\nnext: defaults to C_NULL\n\nAPI documentation\n\nPipelineRasterizationProvokingVertexStateCreateInfoEXT(provoking_vertex_mode::ProvokingVertexModeEXT; next) -> PipelineRasterizationProvokingVertexStateCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineRasterizationStateCreateInfo","page":"API","title":"Vulkan.PipelineRasterizationStateCreateInfo","text":"High-level wrapper for VkPipelineRasterizationStateCreateInfo.\n\nAPI documentation\n\nstruct PipelineRasterizationStateCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\ndepth_clamp_enable::Bool\nrasterizer_discard_enable::Bool\npolygon_mode::PolygonMode\ncull_mode::CullModeFlag\nfront_face::FrontFace\ndepth_bias_enable::Bool\ndepth_bias_constant_factor::Float32\ndepth_bias_clamp::Float32\ndepth_bias_slope_factor::Float32\nline_width::Float32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineRasterizationStateCreateInfo-Tuple{Bool, Bool, PolygonMode, FrontFace, Bool, Real, Real, Real, Real}","page":"API","title":"Vulkan.PipelineRasterizationStateCreateInfo","text":"PipelineRasterizationStateCreateInfo(depth_clamp_enable::Bool, rasterizer_discard_enable::Bool, polygon_mode::PolygonMode, front_face::FrontFace, depth_bias_enable::Bool, depth_bias_constant_factor::Real, depth_bias_clamp::Real, depth_bias_slope_factor::Real, line_width::Real; next = C_NULL, flags = 0, cull_mode = 0)\n\nArguments:\n\ndepth_clamp_enable::Bool\nrasterizer_discard_enable::Bool\npolygon_mode::PolygonMode\nfront_face::FrontFace\ndepth_bias_enable::Bool\ndepth_bias_constant_factor::Real\ndepth_bias_clamp::Real\ndepth_bias_slope_factor::Real\nline_width::Real\nnext: defaults to C_NULL\nflags: defaults to 0\ncull_mode: defaults to 0\n\nAPI documentation\n\nPipelineRasterizationStateCreateInfo(depth_clamp_enable::Bool, rasterizer_discard_enable::Bool, polygon_mode::PolygonMode, front_face::FrontFace, depth_bias_enable::Bool, depth_bias_constant_factor::Real, depth_bias_clamp::Real, depth_bias_slope_factor::Real, line_width::Real; next, flags, cull_mode) -> PipelineRasterizationStateCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineRasterizationStateRasterizationOrderAMD","page":"API","title":"Vulkan.PipelineRasterizationStateRasterizationOrderAMD","text":"High-level wrapper for VkPipelineRasterizationStateRasterizationOrderAMD.\n\nExtension: VK_AMD_rasterization_order\n\nAPI documentation\n\nstruct PipelineRasterizationStateRasterizationOrderAMD <: Vulkan.HighLevelStruct\n\nnext::Any\nrasterization_order::RasterizationOrderAMD\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineRasterizationStateRasterizationOrderAMD-Tuple{RasterizationOrderAMD}","page":"API","title":"Vulkan.PipelineRasterizationStateRasterizationOrderAMD","text":"PipelineRasterizationStateRasterizationOrderAMD(rasterization_order::RasterizationOrderAMD; next = C_NULL)\n\nExtension: VK_AMD_rasterization_order\n\nArguments:\n\nrasterization_order::RasterizationOrderAMD\nnext: defaults to C_NULL\n\nAPI documentation\n\nPipelineRasterizationStateRasterizationOrderAMD(rasterization_order::RasterizationOrderAMD; next) -> PipelineRasterizationStateRasterizationOrderAMD\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineRasterizationStateStreamCreateInfoEXT","page":"API","title":"Vulkan.PipelineRasterizationStateStreamCreateInfoEXT","text":"High-level wrapper for VkPipelineRasterizationStateStreamCreateInfoEXT.\n\nExtension: VK_EXT_transform_feedback\n\nAPI documentation\n\nstruct PipelineRasterizationStateStreamCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\nrasterization_stream::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineRasterizationStateStreamCreateInfoEXT-Tuple{Integer}","page":"API","title":"Vulkan.PipelineRasterizationStateStreamCreateInfoEXT","text":"PipelineRasterizationStateStreamCreateInfoEXT(rasterization_stream::Integer; next = C_NULL, flags = 0)\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\nrasterization_stream::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nPipelineRasterizationStateStreamCreateInfoEXT(rasterization_stream::Integer; next, flags) -> PipelineRasterizationStateStreamCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineRepresentativeFragmentTestStateCreateInfoNV","page":"API","title":"Vulkan.PipelineRepresentativeFragmentTestStateCreateInfoNV","text":"High-level wrapper for VkPipelineRepresentativeFragmentTestStateCreateInfoNV.\n\nExtension: VK_NV_representative_fragment_test\n\nAPI documentation\n\nstruct PipelineRepresentativeFragmentTestStateCreateInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\nrepresentative_fragment_test_enable::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineRepresentativeFragmentTestStateCreateInfoNV-Tuple{Bool}","page":"API","title":"Vulkan.PipelineRepresentativeFragmentTestStateCreateInfoNV","text":"PipelineRepresentativeFragmentTestStateCreateInfoNV(representative_fragment_test_enable::Bool; next = C_NULL)\n\nExtension: VK_NV_representative_fragment_test\n\nArguments:\n\nrepresentative_fragment_test_enable::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nPipelineRepresentativeFragmentTestStateCreateInfoNV(representative_fragment_test_enable::Bool; next) -> PipelineRepresentativeFragmentTestStateCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineSampleLocationsStateCreateInfoEXT","page":"API","title":"Vulkan.PipelineSampleLocationsStateCreateInfoEXT","text":"High-level wrapper for VkPipelineSampleLocationsStateCreateInfoEXT.\n\nExtension: VK_EXT_sample_locations\n\nAPI documentation\n\nstruct PipelineSampleLocationsStateCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nsample_locations_enable::Bool\nsample_locations_info::SampleLocationsInfoEXT\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineSampleLocationsStateCreateInfoEXT-Tuple{Bool, SampleLocationsInfoEXT}","page":"API","title":"Vulkan.PipelineSampleLocationsStateCreateInfoEXT","text":"PipelineSampleLocationsStateCreateInfoEXT(sample_locations_enable::Bool, sample_locations_info::SampleLocationsInfoEXT; next = C_NULL)\n\nExtension: VK_EXT_sample_locations\n\nArguments:\n\nsample_locations_enable::Bool\nsample_locations_info::SampleLocationsInfoEXT\nnext: defaults to C_NULL\n\nAPI documentation\n\nPipelineSampleLocationsStateCreateInfoEXT(sample_locations_enable::Bool, sample_locations_info::SampleLocationsInfoEXT; next) -> PipelineSampleLocationsStateCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineShaderStageCreateInfo","page":"API","title":"Vulkan.PipelineShaderStageCreateInfo","text":"High-level wrapper for VkPipelineShaderStageCreateInfo.\n\nAPI documentation\n\nstruct PipelineShaderStageCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::PipelineShaderStageCreateFlag\nstage::ShaderStageFlag\n_module::ShaderModule\nname::String\nspecialization_info::Union{Ptr{Nothing}, SpecializationInfo}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineShaderStageCreateInfo-Tuple{ShaderStageFlag, ShaderModule, AbstractString}","page":"API","title":"Vulkan.PipelineShaderStageCreateInfo","text":"PipelineShaderStageCreateInfo(stage::ShaderStageFlag, _module::ShaderModule, name::AbstractString; next = C_NULL, flags = 0, specialization_info = C_NULL)\n\nArguments:\n\nstage::ShaderStageFlag\n_module::ShaderModule\nname::AbstractString\nnext: defaults to C_NULL\nflags: defaults to 0\nspecialization_info: defaults to C_NULL\n\nAPI documentation\n\nPipelineShaderStageCreateInfo(stage::ShaderStageFlag, _module::ShaderModule, name::AbstractString; next, flags, specialization_info) -> PipelineShaderStageCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineShaderStageRequiredSubgroupSizeCreateInfoEXT","page":"API","title":"Vulkan.PipelineShaderStageRequiredSubgroupSizeCreateInfoEXT","text":"High-level wrapper for VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT.\n\nExtension: VK_EXT_subgroup_size_control\n\nAPI documentation\n\nstruct PipelineShaderStageRequiredSubgroupSizeCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nrequired_subgroup_size::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineShaderStageRequiredSubgroupSizeCreateInfoEXT-Tuple{Integer}","page":"API","title":"Vulkan.PipelineShaderStageRequiredSubgroupSizeCreateInfoEXT","text":"PipelineShaderStageRequiredSubgroupSizeCreateInfoEXT(required_subgroup_size::Integer; next = C_NULL)\n\nExtension: VK_EXT_subgroup_size_control\n\nArguments:\n\nrequired_subgroup_size::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT(required_subgroup_size::Integer; next) -> PipelineShaderStageRequiredSubgroupSizeCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineTessellationDomainOriginStateCreateInfo","page":"API","title":"Vulkan.PipelineTessellationDomainOriginStateCreateInfo","text":"High-level wrapper for VkPipelineTessellationDomainOriginStateCreateInfo.\n\nAPI documentation\n\nstruct PipelineTessellationDomainOriginStateCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\ndomain_origin::TessellationDomainOrigin\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineTessellationDomainOriginStateCreateInfo-Tuple{TessellationDomainOrigin}","page":"API","title":"Vulkan.PipelineTessellationDomainOriginStateCreateInfo","text":"PipelineTessellationDomainOriginStateCreateInfo(domain_origin::TessellationDomainOrigin; next = C_NULL)\n\nArguments:\n\ndomain_origin::TessellationDomainOrigin\nnext: defaults to C_NULL\n\nAPI documentation\n\nPipelineTessellationDomainOriginStateCreateInfo(domain_origin::TessellationDomainOrigin; next) -> PipelineTessellationDomainOriginStateCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineTessellationStateCreateInfo","page":"API","title":"Vulkan.PipelineTessellationStateCreateInfo","text":"High-level wrapper for VkPipelineTessellationStateCreateInfo.\n\nAPI documentation\n\nstruct PipelineTessellationStateCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\npatch_control_points::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineTessellationStateCreateInfo-Tuple{Integer}","page":"API","title":"Vulkan.PipelineTessellationStateCreateInfo","text":"PipelineTessellationStateCreateInfo(patch_control_points::Integer; next = C_NULL, flags = 0)\n\nArguments:\n\npatch_control_points::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nPipelineTessellationStateCreateInfo(patch_control_points::Integer; next, flags) -> PipelineTessellationStateCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineVertexInputDivisorStateCreateInfoEXT","page":"API","title":"Vulkan.PipelineVertexInputDivisorStateCreateInfoEXT","text":"High-level wrapper for VkPipelineVertexInputDivisorStateCreateInfoEXT.\n\nExtension: VK_EXT_vertex_attribute_divisor\n\nAPI documentation\n\nstruct PipelineVertexInputDivisorStateCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nvertex_binding_divisors::Vector{VertexInputBindingDivisorDescriptionEXT}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineVertexInputDivisorStateCreateInfoEXT-Tuple{AbstractArray}","page":"API","title":"Vulkan.PipelineVertexInputDivisorStateCreateInfoEXT","text":"PipelineVertexInputDivisorStateCreateInfoEXT(vertex_binding_divisors::AbstractArray{VertexInputBindingDivisorDescriptionEXT}; next = C_NULL)\n\nExtension: VK_EXT_vertex_attribute_divisor\n\nArguments:\n\nvertex_binding_divisors::AbstractArray{VertexInputBindingDivisorDescriptionEXT}\nnext: defaults to C_NULL\n\nAPI documentation\n\nPipelineVertexInputDivisorStateCreateInfoEXT(vertex_binding_divisors::AbstractArray; next) -> PipelineVertexInputDivisorStateCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineVertexInputStateCreateInfo","page":"API","title":"Vulkan.PipelineVertexInputStateCreateInfo","text":"High-level wrapper for VkPipelineVertexInputStateCreateInfo.\n\nAPI documentation\n\nstruct PipelineVertexInputStateCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\nvertex_binding_descriptions::Vector{VertexInputBindingDescription}\nvertex_attribute_descriptions::Vector{VertexInputAttributeDescription}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineVertexInputStateCreateInfo-Tuple{AbstractArray, AbstractArray}","page":"API","title":"Vulkan.PipelineVertexInputStateCreateInfo","text":"PipelineVertexInputStateCreateInfo(vertex_binding_descriptions::AbstractArray{VertexInputBindingDescription}, vertex_attribute_descriptions::AbstractArray{VertexInputAttributeDescription}; next = C_NULL, flags = 0)\n\nArguments:\n\nvertex_binding_descriptions::AbstractArray{VertexInputBindingDescription}\nvertex_attribute_descriptions::AbstractArray{VertexInputAttributeDescription}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nPipelineVertexInputStateCreateInfo(vertex_binding_descriptions::AbstractArray, vertex_attribute_descriptions::AbstractArray; next, flags) -> PipelineVertexInputStateCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineViewportCoarseSampleOrderStateCreateInfoNV","page":"API","title":"Vulkan.PipelineViewportCoarseSampleOrderStateCreateInfoNV","text":"High-level wrapper for VkPipelineViewportCoarseSampleOrderStateCreateInfoNV.\n\nExtension: VK_NV_shading_rate_image\n\nAPI documentation\n\nstruct PipelineViewportCoarseSampleOrderStateCreateInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\nsample_order_type::CoarseSampleOrderTypeNV\ncustom_sample_orders::Vector{CoarseSampleOrderCustomNV}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineViewportCoarseSampleOrderStateCreateInfoNV-Tuple{CoarseSampleOrderTypeNV, AbstractArray}","page":"API","title":"Vulkan.PipelineViewportCoarseSampleOrderStateCreateInfoNV","text":"PipelineViewportCoarseSampleOrderStateCreateInfoNV(sample_order_type::CoarseSampleOrderTypeNV, custom_sample_orders::AbstractArray{CoarseSampleOrderCustomNV}; next = C_NULL)\n\nExtension: VK_NV_shading_rate_image\n\nArguments:\n\nsample_order_type::CoarseSampleOrderTypeNV\ncustom_sample_orders::AbstractArray{CoarseSampleOrderCustomNV}\nnext: defaults to C_NULL\n\nAPI documentation\n\nPipelineViewportCoarseSampleOrderStateCreateInfoNV(sample_order_type::CoarseSampleOrderTypeNV, custom_sample_orders::AbstractArray; next) -> PipelineViewportCoarseSampleOrderStateCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineViewportExclusiveScissorStateCreateInfoNV","page":"API","title":"Vulkan.PipelineViewportExclusiveScissorStateCreateInfoNV","text":"High-level wrapper for VkPipelineViewportExclusiveScissorStateCreateInfoNV.\n\nExtension: VK_NV_scissor_exclusive\n\nAPI documentation\n\nstruct PipelineViewportExclusiveScissorStateCreateInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\nexclusive_scissors::Vector{Rect2D}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineViewportExclusiveScissorStateCreateInfoNV-Tuple{AbstractArray}","page":"API","title":"Vulkan.PipelineViewportExclusiveScissorStateCreateInfoNV","text":"PipelineViewportExclusiveScissorStateCreateInfoNV(exclusive_scissors::AbstractArray{Rect2D}; next = C_NULL)\n\nExtension: VK_NV_scissor_exclusive\n\nArguments:\n\nexclusive_scissors::AbstractArray{Rect2D}\nnext: defaults to C_NULL\n\nAPI documentation\n\nPipelineViewportExclusiveScissorStateCreateInfoNV(exclusive_scissors::AbstractArray; next) -> PipelineViewportExclusiveScissorStateCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineViewportShadingRateImageStateCreateInfoNV","page":"API","title":"Vulkan.PipelineViewportShadingRateImageStateCreateInfoNV","text":"High-level wrapper for VkPipelineViewportShadingRateImageStateCreateInfoNV.\n\nExtension: VK_NV_shading_rate_image\n\nAPI documentation\n\nstruct PipelineViewportShadingRateImageStateCreateInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\nshading_rate_image_enable::Bool\nshading_rate_palettes::Vector{ShadingRatePaletteNV}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineViewportShadingRateImageStateCreateInfoNV-Tuple{Bool, AbstractArray}","page":"API","title":"Vulkan.PipelineViewportShadingRateImageStateCreateInfoNV","text":"PipelineViewportShadingRateImageStateCreateInfoNV(shading_rate_image_enable::Bool, shading_rate_palettes::AbstractArray{ShadingRatePaletteNV}; next = C_NULL)\n\nExtension: VK_NV_shading_rate_image\n\nArguments:\n\nshading_rate_image_enable::Bool\nshading_rate_palettes::AbstractArray{ShadingRatePaletteNV}\nnext: defaults to C_NULL\n\nAPI documentation\n\nPipelineViewportShadingRateImageStateCreateInfoNV(shading_rate_image_enable::Bool, shading_rate_palettes::AbstractArray; next) -> PipelineViewportShadingRateImageStateCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineViewportStateCreateInfo","page":"API","title":"Vulkan.PipelineViewportStateCreateInfo","text":"High-level wrapper for VkPipelineViewportStateCreateInfo.\n\nAPI documentation\n\nstruct PipelineViewportStateCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\nviewports::Union{Ptr{Nothing}, Vector{Viewport}}\nscissors::Union{Ptr{Nothing}, Vector{Rect2D}}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineViewportStateCreateInfo-Tuple{}","page":"API","title":"Vulkan.PipelineViewportStateCreateInfo","text":"PipelineViewportStateCreateInfo(; next = C_NULL, flags = 0, viewports = C_NULL, scissors = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\nflags: defaults to 0\nviewports: defaults to C_NULL\nscissors: defaults to C_NULL\n\nAPI documentation\n\nPipelineViewportStateCreateInfo(; next, flags, viewports, scissors) -> PipelineViewportStateCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineViewportSwizzleStateCreateInfoNV","page":"API","title":"Vulkan.PipelineViewportSwizzleStateCreateInfoNV","text":"High-level wrapper for VkPipelineViewportSwizzleStateCreateInfoNV.\n\nExtension: VK_NV_viewport_swizzle\n\nAPI documentation\n\nstruct PipelineViewportSwizzleStateCreateInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\nviewport_swizzles::Vector{ViewportSwizzleNV}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineViewportSwizzleStateCreateInfoNV-Tuple{AbstractArray}","page":"API","title":"Vulkan.PipelineViewportSwizzleStateCreateInfoNV","text":"PipelineViewportSwizzleStateCreateInfoNV(viewport_swizzles::AbstractArray{ViewportSwizzleNV}; next = C_NULL, flags = 0)\n\nExtension: VK_NV_viewport_swizzle\n\nArguments:\n\nviewport_swizzles::AbstractArray{ViewportSwizzleNV}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nPipelineViewportSwizzleStateCreateInfoNV(viewport_swizzles::AbstractArray; next, flags) -> PipelineViewportSwizzleStateCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineViewportWScalingStateCreateInfoNV","page":"API","title":"Vulkan.PipelineViewportWScalingStateCreateInfoNV","text":"High-level wrapper for VkPipelineViewportWScalingStateCreateInfoNV.\n\nExtension: VK_NV_clip_space_w_scaling\n\nAPI documentation\n\nstruct PipelineViewportWScalingStateCreateInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\nviewport_w_scaling_enable::Bool\nviewport_w_scalings::Union{Ptr{Nothing}, Vector{ViewportWScalingNV}}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PipelineViewportWScalingStateCreateInfoNV-Tuple{Bool}","page":"API","title":"Vulkan.PipelineViewportWScalingStateCreateInfoNV","text":"PipelineViewportWScalingStateCreateInfoNV(viewport_w_scaling_enable::Bool; next = C_NULL, viewport_w_scalings = C_NULL)\n\nExtension: VK_NV_clip_space_w_scaling\n\nArguments:\n\nviewport_w_scaling_enable::Bool\nnext: defaults to C_NULL\nviewport_w_scalings: defaults to C_NULL\n\nAPI documentation\n\nPipelineViewportWScalingStateCreateInfoNV(viewport_w_scaling_enable::Bool; next, viewport_w_scalings) -> PipelineViewportWScalingStateCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PresentInfoKHR","page":"API","title":"Vulkan.PresentInfoKHR","text":"High-level wrapper for VkPresentInfoKHR.\n\nExtension: VK_KHR_swapchain\n\nAPI documentation\n\nstruct PresentInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nwait_semaphores::Vector{Semaphore}\nswapchains::Vector{SwapchainKHR}\nimage_indices::Vector{UInt32}\nresults::Union{Ptr{Nothing}, Vector{Result}}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PresentInfoKHR-Tuple{AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.PresentInfoKHR","text":"PresentInfoKHR(wait_semaphores::AbstractArray{Semaphore}, swapchains::AbstractArray{SwapchainKHR}, image_indices::AbstractArray{<:Integer}; next = C_NULL, results = C_NULL)\n\nExtension: VK_KHR_swapchain\n\nArguments:\n\nwait_semaphores::AbstractArray{Semaphore}\nswapchains::AbstractArray{SwapchainKHR}\nimage_indices::AbstractArray{<:Integer}\nnext: defaults to C_NULL\nresults: defaults to C_NULL\n\nAPI documentation\n\nPresentInfoKHR(wait_semaphores::AbstractArray, swapchains::AbstractArray, image_indices::AbstractArray; next, results) -> PresentInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PresentRegionKHR","page":"API","title":"Vulkan.PresentRegionKHR","text":"High-level wrapper for VkPresentRegionKHR.\n\nExtension: VK_KHR_incremental_present\n\nAPI documentation\n\nstruct PresentRegionKHR <: Vulkan.HighLevelStruct\n\nrectangles::Union{Ptr{Nothing}, Vector{RectLayerKHR}}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PresentRegionKHR-Tuple{}","page":"API","title":"Vulkan.PresentRegionKHR","text":"PresentRegionKHR(; rectangles = C_NULL)\n\nExtension: VK_KHR_incremental_present\n\nArguments:\n\nrectangles: defaults to C_NULL\n\nAPI documentation\n\nPresentRegionKHR(; rectangles) -> PresentRegionKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PresentRegionsKHR","page":"API","title":"Vulkan.PresentRegionsKHR","text":"High-level wrapper for VkPresentRegionsKHR.\n\nExtension: VK_KHR_incremental_present\n\nAPI documentation\n\nstruct PresentRegionsKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nregions::Union{Ptr{Nothing}, Vector{PresentRegionKHR}}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PresentRegionsKHR-Tuple{}","page":"API","title":"Vulkan.PresentRegionsKHR","text":"PresentRegionsKHR(; next = C_NULL, regions = C_NULL)\n\nExtension: VK_KHR_incremental_present\n\nArguments:\n\nnext: defaults to C_NULL\nregions: defaults to C_NULL\n\nAPI documentation\n\nPresentRegionsKHR(; next, regions) -> PresentRegionsKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PresentTimeGOOGLE","page":"API","title":"Vulkan.PresentTimeGOOGLE","text":"High-level wrapper for VkPresentTimeGOOGLE.\n\nExtension: VK_GOOGLE_display_timing\n\nAPI documentation\n\nstruct PresentTimeGOOGLE <: Vulkan.HighLevelStruct\n\npresent_id::UInt32\ndesired_present_time::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PresentTimesInfoGOOGLE","page":"API","title":"Vulkan.PresentTimesInfoGOOGLE","text":"High-level wrapper for VkPresentTimesInfoGOOGLE.\n\nExtension: VK_GOOGLE_display_timing\n\nAPI documentation\n\nstruct PresentTimesInfoGOOGLE <: Vulkan.HighLevelStruct\n\nnext::Any\ntimes::Union{Ptr{Nothing}, Vector{PresentTimeGOOGLE}}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PresentTimesInfoGOOGLE-Tuple{}","page":"API","title":"Vulkan.PresentTimesInfoGOOGLE","text":"PresentTimesInfoGOOGLE(; next = C_NULL, times = C_NULL)\n\nExtension: VK_GOOGLE_display_timing\n\nArguments:\n\nnext: defaults to C_NULL\ntimes: defaults to C_NULL\n\nAPI documentation\n\nPresentTimesInfoGOOGLE(; next, times) -> PresentTimesInfoGOOGLE\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PrivateDataSlotCreateInfoEXT","page":"API","title":"Vulkan.PrivateDataSlotCreateInfoEXT","text":"High-level wrapper for VkPrivateDataSlotCreateInfoEXT.\n\nExtension: VK_EXT_private_data\n\nAPI documentation\n\nstruct PrivateDataSlotCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::PrivateDataSlotCreateFlagEXT\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.PrivateDataSlotCreateInfoEXT-Tuple{PrivateDataSlotCreateFlagEXT}","page":"API","title":"Vulkan.PrivateDataSlotCreateInfoEXT","text":"PrivateDataSlotCreateInfoEXT(flags::PrivateDataSlotCreateFlagEXT; next = C_NULL)\n\nExtension: VK_EXT_private_data\n\nArguments:\n\nflags::PrivateDataSlotCreateFlagEXT\nnext: defaults to C_NULL\n\nAPI documentation\n\nPrivateDataSlotCreateInfoEXT(flags::PrivateDataSlotCreateFlagEXT; next) -> PrivateDataSlotCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PrivateDataSlotEXT-Tuple{Any, PrivateDataSlotCreateFlagEXT, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.PrivateDataSlotEXT","text":"PrivateDataSlotEXT(device, flags::PrivateDataSlotCreateFlagEXT, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL)\n\nPrivateDataSlotEXT(device, flags::PrivateDataSlotCreateFlagEXT, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next) -> PrivateDataSlotEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PrivateDataSlotEXT-Tuple{Any, PrivateDataSlotCreateFlagEXT}","page":"API","title":"Vulkan.PrivateDataSlotEXT","text":"PrivateDataSlotEXT(device, flags::PrivateDataSlotCreateFlagEXT; allocator = C_NULL, next = C_NULL)\n\nPrivateDataSlotEXT(device, flags::PrivateDataSlotCreateFlagEXT; allocator, next) -> PrivateDataSlotEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ProtectedSubmitInfo","page":"API","title":"Vulkan.ProtectedSubmitInfo","text":"High-level wrapper for VkProtectedSubmitInfo.\n\nAPI documentation\n\nstruct ProtectedSubmitInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nprotected_submit::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ProtectedSubmitInfo-Tuple{Bool}","page":"API","title":"Vulkan.ProtectedSubmitInfo","text":"ProtectedSubmitInfo(protected_submit::Bool; next = C_NULL)\n\nArguments:\n\nprotected_submit::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nProtectedSubmitInfo(protected_submit::Bool; next) -> ProtectedSubmitInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PushConstantRange","page":"API","title":"Vulkan.PushConstantRange","text":"High-level wrapper for VkPushConstantRange.\n\nAPI documentation\n\nstruct PushConstantRange <: Vulkan.HighLevelStruct\n\nstage_flags::ShaderStageFlag\noffset::UInt32\nsize::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.QueryPool-Tuple{Any, QueryType, Integer, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.QueryPool","text":"QueryPool(device, query_type::QueryType, query_count::Integer, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0, pipeline_statistics = 0)\n\nQueryPool(device, query_type::QueryType, query_count::Integer, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags, pipeline_statistics) -> QueryPool\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.QueryPool-Tuple{Any, QueryType, Integer}","page":"API","title":"Vulkan.QueryPool","text":"QueryPool(device, query_type::QueryType, query_count::Integer; allocator = C_NULL, next = C_NULL, flags = 0, pipeline_statistics = 0)\n\nQueryPool(device, query_type::QueryType, query_count::Integer; allocator, next, flags, pipeline_statistics) -> QueryPool\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.QueryPoolCreateInfo","page":"API","title":"Vulkan.QueryPoolCreateInfo","text":"High-level wrapper for VkQueryPoolCreateInfo.\n\nAPI documentation\n\nstruct QueryPoolCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\nquery_type::QueryType\nquery_count::UInt32\npipeline_statistics::QueryPipelineStatisticFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.QueryPoolCreateInfo-Tuple{QueryType, Integer}","page":"API","title":"Vulkan.QueryPoolCreateInfo","text":"QueryPoolCreateInfo(query_type::QueryType, query_count::Integer; next = C_NULL, flags = 0, pipeline_statistics = 0)\n\nArguments:\n\nquery_type::QueryType\nquery_count::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\npipeline_statistics: defaults to 0\n\nAPI documentation\n\nQueryPoolCreateInfo(query_type::QueryType, query_count::Integer; next, flags, pipeline_statistics) -> QueryPoolCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.QueryPoolPerformanceCreateInfoKHR","page":"API","title":"Vulkan.QueryPoolPerformanceCreateInfoKHR","text":"High-level wrapper for VkQueryPoolPerformanceCreateInfoKHR.\n\nExtension: VK_KHR_performance_query\n\nAPI documentation\n\nstruct QueryPoolPerformanceCreateInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nqueue_family_index::UInt32\ncounter_indices::Vector{UInt32}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.QueryPoolPerformanceCreateInfoKHR-Tuple{Integer, AbstractArray}","page":"API","title":"Vulkan.QueryPoolPerformanceCreateInfoKHR","text":"QueryPoolPerformanceCreateInfoKHR(queue_family_index::Integer, counter_indices::AbstractArray{<:Integer}; next = C_NULL)\n\nExtension: VK_KHR_performance_query\n\nArguments:\n\nqueue_family_index::Integer\ncounter_indices::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\nAPI documentation\n\nQueryPoolPerformanceCreateInfoKHR(queue_family_index::Integer, counter_indices::AbstractArray; next) -> QueryPoolPerformanceCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.QueryPoolPerformanceQueryCreateInfoINTEL","page":"API","title":"Vulkan.QueryPoolPerformanceQueryCreateInfoINTEL","text":"High-level wrapper for VkQueryPoolPerformanceQueryCreateInfoINTEL.\n\nExtension: VK_INTEL_performance_query\n\nAPI documentation\n\nstruct QueryPoolPerformanceQueryCreateInfoINTEL <: Vulkan.HighLevelStruct\n\nnext::Any\nperformance_counters_sampling::QueryPoolSamplingModeINTEL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.QueryPoolPerformanceQueryCreateInfoINTEL-Tuple{QueryPoolSamplingModeINTEL}","page":"API","title":"Vulkan.QueryPoolPerformanceQueryCreateInfoINTEL","text":"QueryPoolPerformanceQueryCreateInfoINTEL(performance_counters_sampling::QueryPoolSamplingModeINTEL; next = C_NULL)\n\nExtension: VK_INTEL_performance_query\n\nArguments:\n\nperformance_counters_sampling::QueryPoolSamplingModeINTEL\nnext: defaults to C_NULL\n\nAPI documentation\n\nQueryPoolPerformanceQueryCreateInfoINTEL(performance_counters_sampling::QueryPoolSamplingModeINTEL; next) -> QueryPoolPerformanceQueryCreateInfoINTEL\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.QueueFamilyCheckpointProperties2NV","page":"API","title":"Vulkan.QueueFamilyCheckpointProperties2NV","text":"High-level wrapper for VkQueueFamilyCheckpointProperties2NV.\n\nExtension: VK_KHR_synchronization2\n\nAPI documentation\n\nstruct QueueFamilyCheckpointProperties2NV <: Vulkan.HighLevelStruct\n\nnext::Any\ncheckpoint_execution_stage_mask::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.QueueFamilyCheckpointProperties2NV-Tuple{Integer}","page":"API","title":"Vulkan.QueueFamilyCheckpointProperties2NV","text":"QueueFamilyCheckpointProperties2NV(checkpoint_execution_stage_mask::Integer; next = C_NULL)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncheckpoint_execution_stage_mask::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nQueueFamilyCheckpointProperties2NV(checkpoint_execution_stage_mask::Integer; next) -> QueueFamilyCheckpointProperties2NV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.QueueFamilyCheckpointPropertiesNV","page":"API","title":"Vulkan.QueueFamilyCheckpointPropertiesNV","text":"High-level wrapper for VkQueueFamilyCheckpointPropertiesNV.\n\nExtension: VK_NV_device_diagnostic_checkpoints\n\nAPI documentation\n\nstruct QueueFamilyCheckpointPropertiesNV <: Vulkan.HighLevelStruct\n\nnext::Any\ncheckpoint_execution_stage_mask::PipelineStageFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.QueueFamilyCheckpointPropertiesNV-Tuple{PipelineStageFlag}","page":"API","title":"Vulkan.QueueFamilyCheckpointPropertiesNV","text":"QueueFamilyCheckpointPropertiesNV(checkpoint_execution_stage_mask::PipelineStageFlag; next = C_NULL)\n\nExtension: VK_NV_device_diagnostic_checkpoints\n\nArguments:\n\ncheckpoint_execution_stage_mask::PipelineStageFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\nQueueFamilyCheckpointPropertiesNV(checkpoint_execution_stage_mask::PipelineStageFlag; next) -> QueueFamilyCheckpointPropertiesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.QueueFamilyProperties","page":"API","title":"Vulkan.QueueFamilyProperties","text":"High-level wrapper for VkQueueFamilyProperties.\n\nAPI documentation\n\nstruct QueueFamilyProperties <: Vulkan.HighLevelStruct\n\nqueue_flags::QueueFlag\nqueue_count::UInt32\ntimestamp_valid_bits::UInt32\nmin_image_transfer_granularity::Extent3D\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.QueueFamilyProperties-Tuple{Integer, Integer, Extent3D}","page":"API","title":"Vulkan.QueueFamilyProperties","text":"QueueFamilyProperties(queue_count::Integer, timestamp_valid_bits::Integer, min_image_transfer_granularity::Extent3D; queue_flags = 0)\n\nArguments:\n\nqueue_count::Integer\ntimestamp_valid_bits::Integer\nmin_image_transfer_granularity::Extent3D\nqueue_flags: defaults to 0\n\nAPI documentation\n\nQueueFamilyProperties(queue_count::Integer, timestamp_valid_bits::Integer, min_image_transfer_granularity::Extent3D; queue_flags) -> QueueFamilyProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.QueueFamilyProperties2","page":"API","title":"Vulkan.QueueFamilyProperties2","text":"High-level wrapper for VkQueueFamilyProperties2.\n\nAPI documentation\n\nstruct QueueFamilyProperties2 <: Vulkan.HighLevelStruct\n\nnext::Any\nqueue_family_properties::QueueFamilyProperties\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.QueueFamilyProperties2-Tuple{QueueFamilyProperties}","page":"API","title":"Vulkan.QueueFamilyProperties2","text":"QueueFamilyProperties2(queue_family_properties::QueueFamilyProperties; next = C_NULL)\n\nArguments:\n\nqueue_family_properties::QueueFamilyProperties\nnext: defaults to C_NULL\n\nAPI documentation\n\nQueueFamilyProperties2(queue_family_properties::QueueFamilyProperties; next) -> QueueFamilyProperties2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.RayTracingPipelineCreateInfoKHR","page":"API","title":"Vulkan.RayTracingPipelineCreateInfoKHR","text":"High-level wrapper for VkRayTracingPipelineCreateInfoKHR.\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nAPI documentation\n\nstruct RayTracingPipelineCreateInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::PipelineCreateFlag\nstages::Vector{PipelineShaderStageCreateInfo}\ngroups::Vector{RayTracingShaderGroupCreateInfoKHR}\nmax_pipeline_ray_recursion_depth::UInt32\nlibrary_info::Union{Ptr{Nothing}, PipelineLibraryCreateInfoKHR}\nlibrary_interface::Union{Ptr{Nothing}, RayTracingPipelineInterfaceCreateInfoKHR}\ndynamic_state::Union{Ptr{Nothing}, PipelineDynamicStateCreateInfo}\nlayout::PipelineLayout\nbase_pipeline_handle::Union{Ptr{Nothing}, Pipeline}\nbase_pipeline_index::Int32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.RayTracingPipelineCreateInfoKHR-Tuple{AbstractArray, AbstractArray, Integer, PipelineLayout, Integer}","page":"API","title":"Vulkan.RayTracingPipelineCreateInfoKHR","text":"RayTracingPipelineCreateInfoKHR(stages::AbstractArray{PipelineShaderStageCreateInfo}, groups::AbstractArray{RayTracingShaderGroupCreateInfoKHR}, max_pipeline_ray_recursion_depth::Integer, layout::PipelineLayout, base_pipeline_index::Integer; next = C_NULL, flags = 0, library_info = C_NULL, library_interface = C_NULL, dynamic_state = C_NULL, base_pipeline_handle = C_NULL)\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\nstages::AbstractArray{PipelineShaderStageCreateInfo}\ngroups::AbstractArray{RayTracingShaderGroupCreateInfoKHR}\nmax_pipeline_ray_recursion_depth::Integer\nlayout::PipelineLayout\nbase_pipeline_index::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\nlibrary_info: defaults to C_NULL\nlibrary_interface: defaults to C_NULL\ndynamic_state: defaults to C_NULL\nbase_pipeline_handle: defaults to C_NULL\n\nAPI documentation\n\nRayTracingPipelineCreateInfoKHR(stages::AbstractArray, groups::AbstractArray, max_pipeline_ray_recursion_depth::Integer, layout::PipelineLayout, base_pipeline_index::Integer; next, flags, library_info, library_interface, dynamic_state, base_pipeline_handle) -> RayTracingPipelineCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.RayTracingPipelineCreateInfoNV","page":"API","title":"Vulkan.RayTracingPipelineCreateInfoNV","text":"High-level wrapper for VkRayTracingPipelineCreateInfoNV.\n\nExtension: VK_NV_ray_tracing\n\nAPI documentation\n\nstruct RayTracingPipelineCreateInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::PipelineCreateFlag\nstages::Vector{PipelineShaderStageCreateInfo}\ngroups::Vector{RayTracingShaderGroupCreateInfoNV}\nmax_recursion_depth::UInt32\nlayout::PipelineLayout\nbase_pipeline_handle::Union{Ptr{Nothing}, Pipeline}\nbase_pipeline_index::Int32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.RayTracingPipelineCreateInfoNV-Tuple{AbstractArray, AbstractArray, Integer, PipelineLayout, Integer}","page":"API","title":"Vulkan.RayTracingPipelineCreateInfoNV","text":"RayTracingPipelineCreateInfoNV(stages::AbstractArray{PipelineShaderStageCreateInfo}, groups::AbstractArray{RayTracingShaderGroupCreateInfoNV}, max_recursion_depth::Integer, layout::PipelineLayout, base_pipeline_index::Integer; next = C_NULL, flags = 0, base_pipeline_handle = C_NULL)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\nstages::AbstractArray{PipelineShaderStageCreateInfo}\ngroups::AbstractArray{RayTracingShaderGroupCreateInfoNV}\nmax_recursion_depth::Integer\nlayout::PipelineLayout\nbase_pipeline_index::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\nbase_pipeline_handle: defaults to C_NULL\n\nAPI documentation\n\nRayTracingPipelineCreateInfoNV(stages::AbstractArray, groups::AbstractArray, max_recursion_depth::Integer, layout::PipelineLayout, base_pipeline_index::Integer; next, flags, base_pipeline_handle) -> RayTracingPipelineCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.RayTracingPipelineInterfaceCreateInfoKHR","page":"API","title":"Vulkan.RayTracingPipelineInterfaceCreateInfoKHR","text":"High-level wrapper for VkRayTracingPipelineInterfaceCreateInfoKHR.\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nAPI documentation\n\nstruct RayTracingPipelineInterfaceCreateInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nmax_pipeline_ray_payload_size::UInt32\nmax_pipeline_ray_hit_attribute_size::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.RayTracingPipelineInterfaceCreateInfoKHR-Tuple{Integer, Integer}","page":"API","title":"Vulkan.RayTracingPipelineInterfaceCreateInfoKHR","text":"RayTracingPipelineInterfaceCreateInfoKHR(max_pipeline_ray_payload_size::Integer, max_pipeline_ray_hit_attribute_size::Integer; next = C_NULL)\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\nmax_pipeline_ray_payload_size::Integer\nmax_pipeline_ray_hit_attribute_size::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nRayTracingPipelineInterfaceCreateInfoKHR(max_pipeline_ray_payload_size::Integer, max_pipeline_ray_hit_attribute_size::Integer; next) -> RayTracingPipelineInterfaceCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.RayTracingShaderGroupCreateInfoKHR","page":"API","title":"Vulkan.RayTracingShaderGroupCreateInfoKHR","text":"High-level wrapper for VkRayTracingShaderGroupCreateInfoKHR.\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nAPI documentation\n\nstruct RayTracingShaderGroupCreateInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\ntype::RayTracingShaderGroupTypeKHR\ngeneral_shader::UInt32\nclosest_hit_shader::UInt32\nany_hit_shader::UInt32\nintersection_shader::UInt32\nshader_group_capture_replay_handle::Ptr{Nothing}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.RayTracingShaderGroupCreateInfoKHR-Tuple{RayTracingShaderGroupTypeKHR, Integer, Integer, Integer, Integer}","page":"API","title":"Vulkan.RayTracingShaderGroupCreateInfoKHR","text":"RayTracingShaderGroupCreateInfoKHR(type::RayTracingShaderGroupTypeKHR, general_shader::Integer, closest_hit_shader::Integer, any_hit_shader::Integer, intersection_shader::Integer; next = C_NULL, shader_group_capture_replay_handle = C_NULL)\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\ntype::RayTracingShaderGroupTypeKHR\ngeneral_shader::Integer\nclosest_hit_shader::Integer\nany_hit_shader::Integer\nintersection_shader::Integer\nnext: defaults to C_NULL\nshader_group_capture_replay_handle: defaults to C_NULL\n\nAPI documentation\n\nRayTracingShaderGroupCreateInfoKHR(type::RayTracingShaderGroupTypeKHR, general_shader::Integer, closest_hit_shader::Integer, any_hit_shader::Integer, intersection_shader::Integer; next, shader_group_capture_replay_handle) -> RayTracingShaderGroupCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.RayTracingShaderGroupCreateInfoNV","page":"API","title":"Vulkan.RayTracingShaderGroupCreateInfoNV","text":"High-level wrapper for VkRayTracingShaderGroupCreateInfoNV.\n\nExtension: VK_NV_ray_tracing\n\nAPI documentation\n\nstruct RayTracingShaderGroupCreateInfoNV <: Vulkan.HighLevelStruct\n\nnext::Any\ntype::RayTracingShaderGroupTypeKHR\ngeneral_shader::UInt32\nclosest_hit_shader::UInt32\nany_hit_shader::UInt32\nintersection_shader::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.RayTracingShaderGroupCreateInfoNV-Tuple{RayTracingShaderGroupTypeKHR, Integer, Integer, Integer, Integer}","page":"API","title":"Vulkan.RayTracingShaderGroupCreateInfoNV","text":"RayTracingShaderGroupCreateInfoNV(type::RayTracingShaderGroupTypeKHR, general_shader::Integer, closest_hit_shader::Integer, any_hit_shader::Integer, intersection_shader::Integer; next = C_NULL)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ntype::RayTracingShaderGroupTypeKHR\ngeneral_shader::Integer\nclosest_hit_shader::Integer\nany_hit_shader::Integer\nintersection_shader::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nRayTracingShaderGroupCreateInfoNV(type::RayTracingShaderGroupTypeKHR, general_shader::Integer, closest_hit_shader::Integer, any_hit_shader::Integer, intersection_shader::Integer; next) -> RayTracingShaderGroupCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.Rect2D","page":"API","title":"Vulkan.Rect2D","text":"High-level wrapper for VkRect2D.\n\nAPI documentation\n\nstruct Rect2D <: Vulkan.HighLevelStruct\n\noffset::Offset2D\nextent::Extent2D\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.RectLayerKHR","page":"API","title":"Vulkan.RectLayerKHR","text":"High-level wrapper for VkRectLayerKHR.\n\nExtension: VK_KHR_incremental_present\n\nAPI documentation\n\nstruct RectLayerKHR <: Vulkan.HighLevelStruct\n\noffset::Offset2D\nextent::Extent2D\nlayer::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.RefreshCycleDurationGOOGLE","page":"API","title":"Vulkan.RefreshCycleDurationGOOGLE","text":"High-level wrapper for VkRefreshCycleDurationGOOGLE.\n\nExtension: VK_GOOGLE_display_timing\n\nAPI documentation\n\nstruct RefreshCycleDurationGOOGLE <: Vulkan.HighLevelStruct\n\nrefresh_duration::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.RenderPass-Tuple{Any, AbstractArray{_AttachmentDescription2}, AbstractArray{_SubpassDescription2}, AbstractArray{_SubpassDependency2}, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.RenderPass","text":"RenderPass(device, attachments::AbstractArray{_AttachmentDescription2}, subpasses::AbstractArray{_SubpassDescription2}, dependencies::AbstractArray{_SubpassDependency2}, correlated_view_masks::AbstractArray{<:Integer}, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0)\n\nRenderPass(device, attachments::AbstractArray{_AttachmentDescription2}, subpasses::AbstractArray{_SubpassDescription2}, dependencies::AbstractArray{_SubpassDependency2}, correlated_view_masks::AbstractArray, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags) -> RenderPass\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.RenderPass-Tuple{Any, AbstractArray{_AttachmentDescription2}, AbstractArray{_SubpassDescription2}, AbstractArray{_SubpassDependency2}, AbstractArray}","page":"API","title":"Vulkan.RenderPass","text":"RenderPass(device, attachments::AbstractArray{_AttachmentDescription2}, subpasses::AbstractArray{_SubpassDescription2}, dependencies::AbstractArray{_SubpassDependency2}, correlated_view_masks::AbstractArray{<:Integer}; allocator = C_NULL, next = C_NULL, flags = 0)\n\nRenderPass(device, attachments::AbstractArray{_AttachmentDescription2}, subpasses::AbstractArray{_SubpassDescription2}, dependencies::AbstractArray{_SubpassDependency2}, correlated_view_masks::AbstractArray; allocator, next, flags) -> RenderPass\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.RenderPass-Tuple{Any, AbstractArray{_AttachmentDescription}, AbstractArray{_SubpassDescription}, AbstractArray{_SubpassDependency}, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.RenderPass","text":"RenderPass(device, attachments::AbstractArray{_AttachmentDescription}, subpasses::AbstractArray{_SubpassDescription}, dependencies::AbstractArray{_SubpassDependency}, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0)\n\nRenderPass(device, attachments::AbstractArray{_AttachmentDescription}, subpasses::AbstractArray{_SubpassDescription}, dependencies::AbstractArray{_SubpassDependency}, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags) -> RenderPass\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.RenderPass-Tuple{Any, AbstractArray{_AttachmentDescription}, AbstractArray{_SubpassDescription}, AbstractArray{_SubpassDependency}}","page":"API","title":"Vulkan.RenderPass","text":"RenderPass(device, attachments::AbstractArray{_AttachmentDescription}, subpasses::AbstractArray{_SubpassDescription}, dependencies::AbstractArray{_SubpassDependency}; allocator = C_NULL, next = C_NULL, flags = 0)\n\nRenderPass(device, attachments::AbstractArray{_AttachmentDescription}, subpasses::AbstractArray{_SubpassDescription}, dependencies::AbstractArray{_SubpassDependency}; allocator, next, flags) -> RenderPass\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.RenderPassAttachmentBeginInfo","page":"API","title":"Vulkan.RenderPassAttachmentBeginInfo","text":"High-level wrapper for VkRenderPassAttachmentBeginInfo.\n\nAPI documentation\n\nstruct RenderPassAttachmentBeginInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nattachments::Vector{ImageView}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.RenderPassAttachmentBeginInfo-Tuple{AbstractArray}","page":"API","title":"Vulkan.RenderPassAttachmentBeginInfo","text":"RenderPassAttachmentBeginInfo(attachments::AbstractArray{ImageView}; next = C_NULL)\n\nArguments:\n\nattachments::AbstractArray{ImageView}\nnext: defaults to C_NULL\n\nAPI documentation\n\nRenderPassAttachmentBeginInfo(attachments::AbstractArray; next) -> RenderPassAttachmentBeginInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.RenderPassBeginInfo","page":"API","title":"Vulkan.RenderPassBeginInfo","text":"High-level wrapper for VkRenderPassBeginInfo.\n\nAPI documentation\n\nstruct RenderPassBeginInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nrender_pass::RenderPass\nframebuffer::Framebuffer\nrender_area::Rect2D\nclear_values::Vector{ClearValue}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.RenderPassBeginInfo-Tuple{RenderPass, Framebuffer, Rect2D, AbstractArray}","page":"API","title":"Vulkan.RenderPassBeginInfo","text":"RenderPassBeginInfo(render_pass::RenderPass, framebuffer::Framebuffer, render_area::Rect2D, clear_values::AbstractArray{ClearValue}; next = C_NULL)\n\nArguments:\n\nrender_pass::RenderPass\nframebuffer::Framebuffer\nrender_area::Rect2D\nclear_values::AbstractArray{ClearValue}\nnext: defaults to C_NULL\n\nAPI documentation\n\nRenderPassBeginInfo(render_pass::RenderPass, framebuffer::Framebuffer, render_area::Rect2D, clear_values::AbstractArray; next) -> RenderPassBeginInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.RenderPassCreateInfo","page":"API","title":"Vulkan.RenderPassCreateInfo","text":"High-level wrapper for VkRenderPassCreateInfo.\n\nAPI documentation\n\nstruct RenderPassCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::RenderPassCreateFlag\nattachments::Vector{AttachmentDescription}\nsubpasses::Vector{SubpassDescription}\ndependencies::Vector{SubpassDependency}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.RenderPassCreateInfo-Tuple{AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.RenderPassCreateInfo","text":"RenderPassCreateInfo(attachments::AbstractArray{AttachmentDescription}, subpasses::AbstractArray{SubpassDescription}, dependencies::AbstractArray{SubpassDependency}; next = C_NULL, flags = 0)\n\nArguments:\n\nattachments::AbstractArray{AttachmentDescription}\nsubpasses::AbstractArray{SubpassDescription}\ndependencies::AbstractArray{SubpassDependency}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nRenderPassCreateInfo(attachments::AbstractArray, subpasses::AbstractArray, dependencies::AbstractArray; next, flags) -> RenderPassCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.RenderPassCreateInfo2","page":"API","title":"Vulkan.RenderPassCreateInfo2","text":"High-level wrapper for VkRenderPassCreateInfo2.\n\nAPI documentation\n\nstruct RenderPassCreateInfo2 <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::RenderPassCreateFlag\nattachments::Vector{AttachmentDescription2}\nsubpasses::Vector{SubpassDescription2}\ndependencies::Vector{SubpassDependency2}\ncorrelated_view_masks::Vector{UInt32}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.RenderPassCreateInfo2-NTuple{4, AbstractArray}","page":"API","title":"Vulkan.RenderPassCreateInfo2","text":"RenderPassCreateInfo2(attachments::AbstractArray{AttachmentDescription2}, subpasses::AbstractArray{SubpassDescription2}, dependencies::AbstractArray{SubpassDependency2}, correlated_view_masks::AbstractArray{<:Integer}; next = C_NULL, flags = 0)\n\nArguments:\n\nattachments::AbstractArray{AttachmentDescription2}\nsubpasses::AbstractArray{SubpassDescription2}\ndependencies::AbstractArray{SubpassDependency2}\ncorrelated_view_masks::AbstractArray{<:Integer}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nRenderPassCreateInfo2(attachments::AbstractArray, subpasses::AbstractArray, dependencies::AbstractArray, correlated_view_masks::AbstractArray; next, flags) -> RenderPassCreateInfo2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.RenderPassFragmentDensityMapCreateInfoEXT","page":"API","title":"Vulkan.RenderPassFragmentDensityMapCreateInfoEXT","text":"High-level wrapper for VkRenderPassFragmentDensityMapCreateInfoEXT.\n\nExtension: VK_EXT_fragment_density_map\n\nAPI documentation\n\nstruct RenderPassFragmentDensityMapCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nfragment_density_map_attachment::AttachmentReference\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.RenderPassFragmentDensityMapCreateInfoEXT-Tuple{AttachmentReference}","page":"API","title":"Vulkan.RenderPassFragmentDensityMapCreateInfoEXT","text":"RenderPassFragmentDensityMapCreateInfoEXT(fragment_density_map_attachment::AttachmentReference; next = C_NULL)\n\nExtension: VK_EXT_fragment_density_map\n\nArguments:\n\nfragment_density_map_attachment::AttachmentReference\nnext: defaults to C_NULL\n\nAPI documentation\n\nRenderPassFragmentDensityMapCreateInfoEXT(fragment_density_map_attachment::AttachmentReference; next) -> RenderPassFragmentDensityMapCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.RenderPassInputAttachmentAspectCreateInfo","page":"API","title":"Vulkan.RenderPassInputAttachmentAspectCreateInfo","text":"High-level wrapper for VkRenderPassInputAttachmentAspectCreateInfo.\n\nAPI documentation\n\nstruct RenderPassInputAttachmentAspectCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\naspect_references::Vector{InputAttachmentAspectReference}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.RenderPassInputAttachmentAspectCreateInfo-Tuple{AbstractArray}","page":"API","title":"Vulkan.RenderPassInputAttachmentAspectCreateInfo","text":"RenderPassInputAttachmentAspectCreateInfo(aspect_references::AbstractArray{InputAttachmentAspectReference}; next = C_NULL)\n\nArguments:\n\naspect_references::AbstractArray{InputAttachmentAspectReference}\nnext: defaults to C_NULL\n\nAPI documentation\n\nRenderPassInputAttachmentAspectCreateInfo(aspect_references::AbstractArray; next) -> RenderPassInputAttachmentAspectCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.RenderPassMultiviewCreateInfo","page":"API","title":"Vulkan.RenderPassMultiviewCreateInfo","text":"High-level wrapper for VkRenderPassMultiviewCreateInfo.\n\nAPI documentation\n\nstruct RenderPassMultiviewCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nview_masks::Vector{UInt32}\nview_offsets::Vector{Int32}\ncorrelation_masks::Vector{UInt32}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.RenderPassMultiviewCreateInfo-Tuple{AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.RenderPassMultiviewCreateInfo","text":"RenderPassMultiviewCreateInfo(view_masks::AbstractArray{<:Integer}, view_offsets::AbstractArray{<:Integer}, correlation_masks::AbstractArray{<:Integer}; next = C_NULL)\n\nArguments:\n\nview_masks::AbstractArray{<:Integer}\nview_offsets::AbstractArray{<:Integer}\ncorrelation_masks::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\nAPI documentation\n\nRenderPassMultiviewCreateInfo(view_masks::AbstractArray, view_offsets::AbstractArray, correlation_masks::AbstractArray; next) -> RenderPassMultiviewCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.RenderPassSampleLocationsBeginInfoEXT","page":"API","title":"Vulkan.RenderPassSampleLocationsBeginInfoEXT","text":"High-level wrapper for VkRenderPassSampleLocationsBeginInfoEXT.\n\nExtension: VK_EXT_sample_locations\n\nAPI documentation\n\nstruct RenderPassSampleLocationsBeginInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nattachment_initial_sample_locations::Vector{AttachmentSampleLocationsEXT}\npost_subpass_sample_locations::Vector{SubpassSampleLocationsEXT}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.RenderPassSampleLocationsBeginInfoEXT-Tuple{AbstractArray, AbstractArray}","page":"API","title":"Vulkan.RenderPassSampleLocationsBeginInfoEXT","text":"RenderPassSampleLocationsBeginInfoEXT(attachment_initial_sample_locations::AbstractArray{AttachmentSampleLocationsEXT}, post_subpass_sample_locations::AbstractArray{SubpassSampleLocationsEXT}; next = C_NULL)\n\nExtension: VK_EXT_sample_locations\n\nArguments:\n\nattachment_initial_sample_locations::AbstractArray{AttachmentSampleLocationsEXT}\npost_subpass_sample_locations::AbstractArray{SubpassSampleLocationsEXT}\nnext: defaults to C_NULL\n\nAPI documentation\n\nRenderPassSampleLocationsBeginInfoEXT(attachment_initial_sample_locations::AbstractArray, post_subpass_sample_locations::AbstractArray; next) -> RenderPassSampleLocationsBeginInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.RenderPassTransformBeginInfoQCOM","page":"API","title":"Vulkan.RenderPassTransformBeginInfoQCOM","text":"High-level wrapper for VkRenderPassTransformBeginInfoQCOM.\n\nExtension: VK_QCOM_render_pass_transform\n\nAPI documentation\n\nstruct RenderPassTransformBeginInfoQCOM <: Vulkan.HighLevelStruct\n\nnext::Any\ntransform::SurfaceTransformFlagKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.RenderPassTransformBeginInfoQCOM-Tuple{SurfaceTransformFlagKHR}","page":"API","title":"Vulkan.RenderPassTransformBeginInfoQCOM","text":"RenderPassTransformBeginInfoQCOM(transform::SurfaceTransformFlagKHR; next = C_NULL)\n\nExtension: VK_QCOM_render_pass_transform\n\nArguments:\n\ntransform::SurfaceTransformFlagKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\nRenderPassTransformBeginInfoQCOM(transform::SurfaceTransformFlagKHR; next) -> RenderPassTransformBeginInfoQCOM\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ResolveImageInfo2KHR","page":"API","title":"Vulkan.ResolveImageInfo2KHR","text":"High-level wrapper for VkResolveImageInfo2KHR.\n\nExtension: VK_KHR_copy_commands2\n\nAPI documentation\n\nstruct ResolveImageInfo2KHR <: Vulkan.HighLevelStruct\n\nnext::Any\nsrc_image::Image\nsrc_image_layout::ImageLayout\ndst_image::Image\ndst_image_layout::ImageLayout\nregions::Vector{ImageResolve2KHR}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ResolveImageInfo2KHR-Tuple{Image, ImageLayout, Image, ImageLayout, AbstractArray}","page":"API","title":"Vulkan.ResolveImageInfo2KHR","text":"ResolveImageInfo2KHR(src_image::Image, src_image_layout::ImageLayout, dst_image::Image, dst_image_layout::ImageLayout, regions::AbstractArray{ImageResolve2KHR}; next = C_NULL)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\nsrc_image::Image\nsrc_image_layout::ImageLayout\ndst_image::Image\ndst_image_layout::ImageLayout\nregions::AbstractArray{ImageResolve2KHR}\nnext: defaults to C_NULL\n\nAPI documentation\n\nResolveImageInfo2KHR(src_image::Image, src_image_layout::ImageLayout, dst_image::Image, dst_image_layout::ImageLayout, regions::AbstractArray; next) -> ResolveImageInfo2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SampleLocationEXT","page":"API","title":"Vulkan.SampleLocationEXT","text":"High-level wrapper for VkSampleLocationEXT.\n\nExtension: VK_EXT_sample_locations\n\nAPI documentation\n\nstruct SampleLocationEXT <: Vulkan.HighLevelStruct\n\nx::Float32\ny::Float32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SampleLocationsInfoEXT","page":"API","title":"Vulkan.SampleLocationsInfoEXT","text":"High-level wrapper for VkSampleLocationsInfoEXT.\n\nExtension: VK_EXT_sample_locations\n\nAPI documentation\n\nstruct SampleLocationsInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nsample_locations_per_pixel::SampleCountFlag\nsample_location_grid_size::Extent2D\nsample_locations::Vector{SampleLocationEXT}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SampleLocationsInfoEXT-Tuple{SampleCountFlag, Extent2D, AbstractArray}","page":"API","title":"Vulkan.SampleLocationsInfoEXT","text":"SampleLocationsInfoEXT(sample_locations_per_pixel::SampleCountFlag, sample_location_grid_size::Extent2D, sample_locations::AbstractArray{SampleLocationEXT}; next = C_NULL)\n\nExtension: VK_EXT_sample_locations\n\nArguments:\n\nsample_locations_per_pixel::SampleCountFlag\nsample_location_grid_size::Extent2D\nsample_locations::AbstractArray{SampleLocationEXT}\nnext: defaults to C_NULL\n\nAPI documentation\n\nSampleLocationsInfoEXT(sample_locations_per_pixel::SampleCountFlag, sample_location_grid_size::Extent2D, sample_locations::AbstractArray; next) -> SampleLocationsInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.Sampler-Tuple{Any, Filter, Filter, SamplerMipmapMode, SamplerAddressMode, SamplerAddressMode, SamplerAddressMode, Real, Bool, Real, Bool, CompareOp, Real, Real, BorderColor, Bool, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.Sampler","text":"Sampler(device, mag_filter::Filter, min_filter::Filter, mipmap_mode::SamplerMipmapMode, address_mode_u::SamplerAddressMode, address_mode_v::SamplerAddressMode, address_mode_w::SamplerAddressMode, mip_lod_bias::Real, anisotropy_enable::Bool, max_anisotropy::Real, compare_enable::Bool, compare_op::CompareOp, min_lod::Real, max_lod::Real, border_color::BorderColor, unnormalized_coordinates::Bool, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0)\n\nSampler(device, mag_filter::Filter, min_filter::Filter, mipmap_mode::SamplerMipmapMode, address_mode_u::SamplerAddressMode, address_mode_v::SamplerAddressMode, address_mode_w::SamplerAddressMode, mip_lod_bias::Real, anisotropy_enable::Bool, max_anisotropy::Real, compare_enable::Bool, compare_op::CompareOp, min_lod::Real, max_lod::Real, border_color::BorderColor, unnormalized_coordinates::Bool, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags) -> Sampler\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.Sampler-Tuple{Any, Filter, Filter, SamplerMipmapMode, SamplerAddressMode, SamplerAddressMode, SamplerAddressMode, Real, Bool, Real, Bool, CompareOp, Real, Real, BorderColor, Bool}","page":"API","title":"Vulkan.Sampler","text":"Sampler(device, mag_filter::Filter, min_filter::Filter, mipmap_mode::SamplerMipmapMode, address_mode_u::SamplerAddressMode, address_mode_v::SamplerAddressMode, address_mode_w::SamplerAddressMode, mip_lod_bias::Real, anisotropy_enable::Bool, max_anisotropy::Real, compare_enable::Bool, compare_op::CompareOp, min_lod::Real, max_lod::Real, border_color::BorderColor, unnormalized_coordinates::Bool; allocator = C_NULL, next = C_NULL, flags = 0)\n\nSampler(device, mag_filter::Filter, min_filter::Filter, mipmap_mode::SamplerMipmapMode, address_mode_u::SamplerAddressMode, address_mode_v::SamplerAddressMode, address_mode_w::SamplerAddressMode, mip_lod_bias::Real, anisotropy_enable::Bool, max_anisotropy::Real, compare_enable::Bool, compare_op::CompareOp, min_lod::Real, max_lod::Real, border_color::BorderColor, unnormalized_coordinates::Bool; allocator, next, flags) -> Sampler\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SamplerCreateInfo","page":"API","title":"Vulkan.SamplerCreateInfo","text":"High-level wrapper for VkSamplerCreateInfo.\n\nAPI documentation\n\nstruct SamplerCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::SamplerCreateFlag\nmag_filter::Filter\nmin_filter::Filter\nmipmap_mode::SamplerMipmapMode\naddress_mode_u::SamplerAddressMode\naddress_mode_v::SamplerAddressMode\naddress_mode_w::SamplerAddressMode\nmip_lod_bias::Float32\nanisotropy_enable::Bool\nmax_anisotropy::Float32\ncompare_enable::Bool\ncompare_op::CompareOp\nmin_lod::Float32\nmax_lod::Float32\nborder_color::BorderColor\nunnormalized_coordinates::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SamplerCreateInfo-Tuple{Filter, Filter, SamplerMipmapMode, SamplerAddressMode, SamplerAddressMode, SamplerAddressMode, Real, Bool, Real, Bool, CompareOp, Real, Real, BorderColor, Bool}","page":"API","title":"Vulkan.SamplerCreateInfo","text":"SamplerCreateInfo(mag_filter::Filter, min_filter::Filter, mipmap_mode::SamplerMipmapMode, address_mode_u::SamplerAddressMode, address_mode_v::SamplerAddressMode, address_mode_w::SamplerAddressMode, mip_lod_bias::Real, anisotropy_enable::Bool, max_anisotropy::Real, compare_enable::Bool, compare_op::CompareOp, min_lod::Real, max_lod::Real, border_color::BorderColor, unnormalized_coordinates::Bool; next = C_NULL, flags = 0)\n\nArguments:\n\nmag_filter::Filter\nmin_filter::Filter\nmipmap_mode::SamplerMipmapMode\naddress_mode_u::SamplerAddressMode\naddress_mode_v::SamplerAddressMode\naddress_mode_w::SamplerAddressMode\nmip_lod_bias::Real\nanisotropy_enable::Bool\nmax_anisotropy::Real\ncompare_enable::Bool\ncompare_op::CompareOp\nmin_lod::Real\nmax_lod::Real\nborder_color::BorderColor\nunnormalized_coordinates::Bool\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nSamplerCreateInfo(mag_filter::Filter, min_filter::Filter, mipmap_mode::SamplerMipmapMode, address_mode_u::SamplerAddressMode, address_mode_v::SamplerAddressMode, address_mode_w::SamplerAddressMode, mip_lod_bias::Real, anisotropy_enable::Bool, max_anisotropy::Real, compare_enable::Bool, compare_op::CompareOp, min_lod::Real, max_lod::Real, border_color::BorderColor, unnormalized_coordinates::Bool; next, flags) -> SamplerCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SamplerCustomBorderColorCreateInfoEXT","page":"API","title":"Vulkan.SamplerCustomBorderColorCreateInfoEXT","text":"High-level wrapper for VkSamplerCustomBorderColorCreateInfoEXT.\n\nExtension: VK_EXT_custom_border_color\n\nAPI documentation\n\nstruct SamplerCustomBorderColorCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\ncustom_border_color::ClearColorValue\nformat::Format\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SamplerCustomBorderColorCreateInfoEXT-Tuple{ClearColorValue, Format}","page":"API","title":"Vulkan.SamplerCustomBorderColorCreateInfoEXT","text":"SamplerCustomBorderColorCreateInfoEXT(custom_border_color::ClearColorValue, format::Format; next = C_NULL)\n\nExtension: VK_EXT_custom_border_color\n\nArguments:\n\ncustom_border_color::ClearColorValue\nformat::Format\nnext: defaults to C_NULL\n\nAPI documentation\n\nSamplerCustomBorderColorCreateInfoEXT(custom_border_color::ClearColorValue, format::Format; next) -> SamplerCustomBorderColorCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SamplerReductionModeCreateInfo","page":"API","title":"Vulkan.SamplerReductionModeCreateInfo","text":"High-level wrapper for VkSamplerReductionModeCreateInfo.\n\nAPI documentation\n\nstruct SamplerReductionModeCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nreduction_mode::SamplerReductionMode\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SamplerReductionModeCreateInfo-Tuple{SamplerReductionMode}","page":"API","title":"Vulkan.SamplerReductionModeCreateInfo","text":"SamplerReductionModeCreateInfo(reduction_mode::SamplerReductionMode; next = C_NULL)\n\nArguments:\n\nreduction_mode::SamplerReductionMode\nnext: defaults to C_NULL\n\nAPI documentation\n\nSamplerReductionModeCreateInfo(reduction_mode::SamplerReductionMode; next) -> SamplerReductionModeCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SamplerYcbcrConversion-Tuple{Any, Format, SamplerYcbcrModelConversion, SamplerYcbcrRange, _ComponentMapping, ChromaLocation, ChromaLocation, Filter, Bool, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.SamplerYcbcrConversion","text":"SamplerYcbcrConversion(device, format::Format, ycbcr_model::SamplerYcbcrModelConversion, ycbcr_range::SamplerYcbcrRange, components::_ComponentMapping, x_chroma_offset::ChromaLocation, y_chroma_offset::ChromaLocation, chroma_filter::Filter, force_explicit_reconstruction::Bool, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL)\n\nSamplerYcbcrConversion(device, format::Format, ycbcr_model::SamplerYcbcrModelConversion, ycbcr_range::SamplerYcbcrRange, components::_ComponentMapping, x_chroma_offset::ChromaLocation, y_chroma_offset::ChromaLocation, chroma_filter::Filter, force_explicit_reconstruction::Bool, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next) -> SamplerYcbcrConversion\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SamplerYcbcrConversion-Tuple{Any, Format, SamplerYcbcrModelConversion, SamplerYcbcrRange, _ComponentMapping, ChromaLocation, ChromaLocation, Filter, Bool}","page":"API","title":"Vulkan.SamplerYcbcrConversion","text":"SamplerYcbcrConversion(device, format::Format, ycbcr_model::SamplerYcbcrModelConversion, ycbcr_range::SamplerYcbcrRange, components::_ComponentMapping, x_chroma_offset::ChromaLocation, y_chroma_offset::ChromaLocation, chroma_filter::Filter, force_explicit_reconstruction::Bool; allocator = C_NULL, next = C_NULL)\n\nSamplerYcbcrConversion(device, format::Format, ycbcr_model::SamplerYcbcrModelConversion, ycbcr_range::SamplerYcbcrRange, components::_ComponentMapping, x_chroma_offset::ChromaLocation, y_chroma_offset::ChromaLocation, chroma_filter::Filter, force_explicit_reconstruction::Bool; allocator, next) -> SamplerYcbcrConversion\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SamplerYcbcrConversionCreateInfo","page":"API","title":"Vulkan.SamplerYcbcrConversionCreateInfo","text":"High-level wrapper for VkSamplerYcbcrConversionCreateInfo.\n\nAPI documentation\n\nstruct SamplerYcbcrConversionCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nformat::Format\nycbcr_model::SamplerYcbcrModelConversion\nycbcr_range::SamplerYcbcrRange\ncomponents::ComponentMapping\nx_chroma_offset::ChromaLocation\ny_chroma_offset::ChromaLocation\nchroma_filter::Filter\nforce_explicit_reconstruction::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SamplerYcbcrConversionCreateInfo-Tuple{Format, SamplerYcbcrModelConversion, SamplerYcbcrRange, ComponentMapping, ChromaLocation, ChromaLocation, Filter, Bool}","page":"API","title":"Vulkan.SamplerYcbcrConversionCreateInfo","text":"SamplerYcbcrConversionCreateInfo(format::Format, ycbcr_model::SamplerYcbcrModelConversion, ycbcr_range::SamplerYcbcrRange, components::ComponentMapping, x_chroma_offset::ChromaLocation, y_chroma_offset::ChromaLocation, chroma_filter::Filter, force_explicit_reconstruction::Bool; next = C_NULL)\n\nArguments:\n\nformat::Format\nycbcr_model::SamplerYcbcrModelConversion\nycbcr_range::SamplerYcbcrRange\ncomponents::ComponentMapping\nx_chroma_offset::ChromaLocation\ny_chroma_offset::ChromaLocation\nchroma_filter::Filter\nforce_explicit_reconstruction::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nSamplerYcbcrConversionCreateInfo(format::Format, ycbcr_model::SamplerYcbcrModelConversion, ycbcr_range::SamplerYcbcrRange, components::ComponentMapping, x_chroma_offset::ChromaLocation, y_chroma_offset::ChromaLocation, chroma_filter::Filter, force_explicit_reconstruction::Bool; next) -> SamplerYcbcrConversionCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SamplerYcbcrConversionImageFormatProperties","page":"API","title":"Vulkan.SamplerYcbcrConversionImageFormatProperties","text":"High-level wrapper for VkSamplerYcbcrConversionImageFormatProperties.\n\nAPI documentation\n\nstruct SamplerYcbcrConversionImageFormatProperties <: Vulkan.HighLevelStruct\n\nnext::Any\ncombined_image_sampler_descriptor_count::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SamplerYcbcrConversionImageFormatProperties-Tuple{Integer}","page":"API","title":"Vulkan.SamplerYcbcrConversionImageFormatProperties","text":"SamplerYcbcrConversionImageFormatProperties(combined_image_sampler_descriptor_count::Integer; next = C_NULL)\n\nArguments:\n\ncombined_image_sampler_descriptor_count::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nSamplerYcbcrConversionImageFormatProperties(combined_image_sampler_descriptor_count::Integer; next) -> SamplerYcbcrConversionImageFormatProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SamplerYcbcrConversionInfo","page":"API","title":"Vulkan.SamplerYcbcrConversionInfo","text":"High-level wrapper for VkSamplerYcbcrConversionInfo.\n\nAPI documentation\n\nstruct SamplerYcbcrConversionInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nconversion::SamplerYcbcrConversion\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SamplerYcbcrConversionInfo-Tuple{SamplerYcbcrConversion}","page":"API","title":"Vulkan.SamplerYcbcrConversionInfo","text":"SamplerYcbcrConversionInfo(conversion::SamplerYcbcrConversion; next = C_NULL)\n\nArguments:\n\nconversion::SamplerYcbcrConversion\nnext: defaults to C_NULL\n\nAPI documentation\n\nSamplerYcbcrConversionInfo(conversion::SamplerYcbcrConversion; next) -> SamplerYcbcrConversionInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.Semaphore-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.Semaphore","text":"Semaphore(device, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0)\n\nSemaphore(device, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags) -> Semaphore\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.Semaphore-Tuple{Any}","page":"API","title":"Vulkan.Semaphore","text":"Semaphore(device; allocator = C_NULL, next = C_NULL, flags = 0)\n\nSemaphore(device; allocator, next, flags) -> Semaphore\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SemaphoreCreateInfo","page":"API","title":"Vulkan.SemaphoreCreateInfo","text":"High-level wrapper for VkSemaphoreCreateInfo.\n\nAPI documentation\n\nstruct SemaphoreCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SemaphoreCreateInfo-Tuple{}","page":"API","title":"Vulkan.SemaphoreCreateInfo","text":"SemaphoreCreateInfo(; next = C_NULL, flags = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nSemaphoreCreateInfo(; next, flags) -> SemaphoreCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SemaphoreGetFdInfoKHR","page":"API","title":"Vulkan.SemaphoreGetFdInfoKHR","text":"High-level wrapper for VkSemaphoreGetFdInfoKHR.\n\nExtension: VK_KHR_external_semaphore_fd\n\nAPI documentation\n\nstruct SemaphoreGetFdInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nsemaphore::Semaphore\nhandle_type::ExternalSemaphoreHandleTypeFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SemaphoreGetFdInfoKHR-Tuple{Semaphore, ExternalSemaphoreHandleTypeFlag}","page":"API","title":"Vulkan.SemaphoreGetFdInfoKHR","text":"SemaphoreGetFdInfoKHR(semaphore::Semaphore, handle_type::ExternalSemaphoreHandleTypeFlag; next = C_NULL)\n\nExtension: VK_KHR_external_semaphore_fd\n\nArguments:\n\nsemaphore::Semaphore\nhandle_type::ExternalSemaphoreHandleTypeFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\nSemaphoreGetFdInfoKHR(semaphore::Semaphore, handle_type::ExternalSemaphoreHandleTypeFlag; next) -> SemaphoreGetFdInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SemaphoreSignalInfo","page":"API","title":"Vulkan.SemaphoreSignalInfo","text":"High-level wrapper for VkSemaphoreSignalInfo.\n\nAPI documentation\n\nstruct SemaphoreSignalInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nsemaphore::Semaphore\nvalue::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SemaphoreSignalInfo-Tuple{Semaphore, Integer}","page":"API","title":"Vulkan.SemaphoreSignalInfo","text":"SemaphoreSignalInfo(semaphore::Semaphore, value::Integer; next = C_NULL)\n\nArguments:\n\nsemaphore::Semaphore\nvalue::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nSemaphoreSignalInfo(semaphore::Semaphore, value::Integer; next) -> SemaphoreSignalInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SemaphoreSubmitInfoKHR","page":"API","title":"Vulkan.SemaphoreSubmitInfoKHR","text":"High-level wrapper for VkSemaphoreSubmitInfoKHR.\n\nExtension: VK_KHR_synchronization2\n\nAPI documentation\n\nstruct SemaphoreSubmitInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nsemaphore::Semaphore\nvalue::UInt64\nstage_mask::UInt64\ndevice_index::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SemaphoreSubmitInfoKHR-Tuple{Semaphore, Integer, Integer}","page":"API","title":"Vulkan.SemaphoreSubmitInfoKHR","text":"SemaphoreSubmitInfoKHR(semaphore::Semaphore, value::Integer, device_index::Integer; next = C_NULL, stage_mask = 0)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\nsemaphore::Semaphore\nvalue::Integer\ndevice_index::Integer\nnext: defaults to C_NULL\nstage_mask: defaults to 0\n\nAPI documentation\n\nSemaphoreSubmitInfoKHR(semaphore::Semaphore, value::Integer, device_index::Integer; next, stage_mask) -> SemaphoreSubmitInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SemaphoreTypeCreateInfo","page":"API","title":"Vulkan.SemaphoreTypeCreateInfo","text":"High-level wrapper for VkSemaphoreTypeCreateInfo.\n\nAPI documentation\n\nstruct SemaphoreTypeCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nsemaphore_type::SemaphoreType\ninitial_value::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SemaphoreTypeCreateInfo-Tuple{SemaphoreType, Integer}","page":"API","title":"Vulkan.SemaphoreTypeCreateInfo","text":"SemaphoreTypeCreateInfo(semaphore_type::SemaphoreType, initial_value::Integer; next = C_NULL)\n\nArguments:\n\nsemaphore_type::SemaphoreType\ninitial_value::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nSemaphoreTypeCreateInfo(semaphore_type::SemaphoreType, initial_value::Integer; next) -> SemaphoreTypeCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SemaphoreWaitInfo","page":"API","title":"Vulkan.SemaphoreWaitInfo","text":"High-level wrapper for VkSemaphoreWaitInfo.\n\nAPI documentation\n\nstruct SemaphoreWaitInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::SemaphoreWaitFlag\nsemaphores::Vector{Semaphore}\nvalues::Vector{UInt64}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SemaphoreWaitInfo-Tuple{AbstractArray, AbstractArray}","page":"API","title":"Vulkan.SemaphoreWaitInfo","text":"SemaphoreWaitInfo(semaphores::AbstractArray{Semaphore}, values::AbstractArray{<:Integer}; next = C_NULL, flags = 0)\n\nArguments:\n\nsemaphores::AbstractArray{Semaphore}\nvalues::AbstractArray{<:Integer}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nSemaphoreWaitInfo(semaphores::AbstractArray, values::AbstractArray; next, flags) -> SemaphoreWaitInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SetStateFlagsIndirectCommandNV","page":"API","title":"Vulkan.SetStateFlagsIndirectCommandNV","text":"High-level wrapper for VkSetStateFlagsIndirectCommandNV.\n\nExtension: VK_NV_device_generated_commands\n\nAPI documentation\n\nstruct SetStateFlagsIndirectCommandNV <: Vulkan.HighLevelStruct\n\ndata::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ShaderModule-Tuple{Any, Integer, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.ShaderModule","text":"ShaderModule(device, code_size::Integer, code::AbstractArray{<:Integer}, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0)\n\nShaderModule(device, code_size::Integer, code::AbstractArray, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags) -> ShaderModule\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ShaderModule-Tuple{Any, Integer, AbstractArray}","page":"API","title":"Vulkan.ShaderModule","text":"ShaderModule(device, code_size::Integer, code::AbstractArray{<:Integer}; allocator = C_NULL, next = C_NULL, flags = 0)\n\nShaderModule(device, code_size::Integer, code::AbstractArray; allocator, next, flags) -> ShaderModule\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ShaderModuleCreateInfo","page":"API","title":"Vulkan.ShaderModuleCreateInfo","text":"High-level wrapper for VkShaderModuleCreateInfo.\n\nAPI documentation\n\nstruct ShaderModuleCreateInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::ShaderModuleCreateFlag\ncode_size::UInt64\ncode::Vector{UInt32}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ShaderModuleCreateInfo-Tuple{Integer, AbstractArray}","page":"API","title":"Vulkan.ShaderModuleCreateInfo","text":"ShaderModuleCreateInfo(code_size::Integer, code::AbstractArray{<:Integer}; next = C_NULL, flags = 0)\n\nArguments:\n\ncode_size::Integer\ncode::AbstractArray{<:Integer}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nShaderModuleCreateInfo(code_size::Integer, code::AbstractArray; next, flags) -> ShaderModuleCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ShaderModuleValidationCacheCreateInfoEXT","page":"API","title":"Vulkan.ShaderModuleValidationCacheCreateInfoEXT","text":"High-level wrapper for VkShaderModuleValidationCacheCreateInfoEXT.\n\nExtension: VK_EXT_validation_cache\n\nAPI documentation\n\nstruct ShaderModuleValidationCacheCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nvalidation_cache::ValidationCacheEXT\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ShaderModuleValidationCacheCreateInfoEXT-Tuple{ValidationCacheEXT}","page":"API","title":"Vulkan.ShaderModuleValidationCacheCreateInfoEXT","text":"ShaderModuleValidationCacheCreateInfoEXT(validation_cache::ValidationCacheEXT; next = C_NULL)\n\nExtension: VK_EXT_validation_cache\n\nArguments:\n\nvalidation_cache::ValidationCacheEXT\nnext: defaults to C_NULL\n\nAPI documentation\n\nShaderModuleValidationCacheCreateInfoEXT(validation_cache::ValidationCacheEXT; next) -> ShaderModuleValidationCacheCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ShaderResourceUsageAMD","page":"API","title":"Vulkan.ShaderResourceUsageAMD","text":"High-level wrapper for VkShaderResourceUsageAMD.\n\nExtension: VK_AMD_shader_info\n\nAPI documentation\n\nstruct ShaderResourceUsageAMD <: Vulkan.HighLevelStruct\n\nnum_used_vgprs::UInt32\nnum_used_sgprs::UInt32\nlds_size_per_local_work_group::UInt32\nlds_usage_size_in_bytes::UInt64\nscratch_mem_usage_in_bytes::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ShaderStatisticsInfoAMD","page":"API","title":"Vulkan.ShaderStatisticsInfoAMD","text":"High-level wrapper for VkShaderStatisticsInfoAMD.\n\nExtension: VK_AMD_shader_info\n\nAPI documentation\n\nstruct ShaderStatisticsInfoAMD <: Vulkan.HighLevelStruct\n\nshader_stage_mask::ShaderStageFlag\nresource_usage::ShaderResourceUsageAMD\nnum_physical_vgprs::UInt32\nnum_physical_sgprs::UInt32\nnum_available_vgprs::UInt32\nnum_available_sgprs::UInt32\ncompute_work_group_size::Tuple{UInt32, UInt32, UInt32}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ShadingRatePaletteNV","page":"API","title":"Vulkan.ShadingRatePaletteNV","text":"High-level wrapper for VkShadingRatePaletteNV.\n\nExtension: VK_NV_shading_rate_image\n\nAPI documentation\n\nstruct ShadingRatePaletteNV <: Vulkan.HighLevelStruct\n\nshading_rate_palette_entries::Vector{ShadingRatePaletteEntryNV}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SharedPresentSurfaceCapabilitiesKHR","page":"API","title":"Vulkan.SharedPresentSurfaceCapabilitiesKHR","text":"High-level wrapper for VkSharedPresentSurfaceCapabilitiesKHR.\n\nExtension: VK_KHR_shared_presentable_image\n\nAPI documentation\n\nstruct SharedPresentSurfaceCapabilitiesKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nshared_present_supported_usage_flags::ImageUsageFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SharedPresentSurfaceCapabilitiesKHR-Tuple{}","page":"API","title":"Vulkan.SharedPresentSurfaceCapabilitiesKHR","text":"SharedPresentSurfaceCapabilitiesKHR(; next = C_NULL, shared_present_supported_usage_flags = 0)\n\nExtension: VK_KHR_shared_presentable_image\n\nArguments:\n\nnext: defaults to C_NULL\nshared_present_supported_usage_flags: defaults to 0\n\nAPI documentation\n\nSharedPresentSurfaceCapabilitiesKHR(; next, shared_present_supported_usage_flags) -> SharedPresentSurfaceCapabilitiesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SparseBufferMemoryBindInfo","page":"API","title":"Vulkan.SparseBufferMemoryBindInfo","text":"High-level wrapper for VkSparseBufferMemoryBindInfo.\n\nAPI documentation\n\nstruct SparseBufferMemoryBindInfo <: Vulkan.HighLevelStruct\n\nbuffer::Buffer\nbinds::Vector{SparseMemoryBind}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SparseImageFormatProperties","page":"API","title":"Vulkan.SparseImageFormatProperties","text":"High-level wrapper for VkSparseImageFormatProperties.\n\nAPI documentation\n\nstruct SparseImageFormatProperties <: Vulkan.HighLevelStruct\n\naspect_mask::ImageAspectFlag\nimage_granularity::Extent3D\nflags::SparseImageFormatFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SparseImageFormatProperties-Tuple{Extent3D}","page":"API","title":"Vulkan.SparseImageFormatProperties","text":"SparseImageFormatProperties(image_granularity::Extent3D; aspect_mask = 0, flags = 0)\n\nArguments:\n\nimage_granularity::Extent3D\naspect_mask: defaults to 0\nflags: defaults to 0\n\nAPI documentation\n\nSparseImageFormatProperties(image_granularity::Extent3D; aspect_mask, flags) -> SparseImageFormatProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SparseImageFormatProperties2","page":"API","title":"Vulkan.SparseImageFormatProperties2","text":"High-level wrapper for VkSparseImageFormatProperties2.\n\nAPI documentation\n\nstruct SparseImageFormatProperties2 <: Vulkan.HighLevelStruct\n\nnext::Any\nproperties::SparseImageFormatProperties\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SparseImageFormatProperties2-Tuple{SparseImageFormatProperties}","page":"API","title":"Vulkan.SparseImageFormatProperties2","text":"SparseImageFormatProperties2(properties::SparseImageFormatProperties; next = C_NULL)\n\nArguments:\n\nproperties::SparseImageFormatProperties\nnext: defaults to C_NULL\n\nAPI documentation\n\nSparseImageFormatProperties2(properties::SparseImageFormatProperties; next) -> SparseImageFormatProperties2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SparseImageMemoryBind","page":"API","title":"Vulkan.SparseImageMemoryBind","text":"High-level wrapper for VkSparseImageMemoryBind.\n\nAPI documentation\n\nstruct SparseImageMemoryBind <: Vulkan.HighLevelStruct\n\nsubresource::ImageSubresource\noffset::Offset3D\nextent::Extent3D\nmemory::Union{Ptr{Nothing}, DeviceMemory}\nmemory_offset::UInt64\nflags::SparseMemoryBindFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SparseImageMemoryBind-Tuple{ImageSubresource, Offset3D, Extent3D, Integer}","page":"API","title":"Vulkan.SparseImageMemoryBind","text":"SparseImageMemoryBind(subresource::ImageSubresource, offset::Offset3D, extent::Extent3D, memory_offset::Integer; memory = C_NULL, flags = 0)\n\nArguments:\n\nsubresource::ImageSubresource\noffset::Offset3D\nextent::Extent3D\nmemory_offset::Integer\nmemory: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nSparseImageMemoryBind(subresource::ImageSubresource, offset::Offset3D, extent::Extent3D, memory_offset::Integer; memory, flags) -> SparseImageMemoryBind\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SparseImageMemoryBindInfo","page":"API","title":"Vulkan.SparseImageMemoryBindInfo","text":"High-level wrapper for VkSparseImageMemoryBindInfo.\n\nAPI documentation\n\nstruct SparseImageMemoryBindInfo <: Vulkan.HighLevelStruct\n\nimage::Image\nbinds::Vector{SparseImageMemoryBind}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SparseImageMemoryRequirements","page":"API","title":"Vulkan.SparseImageMemoryRequirements","text":"High-level wrapper for VkSparseImageMemoryRequirements.\n\nAPI documentation\n\nstruct SparseImageMemoryRequirements <: Vulkan.HighLevelStruct\n\nformat_properties::SparseImageFormatProperties\nimage_mip_tail_first_lod::UInt32\nimage_mip_tail_size::UInt64\nimage_mip_tail_offset::UInt64\nimage_mip_tail_stride::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SparseImageMemoryRequirements2","page":"API","title":"Vulkan.SparseImageMemoryRequirements2","text":"High-level wrapper for VkSparseImageMemoryRequirements2.\n\nAPI documentation\n\nstruct SparseImageMemoryRequirements2 <: Vulkan.HighLevelStruct\n\nnext::Any\nmemory_requirements::SparseImageMemoryRequirements\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SparseImageMemoryRequirements2-Tuple{SparseImageMemoryRequirements}","page":"API","title":"Vulkan.SparseImageMemoryRequirements2","text":"SparseImageMemoryRequirements2(memory_requirements::SparseImageMemoryRequirements; next = C_NULL)\n\nArguments:\n\nmemory_requirements::SparseImageMemoryRequirements\nnext: defaults to C_NULL\n\nAPI documentation\n\nSparseImageMemoryRequirements2(memory_requirements::SparseImageMemoryRequirements; next) -> SparseImageMemoryRequirements2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SparseImageOpaqueMemoryBindInfo","page":"API","title":"Vulkan.SparseImageOpaqueMemoryBindInfo","text":"High-level wrapper for VkSparseImageOpaqueMemoryBindInfo.\n\nAPI documentation\n\nstruct SparseImageOpaqueMemoryBindInfo <: Vulkan.HighLevelStruct\n\nimage::Image\nbinds::Vector{SparseMemoryBind}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SparseMemoryBind","page":"API","title":"Vulkan.SparseMemoryBind","text":"High-level wrapper for VkSparseMemoryBind.\n\nAPI documentation\n\nstruct SparseMemoryBind <: Vulkan.HighLevelStruct\n\nresource_offset::UInt64\nsize::UInt64\nmemory::Union{Ptr{Nothing}, DeviceMemory}\nmemory_offset::UInt64\nflags::SparseMemoryBindFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SparseMemoryBind-Tuple{Integer, Integer, Integer}","page":"API","title":"Vulkan.SparseMemoryBind","text":"SparseMemoryBind(resource_offset::Integer, size::Integer, memory_offset::Integer; memory = C_NULL, flags = 0)\n\nArguments:\n\nresource_offset::Integer\nsize::Integer\nmemory_offset::Integer\nmemory: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nSparseMemoryBind(resource_offset::Integer, size::Integer, memory_offset::Integer; memory, flags) -> SparseMemoryBind\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SpecializationInfo","page":"API","title":"Vulkan.SpecializationInfo","text":"High-level wrapper for VkSpecializationInfo.\n\nAPI documentation\n\nstruct SpecializationInfo <: Vulkan.HighLevelStruct\n\nmap_entries::Vector{SpecializationMapEntry}\ndata_size::Union{Ptr{Nothing}, UInt64}\ndata::Ptr{Nothing}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SpecializationInfo-Tuple{AbstractArray, Ptr{Nothing}}","page":"API","title":"Vulkan.SpecializationInfo","text":"SpecializationInfo(map_entries::AbstractArray{SpecializationMapEntry}, data::Ptr{Cvoid}; data_size = C_NULL)\n\nArguments:\n\nmap_entries::AbstractArray{SpecializationMapEntry}\ndata::Ptr{Cvoid}\ndata_size: defaults to C_NULL\n\nAPI documentation\n\nSpecializationInfo(map_entries::AbstractArray, data::Ptr{Nothing}; data_size) -> SpecializationInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SpecializationMapEntry","page":"API","title":"Vulkan.SpecializationMapEntry","text":"High-level wrapper for VkSpecializationMapEntry.\n\nAPI documentation\n\nstruct SpecializationMapEntry <: Vulkan.HighLevelStruct\n\nconstant_id::UInt32\noffset::UInt32\nsize::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.StencilOpState","page":"API","title":"Vulkan.StencilOpState","text":"High-level wrapper for VkStencilOpState.\n\nAPI documentation\n\nstruct StencilOpState <: Vulkan.HighLevelStruct\n\nfail_op::StencilOp\npass_op::StencilOp\ndepth_fail_op::StencilOp\ncompare_op::CompareOp\ncompare_mask::UInt32\nwrite_mask::UInt32\nreference::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.StridedDeviceAddressRegionKHR","page":"API","title":"Vulkan.StridedDeviceAddressRegionKHR","text":"High-level wrapper for VkStridedDeviceAddressRegionKHR.\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nAPI documentation\n\nstruct StridedDeviceAddressRegionKHR <: Vulkan.HighLevelStruct\n\ndevice_address::UInt64\nstride::UInt64\nsize::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.StridedDeviceAddressRegionKHR-Tuple{Integer, Integer}","page":"API","title":"Vulkan.StridedDeviceAddressRegionKHR","text":"StridedDeviceAddressRegionKHR(stride::Integer, size::Integer; device_address = 0)\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\nstride::Integer\nsize::Integer\ndevice_address: defaults to 0\n\nAPI documentation\n\nStridedDeviceAddressRegionKHR(stride::Integer, size::Integer; device_address) -> StridedDeviceAddressRegionKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SubmitInfo","page":"API","title":"Vulkan.SubmitInfo","text":"High-level wrapper for VkSubmitInfo.\n\nAPI documentation\n\nstruct SubmitInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nwait_semaphores::Vector{Semaphore}\nwait_dst_stage_mask::Vector{PipelineStageFlag}\ncommand_buffers::Vector{CommandBuffer}\nsignal_semaphores::Vector{Semaphore}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SubmitInfo-NTuple{4, AbstractArray}","page":"API","title":"Vulkan.SubmitInfo","text":"SubmitInfo(wait_semaphores::AbstractArray{Semaphore}, wait_dst_stage_mask::AbstractArray{PipelineStageFlag}, command_buffers::AbstractArray{CommandBuffer}, signal_semaphores::AbstractArray{Semaphore}; next = C_NULL)\n\nArguments:\n\nwait_semaphores::AbstractArray{Semaphore}\nwait_dst_stage_mask::AbstractArray{PipelineStageFlag}\ncommand_buffers::AbstractArray{CommandBuffer}\nsignal_semaphores::AbstractArray{Semaphore}\nnext: defaults to C_NULL\n\nAPI documentation\n\nSubmitInfo(wait_semaphores::AbstractArray, wait_dst_stage_mask::AbstractArray, command_buffers::AbstractArray, signal_semaphores::AbstractArray; next) -> SubmitInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SubmitInfo2KHR","page":"API","title":"Vulkan.SubmitInfo2KHR","text":"High-level wrapper for VkSubmitInfo2KHR.\n\nExtension: VK_KHR_synchronization2\n\nAPI documentation\n\nstruct SubmitInfo2KHR <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::SubmitFlagKHR\nwait_semaphore_infos::Vector{SemaphoreSubmitInfoKHR}\ncommand_buffer_infos::Vector{CommandBufferSubmitInfoKHR}\nsignal_semaphore_infos::Vector{SemaphoreSubmitInfoKHR}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SubmitInfo2KHR-Tuple{AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.SubmitInfo2KHR","text":"SubmitInfo2KHR(wait_semaphore_infos::AbstractArray{SemaphoreSubmitInfoKHR}, command_buffer_infos::AbstractArray{CommandBufferSubmitInfoKHR}, signal_semaphore_infos::AbstractArray{SemaphoreSubmitInfoKHR}; next = C_NULL, flags = 0)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\nwait_semaphore_infos::AbstractArray{SemaphoreSubmitInfoKHR}\ncommand_buffer_infos::AbstractArray{CommandBufferSubmitInfoKHR}\nsignal_semaphore_infos::AbstractArray{SemaphoreSubmitInfoKHR}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nSubmitInfo2KHR(wait_semaphore_infos::AbstractArray, command_buffer_infos::AbstractArray, signal_semaphore_infos::AbstractArray; next, flags) -> SubmitInfo2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SubpassBeginInfo","page":"API","title":"Vulkan.SubpassBeginInfo","text":"High-level wrapper for VkSubpassBeginInfo.\n\nAPI documentation\n\nstruct SubpassBeginInfo <: Vulkan.HighLevelStruct\n\nnext::Any\ncontents::SubpassContents\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SubpassBeginInfo-Tuple{SubpassContents}","page":"API","title":"Vulkan.SubpassBeginInfo","text":"SubpassBeginInfo(contents::SubpassContents; next = C_NULL)\n\nArguments:\n\ncontents::SubpassContents\nnext: defaults to C_NULL\n\nAPI documentation\n\nSubpassBeginInfo(contents::SubpassContents; next) -> SubpassBeginInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SubpassDependency","page":"API","title":"Vulkan.SubpassDependency","text":"High-level wrapper for VkSubpassDependency.\n\nAPI documentation\n\nstruct SubpassDependency <: Vulkan.HighLevelStruct\n\nsrc_subpass::UInt32\ndst_subpass::UInt32\nsrc_stage_mask::PipelineStageFlag\ndst_stage_mask::PipelineStageFlag\nsrc_access_mask::AccessFlag\ndst_access_mask::AccessFlag\ndependency_flags::DependencyFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SubpassDependency-Tuple{Integer, Integer}","page":"API","title":"Vulkan.SubpassDependency","text":"SubpassDependency(src_subpass::Integer, dst_subpass::Integer; src_stage_mask = 0, dst_stage_mask = 0, src_access_mask = 0, dst_access_mask = 0, dependency_flags = 0)\n\nArguments:\n\nsrc_subpass::Integer\ndst_subpass::Integer\nsrc_stage_mask: defaults to 0\ndst_stage_mask: defaults to 0\nsrc_access_mask: defaults to 0\ndst_access_mask: defaults to 0\ndependency_flags: defaults to 0\n\nAPI documentation\n\nSubpassDependency(src_subpass::Integer, dst_subpass::Integer; src_stage_mask, dst_stage_mask, src_access_mask, dst_access_mask, dependency_flags) -> SubpassDependency\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SubpassDependency2","page":"API","title":"Vulkan.SubpassDependency2","text":"High-level wrapper for VkSubpassDependency2.\n\nAPI documentation\n\nstruct SubpassDependency2 <: Vulkan.HighLevelStruct\n\nnext::Any\nsrc_subpass::UInt32\ndst_subpass::UInt32\nsrc_stage_mask::PipelineStageFlag\ndst_stage_mask::PipelineStageFlag\nsrc_access_mask::AccessFlag\ndst_access_mask::AccessFlag\ndependency_flags::DependencyFlag\nview_offset::Int32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SubpassDependency2-Tuple{Integer, Integer, Integer}","page":"API","title":"Vulkan.SubpassDependency2","text":"SubpassDependency2(src_subpass::Integer, dst_subpass::Integer, view_offset::Integer; next = C_NULL, src_stage_mask = 0, dst_stage_mask = 0, src_access_mask = 0, dst_access_mask = 0, dependency_flags = 0)\n\nArguments:\n\nsrc_subpass::Integer\ndst_subpass::Integer\nview_offset::Integer\nnext: defaults to C_NULL\nsrc_stage_mask: defaults to 0\ndst_stage_mask: defaults to 0\nsrc_access_mask: defaults to 0\ndst_access_mask: defaults to 0\ndependency_flags: defaults to 0\n\nAPI documentation\n\nSubpassDependency2(src_subpass::Integer, dst_subpass::Integer, view_offset::Integer; next, src_stage_mask, dst_stage_mask, src_access_mask, dst_access_mask, dependency_flags) -> SubpassDependency2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SubpassDescription","page":"API","title":"Vulkan.SubpassDescription","text":"High-level wrapper for VkSubpassDescription.\n\nAPI documentation\n\nstruct SubpassDescription <: Vulkan.HighLevelStruct\n\nflags::SubpassDescriptionFlag\npipeline_bind_point::PipelineBindPoint\ninput_attachments::Vector{AttachmentReference}\ncolor_attachments::Vector{AttachmentReference}\nresolve_attachments::Union{Ptr{Nothing}, Vector{AttachmentReference}}\ndepth_stencil_attachment::Union{Ptr{Nothing}, AttachmentReference}\npreserve_attachments::Vector{UInt32}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SubpassDescription-Tuple{PipelineBindPoint, AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.SubpassDescription","text":"SubpassDescription(pipeline_bind_point::PipelineBindPoint, input_attachments::AbstractArray{AttachmentReference}, color_attachments::AbstractArray{AttachmentReference}, preserve_attachments::AbstractArray{<:Integer}; flags = 0, resolve_attachments = C_NULL, depth_stencil_attachment = C_NULL)\n\nArguments:\n\npipeline_bind_point::PipelineBindPoint\ninput_attachments::AbstractArray{AttachmentReference}\ncolor_attachments::AbstractArray{AttachmentReference}\npreserve_attachments::AbstractArray{<:Integer}\nflags: defaults to 0\nresolve_attachments: defaults to C_NULL\ndepth_stencil_attachment: defaults to C_NULL\n\nAPI documentation\n\nSubpassDescription(pipeline_bind_point::PipelineBindPoint, input_attachments::AbstractArray, color_attachments::AbstractArray, preserve_attachments::AbstractArray; flags, resolve_attachments, depth_stencil_attachment) -> SubpassDescription\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SubpassDescription2","page":"API","title":"Vulkan.SubpassDescription2","text":"High-level wrapper for VkSubpassDescription2.\n\nAPI documentation\n\nstruct SubpassDescription2 <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::SubpassDescriptionFlag\npipeline_bind_point::PipelineBindPoint\nview_mask::UInt32\ninput_attachments::Vector{AttachmentReference2}\ncolor_attachments::Vector{AttachmentReference2}\nresolve_attachments::Union{Ptr{Nothing}, Vector{AttachmentReference2}}\ndepth_stencil_attachment::Union{Ptr{Nothing}, AttachmentReference2}\npreserve_attachments::Vector{UInt32}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SubpassDescription2-Tuple{PipelineBindPoint, Integer, AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.SubpassDescription2","text":"SubpassDescription2(pipeline_bind_point::PipelineBindPoint, view_mask::Integer, input_attachments::AbstractArray{AttachmentReference2}, color_attachments::AbstractArray{AttachmentReference2}, preserve_attachments::AbstractArray{<:Integer}; next = C_NULL, flags = 0, resolve_attachments = C_NULL, depth_stencil_attachment = C_NULL)\n\nArguments:\n\npipeline_bind_point::PipelineBindPoint\nview_mask::Integer\ninput_attachments::AbstractArray{AttachmentReference2}\ncolor_attachments::AbstractArray{AttachmentReference2}\npreserve_attachments::AbstractArray{<:Integer}\nnext: defaults to C_NULL\nflags: defaults to 0\nresolve_attachments: defaults to C_NULL\ndepth_stencil_attachment: defaults to C_NULL\n\nAPI documentation\n\nSubpassDescription2(pipeline_bind_point::PipelineBindPoint, view_mask::Integer, input_attachments::AbstractArray, color_attachments::AbstractArray, preserve_attachments::AbstractArray; next, flags, resolve_attachments, depth_stencil_attachment) -> SubpassDescription2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SubpassDescriptionDepthStencilResolve","page":"API","title":"Vulkan.SubpassDescriptionDepthStencilResolve","text":"High-level wrapper for VkSubpassDescriptionDepthStencilResolve.\n\nAPI documentation\n\nstruct SubpassDescriptionDepthStencilResolve <: Vulkan.HighLevelStruct\n\nnext::Any\ndepth_resolve_mode::ResolveModeFlag\nstencil_resolve_mode::ResolveModeFlag\ndepth_stencil_resolve_attachment::Union{Ptr{Nothing}, AttachmentReference2}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SubpassDescriptionDepthStencilResolve-Tuple{ResolveModeFlag, ResolveModeFlag}","page":"API","title":"Vulkan.SubpassDescriptionDepthStencilResolve","text":"SubpassDescriptionDepthStencilResolve(depth_resolve_mode::ResolveModeFlag, stencil_resolve_mode::ResolveModeFlag; next = C_NULL, depth_stencil_resolve_attachment = C_NULL)\n\nArguments:\n\ndepth_resolve_mode::ResolveModeFlag\nstencil_resolve_mode::ResolveModeFlag\nnext: defaults to C_NULL\ndepth_stencil_resolve_attachment: defaults to C_NULL\n\nAPI documentation\n\nSubpassDescriptionDepthStencilResolve(depth_resolve_mode::ResolveModeFlag, stencil_resolve_mode::ResolveModeFlag; next, depth_stencil_resolve_attachment) -> SubpassDescriptionDepthStencilResolve\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SubpassEndInfo","page":"API","title":"Vulkan.SubpassEndInfo","text":"High-level wrapper for VkSubpassEndInfo.\n\nAPI documentation\n\nstruct SubpassEndInfo <: Vulkan.HighLevelStruct\n\nnext::Any\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SubpassEndInfo-Tuple{}","page":"API","title":"Vulkan.SubpassEndInfo","text":"SubpassEndInfo(; next = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\n\nAPI documentation\n\nSubpassEndInfo(; next) -> SubpassEndInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SubpassSampleLocationsEXT","page":"API","title":"Vulkan.SubpassSampleLocationsEXT","text":"High-level wrapper for VkSubpassSampleLocationsEXT.\n\nExtension: VK_EXT_sample_locations\n\nAPI documentation\n\nstruct SubpassSampleLocationsEXT <: Vulkan.HighLevelStruct\n\nsubpass_index::UInt32\nsample_locations_info::SampleLocationsInfoEXT\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SubresourceLayout","page":"API","title":"Vulkan.SubresourceLayout","text":"High-level wrapper for VkSubresourceLayout.\n\nAPI documentation\n\nstruct SubresourceLayout <: Vulkan.HighLevelStruct\n\noffset::UInt64\nsize::UInt64\nrow_pitch::UInt64\narray_pitch::UInt64\ndepth_pitch::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SurfaceCapabilities2EXT","page":"API","title":"Vulkan.SurfaceCapabilities2EXT","text":"High-level wrapper for VkSurfaceCapabilities2EXT.\n\nExtension: VK_EXT_display_surface_counter\n\nAPI documentation\n\nstruct SurfaceCapabilities2EXT <: Vulkan.HighLevelStruct\n\nnext::Any\nmin_image_count::UInt32\nmax_image_count::UInt32\ncurrent_extent::Extent2D\nmin_image_extent::Extent2D\nmax_image_extent::Extent2D\nmax_image_array_layers::UInt32\nsupported_transforms::SurfaceTransformFlagKHR\ncurrent_transform::SurfaceTransformFlagKHR\nsupported_composite_alpha::CompositeAlphaFlagKHR\nsupported_usage_flags::ImageUsageFlag\nsupported_surface_counters::SurfaceCounterFlagEXT\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SurfaceCapabilities2EXT-Tuple{Integer, Integer, Extent2D, Extent2D, Extent2D, Integer, SurfaceTransformFlagKHR}","page":"API","title":"Vulkan.SurfaceCapabilities2EXT","text":"SurfaceCapabilities2EXT(min_image_count::Integer, max_image_count::Integer, current_extent::Extent2D, min_image_extent::Extent2D, max_image_extent::Extent2D, max_image_array_layers::Integer, current_transform::SurfaceTransformFlagKHR; next = C_NULL, supported_transforms = 0, supported_composite_alpha = 0, supported_usage_flags = 0, supported_surface_counters = 0)\n\nExtension: VK_EXT_display_surface_counter\n\nArguments:\n\nmin_image_count::Integer\nmax_image_count::Integer\ncurrent_extent::Extent2D\nmin_image_extent::Extent2D\nmax_image_extent::Extent2D\nmax_image_array_layers::Integer\ncurrent_transform::SurfaceTransformFlagKHR\nnext: defaults to C_NULL\nsupported_transforms: defaults to 0\nsupported_composite_alpha: defaults to 0\nsupported_usage_flags: defaults to 0\nsupported_surface_counters: defaults to 0\n\nAPI documentation\n\nSurfaceCapabilities2EXT(min_image_count::Integer, max_image_count::Integer, current_extent::Extent2D, min_image_extent::Extent2D, max_image_extent::Extent2D, max_image_array_layers::Integer, current_transform::SurfaceTransformFlagKHR; next, supported_transforms, supported_composite_alpha, supported_usage_flags, supported_surface_counters) -> SurfaceCapabilities2EXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SurfaceCapabilities2KHR","page":"API","title":"Vulkan.SurfaceCapabilities2KHR","text":"High-level wrapper for VkSurfaceCapabilities2KHR.\n\nExtension: VK_KHR_get_surface_capabilities2\n\nAPI documentation\n\nstruct SurfaceCapabilities2KHR <: Vulkan.HighLevelStruct\n\nnext::Any\nsurface_capabilities::SurfaceCapabilitiesKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SurfaceCapabilities2KHR-Tuple{SurfaceCapabilitiesKHR}","page":"API","title":"Vulkan.SurfaceCapabilities2KHR","text":"SurfaceCapabilities2KHR(surface_capabilities::SurfaceCapabilitiesKHR; next = C_NULL)\n\nExtension: VK_KHR_get_surface_capabilities2\n\nArguments:\n\nsurface_capabilities::SurfaceCapabilitiesKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\nSurfaceCapabilities2KHR(surface_capabilities::SurfaceCapabilitiesKHR; next) -> SurfaceCapabilities2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SurfaceCapabilitiesKHR","page":"API","title":"Vulkan.SurfaceCapabilitiesKHR","text":"High-level wrapper for VkSurfaceCapabilitiesKHR.\n\nExtension: VK_KHR_surface\n\nAPI documentation\n\nstruct SurfaceCapabilitiesKHR <: Vulkan.HighLevelStruct\n\nmin_image_count::UInt32\nmax_image_count::UInt32\ncurrent_extent::Extent2D\nmin_image_extent::Extent2D\nmax_image_extent::Extent2D\nmax_image_array_layers::UInt32\nsupported_transforms::SurfaceTransformFlagKHR\ncurrent_transform::SurfaceTransformFlagKHR\nsupported_composite_alpha::CompositeAlphaFlagKHR\nsupported_usage_flags::ImageUsageFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SurfaceCapabilitiesKHR-Tuple{Integer, Integer, Extent2D, Extent2D, Extent2D, Integer, SurfaceTransformFlagKHR}","page":"API","title":"Vulkan.SurfaceCapabilitiesKHR","text":"SurfaceCapabilitiesKHR(min_image_count::Integer, max_image_count::Integer, current_extent::Extent2D, min_image_extent::Extent2D, max_image_extent::Extent2D, max_image_array_layers::Integer, current_transform::SurfaceTransformFlagKHR; supported_transforms = 0, supported_composite_alpha = 0, supported_usage_flags = 0)\n\nExtension: VK_KHR_surface\n\nArguments:\n\nmin_image_count::Integer\nmax_image_count::Integer\ncurrent_extent::Extent2D\nmin_image_extent::Extent2D\nmax_image_extent::Extent2D\nmax_image_array_layers::Integer\ncurrent_transform::SurfaceTransformFlagKHR\nsupported_transforms: defaults to 0\nsupported_composite_alpha: defaults to 0\nsupported_usage_flags: defaults to 0\n\nAPI documentation\n\nSurfaceCapabilitiesKHR(min_image_count::Integer, max_image_count::Integer, current_extent::Extent2D, min_image_extent::Extent2D, max_image_extent::Extent2D, max_image_array_layers::Integer, current_transform::SurfaceTransformFlagKHR; supported_transforms, supported_composite_alpha, supported_usage_flags) -> SurfaceCapabilitiesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SurfaceFormat2KHR","page":"API","title":"Vulkan.SurfaceFormat2KHR","text":"High-level wrapper for VkSurfaceFormat2KHR.\n\nExtension: VK_KHR_get_surface_capabilities2\n\nAPI documentation\n\nstruct SurfaceFormat2KHR <: Vulkan.HighLevelStruct\n\nnext::Any\nsurface_format::SurfaceFormatKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SurfaceFormat2KHR-Tuple{SurfaceFormatKHR}","page":"API","title":"Vulkan.SurfaceFormat2KHR","text":"SurfaceFormat2KHR(surface_format::SurfaceFormatKHR; next = C_NULL)\n\nExtension: VK_KHR_get_surface_capabilities2\n\nArguments:\n\nsurface_format::SurfaceFormatKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\nSurfaceFormat2KHR(surface_format::SurfaceFormatKHR; next) -> SurfaceFormat2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SurfaceFormatKHR","page":"API","title":"Vulkan.SurfaceFormatKHR","text":"High-level wrapper for VkSurfaceFormatKHR.\n\nExtension: VK_KHR_surface\n\nAPI documentation\n\nstruct SurfaceFormatKHR <: Vulkan.HighLevelStruct\n\nformat::Format\ncolor_space::ColorSpaceKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SurfaceProtectedCapabilitiesKHR","page":"API","title":"Vulkan.SurfaceProtectedCapabilitiesKHR","text":"High-level wrapper for VkSurfaceProtectedCapabilitiesKHR.\n\nExtension: VK_KHR_surface_protected_capabilities\n\nAPI documentation\n\nstruct SurfaceProtectedCapabilitiesKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nsupports_protected::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SurfaceProtectedCapabilitiesKHR-Tuple{Bool}","page":"API","title":"Vulkan.SurfaceProtectedCapabilitiesKHR","text":"SurfaceProtectedCapabilitiesKHR(supports_protected::Bool; next = C_NULL)\n\nExtension: VK_KHR_surface_protected_capabilities\n\nArguments:\n\nsupports_protected::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nSurfaceProtectedCapabilitiesKHR(supports_protected::Bool; next) -> SurfaceProtectedCapabilitiesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SwapchainCounterCreateInfoEXT","page":"API","title":"Vulkan.SwapchainCounterCreateInfoEXT","text":"High-level wrapper for VkSwapchainCounterCreateInfoEXT.\n\nExtension: VK_EXT_display_control\n\nAPI documentation\n\nstruct SwapchainCounterCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nsurface_counters::SurfaceCounterFlagEXT\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SwapchainCounterCreateInfoEXT-Tuple{}","page":"API","title":"Vulkan.SwapchainCounterCreateInfoEXT","text":"SwapchainCounterCreateInfoEXT(; next = C_NULL, surface_counters = 0)\n\nExtension: VK_EXT_display_control\n\nArguments:\n\nnext: defaults to C_NULL\nsurface_counters: defaults to 0\n\nAPI documentation\n\nSwapchainCounterCreateInfoEXT(; next, surface_counters) -> SwapchainCounterCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SwapchainCreateInfoKHR","page":"API","title":"Vulkan.SwapchainCreateInfoKHR","text":"High-level wrapper for VkSwapchainCreateInfoKHR.\n\nExtension: VK_KHR_swapchain\n\nAPI documentation\n\nstruct SwapchainCreateInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::SwapchainCreateFlagKHR\nsurface::SurfaceKHR\nmin_image_count::UInt32\nimage_format::Format\nimage_color_space::ColorSpaceKHR\nimage_extent::Extent2D\nimage_array_layers::UInt32\nimage_usage::ImageUsageFlag\nimage_sharing_mode::SharingMode\nqueue_family_indices::Vector{UInt32}\npre_transform::SurfaceTransformFlagKHR\ncomposite_alpha::CompositeAlphaFlagKHR\npresent_mode::PresentModeKHR\nclipped::Bool\nold_swapchain::Union{Ptr{Nothing}, SwapchainKHR}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SwapchainCreateInfoKHR-Tuple{SurfaceKHR, Integer, Format, ColorSpaceKHR, Extent2D, Integer, ImageUsageFlag, SharingMode, AbstractArray, SurfaceTransformFlagKHR, CompositeAlphaFlagKHR, PresentModeKHR, Bool}","page":"API","title":"Vulkan.SwapchainCreateInfoKHR","text":"SwapchainCreateInfoKHR(surface::SurfaceKHR, min_image_count::Integer, image_format::Format, image_color_space::ColorSpaceKHR, image_extent::Extent2D, image_array_layers::Integer, image_usage::ImageUsageFlag, image_sharing_mode::SharingMode, queue_family_indices::AbstractArray{<:Integer}, pre_transform::SurfaceTransformFlagKHR, composite_alpha::CompositeAlphaFlagKHR, present_mode::PresentModeKHR, clipped::Bool; next = C_NULL, flags = 0, old_swapchain = C_NULL)\n\nExtension: VK_KHR_swapchain\n\nArguments:\n\nsurface::SurfaceKHR\nmin_image_count::Integer\nimage_format::Format\nimage_color_space::ColorSpaceKHR\nimage_extent::Extent2D\nimage_array_layers::Integer\nimage_usage::ImageUsageFlag\nimage_sharing_mode::SharingMode\nqueue_family_indices::AbstractArray{<:Integer}\npre_transform::SurfaceTransformFlagKHR\ncomposite_alpha::CompositeAlphaFlagKHR\npresent_mode::PresentModeKHR\nclipped::Bool\nnext: defaults to C_NULL\nflags: defaults to 0\nold_swapchain: defaults to C_NULL\n\nAPI documentation\n\nSwapchainCreateInfoKHR(surface::SurfaceKHR, min_image_count::Integer, image_format::Format, image_color_space::ColorSpaceKHR, image_extent::Extent2D, image_array_layers::Integer, image_usage::ImageUsageFlag, image_sharing_mode::SharingMode, queue_family_indices::AbstractArray, pre_transform::SurfaceTransformFlagKHR, composite_alpha::CompositeAlphaFlagKHR, present_mode::PresentModeKHR, clipped::Bool; next, flags, old_swapchain) -> SwapchainCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SwapchainDisplayNativeHdrCreateInfoAMD","page":"API","title":"Vulkan.SwapchainDisplayNativeHdrCreateInfoAMD","text":"High-level wrapper for VkSwapchainDisplayNativeHdrCreateInfoAMD.\n\nExtension: VK_AMD_display_native_hdr\n\nAPI documentation\n\nstruct SwapchainDisplayNativeHdrCreateInfoAMD <: Vulkan.HighLevelStruct\n\nnext::Any\nlocal_dimming_enable::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.SwapchainDisplayNativeHdrCreateInfoAMD-Tuple{Bool}","page":"API","title":"Vulkan.SwapchainDisplayNativeHdrCreateInfoAMD","text":"SwapchainDisplayNativeHdrCreateInfoAMD(local_dimming_enable::Bool; next = C_NULL)\n\nExtension: VK_AMD_display_native_hdr\n\nArguments:\n\nlocal_dimming_enable::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nSwapchainDisplayNativeHdrCreateInfoAMD(local_dimming_enable::Bool; next) -> SwapchainDisplayNativeHdrCreateInfoAMD\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SwapchainKHR-Tuple{Any, Any, Integer, Format, ColorSpaceKHR, _Extent2D, Integer, ImageUsageFlag, SharingMode, AbstractArray, SurfaceTransformFlagKHR, CompositeAlphaFlagKHR, PresentModeKHR, Bool, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.SwapchainKHR","text":"SwapchainKHR(device, surface, min_image_count::Integer, image_format::Format, image_color_space::ColorSpaceKHR, image_extent::_Extent2D, image_array_layers::Integer, image_usage::ImageUsageFlag, image_sharing_mode::SharingMode, queue_family_indices::AbstractArray{<:Integer}, pre_transform::SurfaceTransformFlagKHR, composite_alpha::CompositeAlphaFlagKHR, present_mode::PresentModeKHR, clipped::Bool, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0, old_swapchain = C_NULL)\n\nSwapchainKHR(device, surface, min_image_count::Integer, image_format::Format, image_color_space::ColorSpaceKHR, image_extent::_Extent2D, image_array_layers::Integer, image_usage::ImageUsageFlag, image_sharing_mode::SharingMode, queue_family_indices::AbstractArray, pre_transform::SurfaceTransformFlagKHR, composite_alpha::CompositeAlphaFlagKHR, present_mode::PresentModeKHR, clipped::Bool, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags, old_swapchain) -> SwapchainKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SwapchainKHR-Tuple{Any, Any, Integer, Format, ColorSpaceKHR, _Extent2D, Integer, ImageUsageFlag, SharingMode, AbstractArray, SurfaceTransformFlagKHR, CompositeAlphaFlagKHR, PresentModeKHR, Bool}","page":"API","title":"Vulkan.SwapchainKHR","text":"SwapchainKHR(device, surface, min_image_count::Integer, image_format::Format, image_color_space::ColorSpaceKHR, image_extent::_Extent2D, image_array_layers::Integer, image_usage::ImageUsageFlag, image_sharing_mode::SharingMode, queue_family_indices::AbstractArray{<:Integer}, pre_transform::SurfaceTransformFlagKHR, composite_alpha::CompositeAlphaFlagKHR, present_mode::PresentModeKHR, clipped::Bool; allocator = C_NULL, next = C_NULL, flags = 0, old_swapchain = C_NULL)\n\nSwapchainKHR(device, surface, min_image_count::Integer, image_format::Format, image_color_space::ColorSpaceKHR, image_extent::_Extent2D, image_array_layers::Integer, image_usage::ImageUsageFlag, image_sharing_mode::SharingMode, queue_family_indices::AbstractArray, pre_transform::SurfaceTransformFlagKHR, composite_alpha::CompositeAlphaFlagKHR, present_mode::PresentModeKHR, clipped::Bool; allocator, next, flags, old_swapchain) -> SwapchainKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.TextureLODGatherFormatPropertiesAMD","page":"API","title":"Vulkan.TextureLODGatherFormatPropertiesAMD","text":"High-level wrapper for VkTextureLODGatherFormatPropertiesAMD.\n\nExtension: VK_AMD_texture_gather_bias_lod\n\nAPI documentation\n\nstruct TextureLODGatherFormatPropertiesAMD <: Vulkan.HighLevelStruct\n\nnext::Any\nsupports_texture_gather_lod_bias_amd::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.TextureLODGatherFormatPropertiesAMD-Tuple{Bool}","page":"API","title":"Vulkan.TextureLODGatherFormatPropertiesAMD","text":"TextureLODGatherFormatPropertiesAMD(supports_texture_gather_lod_bias_amd::Bool; next = C_NULL)\n\nExtension: VK_AMD_texture_gather_bias_lod\n\nArguments:\n\nsupports_texture_gather_lod_bias_amd::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\nTextureLODGatherFormatPropertiesAMD(supports_texture_gather_lod_bias_amd::Bool; next) -> TextureLODGatherFormatPropertiesAMD\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.TimelineSemaphoreSubmitInfo","page":"API","title":"Vulkan.TimelineSemaphoreSubmitInfo","text":"High-level wrapper for VkTimelineSemaphoreSubmitInfo.\n\nAPI documentation\n\nstruct TimelineSemaphoreSubmitInfo <: Vulkan.HighLevelStruct\n\nnext::Any\nwait_semaphore_values::Union{Ptr{Nothing}, Vector{UInt64}}\nsignal_semaphore_values::Union{Ptr{Nothing}, Vector{UInt64}}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.TimelineSemaphoreSubmitInfo-Tuple{}","page":"API","title":"Vulkan.TimelineSemaphoreSubmitInfo","text":"TimelineSemaphoreSubmitInfo(; next = C_NULL, wait_semaphore_values = C_NULL, signal_semaphore_values = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\nwait_semaphore_values: defaults to C_NULL\nsignal_semaphore_values: defaults to C_NULL\n\nAPI documentation\n\nTimelineSemaphoreSubmitInfo(; next, wait_semaphore_values, signal_semaphore_values) -> TimelineSemaphoreSubmitInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.TraceRaysIndirectCommandKHR","page":"API","title":"Vulkan.TraceRaysIndirectCommandKHR","text":"High-level wrapper for VkTraceRaysIndirectCommandKHR.\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nAPI documentation\n\nstruct TraceRaysIndirectCommandKHR <: Vulkan.HighLevelStruct\n\nwidth::UInt32\nheight::UInt32\ndepth::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.TransformMatrixKHR","page":"API","title":"Vulkan.TransformMatrixKHR","text":"High-level wrapper for VkTransformMatrixKHR.\n\nExtension: VK_KHR_acceleration_structure\n\nAPI documentation\n\nstruct TransformMatrixKHR <: Vulkan.HighLevelStruct\n\nmatrix::Tuple{NTuple{4, Float32}, NTuple{4, Float32}, NTuple{4, Float32}}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ValidationCacheCreateInfoEXT","page":"API","title":"Vulkan.ValidationCacheCreateInfoEXT","text":"High-level wrapper for VkValidationCacheCreateInfoEXT.\n\nExtension: VK_EXT_validation_cache\n\nAPI documentation\n\nstruct ValidationCacheCreateInfoEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\ninitial_data_size::Union{Ptr{Nothing}, UInt64}\ninitial_data::Ptr{Nothing}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ValidationCacheCreateInfoEXT-Tuple{Ptr{Nothing}}","page":"API","title":"Vulkan.ValidationCacheCreateInfoEXT","text":"ValidationCacheCreateInfoEXT(initial_data::Ptr{Cvoid}; next = C_NULL, flags = 0, initial_data_size = C_NULL)\n\nExtension: VK_EXT_validation_cache\n\nArguments:\n\ninitial_data::Ptr{Cvoid}\nnext: defaults to C_NULL\nflags: defaults to 0\ninitial_data_size: defaults to C_NULL\n\nAPI documentation\n\nValidationCacheCreateInfoEXT(initial_data::Ptr{Nothing}; next, flags, initial_data_size) -> ValidationCacheCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ValidationCacheEXT-Tuple{Any, Ptr{Nothing}, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.ValidationCacheEXT","text":"ValidationCacheEXT(device, initial_data::Ptr{Cvoid}, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0, initial_data_size = 0)\n\nValidationCacheEXT(device, initial_data::Ptr{Nothing}, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags, initial_data_size) -> ValidationCacheEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ValidationCacheEXT-Tuple{Any, Ptr{Nothing}}","page":"API","title":"Vulkan.ValidationCacheEXT","text":"ValidationCacheEXT(device, initial_data::Ptr{Cvoid}; allocator = C_NULL, next = C_NULL, flags = 0, initial_data_size = 0)\n\nValidationCacheEXT(device, initial_data::Ptr{Nothing}; allocator, next, flags, initial_data_size) -> ValidationCacheEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ValidationFeaturesEXT","page":"API","title":"Vulkan.ValidationFeaturesEXT","text":"High-level wrapper for VkValidationFeaturesEXT.\n\nExtension: VK_EXT_validation_features\n\nAPI documentation\n\nstruct ValidationFeaturesEXT <: Vulkan.HighLevelStruct\n\nnext::Any\nenabled_validation_features::Vector{ValidationFeatureEnableEXT}\ndisabled_validation_features::Vector{ValidationFeatureDisableEXT}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ValidationFeaturesEXT-Tuple{AbstractArray, AbstractArray}","page":"API","title":"Vulkan.ValidationFeaturesEXT","text":"ValidationFeaturesEXT(enabled_validation_features::AbstractArray{ValidationFeatureEnableEXT}, disabled_validation_features::AbstractArray{ValidationFeatureDisableEXT}; next = C_NULL)\n\nExtension: VK_EXT_validation_features\n\nArguments:\n\nenabled_validation_features::AbstractArray{ValidationFeatureEnableEXT}\ndisabled_validation_features::AbstractArray{ValidationFeatureDisableEXT}\nnext: defaults to C_NULL\n\nAPI documentation\n\nValidationFeaturesEXT(enabled_validation_features::AbstractArray, disabled_validation_features::AbstractArray; next) -> ValidationFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ValidationFlagsEXT","page":"API","title":"Vulkan.ValidationFlagsEXT","text":"High-level wrapper for VkValidationFlagsEXT.\n\nExtension: VK_EXT_validation_flags\n\nAPI documentation\n\nstruct ValidationFlagsEXT <: Vulkan.HighLevelStruct\n\nnext::Any\ndisabled_validation_checks::Vector{ValidationCheckEXT}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ValidationFlagsEXT-Tuple{AbstractArray}","page":"API","title":"Vulkan.ValidationFlagsEXT","text":"ValidationFlagsEXT(disabled_validation_checks::AbstractArray{ValidationCheckEXT}; next = C_NULL)\n\nExtension: VK_EXT_validation_flags\n\nArguments:\n\ndisabled_validation_checks::AbstractArray{ValidationCheckEXT}\nnext: defaults to C_NULL\n\nAPI documentation\n\nValidationFlagsEXT(disabled_validation_checks::AbstractArray; next) -> ValidationFlagsEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.VertexInputAttributeDescription","page":"API","title":"Vulkan.VertexInputAttributeDescription","text":"High-level wrapper for VkVertexInputAttributeDescription.\n\nAPI documentation\n\nstruct VertexInputAttributeDescription <: Vulkan.HighLevelStruct\n\nlocation::UInt32\nbinding::UInt32\nformat::Format\noffset::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.VertexInputAttributeDescription2EXT","page":"API","title":"Vulkan.VertexInputAttributeDescription2EXT","text":"High-level wrapper for VkVertexInputAttributeDescription2EXT.\n\nExtension: VK_EXT_vertex_input_dynamic_state\n\nAPI documentation\n\nstruct VertexInputAttributeDescription2EXT <: Vulkan.HighLevelStruct\n\nnext::Any\nlocation::UInt32\nbinding::UInt32\nformat::Format\noffset::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.VertexInputAttributeDescription2EXT-Tuple{Integer, Integer, Format, Integer}","page":"API","title":"Vulkan.VertexInputAttributeDescription2EXT","text":"VertexInputAttributeDescription2EXT(location::Integer, binding::Integer, format::Format, offset::Integer; next = C_NULL)\n\nExtension: VK_EXT_vertex_input_dynamic_state\n\nArguments:\n\nlocation::Integer\nbinding::Integer\nformat::Format\noffset::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nVertexInputAttributeDescription2EXT(location::Integer, binding::Integer, format::Format, offset::Integer; next) -> VertexInputAttributeDescription2EXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.VertexInputBindingDescription","page":"API","title":"Vulkan.VertexInputBindingDescription","text":"High-level wrapper for VkVertexInputBindingDescription.\n\nAPI documentation\n\nstruct VertexInputBindingDescription <: Vulkan.HighLevelStruct\n\nbinding::UInt32\nstride::UInt32\ninput_rate::VertexInputRate\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.VertexInputBindingDescription2EXT","page":"API","title":"Vulkan.VertexInputBindingDescription2EXT","text":"High-level wrapper for VkVertexInputBindingDescription2EXT.\n\nExtension: VK_EXT_vertex_input_dynamic_state\n\nAPI documentation\n\nstruct VertexInputBindingDescription2EXT <: Vulkan.HighLevelStruct\n\nnext::Any\nbinding::UInt32\nstride::UInt32\ninput_rate::VertexInputRate\ndivisor::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.VertexInputBindingDescription2EXT-Tuple{Integer, Integer, VertexInputRate, Integer}","page":"API","title":"Vulkan.VertexInputBindingDescription2EXT","text":"VertexInputBindingDescription2EXT(binding::Integer, stride::Integer, input_rate::VertexInputRate, divisor::Integer; next = C_NULL)\n\nExtension: VK_EXT_vertex_input_dynamic_state\n\nArguments:\n\nbinding::Integer\nstride::Integer\ninput_rate::VertexInputRate\ndivisor::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\nVertexInputBindingDescription2EXT(binding::Integer, stride::Integer, input_rate::VertexInputRate, divisor::Integer; next) -> VertexInputBindingDescription2EXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.VertexInputBindingDivisorDescriptionEXT","page":"API","title":"Vulkan.VertexInputBindingDivisorDescriptionEXT","text":"High-level wrapper for VkVertexInputBindingDivisorDescriptionEXT.\n\nExtension: VK_EXT_vertex_attribute_divisor\n\nAPI documentation\n\nstruct VertexInputBindingDivisorDescriptionEXT <: Vulkan.HighLevelStruct\n\nbinding::UInt32\ndivisor::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.Viewport","page":"API","title":"Vulkan.Viewport","text":"High-level wrapper for VkViewport.\n\nAPI documentation\n\nstruct Viewport <: Vulkan.HighLevelStruct\n\nx::Float32\ny::Float32\nwidth::Float32\nheight::Float32\nmin_depth::Float32\nmax_depth::Float32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ViewportSwizzleNV","page":"API","title":"Vulkan.ViewportSwizzleNV","text":"High-level wrapper for VkViewportSwizzleNV.\n\nExtension: VK_NV_viewport_swizzle\n\nAPI documentation\n\nstruct ViewportSwizzleNV <: Vulkan.HighLevelStruct\n\nx::ViewportCoordinateSwizzleNV\ny::ViewportCoordinateSwizzleNV\nz::ViewportCoordinateSwizzleNV\nw::ViewportCoordinateSwizzleNV\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.ViewportWScalingNV","page":"API","title":"Vulkan.ViewportWScalingNV","text":"High-level wrapper for VkViewportWScalingNV.\n\nExtension: VK_NV_clip_space_w_scaling\n\nAPI documentation\n\nstruct ViewportWScalingNV <: Vulkan.HighLevelStruct\n\nxcoeff::Float32\nycoeff::Float32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.VulkanError","page":"API","title":"Vulkan.VulkanError","text":"Exception type indicating that an API function returned a non-success code.\n\nstruct VulkanError <: Exception\n\nmsg::String\ncode::Any\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.VulkanStruct","page":"API","title":"Vulkan.VulkanStruct","text":"Represents any kind of wrapper structure that was generated from a Vulkan structure. D is a Bool parameter indicating whether the structure has specific dependencies or not.\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.WaylandSurfaceCreateInfoKHR","page":"API","title":"Vulkan.WaylandSurfaceCreateInfoKHR","text":"High-level wrapper for VkWaylandSurfaceCreateInfoKHR.\n\nExtension: VK_KHR_wayland_surface\n\nAPI documentation\n\nstruct WaylandSurfaceCreateInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\ndisplay::Ptr{Nothing}\nsurface::Ptr{Nothing}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.WaylandSurfaceCreateInfoKHR-Tuple{Ptr{Nothing}, Ptr{Nothing}}","page":"API","title":"Vulkan.WaylandSurfaceCreateInfoKHR","text":"WaylandSurfaceCreateInfoKHR(display::Ptr{wl_display}, surface::Ptr{wl_surface}; next = C_NULL, flags = 0)\n\nExtension: VK_KHR_wayland_surface\n\nArguments:\n\ndisplay::Ptr{wl_display}\nsurface::Ptr{wl_surface}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nWaylandSurfaceCreateInfoKHR(display::Ptr{Nothing}, surface::Ptr{Nothing}; next, flags) -> WaylandSurfaceCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.WriteDescriptorSet","page":"API","title":"Vulkan.WriteDescriptorSet","text":"High-level wrapper for VkWriteDescriptorSet.\n\nAPI documentation\n\nstruct WriteDescriptorSet <: Vulkan.HighLevelStruct\n\nnext::Any\ndst_set::DescriptorSet\ndst_binding::UInt32\ndst_array_element::UInt32\ndescriptor_count::UInt32\ndescriptor_type::DescriptorType\nimage_info::Vector{DescriptorImageInfo}\nbuffer_info::Vector{DescriptorBufferInfo}\ntexel_buffer_view::Vector{BufferView}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.WriteDescriptorSet-Tuple{DescriptorSet, Integer, Integer, DescriptorType, AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.WriteDescriptorSet","text":"WriteDescriptorSet(dst_set::DescriptorSet, dst_binding::Integer, dst_array_element::Integer, descriptor_type::DescriptorType, image_info::AbstractArray{DescriptorImageInfo}, buffer_info::AbstractArray{DescriptorBufferInfo}, texel_buffer_view::AbstractArray{BufferView}; next = C_NULL, descriptor_count = max(pointer_length(image_info), pointer_length(buffer_info), pointer_length(texel_buffer_view)))\n\nArguments:\n\ndst_set::DescriptorSet\ndst_binding::Integer\ndst_array_element::Integer\ndescriptor_type::DescriptorType\nimage_info::AbstractArray{DescriptorImageInfo}\nbuffer_info::AbstractArray{DescriptorBufferInfo}\ntexel_buffer_view::AbstractArray{BufferView}\nnext: defaults to C_NULL\ndescriptor_count: defaults to max(pointer_length(image_info), pointer_length(buffer_info), pointer_length(texel_buffer_view))\n\nAPI documentation\n\nWriteDescriptorSet(dst_set::DescriptorSet, dst_binding::Integer, dst_array_element::Integer, descriptor_type::DescriptorType, image_info::AbstractArray, buffer_info::AbstractArray, texel_buffer_view::AbstractArray; next, descriptor_count) -> WriteDescriptorSet\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.WriteDescriptorSetAccelerationStructureKHR","page":"API","title":"Vulkan.WriteDescriptorSetAccelerationStructureKHR","text":"High-level wrapper for VkWriteDescriptorSetAccelerationStructureKHR.\n\nExtension: VK_KHR_acceleration_structure\n\nAPI documentation\n\nstruct WriteDescriptorSetAccelerationStructureKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nacceleration_structures::Vector{AccelerationStructureKHR}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.WriteDescriptorSetAccelerationStructureKHR-Tuple{AbstractArray}","page":"API","title":"Vulkan.WriteDescriptorSetAccelerationStructureKHR","text":"WriteDescriptorSetAccelerationStructureKHR(acceleration_structures::AbstractArray{AccelerationStructureKHR}; next = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\nacceleration_structures::AbstractArray{AccelerationStructureKHR}\nnext: defaults to C_NULL\n\nAPI documentation\n\nWriteDescriptorSetAccelerationStructureKHR(acceleration_structures::AbstractArray; next) -> WriteDescriptorSetAccelerationStructureKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.WriteDescriptorSetAccelerationStructureNV","page":"API","title":"Vulkan.WriteDescriptorSetAccelerationStructureNV","text":"High-level wrapper for VkWriteDescriptorSetAccelerationStructureNV.\n\nExtension: VK_NV_ray_tracing\n\nAPI documentation\n\nstruct WriteDescriptorSetAccelerationStructureNV <: Vulkan.HighLevelStruct\n\nnext::Any\nacceleration_structures::Vector{AccelerationStructureNV}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.WriteDescriptorSetAccelerationStructureNV-Tuple{AbstractArray}","page":"API","title":"Vulkan.WriteDescriptorSetAccelerationStructureNV","text":"WriteDescriptorSetAccelerationStructureNV(acceleration_structures::AbstractArray{AccelerationStructureNV}; next = C_NULL)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\nacceleration_structures::AbstractArray{AccelerationStructureNV}\nnext: defaults to C_NULL\n\nAPI documentation\n\nWriteDescriptorSetAccelerationStructureNV(acceleration_structures::AbstractArray; next) -> WriteDescriptorSetAccelerationStructureNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.WriteDescriptorSetInlineUniformBlockEXT","page":"API","title":"Vulkan.WriteDescriptorSetInlineUniformBlockEXT","text":"High-level wrapper for VkWriteDescriptorSetInlineUniformBlockEXT.\n\nExtension: VK_EXT_inline_uniform_block\n\nAPI documentation\n\nstruct WriteDescriptorSetInlineUniformBlockEXT <: Vulkan.HighLevelStruct\n\nnext::Any\ndata_size::UInt32\ndata::Ptr{Nothing}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.WriteDescriptorSetInlineUniformBlockEXT-Tuple{Integer, Ptr{Nothing}}","page":"API","title":"Vulkan.WriteDescriptorSetInlineUniformBlockEXT","text":"WriteDescriptorSetInlineUniformBlockEXT(data_size::Integer, data::Ptr{Cvoid}; next = C_NULL)\n\nExtension: VK_EXT_inline_uniform_block\n\nArguments:\n\ndata_size::Integer\ndata::Ptr{Cvoid}\nnext: defaults to C_NULL\n\nAPI documentation\n\nWriteDescriptorSetInlineUniformBlockEXT(data_size::Integer, data::Ptr{Nothing}; next) -> WriteDescriptorSetInlineUniformBlockEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.XYColorEXT","page":"API","title":"Vulkan.XYColorEXT","text":"High-level wrapper for VkXYColorEXT.\n\nExtension: VK_EXT_hdr_metadata\n\nAPI documentation\n\nstruct XYColorEXT <: Vulkan.HighLevelStruct\n\nx::Float32\ny::Float32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.XcbSurfaceCreateInfoKHR","page":"API","title":"Vulkan.XcbSurfaceCreateInfoKHR","text":"High-level wrapper for VkXcbSurfaceCreateInfoKHR.\n\nExtension: VK_KHR_xcb_surface\n\nAPI documentation\n\nstruct XcbSurfaceCreateInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\nconnection::Ptr{Nothing}\nwindow::UInt32\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.XcbSurfaceCreateInfoKHR-Tuple{Ptr{Nothing}, UInt32}","page":"API","title":"Vulkan.XcbSurfaceCreateInfoKHR","text":"XcbSurfaceCreateInfoKHR(connection::Ptr{xcb_connection_t}, window::xcb_window_t; next = C_NULL, flags = 0)\n\nExtension: VK_KHR_xcb_surface\n\nArguments:\n\nconnection::Ptr{xcb_connection_t}\nwindow::xcb_window_t\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nXcbSurfaceCreateInfoKHR(connection::Ptr{Nothing}, window::UInt32; next, flags) -> XcbSurfaceCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.XlibSurfaceCreateInfoKHR","page":"API","title":"Vulkan.XlibSurfaceCreateInfoKHR","text":"High-level wrapper for VkXlibSurfaceCreateInfoKHR.\n\nExtension: VK_KHR_xlib_surface\n\nAPI documentation\n\nstruct XlibSurfaceCreateInfoKHR <: Vulkan.HighLevelStruct\n\nnext::Any\nflags::UInt32\ndpy::Ptr{Nothing}\nwindow::UInt64\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.XlibSurfaceCreateInfoKHR-Tuple{Ptr{Nothing}, UInt64}","page":"API","title":"Vulkan.XlibSurfaceCreateInfoKHR","text":"XlibSurfaceCreateInfoKHR(dpy::Ptr{Display}, window::Window; next = C_NULL, flags = 0)\n\nExtension: VK_KHR_xlib_surface\n\nArguments:\n\ndpy::Ptr{Display}\nwindow::Window\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\nXlibSurfaceCreateInfoKHR(dpy::Ptr{Nothing}, window::UInt64; next, flags) -> XlibSurfaceCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._AabbPositionsKHR","page":"API","title":"Vulkan._AabbPositionsKHR","text":"Intermediate wrapper for VkAabbPositionsKHR.\n\nExtension: VKKHRacceleration_structure\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAabbPositionsKHR.html\n\nstruct _AabbPositionsKHR <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkAabbPositionsKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AabbPositionsKHR-NTuple{6, Real}","page":"API","title":"Vulkan._AabbPositionsKHR","text":"_AabbPositionsKHR(min_x::Real, min_y::Real, min_z::Real, max_x::Real, max_y::Real, max_z::Real)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\nmin_x::Real\nmin_y::Real\nmin_z::Real\nmax_x::Real\nmax_y::Real\nmax_z::Real\n\nAPI documentation\n\n_AabbPositionsKHR(min_x::Real, min_y::Real, min_z::Real, max_x::Real, max_y::Real, max_z::Real) -> _AabbPositionsKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._AccelerationStructureBuildGeometryInfoKHR","page":"API","title":"Vulkan._AccelerationStructureBuildGeometryInfoKHR","text":"Intermediate wrapper for VkAccelerationStructureBuildGeometryInfoKHR.\n\nExtension: VKKHRacceleration_structure\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureBuildGeometryInfoKHR.html\n\nstruct _AccelerationStructureBuildGeometryInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkAccelerationStructureBuildGeometryInfoKHR\ndeps::Vector{Any}\nsrc_acceleration_structure::Union{Ptr{Nothing}, AccelerationStructureKHR}\ndst_acceleration_structure::Union{Ptr{Nothing}, AccelerationStructureKHR}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureBuildGeometryInfoKHR-Tuple{AccelerationStructureTypeKHR, BuildAccelerationStructureModeKHR, _DeviceOrHostAddressKHR}","page":"API","title":"Vulkan._AccelerationStructureBuildGeometryInfoKHR","text":"_AccelerationStructureBuildGeometryInfoKHR(type::AccelerationStructureTypeKHR, mode::BuildAccelerationStructureModeKHR, scratch_data::_DeviceOrHostAddressKHR; next = C_NULL, flags = 0, src_acceleration_structure = C_NULL, dst_acceleration_structure = C_NULL, geometries = C_NULL, geometries_2 = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ntype::AccelerationStructureTypeKHR\nmode::BuildAccelerationStructureModeKHR\nscratch_data::_DeviceOrHostAddressKHR\nnext: defaults to C_NULL\nflags: defaults to 0\nsrc_acceleration_structure: defaults to C_NULL\ndst_acceleration_structure: defaults to C_NULL\ngeometries: defaults to C_NULL\ngeometries_2: defaults to C_NULL\n\nAPI documentation\n\n_AccelerationStructureBuildGeometryInfoKHR(type::AccelerationStructureTypeKHR, mode::BuildAccelerationStructureModeKHR, scratch_data::_DeviceOrHostAddressKHR; next, flags, src_acceleration_structure, dst_acceleration_structure, geometries, geometries_2) -> _AccelerationStructureBuildGeometryInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._AccelerationStructureBuildRangeInfoKHR","page":"API","title":"Vulkan._AccelerationStructureBuildRangeInfoKHR","text":"Intermediate wrapper for VkAccelerationStructureBuildRangeInfoKHR.\n\nExtension: VKKHRacceleration_structure\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureBuildRangeInfoKHR.html\n\nstruct _AccelerationStructureBuildRangeInfoKHR <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkAccelerationStructureBuildRangeInfoKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureBuildRangeInfoKHR-NTuple{4, Integer}","page":"API","title":"Vulkan._AccelerationStructureBuildRangeInfoKHR","text":"_AccelerationStructureBuildRangeInfoKHR(primitive_count::Integer, primitive_offset::Integer, first_vertex::Integer, transform_offset::Integer)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\nprimitive_count::Integer\nprimitive_offset::Integer\nfirst_vertex::Integer\ntransform_offset::Integer\n\nAPI documentation\n\n_AccelerationStructureBuildRangeInfoKHR(primitive_count::Integer, primitive_offset::Integer, first_vertex::Integer, transform_offset::Integer) -> _AccelerationStructureBuildRangeInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._AccelerationStructureBuildSizesInfoKHR","page":"API","title":"Vulkan._AccelerationStructureBuildSizesInfoKHR","text":"Intermediate wrapper for VkAccelerationStructureBuildSizesInfoKHR.\n\nExtension: VKKHRacceleration_structure\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureBuildSizesInfoKHR.html\n\nstruct _AccelerationStructureBuildSizesInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkAccelerationStructureBuildSizesInfoKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureBuildSizesInfoKHR-Tuple{Integer, Integer, Integer}","page":"API","title":"Vulkan._AccelerationStructureBuildSizesInfoKHR","text":"_AccelerationStructureBuildSizesInfoKHR(acceleration_structure_size::Integer, update_scratch_size::Integer, build_scratch_size::Integer; next = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\nacceleration_structure_size::Integer\nupdate_scratch_size::Integer\nbuild_scratch_size::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_AccelerationStructureBuildSizesInfoKHR(acceleration_structure_size::Integer, update_scratch_size::Integer, build_scratch_size::Integer; next) -> _AccelerationStructureBuildSizesInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._AccelerationStructureCreateInfoKHR","page":"API","title":"Vulkan._AccelerationStructureCreateInfoKHR","text":"Intermediate wrapper for VkAccelerationStructureCreateInfoKHR.\n\nExtension: VKKHRacceleration_structure\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureCreateInfoKHR.html\n\nstruct _AccelerationStructureCreateInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkAccelerationStructureCreateInfoKHR\ndeps::Vector{Any}\nbuffer::Buffer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureCreateInfoKHR-Tuple{Any, Integer, Integer, AccelerationStructureTypeKHR}","page":"API","title":"Vulkan._AccelerationStructureCreateInfoKHR","text":"_AccelerationStructureCreateInfoKHR(buffer, offset::Integer, size::Integer, type::AccelerationStructureTypeKHR; next = C_NULL, create_flags = 0, device_address = 0)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\nbuffer\noffset::Integer\nsize::Integer\ntype::AccelerationStructureTypeKHR\nnext: defaults to C_NULL\ncreate_flags: defaults to 0\ndevice_address: defaults to 0\n\nAPI documentation\n\n_AccelerationStructureCreateInfoKHR(buffer, offset::Integer, size::Integer, type::AccelerationStructureTypeKHR; next, create_flags, device_address) -> _AccelerationStructureCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._AccelerationStructureCreateInfoNV","page":"API","title":"Vulkan._AccelerationStructureCreateInfoNV","text":"Intermediate wrapper for VkAccelerationStructureCreateInfoNV.\n\nExtension: VKNVray_tracing\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureCreateInfoNV.html\n\nstruct _AccelerationStructureCreateInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkAccelerationStructureCreateInfoNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureCreateInfoNV-Tuple{Integer, _AccelerationStructureInfoNV}","page":"API","title":"Vulkan._AccelerationStructureCreateInfoNV","text":"_AccelerationStructureCreateInfoNV(compacted_size::Integer, info::_AccelerationStructureInfoNV; next = C_NULL)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ncompacted_size::Integer\ninfo::_AccelerationStructureInfoNV\nnext: defaults to C_NULL\n\nAPI documentation\n\n_AccelerationStructureCreateInfoNV(compacted_size::Integer, info::_AccelerationStructureInfoNV; next) -> _AccelerationStructureCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._AccelerationStructureDeviceAddressInfoKHR","page":"API","title":"Vulkan._AccelerationStructureDeviceAddressInfoKHR","text":"Intermediate wrapper for VkAccelerationStructureDeviceAddressInfoKHR.\n\nExtension: VKKHRacceleration_structure\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureDeviceAddressInfoKHR.html\n\nstruct _AccelerationStructureDeviceAddressInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkAccelerationStructureDeviceAddressInfoKHR\ndeps::Vector{Any}\nacceleration_structure::AccelerationStructureKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureDeviceAddressInfoKHR-Tuple{Any}","page":"API","title":"Vulkan._AccelerationStructureDeviceAddressInfoKHR","text":"_AccelerationStructureDeviceAddressInfoKHR(acceleration_structure; next = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\nacceleration_structure\nnext: defaults to C_NULL\n\nAPI documentation\n\n_AccelerationStructureDeviceAddressInfoKHR(acceleration_structure; next) -> _AccelerationStructureDeviceAddressInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._AccelerationStructureGeometryAabbsDataKHR","page":"API","title":"Vulkan._AccelerationStructureGeometryAabbsDataKHR","text":"Intermediate wrapper for VkAccelerationStructureGeometryAabbsDataKHR.\n\nExtension: VKKHRacceleration_structure\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureGeometryAabbsDataKHR.html\n\nstruct _AccelerationStructureGeometryAabbsDataKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkAccelerationStructureGeometryAabbsDataKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureGeometryAabbsDataKHR-Tuple{_DeviceOrHostAddressConstKHR, Integer}","page":"API","title":"Vulkan._AccelerationStructureGeometryAabbsDataKHR","text":"_AccelerationStructureGeometryAabbsDataKHR(data::_DeviceOrHostAddressConstKHR, stride::Integer; next = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ndata::_DeviceOrHostAddressConstKHR\nstride::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_AccelerationStructureGeometryAabbsDataKHR(data::_DeviceOrHostAddressConstKHR, stride::Integer; next) -> _AccelerationStructureGeometryAabbsDataKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._AccelerationStructureGeometryDataKHR","page":"API","title":"Vulkan._AccelerationStructureGeometryDataKHR","text":"Intermediate wrapper for VkAccelerationStructureGeometryDataKHR.\n\nExtension: VKKHRacceleration_structure\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureGeometryDataKHR.html\n\nstruct _AccelerationStructureGeometryDataKHR <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkAccelerationStructureGeometryDataKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureGeometryInstancesDataKHR","page":"API","title":"Vulkan._AccelerationStructureGeometryInstancesDataKHR","text":"Intermediate wrapper for VkAccelerationStructureGeometryInstancesDataKHR.\n\nExtension: VKKHRacceleration_structure\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureGeometryInstancesDataKHR.html\n\nstruct _AccelerationStructureGeometryInstancesDataKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkAccelerationStructureGeometryInstancesDataKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureGeometryInstancesDataKHR-Tuple{Bool, _DeviceOrHostAddressConstKHR}","page":"API","title":"Vulkan._AccelerationStructureGeometryInstancesDataKHR","text":"_AccelerationStructureGeometryInstancesDataKHR(array_of_pointers::Bool, data::_DeviceOrHostAddressConstKHR; next = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\narray_of_pointers::Bool\ndata::_DeviceOrHostAddressConstKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\n_AccelerationStructureGeometryInstancesDataKHR(array_of_pointers::Bool, data::_DeviceOrHostAddressConstKHR; next) -> _AccelerationStructureGeometryInstancesDataKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._AccelerationStructureGeometryKHR","page":"API","title":"Vulkan._AccelerationStructureGeometryKHR","text":"Intermediate wrapper for VkAccelerationStructureGeometryKHR.\n\nExtension: VKKHRacceleration_structure\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureGeometryKHR.html\n\nstruct _AccelerationStructureGeometryKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkAccelerationStructureGeometryKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureGeometryKHR-Tuple{GeometryTypeKHR, _AccelerationStructureGeometryDataKHR}","page":"API","title":"Vulkan._AccelerationStructureGeometryKHR","text":"_AccelerationStructureGeometryKHR(geometry_type::GeometryTypeKHR, geometry::_AccelerationStructureGeometryDataKHR; next = C_NULL, flags = 0)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ngeometry_type::GeometryTypeKHR\ngeometry::_AccelerationStructureGeometryDataKHR\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_AccelerationStructureGeometryKHR(geometry_type::GeometryTypeKHR, geometry::_AccelerationStructureGeometryDataKHR; next, flags) -> _AccelerationStructureGeometryKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._AccelerationStructureGeometryTrianglesDataKHR","page":"API","title":"Vulkan._AccelerationStructureGeometryTrianglesDataKHR","text":"Intermediate wrapper for VkAccelerationStructureGeometryTrianglesDataKHR.\n\nExtension: VKKHRacceleration_structure\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureGeometryTrianglesDataKHR.html\n\nstruct _AccelerationStructureGeometryTrianglesDataKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkAccelerationStructureGeometryTrianglesDataKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureGeometryTrianglesDataKHR-Tuple{Format, _DeviceOrHostAddressConstKHR, Integer, Integer, IndexType, _DeviceOrHostAddressConstKHR, _DeviceOrHostAddressConstKHR}","page":"API","title":"Vulkan._AccelerationStructureGeometryTrianglesDataKHR","text":"_AccelerationStructureGeometryTrianglesDataKHR(vertex_format::Format, vertex_data::_DeviceOrHostAddressConstKHR, vertex_stride::Integer, max_vertex::Integer, index_type::IndexType, index_data::_DeviceOrHostAddressConstKHR, transform_data::_DeviceOrHostAddressConstKHR; next = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\nvertex_format::Format\nvertex_data::_DeviceOrHostAddressConstKHR\nvertex_stride::Integer\nmax_vertex::Integer\nindex_type::IndexType\nindex_data::_DeviceOrHostAddressConstKHR\ntransform_data::_DeviceOrHostAddressConstKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\n_AccelerationStructureGeometryTrianglesDataKHR(vertex_format::Format, vertex_data::_DeviceOrHostAddressConstKHR, vertex_stride::Integer, max_vertex::Integer, index_type::IndexType, index_data::_DeviceOrHostAddressConstKHR, transform_data::_DeviceOrHostAddressConstKHR; next) -> _AccelerationStructureGeometryTrianglesDataKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._AccelerationStructureInfoNV","page":"API","title":"Vulkan._AccelerationStructureInfoNV","text":"Intermediate wrapper for VkAccelerationStructureInfoNV.\n\nExtension: VKNVray_tracing\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureInfoNV.html\n\nstruct _AccelerationStructureInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkAccelerationStructureInfoNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureInfoNV-Tuple{VulkanCore.LibVulkan.VkAccelerationStructureTypeKHR, AbstractArray}","page":"API","title":"Vulkan._AccelerationStructureInfoNV","text":"_AccelerationStructureInfoNV(type::VkAccelerationStructureTypeNV, geometries::AbstractArray{_GeometryNV}; next = C_NULL, flags = 0, instance_count = 0)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ntype::VkAccelerationStructureTypeNV\ngeometries::AbstractArray{_GeometryNV}\nnext: defaults to C_NULL\nflags: defaults to 0\ninstance_count: defaults to 0\n\nAPI documentation\n\n_AccelerationStructureInfoNV(type::VulkanCore.LibVulkan.VkAccelerationStructureTypeKHR, geometries::AbstractArray; next, flags, instance_count) -> _AccelerationStructureInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._AccelerationStructureInstanceKHR","page":"API","title":"Vulkan._AccelerationStructureInstanceKHR","text":"Intermediate wrapper for VkAccelerationStructureInstanceKHR.\n\nExtension: VKKHRacceleration_structure\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureInstanceKHR.html\n\nstruct _AccelerationStructureInstanceKHR <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkAccelerationStructureInstanceKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureInstanceKHR-Tuple{_TransformMatrixKHR, Integer, Integer, Integer, Integer}","page":"API","title":"Vulkan._AccelerationStructureInstanceKHR","text":"_AccelerationStructureInstanceKHR(transform::_TransformMatrixKHR, instance_custom_index::Integer, mask::Integer, instance_shader_binding_table_record_offset::Integer, acceleration_structure_reference::Integer; flags = 0)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ntransform::_TransformMatrixKHR\ninstance_custom_index::Integer\nmask::Integer\ninstance_shader_binding_table_record_offset::Integer\nacceleration_structure_reference::Integer\nflags: defaults to 0\n\nAPI documentation\n\n_AccelerationStructureInstanceKHR(transform::_TransformMatrixKHR, instance_custom_index::Integer, mask::Integer, instance_shader_binding_table_record_offset::Integer, acceleration_structure_reference::Integer; flags)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._AccelerationStructureMemoryRequirementsInfoNV","page":"API","title":"Vulkan._AccelerationStructureMemoryRequirementsInfoNV","text":"Intermediate wrapper for VkAccelerationStructureMemoryRequirementsInfoNV.\n\nExtension: VKNVray_tracing\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureMemoryRequirementsInfoNV.html\n\nstruct _AccelerationStructureMemoryRequirementsInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkAccelerationStructureMemoryRequirementsInfoNV\ndeps::Vector{Any}\nacceleration_structure::AccelerationStructureNV\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureMemoryRequirementsInfoNV-Tuple{AccelerationStructureMemoryRequirementsTypeNV, Any}","page":"API","title":"Vulkan._AccelerationStructureMemoryRequirementsInfoNV","text":"_AccelerationStructureMemoryRequirementsInfoNV(type::AccelerationStructureMemoryRequirementsTypeNV, acceleration_structure; next = C_NULL)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ntype::AccelerationStructureMemoryRequirementsTypeNV\nacceleration_structure\nnext: defaults to C_NULL\n\nAPI documentation\n\n_AccelerationStructureMemoryRequirementsInfoNV(type::AccelerationStructureMemoryRequirementsTypeNV, acceleration_structure; next) -> _AccelerationStructureMemoryRequirementsInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._AccelerationStructureVersionInfoKHR","page":"API","title":"Vulkan._AccelerationStructureVersionInfoKHR","text":"Intermediate wrapper for VkAccelerationStructureVersionInfoKHR.\n\nExtension: VKKHRacceleration_structure\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAccelerationStructureVersionInfoKHR.html\n\nstruct _AccelerationStructureVersionInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkAccelerationStructureVersionInfoKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureVersionInfoKHR-Tuple{AbstractArray}","page":"API","title":"Vulkan._AccelerationStructureVersionInfoKHR","text":"_AccelerationStructureVersionInfoKHR(version_data::AbstractArray{<:Integer}; next = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\nversion_data::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_AccelerationStructureVersionInfoKHR(version_data::AbstractArray; next) -> _AccelerationStructureVersionInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._AcquireNextImageInfoKHR","page":"API","title":"Vulkan._AcquireNextImageInfoKHR","text":"Intermediate wrapper for VkAcquireNextImageInfoKHR.\n\nExtension: VKKHRswapchain\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAcquireNextImageInfoKHR.html\n\nstruct _AcquireNextImageInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkAcquireNextImageInfoKHR\ndeps::Vector{Any}\nswapchain::SwapchainKHR\nsemaphore::Union{Ptr{Nothing}, Semaphore}\nfence::Union{Ptr{Nothing}, Fence}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AcquireNextImageInfoKHR-Tuple{Any, Integer, Integer}","page":"API","title":"Vulkan._AcquireNextImageInfoKHR","text":"_AcquireNextImageInfoKHR(swapchain, timeout::Integer, device_mask::Integer; next = C_NULL, semaphore = C_NULL, fence = C_NULL)\n\nExtension: VK_KHR_swapchain\n\nArguments:\n\nswapchain (externsync)\ntimeout::Integer\ndevice_mask::Integer\nnext: defaults to C_NULL\nsemaphore: defaults to C_NULL (externsync)\nfence: defaults to C_NULL (externsync)\n\nAPI documentation\n\n_AcquireNextImageInfoKHR(swapchain, timeout::Integer, device_mask::Integer; next, semaphore, fence) -> _AcquireNextImageInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._AcquireProfilingLockInfoKHR","page":"API","title":"Vulkan._AcquireProfilingLockInfoKHR","text":"Intermediate wrapper for VkAcquireProfilingLockInfoKHR.\n\nExtension: VKKHRperformance_query\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAcquireProfilingLockInfoKHR.html\n\nstruct _AcquireProfilingLockInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkAcquireProfilingLockInfoKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AcquireProfilingLockInfoKHR-Tuple{Integer}","page":"API","title":"Vulkan._AcquireProfilingLockInfoKHR","text":"_AcquireProfilingLockInfoKHR(timeout::Integer; next = C_NULL, flags = 0)\n\nExtension: VK_KHR_performance_query\n\nArguments:\n\ntimeout::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_AcquireProfilingLockInfoKHR(timeout::Integer; next, flags) -> _AcquireProfilingLockInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._AllocationCallbacks","page":"API","title":"Vulkan._AllocationCallbacks","text":"Intermediate wrapper for VkAllocationCallbacks.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAllocationCallbacks.html\n\nstruct _AllocationCallbacks <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkAllocationCallbacks\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AllocationCallbacks-Tuple{Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._AllocationCallbacks","text":"_AllocationCallbacks(pfn_allocation::FunctionPtr, pfn_reallocation::FunctionPtr, pfn_free::FunctionPtr; user_data = C_NULL, pfn_internal_allocation = 0, pfn_internal_free = 0)\n\nArguments:\n\npfn_allocation::FunctionPtr\npfn_reallocation::FunctionPtr\npfn_free::FunctionPtr\nuser_data: defaults to C_NULL\npfn_internal_allocation: defaults to 0\npfn_internal_free: defaults to 0\n\nAPI documentation\n\n_AllocationCallbacks(pfn_allocation::Union{Ptr{Nothing}, Base.CFunction}, pfn_reallocation::Union{Ptr{Nothing}, Base.CFunction}, pfn_free::Union{Ptr{Nothing}, Base.CFunction}; user_data, pfn_internal_allocation, pfn_internal_free) -> _AllocationCallbacks\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ApplicationInfo","page":"API","title":"Vulkan._ApplicationInfo","text":"Intermediate wrapper for VkApplicationInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkApplicationInfo.html\n\nstruct _ApplicationInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkApplicationInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ApplicationInfo-Tuple{VersionNumber, VersionNumber, VersionNumber}","page":"API","title":"Vulkan._ApplicationInfo","text":"_ApplicationInfo(application_version::VersionNumber, engine_version::VersionNumber, api_version::VersionNumber; next = C_NULL, application_name = C_NULL, engine_name = C_NULL)\n\nArguments:\n\napplication_version::VersionNumber\nengine_version::VersionNumber\napi_version::VersionNumber\nnext: defaults to C_NULL\napplication_name: defaults to C_NULL\nengine_name: defaults to C_NULL\n\nAPI documentation\n\n_ApplicationInfo(application_version::VersionNumber, engine_version::VersionNumber, api_version::VersionNumber; next, application_name, engine_name) -> _ApplicationInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._AttachmentDescription","page":"API","title":"Vulkan._AttachmentDescription","text":"Intermediate wrapper for VkAttachmentDescription.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAttachmentDescription.html\n\nstruct _AttachmentDescription <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkAttachmentDescription\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AttachmentDescription-Tuple{Format, SampleCountFlag, AttachmentLoadOp, AttachmentStoreOp, AttachmentLoadOp, AttachmentStoreOp, ImageLayout, ImageLayout}","page":"API","title":"Vulkan._AttachmentDescription","text":"_AttachmentDescription(format::Format, samples::SampleCountFlag, load_op::AttachmentLoadOp, store_op::AttachmentStoreOp, stencil_load_op::AttachmentLoadOp, stencil_store_op::AttachmentStoreOp, initial_layout::ImageLayout, final_layout::ImageLayout; flags = 0)\n\nArguments:\n\nformat::Format\nsamples::SampleCountFlag\nload_op::AttachmentLoadOp\nstore_op::AttachmentStoreOp\nstencil_load_op::AttachmentLoadOp\nstencil_store_op::AttachmentStoreOp\ninitial_layout::ImageLayout\nfinal_layout::ImageLayout\nflags: defaults to 0\n\nAPI documentation\n\n_AttachmentDescription(format::Format, samples::SampleCountFlag, load_op::AttachmentLoadOp, store_op::AttachmentStoreOp, stencil_load_op::AttachmentLoadOp, stencil_store_op::AttachmentStoreOp, initial_layout::ImageLayout, final_layout::ImageLayout; flags) -> _AttachmentDescription\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._AttachmentDescription2","page":"API","title":"Vulkan._AttachmentDescription2","text":"Intermediate wrapper for VkAttachmentDescription2.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAttachmentDescription2.html\n\nstruct _AttachmentDescription2 <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkAttachmentDescription2\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AttachmentDescription2-Tuple{Format, SampleCountFlag, AttachmentLoadOp, AttachmentStoreOp, AttachmentLoadOp, AttachmentStoreOp, ImageLayout, ImageLayout}","page":"API","title":"Vulkan._AttachmentDescription2","text":"_AttachmentDescription2(format::Format, samples::SampleCountFlag, load_op::AttachmentLoadOp, store_op::AttachmentStoreOp, stencil_load_op::AttachmentLoadOp, stencil_store_op::AttachmentStoreOp, initial_layout::ImageLayout, final_layout::ImageLayout; next = C_NULL, flags = 0)\n\nArguments:\n\nformat::Format\nsamples::SampleCountFlag\nload_op::AttachmentLoadOp\nstore_op::AttachmentStoreOp\nstencil_load_op::AttachmentLoadOp\nstencil_store_op::AttachmentStoreOp\ninitial_layout::ImageLayout\nfinal_layout::ImageLayout\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_AttachmentDescription2(format::Format, samples::SampleCountFlag, load_op::AttachmentLoadOp, store_op::AttachmentStoreOp, stencil_load_op::AttachmentLoadOp, stencil_store_op::AttachmentStoreOp, initial_layout::ImageLayout, final_layout::ImageLayout; next, flags) -> _AttachmentDescription2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._AttachmentDescriptionStencilLayout","page":"API","title":"Vulkan._AttachmentDescriptionStencilLayout","text":"Intermediate wrapper for VkAttachmentDescriptionStencilLayout.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAttachmentDescriptionStencilLayout.html\n\nstruct _AttachmentDescriptionStencilLayout <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkAttachmentDescriptionStencilLayout\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AttachmentDescriptionStencilLayout-Tuple{ImageLayout, ImageLayout}","page":"API","title":"Vulkan._AttachmentDescriptionStencilLayout","text":"_AttachmentDescriptionStencilLayout(stencil_initial_layout::ImageLayout, stencil_final_layout::ImageLayout; next = C_NULL)\n\nArguments:\n\nstencil_initial_layout::ImageLayout\nstencil_final_layout::ImageLayout\nnext: defaults to C_NULL\n\nAPI documentation\n\n_AttachmentDescriptionStencilLayout(stencil_initial_layout::ImageLayout, stencil_final_layout::ImageLayout; next) -> _AttachmentDescriptionStencilLayout\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._AttachmentReference","page":"API","title":"Vulkan._AttachmentReference","text":"Intermediate wrapper for VkAttachmentReference.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAttachmentReference.html\n\nstruct _AttachmentReference <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkAttachmentReference\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AttachmentReference-Tuple{Integer, ImageLayout}","page":"API","title":"Vulkan._AttachmentReference","text":"_AttachmentReference(attachment::Integer, layout::ImageLayout)\n\nArguments:\n\nattachment::Integer\nlayout::ImageLayout\n\nAPI documentation\n\n_AttachmentReference(attachment::Integer, layout::ImageLayout) -> _AttachmentReference\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._AttachmentReference2","page":"API","title":"Vulkan._AttachmentReference2","text":"Intermediate wrapper for VkAttachmentReference2.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAttachmentReference2.html\n\nstruct _AttachmentReference2 <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkAttachmentReference2\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AttachmentReference2-Tuple{Integer, ImageLayout, ImageAspectFlag}","page":"API","title":"Vulkan._AttachmentReference2","text":"_AttachmentReference2(attachment::Integer, layout::ImageLayout, aspect_mask::ImageAspectFlag; next = C_NULL)\n\nArguments:\n\nattachment::Integer\nlayout::ImageLayout\naspect_mask::ImageAspectFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\n_AttachmentReference2(attachment::Integer, layout::ImageLayout, aspect_mask::ImageAspectFlag; next) -> _AttachmentReference2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._AttachmentReferenceStencilLayout","page":"API","title":"Vulkan._AttachmentReferenceStencilLayout","text":"Intermediate wrapper for VkAttachmentReferenceStencilLayout.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAttachmentReferenceStencilLayout.html\n\nstruct _AttachmentReferenceStencilLayout <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkAttachmentReferenceStencilLayout\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AttachmentReferenceStencilLayout-Tuple{ImageLayout}","page":"API","title":"Vulkan._AttachmentReferenceStencilLayout","text":"_AttachmentReferenceStencilLayout(stencil_layout::ImageLayout; next = C_NULL)\n\nArguments:\n\nstencil_layout::ImageLayout\nnext: defaults to C_NULL\n\nAPI documentation\n\n_AttachmentReferenceStencilLayout(stencil_layout::ImageLayout; next) -> _AttachmentReferenceStencilLayout\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._AttachmentSampleLocationsEXT","page":"API","title":"Vulkan._AttachmentSampleLocationsEXT","text":"Intermediate wrapper for VkAttachmentSampleLocationsEXT.\n\nExtension: VKEXTsample_locations\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkAttachmentSampleLocationsEXT.html\n\nstruct _AttachmentSampleLocationsEXT <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkAttachmentSampleLocationsEXT\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AttachmentSampleLocationsEXT-Tuple{Integer, _SampleLocationsInfoEXT}","page":"API","title":"Vulkan._AttachmentSampleLocationsEXT","text":"_AttachmentSampleLocationsEXT(attachment_index::Integer, sample_locations_info::_SampleLocationsInfoEXT)\n\nExtension: VK_EXT_sample_locations\n\nArguments:\n\nattachment_index::Integer\nsample_locations_info::_SampleLocationsInfoEXT\n\nAPI documentation\n\n_AttachmentSampleLocationsEXT(attachment_index::Integer, sample_locations_info::_SampleLocationsInfoEXT) -> _AttachmentSampleLocationsEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._BaseInStructure","page":"API","title":"Vulkan._BaseInStructure","text":"Intermediate wrapper for VkBaseInStructure.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBaseInStructure.html\n\nstruct _BaseInStructure <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkBaseInStructure\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BaseInStructure-Tuple{}","page":"API","title":"Vulkan._BaseInStructure","text":"_BaseInStructure(; next = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\n\nAPI documentation\n\n_BaseInStructure(; next) -> _BaseInStructure\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._BaseOutStructure","page":"API","title":"Vulkan._BaseOutStructure","text":"Intermediate wrapper for VkBaseOutStructure.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBaseOutStructure.html\n\nstruct _BaseOutStructure <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkBaseOutStructure\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BaseOutStructure-Tuple{}","page":"API","title":"Vulkan._BaseOutStructure","text":"_BaseOutStructure(; next = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\n\nAPI documentation\n\n_BaseOutStructure(; next) -> _BaseOutStructure\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._BindAccelerationStructureMemoryInfoNV","page":"API","title":"Vulkan._BindAccelerationStructureMemoryInfoNV","text":"Intermediate wrapper for VkBindAccelerationStructureMemoryInfoNV.\n\nExtension: VKNVray_tracing\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBindAccelerationStructureMemoryInfoNV.html\n\nstruct _BindAccelerationStructureMemoryInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkBindAccelerationStructureMemoryInfoNV\ndeps::Vector{Any}\nacceleration_structure::AccelerationStructureNV\nmemory::DeviceMemory\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BindAccelerationStructureMemoryInfoNV-Tuple{Any, Any, Integer, AbstractArray}","page":"API","title":"Vulkan._BindAccelerationStructureMemoryInfoNV","text":"_BindAccelerationStructureMemoryInfoNV(acceleration_structure, memory, memory_offset::Integer, device_indices::AbstractArray{<:Integer}; next = C_NULL)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\nacceleration_structure\nmemory\nmemory_offset::Integer\ndevice_indices::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_BindAccelerationStructureMemoryInfoNV(acceleration_structure, memory, memory_offset::Integer, device_indices::AbstractArray; next) -> _BindAccelerationStructureMemoryInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._BindBufferMemoryDeviceGroupInfo","page":"API","title":"Vulkan._BindBufferMemoryDeviceGroupInfo","text":"Intermediate wrapper for VkBindBufferMemoryDeviceGroupInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBindBufferMemoryDeviceGroupInfo.html\n\nstruct _BindBufferMemoryDeviceGroupInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkBindBufferMemoryDeviceGroupInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BindBufferMemoryDeviceGroupInfo-Tuple{AbstractArray}","page":"API","title":"Vulkan._BindBufferMemoryDeviceGroupInfo","text":"_BindBufferMemoryDeviceGroupInfo(device_indices::AbstractArray{<:Integer}; next = C_NULL)\n\nArguments:\n\ndevice_indices::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_BindBufferMemoryDeviceGroupInfo(device_indices::AbstractArray; next) -> _BindBufferMemoryDeviceGroupInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._BindBufferMemoryInfo","page":"API","title":"Vulkan._BindBufferMemoryInfo","text":"Intermediate wrapper for VkBindBufferMemoryInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBindBufferMemoryInfo.html\n\nstruct _BindBufferMemoryInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkBindBufferMemoryInfo\ndeps::Vector{Any}\nbuffer::Buffer\nmemory::DeviceMemory\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BindBufferMemoryInfo-Tuple{Any, Any, Integer}","page":"API","title":"Vulkan._BindBufferMemoryInfo","text":"_BindBufferMemoryInfo(buffer, memory, memory_offset::Integer; next = C_NULL)\n\nArguments:\n\nbuffer\nmemory\nmemory_offset::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_BindBufferMemoryInfo(buffer, memory, memory_offset::Integer; next) -> _BindBufferMemoryInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._BindImageMemoryDeviceGroupInfo","page":"API","title":"Vulkan._BindImageMemoryDeviceGroupInfo","text":"Intermediate wrapper for VkBindImageMemoryDeviceGroupInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBindImageMemoryDeviceGroupInfo.html\n\nstruct _BindImageMemoryDeviceGroupInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkBindImageMemoryDeviceGroupInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BindImageMemoryDeviceGroupInfo-Tuple{AbstractArray, AbstractArray}","page":"API","title":"Vulkan._BindImageMemoryDeviceGroupInfo","text":"_BindImageMemoryDeviceGroupInfo(device_indices::AbstractArray{<:Integer}, split_instance_bind_regions::AbstractArray{_Rect2D}; next = C_NULL)\n\nArguments:\n\ndevice_indices::AbstractArray{<:Integer}\nsplit_instance_bind_regions::AbstractArray{_Rect2D}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_BindImageMemoryDeviceGroupInfo(device_indices::AbstractArray, split_instance_bind_regions::AbstractArray; next) -> _BindImageMemoryDeviceGroupInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._BindImageMemoryInfo","page":"API","title":"Vulkan._BindImageMemoryInfo","text":"Intermediate wrapper for VkBindImageMemoryInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBindImageMemoryInfo.html\n\nstruct _BindImageMemoryInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkBindImageMemoryInfo\ndeps::Vector{Any}\nimage::Image\nmemory::DeviceMemory\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BindImageMemoryInfo-Tuple{Any, Any, Integer}","page":"API","title":"Vulkan._BindImageMemoryInfo","text":"_BindImageMemoryInfo(image, memory, memory_offset::Integer; next = C_NULL)\n\nArguments:\n\nimage\nmemory\nmemory_offset::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_BindImageMemoryInfo(image, memory, memory_offset::Integer; next) -> _BindImageMemoryInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._BindImageMemorySwapchainInfoKHR","page":"API","title":"Vulkan._BindImageMemorySwapchainInfoKHR","text":"Intermediate wrapper for VkBindImageMemorySwapchainInfoKHR.\n\nExtension: VKKHRswapchain\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBindImageMemorySwapchainInfoKHR.html\n\nstruct _BindImageMemorySwapchainInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkBindImageMemorySwapchainInfoKHR\ndeps::Vector{Any}\nswapchain::SwapchainKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BindImageMemorySwapchainInfoKHR-Tuple{Any, Integer}","page":"API","title":"Vulkan._BindImageMemorySwapchainInfoKHR","text":"_BindImageMemorySwapchainInfoKHR(swapchain, image_index::Integer; next = C_NULL)\n\nExtension: VK_KHR_swapchain\n\nArguments:\n\nswapchain (externsync)\nimage_index::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_BindImageMemorySwapchainInfoKHR(swapchain, image_index::Integer; next) -> _BindImageMemorySwapchainInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._BindImagePlaneMemoryInfo","page":"API","title":"Vulkan._BindImagePlaneMemoryInfo","text":"Intermediate wrapper for VkBindImagePlaneMemoryInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBindImagePlaneMemoryInfo.html\n\nstruct _BindImagePlaneMemoryInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkBindImagePlaneMemoryInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BindImagePlaneMemoryInfo-Tuple{ImageAspectFlag}","page":"API","title":"Vulkan._BindImagePlaneMemoryInfo","text":"_BindImagePlaneMemoryInfo(plane_aspect::ImageAspectFlag; next = C_NULL)\n\nArguments:\n\nplane_aspect::ImageAspectFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\n_BindImagePlaneMemoryInfo(plane_aspect::ImageAspectFlag; next) -> _BindImagePlaneMemoryInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._BindIndexBufferIndirectCommandNV","page":"API","title":"Vulkan._BindIndexBufferIndirectCommandNV","text":"Intermediate wrapper for VkBindIndexBufferIndirectCommandNV.\n\nExtension: VKNVdevicegeneratedcommands\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBindIndexBufferIndirectCommandNV.html\n\nstruct _BindIndexBufferIndirectCommandNV <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkBindIndexBufferIndirectCommandNV\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BindIndexBufferIndirectCommandNV-Tuple{Integer, Integer, IndexType}","page":"API","title":"Vulkan._BindIndexBufferIndirectCommandNV","text":"_BindIndexBufferIndirectCommandNV(buffer_address::Integer, size::Integer, index_type::IndexType)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\nbuffer_address::Integer\nsize::Integer\nindex_type::IndexType\n\nAPI documentation\n\n_BindIndexBufferIndirectCommandNV(buffer_address::Integer, size::Integer, index_type::IndexType) -> _BindIndexBufferIndirectCommandNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._BindShaderGroupIndirectCommandNV","page":"API","title":"Vulkan._BindShaderGroupIndirectCommandNV","text":"Intermediate wrapper for VkBindShaderGroupIndirectCommandNV.\n\nExtension: VKNVdevicegeneratedcommands\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBindShaderGroupIndirectCommandNV.html\n\nstruct _BindShaderGroupIndirectCommandNV <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkBindShaderGroupIndirectCommandNV\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BindShaderGroupIndirectCommandNV-Tuple{Integer}","page":"API","title":"Vulkan._BindShaderGroupIndirectCommandNV","text":"_BindShaderGroupIndirectCommandNV(group_index::Integer)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ngroup_index::Integer\n\nAPI documentation\n\n_BindShaderGroupIndirectCommandNV(group_index::Integer) -> _BindShaderGroupIndirectCommandNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._BindSparseInfo","page":"API","title":"Vulkan._BindSparseInfo","text":"Intermediate wrapper for VkBindSparseInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBindSparseInfo.html\n\nstruct _BindSparseInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkBindSparseInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BindSparseInfo-NTuple{5, AbstractArray}","page":"API","title":"Vulkan._BindSparseInfo","text":"_BindSparseInfo(wait_semaphores::AbstractArray{Semaphore}, buffer_binds::AbstractArray{_SparseBufferMemoryBindInfo}, image_opaque_binds::AbstractArray{_SparseImageOpaqueMemoryBindInfo}, image_binds::AbstractArray{_SparseImageMemoryBindInfo}, signal_semaphores::AbstractArray{Semaphore}; next = C_NULL)\n\nArguments:\n\nwait_semaphores::AbstractArray{Semaphore}\nbuffer_binds::AbstractArray{_SparseBufferMemoryBindInfo}\nimage_opaque_binds::AbstractArray{_SparseImageOpaqueMemoryBindInfo}\nimage_binds::AbstractArray{_SparseImageMemoryBindInfo}\nsignal_semaphores::AbstractArray{Semaphore}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_BindSparseInfo(wait_semaphores::AbstractArray, buffer_binds::AbstractArray, image_opaque_binds::AbstractArray, image_binds::AbstractArray, signal_semaphores::AbstractArray; next) -> _BindSparseInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._BindVertexBufferIndirectCommandNV","page":"API","title":"Vulkan._BindVertexBufferIndirectCommandNV","text":"Intermediate wrapper for VkBindVertexBufferIndirectCommandNV.\n\nExtension: VKNVdevicegeneratedcommands\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBindVertexBufferIndirectCommandNV.html\n\nstruct _BindVertexBufferIndirectCommandNV <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkBindVertexBufferIndirectCommandNV\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BindVertexBufferIndirectCommandNV-Tuple{Integer, Integer, Integer}","page":"API","title":"Vulkan._BindVertexBufferIndirectCommandNV","text":"_BindVertexBufferIndirectCommandNV(buffer_address::Integer, size::Integer, stride::Integer)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\nbuffer_address::Integer\nsize::Integer\nstride::Integer\n\nAPI documentation\n\n_BindVertexBufferIndirectCommandNV(buffer_address::Integer, size::Integer, stride::Integer) -> _BindVertexBufferIndirectCommandNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._BlitImageInfo2KHR","page":"API","title":"Vulkan._BlitImageInfo2KHR","text":"Intermediate wrapper for VkBlitImageInfo2KHR.\n\nExtension: VKKHRcopy_commands2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBlitImageInfo2KHR.html\n\nstruct _BlitImageInfo2KHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkBlitImageInfo2KHR\ndeps::Vector{Any}\nsrc_image::Image\ndst_image::Image\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BlitImageInfo2KHR-Tuple{Any, ImageLayout, Any, ImageLayout, AbstractArray, Filter}","page":"API","title":"Vulkan._BlitImageInfo2KHR","text":"_BlitImageInfo2KHR(src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray{_ImageBlit2KHR}, filter::Filter; next = C_NULL)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\nsrc_image\nsrc_image_layout::ImageLayout\ndst_image\ndst_image_layout::ImageLayout\nregions::AbstractArray{_ImageBlit2KHR}\nfilter::Filter\nnext: defaults to C_NULL\n\nAPI documentation\n\n_BlitImageInfo2KHR(src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray, filter::Filter; next) -> _BlitImageInfo2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._BufferCopy","page":"API","title":"Vulkan._BufferCopy","text":"Intermediate wrapper for VkBufferCopy.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBufferCopy.html\n\nstruct _BufferCopy <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkBufferCopy\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BufferCopy-Tuple{Integer, Integer, Integer}","page":"API","title":"Vulkan._BufferCopy","text":"_BufferCopy(src_offset::Integer, dst_offset::Integer, size::Integer)\n\nArguments:\n\nsrc_offset::Integer\ndst_offset::Integer\nsize::Integer\n\nAPI documentation\n\n_BufferCopy(src_offset::Integer, dst_offset::Integer, size::Integer) -> _BufferCopy\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._BufferCopy2KHR","page":"API","title":"Vulkan._BufferCopy2KHR","text":"Intermediate wrapper for VkBufferCopy2KHR.\n\nExtension: VKKHRcopy_commands2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBufferCopy2KHR.html\n\nstruct _BufferCopy2KHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkBufferCopy2KHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BufferCopy2KHR-Tuple{Integer, Integer, Integer}","page":"API","title":"Vulkan._BufferCopy2KHR","text":"_BufferCopy2KHR(src_offset::Integer, dst_offset::Integer, size::Integer; next = C_NULL)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\nsrc_offset::Integer\ndst_offset::Integer\nsize::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_BufferCopy2KHR(src_offset::Integer, dst_offset::Integer, size::Integer; next) -> _BufferCopy2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._BufferCreateInfo","page":"API","title":"Vulkan._BufferCreateInfo","text":"Intermediate wrapper for VkBufferCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBufferCreateInfo.html\n\nstruct _BufferCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkBufferCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BufferCreateInfo-Tuple{Integer, BufferUsageFlag, SharingMode, AbstractArray}","page":"API","title":"Vulkan._BufferCreateInfo","text":"_BufferCreateInfo(size::Integer, usage::BufferUsageFlag, sharing_mode::SharingMode, queue_family_indices::AbstractArray{<:Integer}; next = C_NULL, flags = 0)\n\nArguments:\n\nsize::Integer\nusage::BufferUsageFlag\nsharing_mode::SharingMode\nqueue_family_indices::AbstractArray{<:Integer}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_BufferCreateInfo(size::Integer, usage::BufferUsageFlag, sharing_mode::SharingMode, queue_family_indices::AbstractArray; next, flags) -> _BufferCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._BufferDeviceAddressCreateInfoEXT","page":"API","title":"Vulkan._BufferDeviceAddressCreateInfoEXT","text":"Intermediate wrapper for VkBufferDeviceAddressCreateInfoEXT.\n\nExtension: VKEXTbufferdeviceaddress\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBufferDeviceAddressCreateInfoEXT.html\n\nstruct _BufferDeviceAddressCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkBufferDeviceAddressCreateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BufferDeviceAddressCreateInfoEXT-Tuple{Integer}","page":"API","title":"Vulkan._BufferDeviceAddressCreateInfoEXT","text":"_BufferDeviceAddressCreateInfoEXT(device_address::Integer; next = C_NULL)\n\nExtension: VK_EXT_buffer_device_address\n\nArguments:\n\ndevice_address::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_BufferDeviceAddressCreateInfoEXT(device_address::Integer; next) -> _BufferDeviceAddressCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._BufferDeviceAddressInfo","page":"API","title":"Vulkan._BufferDeviceAddressInfo","text":"Intermediate wrapper for VkBufferDeviceAddressInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBufferDeviceAddressInfo.html\n\nstruct _BufferDeviceAddressInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkBufferDeviceAddressInfo\ndeps::Vector{Any}\nbuffer::Buffer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BufferDeviceAddressInfo-Tuple{Any}","page":"API","title":"Vulkan._BufferDeviceAddressInfo","text":"_BufferDeviceAddressInfo(buffer; next = C_NULL)\n\nArguments:\n\nbuffer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_BufferDeviceAddressInfo(buffer; next) -> _BufferDeviceAddressInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._BufferImageCopy","page":"API","title":"Vulkan._BufferImageCopy","text":"Intermediate wrapper for VkBufferImageCopy.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBufferImageCopy.html\n\nstruct _BufferImageCopy <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkBufferImageCopy\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BufferImageCopy-Tuple{Integer, Integer, Integer, _ImageSubresourceLayers, _Offset3D, _Extent3D}","page":"API","title":"Vulkan._BufferImageCopy","text":"_BufferImageCopy(buffer_offset::Integer, buffer_row_length::Integer, buffer_image_height::Integer, image_subresource::_ImageSubresourceLayers, image_offset::_Offset3D, image_extent::_Extent3D)\n\nArguments:\n\nbuffer_offset::Integer\nbuffer_row_length::Integer\nbuffer_image_height::Integer\nimage_subresource::_ImageSubresourceLayers\nimage_offset::_Offset3D\nimage_extent::_Extent3D\n\nAPI documentation\n\n_BufferImageCopy(buffer_offset::Integer, buffer_row_length::Integer, buffer_image_height::Integer, image_subresource::_ImageSubresourceLayers, image_offset::_Offset3D, image_extent::_Extent3D) -> _BufferImageCopy\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._BufferImageCopy2KHR","page":"API","title":"Vulkan._BufferImageCopy2KHR","text":"Intermediate wrapper for VkBufferImageCopy2KHR.\n\nExtension: VKKHRcopy_commands2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBufferImageCopy2KHR.html\n\nstruct _BufferImageCopy2KHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkBufferImageCopy2KHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BufferImageCopy2KHR-Tuple{Integer, Integer, Integer, _ImageSubresourceLayers, _Offset3D, _Extent3D}","page":"API","title":"Vulkan._BufferImageCopy2KHR","text":"_BufferImageCopy2KHR(buffer_offset::Integer, buffer_row_length::Integer, buffer_image_height::Integer, image_subresource::_ImageSubresourceLayers, image_offset::_Offset3D, image_extent::_Extent3D; next = C_NULL)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\nbuffer_offset::Integer\nbuffer_row_length::Integer\nbuffer_image_height::Integer\nimage_subresource::_ImageSubresourceLayers\nimage_offset::_Offset3D\nimage_extent::_Extent3D\nnext: defaults to C_NULL\n\nAPI documentation\n\n_BufferImageCopy2KHR(buffer_offset::Integer, buffer_row_length::Integer, buffer_image_height::Integer, image_subresource::_ImageSubresourceLayers, image_offset::_Offset3D, image_extent::_Extent3D; next) -> _BufferImageCopy2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._BufferMemoryBarrier","page":"API","title":"Vulkan._BufferMemoryBarrier","text":"Intermediate wrapper for VkBufferMemoryBarrier.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBufferMemoryBarrier.html\n\nstruct _BufferMemoryBarrier <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkBufferMemoryBarrier\ndeps::Vector{Any}\nbuffer::Buffer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BufferMemoryBarrier-Tuple{AccessFlag, AccessFlag, Integer, Integer, Any, Integer, Integer}","page":"API","title":"Vulkan._BufferMemoryBarrier","text":"_BufferMemoryBarrier(src_access_mask::AccessFlag, dst_access_mask::AccessFlag, src_queue_family_index::Integer, dst_queue_family_index::Integer, buffer, offset::Integer, size::Integer; next = C_NULL)\n\nArguments:\n\nsrc_access_mask::AccessFlag\ndst_access_mask::AccessFlag\nsrc_queue_family_index::Integer\ndst_queue_family_index::Integer\nbuffer\noffset::Integer\nsize::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_BufferMemoryBarrier(src_access_mask::AccessFlag, dst_access_mask::AccessFlag, src_queue_family_index::Integer, dst_queue_family_index::Integer, buffer, offset::Integer, size::Integer; next) -> _BufferMemoryBarrier\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._BufferMemoryBarrier2KHR","page":"API","title":"Vulkan._BufferMemoryBarrier2KHR","text":"Intermediate wrapper for VkBufferMemoryBarrier2KHR.\n\nExtension: VKKHRsynchronization2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBufferMemoryBarrier2KHR.html\n\nstruct _BufferMemoryBarrier2KHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkBufferMemoryBarrier2KHR\ndeps::Vector{Any}\nbuffer::Buffer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BufferMemoryBarrier2KHR-Tuple{Integer, Integer, Any, Integer, Integer}","page":"API","title":"Vulkan._BufferMemoryBarrier2KHR","text":"_BufferMemoryBarrier2KHR(src_queue_family_index::Integer, dst_queue_family_index::Integer, buffer, offset::Integer, size::Integer; next = C_NULL, src_stage_mask = 0, src_access_mask = 0, dst_stage_mask = 0, dst_access_mask = 0)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\nsrc_queue_family_index::Integer\ndst_queue_family_index::Integer\nbuffer\noffset::Integer\nsize::Integer\nnext: defaults to C_NULL\nsrc_stage_mask: defaults to 0\nsrc_access_mask: defaults to 0\ndst_stage_mask: defaults to 0\ndst_access_mask: defaults to 0\n\nAPI documentation\n\n_BufferMemoryBarrier2KHR(src_queue_family_index::Integer, dst_queue_family_index::Integer, buffer, offset::Integer, size::Integer; next, src_stage_mask, src_access_mask, dst_stage_mask, dst_access_mask) -> _BufferMemoryBarrier2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._BufferMemoryRequirementsInfo2","page":"API","title":"Vulkan._BufferMemoryRequirementsInfo2","text":"Intermediate wrapper for VkBufferMemoryRequirementsInfo2.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBufferMemoryRequirementsInfo2.html\n\nstruct _BufferMemoryRequirementsInfo2 <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkBufferMemoryRequirementsInfo2\ndeps::Vector{Any}\nbuffer::Buffer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BufferMemoryRequirementsInfo2-Tuple{Any}","page":"API","title":"Vulkan._BufferMemoryRequirementsInfo2","text":"_BufferMemoryRequirementsInfo2(buffer; next = C_NULL)\n\nArguments:\n\nbuffer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_BufferMemoryRequirementsInfo2(buffer; next) -> _BufferMemoryRequirementsInfo2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._BufferOpaqueCaptureAddressCreateInfo","page":"API","title":"Vulkan._BufferOpaqueCaptureAddressCreateInfo","text":"Intermediate wrapper for VkBufferOpaqueCaptureAddressCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBufferOpaqueCaptureAddressCreateInfo.html\n\nstruct _BufferOpaqueCaptureAddressCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkBufferOpaqueCaptureAddressCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BufferOpaqueCaptureAddressCreateInfo-Tuple{Integer}","page":"API","title":"Vulkan._BufferOpaqueCaptureAddressCreateInfo","text":"_BufferOpaqueCaptureAddressCreateInfo(opaque_capture_address::Integer; next = C_NULL)\n\nArguments:\n\nopaque_capture_address::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_BufferOpaqueCaptureAddressCreateInfo(opaque_capture_address::Integer; next) -> _BufferOpaqueCaptureAddressCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._BufferViewCreateInfo","page":"API","title":"Vulkan._BufferViewCreateInfo","text":"Intermediate wrapper for VkBufferViewCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkBufferViewCreateInfo.html\n\nstruct _BufferViewCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkBufferViewCreateInfo\ndeps::Vector{Any}\nbuffer::Buffer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BufferViewCreateInfo-Tuple{Any, Format, Integer, Integer}","page":"API","title":"Vulkan._BufferViewCreateInfo","text":"_BufferViewCreateInfo(buffer, format::Format, offset::Integer, range::Integer; next = C_NULL, flags = 0)\n\nArguments:\n\nbuffer\nformat::Format\noffset::Integer\nrange::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_BufferViewCreateInfo(buffer, format::Format, offset::Integer, range::Integer; next, flags) -> _BufferViewCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._CalibratedTimestampInfoEXT","page":"API","title":"Vulkan._CalibratedTimestampInfoEXT","text":"Intermediate wrapper for VkCalibratedTimestampInfoEXT.\n\nExtension: VKEXTcalibrated_timestamps\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkCalibratedTimestampInfoEXT.html\n\nstruct _CalibratedTimestampInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkCalibratedTimestampInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CalibratedTimestampInfoEXT-Tuple{TimeDomainEXT}","page":"API","title":"Vulkan._CalibratedTimestampInfoEXT","text":"_CalibratedTimestampInfoEXT(time_domain::TimeDomainEXT; next = C_NULL)\n\nExtension: VK_EXT_calibrated_timestamps\n\nArguments:\n\ntime_domain::TimeDomainEXT\nnext: defaults to C_NULL\n\nAPI documentation\n\n_CalibratedTimestampInfoEXT(time_domain::TimeDomainEXT; next) -> _CalibratedTimestampInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._CheckpointData2NV","page":"API","title":"Vulkan._CheckpointData2NV","text":"Intermediate wrapper for VkCheckpointData2NV.\n\nExtension: VKKHRsynchronization2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkCheckpointData2NV.html\n\nstruct _CheckpointData2NV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkCheckpointData2NV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CheckpointData2NV-Tuple{Integer, Ptr{Nothing}}","page":"API","title":"Vulkan._CheckpointData2NV","text":"_CheckpointData2NV(stage::Integer, checkpoint_marker::Ptr{Cvoid}; next = C_NULL)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\nstage::Integer\ncheckpoint_marker::Ptr{Cvoid}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_CheckpointData2NV(stage::Integer, checkpoint_marker::Ptr{Nothing}; next) -> _CheckpointData2NV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._CheckpointDataNV","page":"API","title":"Vulkan._CheckpointDataNV","text":"Intermediate wrapper for VkCheckpointDataNV.\n\nExtension: VKNVdevicediagnosticcheckpoints\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkCheckpointDataNV.html\n\nstruct _CheckpointDataNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkCheckpointDataNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CheckpointDataNV-Tuple{PipelineStageFlag, Ptr{Nothing}}","page":"API","title":"Vulkan._CheckpointDataNV","text":"_CheckpointDataNV(stage::PipelineStageFlag, checkpoint_marker::Ptr{Cvoid}; next = C_NULL)\n\nExtension: VK_NV_device_diagnostic_checkpoints\n\nArguments:\n\nstage::PipelineStageFlag\ncheckpoint_marker::Ptr{Cvoid}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_CheckpointDataNV(stage::PipelineStageFlag, checkpoint_marker::Ptr{Nothing}; next) -> _CheckpointDataNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ClearAttachment","page":"API","title":"Vulkan._ClearAttachment","text":"Intermediate wrapper for VkClearAttachment.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkClearAttachment.html\n\nstruct _ClearAttachment <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkClearAttachment\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ClearAttachment-Tuple{ImageAspectFlag, Integer, _ClearValue}","page":"API","title":"Vulkan._ClearAttachment","text":"_ClearAttachment(aspect_mask::ImageAspectFlag, color_attachment::Integer, clear_value::_ClearValue)\n\nArguments:\n\naspect_mask::ImageAspectFlag\ncolor_attachment::Integer\nclear_value::_ClearValue\n\nAPI documentation\n\n_ClearAttachment(aspect_mask::ImageAspectFlag, color_attachment::Integer, clear_value::_ClearValue) -> _ClearAttachment\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ClearColorValue","page":"API","title":"Vulkan._ClearColorValue","text":"Intermediate wrapper for VkClearColorValue.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkClearColorValue.html\n\nstruct _ClearColorValue <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkClearColorValue\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ClearDepthStencilValue","page":"API","title":"Vulkan._ClearDepthStencilValue","text":"Intermediate wrapper for VkClearDepthStencilValue.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkClearDepthStencilValue.html\n\nstruct _ClearDepthStencilValue <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkClearDepthStencilValue\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ClearDepthStencilValue-Tuple{Real, Integer}","page":"API","title":"Vulkan._ClearDepthStencilValue","text":"_ClearDepthStencilValue(depth::Real, stencil::Integer)\n\nArguments:\n\ndepth::Real\nstencil::Integer\n\nAPI documentation\n\n_ClearDepthStencilValue(depth::Real, stencil::Integer) -> _ClearDepthStencilValue\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ClearRect","page":"API","title":"Vulkan._ClearRect","text":"Intermediate wrapper for VkClearRect.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkClearRect.html\n\nstruct _ClearRect <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkClearRect\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ClearRect-Tuple{_Rect2D, Integer, Integer}","page":"API","title":"Vulkan._ClearRect","text":"_ClearRect(rect::_Rect2D, base_array_layer::Integer, layer_count::Integer)\n\nArguments:\n\nrect::_Rect2D\nbase_array_layer::Integer\nlayer_count::Integer\n\nAPI documentation\n\n_ClearRect(rect::_Rect2D, base_array_layer::Integer, layer_count::Integer) -> _ClearRect\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ClearValue","page":"API","title":"Vulkan._ClearValue","text":"Intermediate wrapper for VkClearValue.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkClearValue.html\n\nstruct _ClearValue <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkClearValue\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CoarseSampleLocationNV","page":"API","title":"Vulkan._CoarseSampleLocationNV","text":"Intermediate wrapper for VkCoarseSampleLocationNV.\n\nExtension: VKNVshadingrateimage\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkCoarseSampleLocationNV.html\n\nstruct _CoarseSampleLocationNV <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkCoarseSampleLocationNV\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CoarseSampleLocationNV-Tuple{Integer, Integer, Integer}","page":"API","title":"Vulkan._CoarseSampleLocationNV","text":"_CoarseSampleLocationNV(pixel_x::Integer, pixel_y::Integer, sample::Integer)\n\nExtension: VK_NV_shading_rate_image\n\nArguments:\n\npixel_x::Integer\npixel_y::Integer\nsample::Integer\n\nAPI documentation\n\n_CoarseSampleLocationNV(pixel_x::Integer, pixel_y::Integer, sample::Integer) -> _CoarseSampleLocationNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._CoarseSampleOrderCustomNV","page":"API","title":"Vulkan._CoarseSampleOrderCustomNV","text":"Intermediate wrapper for VkCoarseSampleOrderCustomNV.\n\nExtension: VKNVshadingrateimage\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkCoarseSampleOrderCustomNV.html\n\nstruct _CoarseSampleOrderCustomNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkCoarseSampleOrderCustomNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CoarseSampleOrderCustomNV-Tuple{ShadingRatePaletteEntryNV, Integer, AbstractArray}","page":"API","title":"Vulkan._CoarseSampleOrderCustomNV","text":"_CoarseSampleOrderCustomNV(shading_rate::ShadingRatePaletteEntryNV, sample_count::Integer, sample_locations::AbstractArray{_CoarseSampleLocationNV})\n\nExtension: VK_NV_shading_rate_image\n\nArguments:\n\nshading_rate::ShadingRatePaletteEntryNV\nsample_count::Integer\nsample_locations::AbstractArray{_CoarseSampleLocationNV}\n\nAPI documentation\n\n_CoarseSampleOrderCustomNV(shading_rate::ShadingRatePaletteEntryNV, sample_count::Integer, sample_locations::AbstractArray) -> _CoarseSampleOrderCustomNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._CommandBufferAllocateInfo","page":"API","title":"Vulkan._CommandBufferAllocateInfo","text":"Intermediate wrapper for VkCommandBufferAllocateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkCommandBufferAllocateInfo.html\n\nstruct _CommandBufferAllocateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkCommandBufferAllocateInfo\ndeps::Vector{Any}\ncommand_pool::CommandPool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CommandBufferAllocateInfo-Tuple{Any, CommandBufferLevel, Integer}","page":"API","title":"Vulkan._CommandBufferAllocateInfo","text":"_CommandBufferAllocateInfo(command_pool, level::CommandBufferLevel, command_buffer_count::Integer; next = C_NULL)\n\nArguments:\n\ncommand_pool\nlevel::CommandBufferLevel\ncommand_buffer_count::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_CommandBufferAllocateInfo(command_pool, level::CommandBufferLevel, command_buffer_count::Integer; next) -> _CommandBufferAllocateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._CommandBufferBeginInfo","page":"API","title":"Vulkan._CommandBufferBeginInfo","text":"Intermediate wrapper for VkCommandBufferBeginInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkCommandBufferBeginInfo.html\n\nstruct _CommandBufferBeginInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkCommandBufferBeginInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CommandBufferBeginInfo-Tuple{}","page":"API","title":"Vulkan._CommandBufferBeginInfo","text":"_CommandBufferBeginInfo(; next = C_NULL, flags = 0, inheritance_info = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\nflags: defaults to 0\ninheritance_info: defaults to C_NULL\n\nAPI documentation\n\n_CommandBufferBeginInfo(; next, flags, inheritance_info) -> _CommandBufferBeginInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._CommandBufferInheritanceConditionalRenderingInfoEXT","page":"API","title":"Vulkan._CommandBufferInheritanceConditionalRenderingInfoEXT","text":"Intermediate wrapper for VkCommandBufferInheritanceConditionalRenderingInfoEXT.\n\nExtension: VKEXTconditional_rendering\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkCommandBufferInheritanceConditionalRenderingInfoEXT.html\n\nstruct _CommandBufferInheritanceConditionalRenderingInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkCommandBufferInheritanceConditionalRenderingInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CommandBufferInheritanceConditionalRenderingInfoEXT-Tuple{Bool}","page":"API","title":"Vulkan._CommandBufferInheritanceConditionalRenderingInfoEXT","text":"_CommandBufferInheritanceConditionalRenderingInfoEXT(conditional_rendering_enable::Bool; next = C_NULL)\n\nExtension: VK_EXT_conditional_rendering\n\nArguments:\n\nconditional_rendering_enable::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_CommandBufferInheritanceConditionalRenderingInfoEXT(conditional_rendering_enable::Bool; next) -> _CommandBufferInheritanceConditionalRenderingInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._CommandBufferInheritanceInfo","page":"API","title":"Vulkan._CommandBufferInheritanceInfo","text":"Intermediate wrapper for VkCommandBufferInheritanceInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkCommandBufferInheritanceInfo.html\n\nstruct _CommandBufferInheritanceInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkCommandBufferInheritanceInfo\ndeps::Vector{Any}\nrender_pass::Union{Ptr{Nothing}, RenderPass}\nframebuffer::Union{Ptr{Nothing}, Framebuffer}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CommandBufferInheritanceInfo-Tuple{Integer, Bool}","page":"API","title":"Vulkan._CommandBufferInheritanceInfo","text":"_CommandBufferInheritanceInfo(subpass::Integer, occlusion_query_enable::Bool; next = C_NULL, render_pass = C_NULL, framebuffer = C_NULL, query_flags = 0, pipeline_statistics = 0)\n\nArguments:\n\nsubpass::Integer\nocclusion_query_enable::Bool\nnext: defaults to C_NULL\nrender_pass: defaults to C_NULL\nframebuffer: defaults to C_NULL\nquery_flags: defaults to 0\npipeline_statistics: defaults to 0\n\nAPI documentation\n\n_CommandBufferInheritanceInfo(subpass::Integer, occlusion_query_enable::Bool; next, render_pass, framebuffer, query_flags, pipeline_statistics) -> _CommandBufferInheritanceInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._CommandBufferInheritanceRenderPassTransformInfoQCOM","page":"API","title":"Vulkan._CommandBufferInheritanceRenderPassTransformInfoQCOM","text":"Intermediate wrapper for VkCommandBufferInheritanceRenderPassTransformInfoQCOM.\n\nExtension: VKQCOMrenderpasstransform\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkCommandBufferInheritanceRenderPassTransformInfoQCOM.html\n\nstruct _CommandBufferInheritanceRenderPassTransformInfoQCOM <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkCommandBufferInheritanceRenderPassTransformInfoQCOM\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CommandBufferInheritanceRenderPassTransformInfoQCOM-Tuple{SurfaceTransformFlagKHR, _Rect2D}","page":"API","title":"Vulkan._CommandBufferInheritanceRenderPassTransformInfoQCOM","text":"_CommandBufferInheritanceRenderPassTransformInfoQCOM(transform::SurfaceTransformFlagKHR, render_area::_Rect2D; next = C_NULL)\n\nExtension: VK_QCOM_render_pass_transform\n\nArguments:\n\ntransform::SurfaceTransformFlagKHR\nrender_area::_Rect2D\nnext: defaults to C_NULL\n\nAPI documentation\n\n_CommandBufferInheritanceRenderPassTransformInfoQCOM(transform::SurfaceTransformFlagKHR, render_area::_Rect2D; next) -> _CommandBufferInheritanceRenderPassTransformInfoQCOM\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._CommandBufferInheritanceViewportScissorInfoNV","page":"API","title":"Vulkan._CommandBufferInheritanceViewportScissorInfoNV","text":"Intermediate wrapper for VkCommandBufferInheritanceViewportScissorInfoNV.\n\nExtension: VKNVinheritedviewportscissor\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkCommandBufferInheritanceViewportScissorInfoNV.html\n\nstruct _CommandBufferInheritanceViewportScissorInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkCommandBufferInheritanceViewportScissorInfoNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CommandBufferInheritanceViewportScissorInfoNV-Tuple{Bool, Integer, _Viewport}","page":"API","title":"Vulkan._CommandBufferInheritanceViewportScissorInfoNV","text":"_CommandBufferInheritanceViewportScissorInfoNV(viewport_scissor_2_d::Bool, viewport_depth_count::Integer, viewport_depths::_Viewport; next = C_NULL)\n\nExtension: VK_NV_inherited_viewport_scissor\n\nArguments:\n\nviewport_scissor_2_d::Bool\nviewport_depth_count::Integer\nviewport_depths::_Viewport\nnext: defaults to C_NULL\n\nAPI documentation\n\n_CommandBufferInheritanceViewportScissorInfoNV(viewport_scissor_2_d::Bool, viewport_depth_count::Integer, viewport_depths::_Viewport; next) -> _CommandBufferInheritanceViewportScissorInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._CommandBufferSubmitInfoKHR","page":"API","title":"Vulkan._CommandBufferSubmitInfoKHR","text":"Intermediate wrapper for VkCommandBufferSubmitInfoKHR.\n\nExtension: VKKHRsynchronization2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkCommandBufferSubmitInfoKHR.html\n\nstruct _CommandBufferSubmitInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkCommandBufferSubmitInfoKHR\ndeps::Vector{Any}\ncommand_buffer::CommandBuffer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CommandBufferSubmitInfoKHR-Tuple{Any, Integer}","page":"API","title":"Vulkan._CommandBufferSubmitInfoKHR","text":"_CommandBufferSubmitInfoKHR(command_buffer, device_mask::Integer; next = C_NULL)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncommand_buffer\ndevice_mask::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_CommandBufferSubmitInfoKHR(command_buffer, device_mask::Integer; next) -> _CommandBufferSubmitInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._CommandPoolCreateInfo","page":"API","title":"Vulkan._CommandPoolCreateInfo","text":"Intermediate wrapper for VkCommandPoolCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkCommandPoolCreateInfo.html\n\nstruct _CommandPoolCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkCommandPoolCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CommandPoolCreateInfo-Tuple{Integer}","page":"API","title":"Vulkan._CommandPoolCreateInfo","text":"_CommandPoolCreateInfo(queue_family_index::Integer; next = C_NULL, flags = 0)\n\nArguments:\n\nqueue_family_index::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_CommandPoolCreateInfo(queue_family_index::Integer; next, flags) -> _CommandPoolCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ComponentMapping","page":"API","title":"Vulkan._ComponentMapping","text":"Intermediate wrapper for VkComponentMapping.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkComponentMapping.html\n\nstruct _ComponentMapping <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkComponentMapping\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ComponentMapping-NTuple{4, ComponentSwizzle}","page":"API","title":"Vulkan._ComponentMapping","text":"_ComponentMapping(r::ComponentSwizzle, g::ComponentSwizzle, b::ComponentSwizzle, a::ComponentSwizzle)\n\nArguments:\n\nr::ComponentSwizzle\ng::ComponentSwizzle\nb::ComponentSwizzle\na::ComponentSwizzle\n\nAPI documentation\n\n_ComponentMapping(r::ComponentSwizzle, g::ComponentSwizzle, b::ComponentSwizzle, a::ComponentSwizzle) -> _ComponentMapping\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ComputePipelineCreateInfo","page":"API","title":"Vulkan._ComputePipelineCreateInfo","text":"Intermediate wrapper for VkComputePipelineCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkComputePipelineCreateInfo.html\n\nstruct _ComputePipelineCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkComputePipelineCreateInfo\ndeps::Vector{Any}\nlayout::PipelineLayout\nbase_pipeline_handle::Union{Ptr{Nothing}, Pipeline}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ComputePipelineCreateInfo-Tuple{_PipelineShaderStageCreateInfo, Any, Integer}","page":"API","title":"Vulkan._ComputePipelineCreateInfo","text":"_ComputePipelineCreateInfo(stage::_PipelineShaderStageCreateInfo, layout, base_pipeline_index::Integer; next = C_NULL, flags = 0, base_pipeline_handle = C_NULL)\n\nArguments:\n\nstage::_PipelineShaderStageCreateInfo\nlayout\nbase_pipeline_index::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\nbase_pipeline_handle: defaults to C_NULL\n\nAPI documentation\n\n_ComputePipelineCreateInfo(stage::_PipelineShaderStageCreateInfo, layout, base_pipeline_index::Integer; next, flags, base_pipeline_handle) -> _ComputePipelineCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ConditionalRenderingBeginInfoEXT","page":"API","title":"Vulkan._ConditionalRenderingBeginInfoEXT","text":"Intermediate wrapper for VkConditionalRenderingBeginInfoEXT.\n\nExtension: VKEXTconditional_rendering\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkConditionalRenderingBeginInfoEXT.html\n\nstruct _ConditionalRenderingBeginInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkConditionalRenderingBeginInfoEXT\ndeps::Vector{Any}\nbuffer::Buffer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ConditionalRenderingBeginInfoEXT-Tuple{Any, Integer}","page":"API","title":"Vulkan._ConditionalRenderingBeginInfoEXT","text":"_ConditionalRenderingBeginInfoEXT(buffer, offset::Integer; next = C_NULL, flags = 0)\n\nExtension: VK_EXT_conditional_rendering\n\nArguments:\n\nbuffer\noffset::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_ConditionalRenderingBeginInfoEXT(buffer, offset::Integer; next, flags) -> _ConditionalRenderingBeginInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ConformanceVersion","page":"API","title":"Vulkan._ConformanceVersion","text":"Intermediate wrapper for VkConformanceVersion.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkConformanceVersion.html\n\nstruct _ConformanceVersion <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkConformanceVersion\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ConformanceVersion-NTuple{4, Integer}","page":"API","title":"Vulkan._ConformanceVersion","text":"_ConformanceVersion(major::Integer, minor::Integer, subminor::Integer, patch::Integer)\n\nArguments:\n\nmajor::Integer\nminor::Integer\nsubminor::Integer\npatch::Integer\n\nAPI documentation\n\n_ConformanceVersion(major::Integer, minor::Integer, subminor::Integer, patch::Integer) -> _ConformanceVersion\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._CooperativeMatrixPropertiesNV","page":"API","title":"Vulkan._CooperativeMatrixPropertiesNV","text":"Intermediate wrapper for VkCooperativeMatrixPropertiesNV.\n\nExtension: VKNVcooperative_matrix\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkCooperativeMatrixPropertiesNV.html\n\nstruct _CooperativeMatrixPropertiesNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkCooperativeMatrixPropertiesNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CooperativeMatrixPropertiesNV-Tuple{Integer, Integer, Integer, ComponentTypeNV, ComponentTypeNV, ComponentTypeNV, ComponentTypeNV, ScopeNV}","page":"API","title":"Vulkan._CooperativeMatrixPropertiesNV","text":"_CooperativeMatrixPropertiesNV(m_size::Integer, n_size::Integer, k_size::Integer, a_type::ComponentTypeNV, b_type::ComponentTypeNV, c_type::ComponentTypeNV, d_type::ComponentTypeNV, scope::ScopeNV; next = C_NULL)\n\nExtension: VK_NV_cooperative_matrix\n\nArguments:\n\nm_size::Integer\nn_size::Integer\nk_size::Integer\na_type::ComponentTypeNV\nb_type::ComponentTypeNV\nc_type::ComponentTypeNV\nd_type::ComponentTypeNV\nscope::ScopeNV\nnext: defaults to C_NULL\n\nAPI documentation\n\n_CooperativeMatrixPropertiesNV(m_size::Integer, n_size::Integer, k_size::Integer, a_type::ComponentTypeNV, b_type::ComponentTypeNV, c_type::ComponentTypeNV, d_type::ComponentTypeNV, scope::ScopeNV; next) -> _CooperativeMatrixPropertiesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._CopyAccelerationStructureInfoKHR","page":"API","title":"Vulkan._CopyAccelerationStructureInfoKHR","text":"Intermediate wrapper for VkCopyAccelerationStructureInfoKHR.\n\nExtension: VKKHRacceleration_structure\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkCopyAccelerationStructureInfoKHR.html\n\nstruct _CopyAccelerationStructureInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkCopyAccelerationStructureInfoKHR\ndeps::Vector{Any}\nsrc::AccelerationStructureKHR\ndst::AccelerationStructureKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CopyAccelerationStructureInfoKHR-Tuple{Any, Any, CopyAccelerationStructureModeKHR}","page":"API","title":"Vulkan._CopyAccelerationStructureInfoKHR","text":"_CopyAccelerationStructureInfoKHR(src, dst, mode::CopyAccelerationStructureModeKHR; next = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\nsrc\ndst\nmode::CopyAccelerationStructureModeKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\n_CopyAccelerationStructureInfoKHR(src, dst, mode::CopyAccelerationStructureModeKHR; next) -> _CopyAccelerationStructureInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._CopyAccelerationStructureToMemoryInfoKHR","page":"API","title":"Vulkan._CopyAccelerationStructureToMemoryInfoKHR","text":"Intermediate wrapper for VkCopyAccelerationStructureToMemoryInfoKHR.\n\nExtension: VKKHRacceleration_structure\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkCopyAccelerationStructureToMemoryInfoKHR.html\n\nstruct _CopyAccelerationStructureToMemoryInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkCopyAccelerationStructureToMemoryInfoKHR\ndeps::Vector{Any}\nsrc::AccelerationStructureKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CopyAccelerationStructureToMemoryInfoKHR-Tuple{Any, _DeviceOrHostAddressKHR, CopyAccelerationStructureModeKHR}","page":"API","title":"Vulkan._CopyAccelerationStructureToMemoryInfoKHR","text":"_CopyAccelerationStructureToMemoryInfoKHR(src, dst::_DeviceOrHostAddressKHR, mode::CopyAccelerationStructureModeKHR; next = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\nsrc\ndst::_DeviceOrHostAddressKHR\nmode::CopyAccelerationStructureModeKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\n_CopyAccelerationStructureToMemoryInfoKHR(src, dst::_DeviceOrHostAddressKHR, mode::CopyAccelerationStructureModeKHR; next) -> _CopyAccelerationStructureToMemoryInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._CopyBufferInfo2KHR","page":"API","title":"Vulkan._CopyBufferInfo2KHR","text":"Intermediate wrapper for VkCopyBufferInfo2KHR.\n\nExtension: VKKHRcopy_commands2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkCopyBufferInfo2KHR.html\n\nstruct _CopyBufferInfo2KHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkCopyBufferInfo2KHR\ndeps::Vector{Any}\nsrc_buffer::Buffer\ndst_buffer::Buffer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CopyBufferInfo2KHR-Tuple{Any, Any, AbstractArray}","page":"API","title":"Vulkan._CopyBufferInfo2KHR","text":"_CopyBufferInfo2KHR(src_buffer, dst_buffer, regions::AbstractArray{_BufferCopy2KHR}; next = C_NULL)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\nsrc_buffer\ndst_buffer\nregions::AbstractArray{_BufferCopy2KHR}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_CopyBufferInfo2KHR(src_buffer, dst_buffer, regions::AbstractArray; next) -> _CopyBufferInfo2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._CopyBufferToImageInfo2KHR","page":"API","title":"Vulkan._CopyBufferToImageInfo2KHR","text":"Intermediate wrapper for VkCopyBufferToImageInfo2KHR.\n\nExtension: VKKHRcopy_commands2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkCopyBufferToImageInfo2KHR.html\n\nstruct _CopyBufferToImageInfo2KHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkCopyBufferToImageInfo2KHR\ndeps::Vector{Any}\nsrc_buffer::Buffer\ndst_image::Image\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CopyBufferToImageInfo2KHR-Tuple{Any, Any, ImageLayout, AbstractArray}","page":"API","title":"Vulkan._CopyBufferToImageInfo2KHR","text":"_CopyBufferToImageInfo2KHR(src_buffer, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray{_BufferImageCopy2KHR}; next = C_NULL)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\nsrc_buffer\ndst_image\ndst_image_layout::ImageLayout\nregions::AbstractArray{_BufferImageCopy2KHR}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_CopyBufferToImageInfo2KHR(src_buffer, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray; next) -> _CopyBufferToImageInfo2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._CopyCommandTransformInfoQCOM","page":"API","title":"Vulkan._CopyCommandTransformInfoQCOM","text":"Intermediate wrapper for VkCopyCommandTransformInfoQCOM.\n\nExtension: VKQCOMrotatedcopycommands\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkCopyCommandTransformInfoQCOM.html\n\nstruct _CopyCommandTransformInfoQCOM <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkCopyCommandTransformInfoQCOM\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CopyCommandTransformInfoQCOM-Tuple{SurfaceTransformFlagKHR}","page":"API","title":"Vulkan._CopyCommandTransformInfoQCOM","text":"_CopyCommandTransformInfoQCOM(transform::SurfaceTransformFlagKHR; next = C_NULL)\n\nExtension: VK_QCOM_rotated_copy_commands\n\nArguments:\n\ntransform::SurfaceTransformFlagKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\n_CopyCommandTransformInfoQCOM(transform::SurfaceTransformFlagKHR; next) -> _CopyCommandTransformInfoQCOM\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._CopyDescriptorSet","page":"API","title":"Vulkan._CopyDescriptorSet","text":"Intermediate wrapper for VkCopyDescriptorSet.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkCopyDescriptorSet.html\n\nstruct _CopyDescriptorSet <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkCopyDescriptorSet\ndeps::Vector{Any}\nsrc_set::DescriptorSet\ndst_set::DescriptorSet\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CopyDescriptorSet-Tuple{Any, Integer, Integer, Any, Integer, Integer, Integer}","page":"API","title":"Vulkan._CopyDescriptorSet","text":"_CopyDescriptorSet(src_set, src_binding::Integer, src_array_element::Integer, dst_set, dst_binding::Integer, dst_array_element::Integer, descriptor_count::Integer; next = C_NULL)\n\nArguments:\n\nsrc_set\nsrc_binding::Integer\nsrc_array_element::Integer\ndst_set\ndst_binding::Integer\ndst_array_element::Integer\ndescriptor_count::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_CopyDescriptorSet(src_set, src_binding::Integer, src_array_element::Integer, dst_set, dst_binding::Integer, dst_array_element::Integer, descriptor_count::Integer; next) -> _CopyDescriptorSet\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._CopyImageInfo2KHR","page":"API","title":"Vulkan._CopyImageInfo2KHR","text":"Intermediate wrapper for VkCopyImageInfo2KHR.\n\nExtension: VKKHRcopy_commands2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkCopyImageInfo2KHR.html\n\nstruct _CopyImageInfo2KHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkCopyImageInfo2KHR\ndeps::Vector{Any}\nsrc_image::Image\ndst_image::Image\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CopyImageInfo2KHR-Tuple{Any, ImageLayout, Any, ImageLayout, AbstractArray}","page":"API","title":"Vulkan._CopyImageInfo2KHR","text":"_CopyImageInfo2KHR(src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray{_ImageCopy2KHR}; next = C_NULL)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\nsrc_image\nsrc_image_layout::ImageLayout\ndst_image\ndst_image_layout::ImageLayout\nregions::AbstractArray{_ImageCopy2KHR}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_CopyImageInfo2KHR(src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray; next) -> _CopyImageInfo2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._CopyImageToBufferInfo2KHR","page":"API","title":"Vulkan._CopyImageToBufferInfo2KHR","text":"Intermediate wrapper for VkCopyImageToBufferInfo2KHR.\n\nExtension: VKKHRcopy_commands2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkCopyImageToBufferInfo2KHR.html\n\nstruct _CopyImageToBufferInfo2KHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkCopyImageToBufferInfo2KHR\ndeps::Vector{Any}\nsrc_image::Image\ndst_buffer::Buffer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CopyImageToBufferInfo2KHR-Tuple{Any, ImageLayout, Any, AbstractArray}","page":"API","title":"Vulkan._CopyImageToBufferInfo2KHR","text":"_CopyImageToBufferInfo2KHR(src_image, src_image_layout::ImageLayout, dst_buffer, regions::AbstractArray{_BufferImageCopy2KHR}; next = C_NULL)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\nsrc_image\nsrc_image_layout::ImageLayout\ndst_buffer\nregions::AbstractArray{_BufferImageCopy2KHR}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_CopyImageToBufferInfo2KHR(src_image, src_image_layout::ImageLayout, dst_buffer, regions::AbstractArray; next) -> _CopyImageToBufferInfo2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._CopyMemoryToAccelerationStructureInfoKHR","page":"API","title":"Vulkan._CopyMemoryToAccelerationStructureInfoKHR","text":"Intermediate wrapper for VkCopyMemoryToAccelerationStructureInfoKHR.\n\nExtension: VKKHRacceleration_structure\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkCopyMemoryToAccelerationStructureInfoKHR.html\n\nstruct _CopyMemoryToAccelerationStructureInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkCopyMemoryToAccelerationStructureInfoKHR\ndeps::Vector{Any}\ndst::AccelerationStructureKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CopyMemoryToAccelerationStructureInfoKHR-Tuple{_DeviceOrHostAddressConstKHR, Any, CopyAccelerationStructureModeKHR}","page":"API","title":"Vulkan._CopyMemoryToAccelerationStructureInfoKHR","text":"_CopyMemoryToAccelerationStructureInfoKHR(src::_DeviceOrHostAddressConstKHR, dst, mode::CopyAccelerationStructureModeKHR; next = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\nsrc::_DeviceOrHostAddressConstKHR\ndst\nmode::CopyAccelerationStructureModeKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\n_CopyMemoryToAccelerationStructureInfoKHR(src::_DeviceOrHostAddressConstKHR, dst, mode::CopyAccelerationStructureModeKHR; next) -> _CopyMemoryToAccelerationStructureInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DebugMarkerMarkerInfoEXT","page":"API","title":"Vulkan._DebugMarkerMarkerInfoEXT","text":"Intermediate wrapper for VkDebugMarkerMarkerInfoEXT.\n\nExtension: VKEXTdebug_marker\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDebugMarkerMarkerInfoEXT.html\n\nstruct _DebugMarkerMarkerInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDebugMarkerMarkerInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DebugMarkerMarkerInfoEXT-Tuple{AbstractString, NTuple{4, Float32}}","page":"API","title":"Vulkan._DebugMarkerMarkerInfoEXT","text":"_DebugMarkerMarkerInfoEXT(marker_name::AbstractString, color::NTuple{4, Float32}; next = C_NULL)\n\nExtension: VK_EXT_debug_marker\n\nArguments:\n\nmarker_name::AbstractString\ncolor::NTuple{4, Float32}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DebugMarkerMarkerInfoEXT(marker_name::AbstractString, color::NTuple{4, Float32}; next) -> _DebugMarkerMarkerInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DebugMarkerObjectNameInfoEXT","page":"API","title":"Vulkan._DebugMarkerObjectNameInfoEXT","text":"Intermediate wrapper for VkDebugMarkerObjectNameInfoEXT.\n\nExtension: VKEXTdebug_marker\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDebugMarkerObjectNameInfoEXT.html\n\nstruct _DebugMarkerObjectNameInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDebugMarkerObjectNameInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DebugMarkerObjectNameInfoEXT-Tuple{DebugReportObjectTypeEXT, Integer, AbstractString}","page":"API","title":"Vulkan._DebugMarkerObjectNameInfoEXT","text":"_DebugMarkerObjectNameInfoEXT(object_type::DebugReportObjectTypeEXT, object::Integer, object_name::AbstractString; next = C_NULL)\n\nExtension: VK_EXT_debug_marker\n\nArguments:\n\nobject_type::DebugReportObjectTypeEXT\nobject::Integer\nobject_name::AbstractString\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DebugMarkerObjectNameInfoEXT(object_type::DebugReportObjectTypeEXT, object::Integer, object_name::AbstractString; next) -> _DebugMarkerObjectNameInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DebugMarkerObjectTagInfoEXT","page":"API","title":"Vulkan._DebugMarkerObjectTagInfoEXT","text":"Intermediate wrapper for VkDebugMarkerObjectTagInfoEXT.\n\nExtension: VKEXTdebug_marker\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDebugMarkerObjectTagInfoEXT.html\n\nstruct _DebugMarkerObjectTagInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDebugMarkerObjectTagInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DebugMarkerObjectTagInfoEXT-Tuple{DebugReportObjectTypeEXT, Integer, Integer, Integer, Ptr{Nothing}}","page":"API","title":"Vulkan._DebugMarkerObjectTagInfoEXT","text":"_DebugMarkerObjectTagInfoEXT(object_type::DebugReportObjectTypeEXT, object::Integer, tag_name::Integer, tag_size::Integer, tag::Ptr{Cvoid}; next = C_NULL)\n\nExtension: VK_EXT_debug_marker\n\nArguments:\n\nobject_type::DebugReportObjectTypeEXT\nobject::Integer\ntag_name::Integer\ntag_size::Integer\ntag::Ptr{Cvoid}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DebugMarkerObjectTagInfoEXT(object_type::DebugReportObjectTypeEXT, object::Integer, tag_name::Integer, tag_size::Integer, tag::Ptr{Nothing}; next) -> _DebugMarkerObjectTagInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DebugReportCallbackCreateInfoEXT","page":"API","title":"Vulkan._DebugReportCallbackCreateInfoEXT","text":"Intermediate wrapper for VkDebugReportCallbackCreateInfoEXT.\n\nExtension: VKEXTdebug_report\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDebugReportCallbackCreateInfoEXT.html\n\nstruct _DebugReportCallbackCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDebugReportCallbackCreateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DebugReportCallbackCreateInfoEXT-Tuple{Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._DebugReportCallbackCreateInfoEXT","text":"_DebugReportCallbackCreateInfoEXT(pfn_callback::FunctionPtr; next = C_NULL, flags = 0, user_data = C_NULL)\n\nExtension: VK_EXT_debug_report\n\nArguments:\n\npfn_callback::FunctionPtr\nnext: defaults to C_NULL\nflags: defaults to 0\nuser_data: defaults to C_NULL\n\nAPI documentation\n\n_DebugReportCallbackCreateInfoEXT(pfn_callback::Union{Ptr{Nothing}, Base.CFunction}; next, flags, user_data) -> _DebugReportCallbackCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DebugUtilsLabelEXT","page":"API","title":"Vulkan._DebugUtilsLabelEXT","text":"Intermediate wrapper for VkDebugUtilsLabelEXT.\n\nExtension: VKEXTdebug_utils\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDebugUtilsLabelEXT.html\n\nstruct _DebugUtilsLabelEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDebugUtilsLabelEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DebugUtilsLabelEXT-Tuple{AbstractString, NTuple{4, Float32}}","page":"API","title":"Vulkan._DebugUtilsLabelEXT","text":"_DebugUtilsLabelEXT(label_name::AbstractString, color::NTuple{4, Float32}; next = C_NULL)\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\nlabel_name::AbstractString\ncolor::NTuple{4, Float32}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DebugUtilsLabelEXT(label_name::AbstractString, color::NTuple{4, Float32}; next) -> _DebugUtilsLabelEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DebugUtilsMessengerCallbackDataEXT","page":"API","title":"Vulkan._DebugUtilsMessengerCallbackDataEXT","text":"Intermediate wrapper for VkDebugUtilsMessengerCallbackDataEXT.\n\nExtension: VKEXTdebug_utils\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDebugUtilsMessengerCallbackDataEXT.html\n\nstruct _DebugUtilsMessengerCallbackDataEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDebugUtilsMessengerCallbackDataEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DebugUtilsMessengerCallbackDataEXT-Tuple{Integer, AbstractString, AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan._DebugUtilsMessengerCallbackDataEXT","text":"_DebugUtilsMessengerCallbackDataEXT(message_id_number::Integer, message::AbstractString, queue_labels::AbstractArray{_DebugUtilsLabelEXT}, cmd_buf_labels::AbstractArray{_DebugUtilsLabelEXT}, objects::AbstractArray{_DebugUtilsObjectNameInfoEXT}; next = C_NULL, flags = 0, message_id_name = C_NULL)\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\nmessage_id_number::Integer\nmessage::AbstractString\nqueue_labels::AbstractArray{_DebugUtilsLabelEXT}\ncmd_buf_labels::AbstractArray{_DebugUtilsLabelEXT}\nobjects::AbstractArray{_DebugUtilsObjectNameInfoEXT}\nnext: defaults to C_NULL\nflags: defaults to 0\nmessage_id_name: defaults to C_NULL\n\nAPI documentation\n\n_DebugUtilsMessengerCallbackDataEXT(message_id_number::Integer, message::AbstractString, queue_labels::AbstractArray, cmd_buf_labels::AbstractArray, objects::AbstractArray; next, flags, message_id_name) -> _DebugUtilsMessengerCallbackDataEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DebugUtilsMessengerCreateInfoEXT","page":"API","title":"Vulkan._DebugUtilsMessengerCreateInfoEXT","text":"Intermediate wrapper for VkDebugUtilsMessengerCreateInfoEXT.\n\nExtension: VKEXTdebug_utils\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDebugUtilsMessengerCreateInfoEXT.html\n\nstruct _DebugUtilsMessengerCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDebugUtilsMessengerCreateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DebugUtilsMessengerCreateInfoEXT-Tuple{DebugUtilsMessageSeverityFlagEXT, DebugUtilsMessageTypeFlagEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._DebugUtilsMessengerCreateInfoEXT","text":"_DebugUtilsMessengerCreateInfoEXT(message_severity::DebugUtilsMessageSeverityFlagEXT, message_type::DebugUtilsMessageTypeFlagEXT, pfn_user_callback::FunctionPtr; next = C_NULL, flags = 0, user_data = C_NULL)\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\nmessage_severity::DebugUtilsMessageSeverityFlagEXT\nmessage_type::DebugUtilsMessageTypeFlagEXT\npfn_user_callback::FunctionPtr\nnext: defaults to C_NULL\nflags: defaults to 0\nuser_data: defaults to C_NULL\n\nAPI documentation\n\n_DebugUtilsMessengerCreateInfoEXT(message_severity::DebugUtilsMessageSeverityFlagEXT, message_type::DebugUtilsMessageTypeFlagEXT, pfn_user_callback::Union{Ptr{Nothing}, Base.CFunction}; next, flags, user_data) -> _DebugUtilsMessengerCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DebugUtilsObjectNameInfoEXT","page":"API","title":"Vulkan._DebugUtilsObjectNameInfoEXT","text":"Intermediate wrapper for VkDebugUtilsObjectNameInfoEXT.\n\nExtension: VKEXTdebug_utils\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDebugUtilsObjectNameInfoEXT.html\n\nstruct _DebugUtilsObjectNameInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDebugUtilsObjectNameInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DebugUtilsObjectNameInfoEXT-Tuple{ObjectType, Integer}","page":"API","title":"Vulkan._DebugUtilsObjectNameInfoEXT","text":"_DebugUtilsObjectNameInfoEXT(object_type::ObjectType, object_handle::Integer; next = C_NULL, object_name = C_NULL)\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\nobject_type::ObjectType\nobject_handle::Integer\nnext: defaults to C_NULL\nobject_name: defaults to C_NULL\n\nAPI documentation\n\n_DebugUtilsObjectNameInfoEXT(object_type::ObjectType, object_handle::Integer; next, object_name) -> _DebugUtilsObjectNameInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DebugUtilsObjectTagInfoEXT","page":"API","title":"Vulkan._DebugUtilsObjectTagInfoEXT","text":"Intermediate wrapper for VkDebugUtilsObjectTagInfoEXT.\n\nExtension: VKEXTdebug_utils\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDebugUtilsObjectTagInfoEXT.html\n\nstruct _DebugUtilsObjectTagInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDebugUtilsObjectTagInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DebugUtilsObjectTagInfoEXT-Tuple{ObjectType, Integer, Integer, Integer, Ptr{Nothing}}","page":"API","title":"Vulkan._DebugUtilsObjectTagInfoEXT","text":"_DebugUtilsObjectTagInfoEXT(object_type::ObjectType, object_handle::Integer, tag_name::Integer, tag_size::Integer, tag::Ptr{Cvoid}; next = C_NULL)\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\nobject_type::ObjectType\nobject_handle::Integer\ntag_name::Integer\ntag_size::Integer\ntag::Ptr{Cvoid}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DebugUtilsObjectTagInfoEXT(object_type::ObjectType, object_handle::Integer, tag_name::Integer, tag_size::Integer, tag::Ptr{Nothing}; next) -> _DebugUtilsObjectTagInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DedicatedAllocationBufferCreateInfoNV","page":"API","title":"Vulkan._DedicatedAllocationBufferCreateInfoNV","text":"Intermediate wrapper for VkDedicatedAllocationBufferCreateInfoNV.\n\nExtension: VKNVdedicated_allocation\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDedicatedAllocationBufferCreateInfoNV.html\n\nstruct _DedicatedAllocationBufferCreateInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDedicatedAllocationBufferCreateInfoNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DedicatedAllocationBufferCreateInfoNV-Tuple{Bool}","page":"API","title":"Vulkan._DedicatedAllocationBufferCreateInfoNV","text":"_DedicatedAllocationBufferCreateInfoNV(dedicated_allocation::Bool; next = C_NULL)\n\nExtension: VK_NV_dedicated_allocation\n\nArguments:\n\ndedicated_allocation::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DedicatedAllocationBufferCreateInfoNV(dedicated_allocation::Bool; next) -> _DedicatedAllocationBufferCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DedicatedAllocationImageCreateInfoNV","page":"API","title":"Vulkan._DedicatedAllocationImageCreateInfoNV","text":"Intermediate wrapper for VkDedicatedAllocationImageCreateInfoNV.\n\nExtension: VKNVdedicated_allocation\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDedicatedAllocationImageCreateInfoNV.html\n\nstruct _DedicatedAllocationImageCreateInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDedicatedAllocationImageCreateInfoNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DedicatedAllocationImageCreateInfoNV-Tuple{Bool}","page":"API","title":"Vulkan._DedicatedAllocationImageCreateInfoNV","text":"_DedicatedAllocationImageCreateInfoNV(dedicated_allocation::Bool; next = C_NULL)\n\nExtension: VK_NV_dedicated_allocation\n\nArguments:\n\ndedicated_allocation::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DedicatedAllocationImageCreateInfoNV(dedicated_allocation::Bool; next) -> _DedicatedAllocationImageCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DedicatedAllocationMemoryAllocateInfoNV","page":"API","title":"Vulkan._DedicatedAllocationMemoryAllocateInfoNV","text":"Intermediate wrapper for VkDedicatedAllocationMemoryAllocateInfoNV.\n\nExtension: VKNVdedicated_allocation\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDedicatedAllocationMemoryAllocateInfoNV.html\n\nstruct _DedicatedAllocationMemoryAllocateInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDedicatedAllocationMemoryAllocateInfoNV\ndeps::Vector{Any}\nimage::Union{Ptr{Nothing}, Image}\nbuffer::Union{Ptr{Nothing}, Buffer}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DedicatedAllocationMemoryAllocateInfoNV-Tuple{}","page":"API","title":"Vulkan._DedicatedAllocationMemoryAllocateInfoNV","text":"_DedicatedAllocationMemoryAllocateInfoNV(; next = C_NULL, image = C_NULL, buffer = C_NULL)\n\nExtension: VK_NV_dedicated_allocation\n\nArguments:\n\nnext: defaults to C_NULL\nimage: defaults to C_NULL\nbuffer: defaults to C_NULL\n\nAPI documentation\n\n_DedicatedAllocationMemoryAllocateInfoNV(; next, image, buffer) -> _DedicatedAllocationMemoryAllocateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DependencyInfoKHR","page":"API","title":"Vulkan._DependencyInfoKHR","text":"Intermediate wrapper for VkDependencyInfoKHR.\n\nExtension: VKKHRsynchronization2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDependencyInfoKHR.html\n\nstruct _DependencyInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDependencyInfoKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DependencyInfoKHR-Tuple{AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan._DependencyInfoKHR","text":"_DependencyInfoKHR(memory_barriers::AbstractArray{_MemoryBarrier2KHR}, buffer_memory_barriers::AbstractArray{_BufferMemoryBarrier2KHR}, image_memory_barriers::AbstractArray{_ImageMemoryBarrier2KHR}; next = C_NULL, dependency_flags = 0)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\nmemory_barriers::AbstractArray{_MemoryBarrier2KHR}\nbuffer_memory_barriers::AbstractArray{_BufferMemoryBarrier2KHR}\nimage_memory_barriers::AbstractArray{_ImageMemoryBarrier2KHR}\nnext: defaults to C_NULL\ndependency_flags: defaults to 0\n\nAPI documentation\n\n_DependencyInfoKHR(memory_barriers::AbstractArray, buffer_memory_barriers::AbstractArray, image_memory_barriers::AbstractArray; next, dependency_flags) -> _DependencyInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DescriptorBufferInfo","page":"API","title":"Vulkan._DescriptorBufferInfo","text":"Intermediate wrapper for VkDescriptorBufferInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDescriptorBufferInfo.html\n\nstruct _DescriptorBufferInfo <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkDescriptorBufferInfo\nbuffer::Union{Ptr{Nothing}, Buffer}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DescriptorBufferInfo-Tuple{Integer, Integer}","page":"API","title":"Vulkan._DescriptorBufferInfo","text":"_DescriptorBufferInfo(offset::Integer, range::Integer; buffer = C_NULL)\n\nArguments:\n\noffset::Integer\nrange::Integer\nbuffer: defaults to C_NULL\n\nAPI documentation\n\n_DescriptorBufferInfo(offset::Integer, range::Integer; buffer) -> _DescriptorBufferInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DescriptorImageInfo","page":"API","title":"Vulkan._DescriptorImageInfo","text":"Intermediate wrapper for VkDescriptorImageInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDescriptorImageInfo.html\n\nstruct _DescriptorImageInfo <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkDescriptorImageInfo\nsampler::Sampler\nimage_view::ImageView\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DescriptorImageInfo-Tuple{Any, Any, ImageLayout}","page":"API","title":"Vulkan._DescriptorImageInfo","text":"_DescriptorImageInfo(sampler, image_view, image_layout::ImageLayout)\n\nArguments:\n\nsampler\nimage_view\nimage_layout::ImageLayout\n\nAPI documentation\n\n_DescriptorImageInfo(sampler, image_view, image_layout::ImageLayout) -> _DescriptorImageInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DescriptorPoolCreateInfo","page":"API","title":"Vulkan._DescriptorPoolCreateInfo","text":"Intermediate wrapper for VkDescriptorPoolCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDescriptorPoolCreateInfo.html\n\nstruct _DescriptorPoolCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDescriptorPoolCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DescriptorPoolCreateInfo-Tuple{Integer, AbstractArray}","page":"API","title":"Vulkan._DescriptorPoolCreateInfo","text":"_DescriptorPoolCreateInfo(max_sets::Integer, pool_sizes::AbstractArray{_DescriptorPoolSize}; next = C_NULL, flags = 0)\n\nArguments:\n\nmax_sets::Integer\npool_sizes::AbstractArray{_DescriptorPoolSize}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_DescriptorPoolCreateInfo(max_sets::Integer, pool_sizes::AbstractArray; next, flags) -> _DescriptorPoolCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DescriptorPoolInlineUniformBlockCreateInfoEXT","page":"API","title":"Vulkan._DescriptorPoolInlineUniformBlockCreateInfoEXT","text":"Intermediate wrapper for VkDescriptorPoolInlineUniformBlockCreateInfoEXT.\n\nExtension: VKEXTinlineuniformblock\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDescriptorPoolInlineUniformBlockCreateInfoEXT.html\n\nstruct _DescriptorPoolInlineUniformBlockCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDescriptorPoolInlineUniformBlockCreateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DescriptorPoolInlineUniformBlockCreateInfoEXT-Tuple{Integer}","page":"API","title":"Vulkan._DescriptorPoolInlineUniformBlockCreateInfoEXT","text":"_DescriptorPoolInlineUniformBlockCreateInfoEXT(max_inline_uniform_block_bindings::Integer; next = C_NULL)\n\nExtension: VK_EXT_inline_uniform_block\n\nArguments:\n\nmax_inline_uniform_block_bindings::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DescriptorPoolInlineUniformBlockCreateInfoEXT(max_inline_uniform_block_bindings::Integer; next) -> _DescriptorPoolInlineUniformBlockCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DescriptorPoolSize","page":"API","title":"Vulkan._DescriptorPoolSize","text":"Intermediate wrapper for VkDescriptorPoolSize.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDescriptorPoolSize.html\n\nstruct _DescriptorPoolSize <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkDescriptorPoolSize\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DescriptorPoolSize-Tuple{DescriptorType, Integer}","page":"API","title":"Vulkan._DescriptorPoolSize","text":"_DescriptorPoolSize(type::DescriptorType, descriptor_count::Integer)\n\nArguments:\n\ntype::DescriptorType\ndescriptor_count::Integer\n\nAPI documentation\n\n_DescriptorPoolSize(type::DescriptorType, descriptor_count::Integer) -> _DescriptorPoolSize\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DescriptorSetAllocateInfo","page":"API","title":"Vulkan._DescriptorSetAllocateInfo","text":"Intermediate wrapper for VkDescriptorSetAllocateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDescriptorSetAllocateInfo.html\n\nstruct _DescriptorSetAllocateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDescriptorSetAllocateInfo\ndeps::Vector{Any}\ndescriptor_pool::DescriptorPool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DescriptorSetAllocateInfo-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._DescriptorSetAllocateInfo","text":"_DescriptorSetAllocateInfo(descriptor_pool, set_layouts::AbstractArray{DescriptorSetLayout}; next = C_NULL)\n\nArguments:\n\ndescriptor_pool\nset_layouts::AbstractArray{DescriptorSetLayout}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DescriptorSetAllocateInfo(descriptor_pool, set_layouts::AbstractArray; next) -> _DescriptorSetAllocateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DescriptorSetLayoutBinding","page":"API","title":"Vulkan._DescriptorSetLayoutBinding","text":"Intermediate wrapper for VkDescriptorSetLayoutBinding.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDescriptorSetLayoutBinding.html\n\nstruct _DescriptorSetLayoutBinding <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDescriptorSetLayoutBinding\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DescriptorSetLayoutBinding-Tuple{Integer, DescriptorType, ShaderStageFlag}","page":"API","title":"Vulkan._DescriptorSetLayoutBinding","text":"_DescriptorSetLayoutBinding(binding::Integer, descriptor_type::DescriptorType, stage_flags::ShaderStageFlag; descriptor_count = 0, immutable_samplers = C_NULL)\n\nArguments:\n\nbinding::Integer\ndescriptor_type::DescriptorType\nstage_flags::ShaderStageFlag\ndescriptor_count: defaults to 0\nimmutable_samplers: defaults to C_NULL\n\nAPI documentation\n\n_DescriptorSetLayoutBinding(binding::Integer, descriptor_type::DescriptorType, stage_flags::ShaderStageFlag; descriptor_count, immutable_samplers) -> _DescriptorSetLayoutBinding\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DescriptorSetLayoutBindingFlagsCreateInfo","page":"API","title":"Vulkan._DescriptorSetLayoutBindingFlagsCreateInfo","text":"Intermediate wrapper for VkDescriptorSetLayoutBindingFlagsCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDescriptorSetLayoutBindingFlagsCreateInfo.html\n\nstruct _DescriptorSetLayoutBindingFlagsCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDescriptorSetLayoutBindingFlagsCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DescriptorSetLayoutBindingFlagsCreateInfo-Tuple{AbstractArray}","page":"API","title":"Vulkan._DescriptorSetLayoutBindingFlagsCreateInfo","text":"_DescriptorSetLayoutBindingFlagsCreateInfo(binding_flags::AbstractArray{DescriptorBindingFlag}; next = C_NULL)\n\nArguments:\n\nbinding_flags::AbstractArray{DescriptorBindingFlag}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DescriptorSetLayoutBindingFlagsCreateInfo(binding_flags::AbstractArray; next) -> _DescriptorSetLayoutBindingFlagsCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DescriptorSetLayoutCreateInfo","page":"API","title":"Vulkan._DescriptorSetLayoutCreateInfo","text":"Intermediate wrapper for VkDescriptorSetLayoutCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDescriptorSetLayoutCreateInfo.html\n\nstruct _DescriptorSetLayoutCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDescriptorSetLayoutCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DescriptorSetLayoutCreateInfo-Tuple{AbstractArray}","page":"API","title":"Vulkan._DescriptorSetLayoutCreateInfo","text":"_DescriptorSetLayoutCreateInfo(bindings::AbstractArray{_DescriptorSetLayoutBinding}; next = C_NULL, flags = 0)\n\nArguments:\n\nbindings::AbstractArray{_DescriptorSetLayoutBinding}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_DescriptorSetLayoutCreateInfo(bindings::AbstractArray; next, flags) -> _DescriptorSetLayoutCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DescriptorSetLayoutSupport","page":"API","title":"Vulkan._DescriptorSetLayoutSupport","text":"Intermediate wrapper for VkDescriptorSetLayoutSupport.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDescriptorSetLayoutSupport.html\n\nstruct _DescriptorSetLayoutSupport <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDescriptorSetLayoutSupport\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DescriptorSetLayoutSupport-Tuple{Bool}","page":"API","title":"Vulkan._DescriptorSetLayoutSupport","text":"_DescriptorSetLayoutSupport(supported::Bool; next = C_NULL)\n\nArguments:\n\nsupported::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DescriptorSetLayoutSupport(supported::Bool; next) -> _DescriptorSetLayoutSupport\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DescriptorSetVariableDescriptorCountAllocateInfo","page":"API","title":"Vulkan._DescriptorSetVariableDescriptorCountAllocateInfo","text":"Intermediate wrapper for VkDescriptorSetVariableDescriptorCountAllocateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDescriptorSetVariableDescriptorCountAllocateInfo.html\n\nstruct _DescriptorSetVariableDescriptorCountAllocateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDescriptorSetVariableDescriptorCountAllocateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DescriptorSetVariableDescriptorCountAllocateInfo-Tuple{AbstractArray}","page":"API","title":"Vulkan._DescriptorSetVariableDescriptorCountAllocateInfo","text":"_DescriptorSetVariableDescriptorCountAllocateInfo(descriptor_counts::AbstractArray{<:Integer}; next = C_NULL)\n\nArguments:\n\ndescriptor_counts::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DescriptorSetVariableDescriptorCountAllocateInfo(descriptor_counts::AbstractArray; next) -> _DescriptorSetVariableDescriptorCountAllocateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DescriptorSetVariableDescriptorCountLayoutSupport","page":"API","title":"Vulkan._DescriptorSetVariableDescriptorCountLayoutSupport","text":"Intermediate wrapper for VkDescriptorSetVariableDescriptorCountLayoutSupport.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDescriptorSetVariableDescriptorCountLayoutSupport.html\n\nstruct _DescriptorSetVariableDescriptorCountLayoutSupport <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDescriptorSetVariableDescriptorCountLayoutSupport\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DescriptorSetVariableDescriptorCountLayoutSupport-Tuple{Integer}","page":"API","title":"Vulkan._DescriptorSetVariableDescriptorCountLayoutSupport","text":"_DescriptorSetVariableDescriptorCountLayoutSupport(max_variable_descriptor_count::Integer; next = C_NULL)\n\nArguments:\n\nmax_variable_descriptor_count::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DescriptorSetVariableDescriptorCountLayoutSupport(max_variable_descriptor_count::Integer; next) -> _DescriptorSetVariableDescriptorCountLayoutSupport\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DescriptorUpdateTemplateCreateInfo","page":"API","title":"Vulkan._DescriptorUpdateTemplateCreateInfo","text":"Intermediate wrapper for VkDescriptorUpdateTemplateCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDescriptorUpdateTemplateCreateInfo.html\n\nstruct _DescriptorUpdateTemplateCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDescriptorUpdateTemplateCreateInfo\ndeps::Vector{Any}\ndescriptor_set_layout::DescriptorSetLayout\npipeline_layout::PipelineLayout\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DescriptorUpdateTemplateCreateInfo-Tuple{AbstractArray, DescriptorUpdateTemplateType, Any, PipelineBindPoint, Any, Integer}","page":"API","title":"Vulkan._DescriptorUpdateTemplateCreateInfo","text":"_DescriptorUpdateTemplateCreateInfo(descriptor_update_entries::AbstractArray{_DescriptorUpdateTemplateEntry}, template_type::DescriptorUpdateTemplateType, descriptor_set_layout, pipeline_bind_point::PipelineBindPoint, pipeline_layout, set::Integer; next = C_NULL, flags = 0)\n\nArguments:\n\ndescriptor_update_entries::AbstractArray{_DescriptorUpdateTemplateEntry}\ntemplate_type::DescriptorUpdateTemplateType\ndescriptor_set_layout\npipeline_bind_point::PipelineBindPoint\npipeline_layout\nset::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_DescriptorUpdateTemplateCreateInfo(descriptor_update_entries::AbstractArray, template_type::DescriptorUpdateTemplateType, descriptor_set_layout, pipeline_bind_point::PipelineBindPoint, pipeline_layout, set::Integer; next, flags) -> _DescriptorUpdateTemplateCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DescriptorUpdateTemplateEntry","page":"API","title":"Vulkan._DescriptorUpdateTemplateEntry","text":"Intermediate wrapper for VkDescriptorUpdateTemplateEntry.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDescriptorUpdateTemplateEntry.html\n\nstruct _DescriptorUpdateTemplateEntry <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkDescriptorUpdateTemplateEntry\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DescriptorUpdateTemplateEntry-Tuple{Integer, Integer, Integer, DescriptorType, Integer, Integer}","page":"API","title":"Vulkan._DescriptorUpdateTemplateEntry","text":"_DescriptorUpdateTemplateEntry(dst_binding::Integer, dst_array_element::Integer, descriptor_count::Integer, descriptor_type::DescriptorType, offset::Integer, stride::Integer)\n\nArguments:\n\ndst_binding::Integer\ndst_array_element::Integer\ndescriptor_count::Integer\ndescriptor_type::DescriptorType\noffset::Integer\nstride::Integer\n\nAPI documentation\n\n_DescriptorUpdateTemplateEntry(dst_binding::Integer, dst_array_element::Integer, descriptor_count::Integer, descriptor_type::DescriptorType, offset::Integer, stride::Integer) -> _DescriptorUpdateTemplateEntry\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DeviceCreateInfo","page":"API","title":"Vulkan._DeviceCreateInfo","text":"Intermediate wrapper for VkDeviceCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDeviceCreateInfo.html\n\nstruct _DeviceCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDeviceCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceCreateInfo-Tuple{AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan._DeviceCreateInfo","text":"_DeviceCreateInfo(queue_create_infos::AbstractArray{_DeviceQueueCreateInfo}, enabled_layer_names::AbstractArray{<:AbstractString}, enabled_extension_names::AbstractArray{<:AbstractString}; next = C_NULL, flags = 0, enabled_features = C_NULL)\n\nArguments:\n\nqueue_create_infos::AbstractArray{_DeviceQueueCreateInfo}\nenabled_layer_names::AbstractArray{<:AbstractString}\nenabled_extension_names::AbstractArray{<:AbstractString}\nnext: defaults to C_NULL\nflags: defaults to 0\nenabled_features: defaults to C_NULL\n\nAPI documentation\n\n_DeviceCreateInfo(queue_create_infos::AbstractArray, enabled_layer_names::AbstractArray, enabled_extension_names::AbstractArray; next, flags, enabled_features) -> _DeviceCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DeviceDeviceMemoryReportCreateInfoEXT","page":"API","title":"Vulkan._DeviceDeviceMemoryReportCreateInfoEXT","text":"Intermediate wrapper for VkDeviceDeviceMemoryReportCreateInfoEXT.\n\nExtension: VKEXTdevicememoryreport\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDeviceDeviceMemoryReportCreateInfoEXT.html\n\nstruct _DeviceDeviceMemoryReportCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDeviceDeviceMemoryReportCreateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceDeviceMemoryReportCreateInfoEXT-Tuple{Integer, Union{Ptr{Nothing}, Base.CFunction}, Ptr{Nothing}}","page":"API","title":"Vulkan._DeviceDeviceMemoryReportCreateInfoEXT","text":"_DeviceDeviceMemoryReportCreateInfoEXT(flags::Integer, pfn_user_callback::FunctionPtr, user_data::Ptr{Cvoid}; next = C_NULL)\n\nExtension: VK_EXT_device_memory_report\n\nArguments:\n\nflags::Integer\npfn_user_callback::FunctionPtr\nuser_data::Ptr{Cvoid}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DeviceDeviceMemoryReportCreateInfoEXT(flags::Integer, pfn_user_callback::Union{Ptr{Nothing}, Base.CFunction}, user_data::Ptr{Nothing}; next) -> _DeviceDeviceMemoryReportCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DeviceDiagnosticsConfigCreateInfoNV","page":"API","title":"Vulkan._DeviceDiagnosticsConfigCreateInfoNV","text":"Intermediate wrapper for VkDeviceDiagnosticsConfigCreateInfoNV.\n\nExtension: VKNVdevicediagnosticsconfig\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDeviceDiagnosticsConfigCreateInfoNV.html\n\nstruct _DeviceDiagnosticsConfigCreateInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDeviceDiagnosticsConfigCreateInfoNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceDiagnosticsConfigCreateInfoNV-Tuple{}","page":"API","title":"Vulkan._DeviceDiagnosticsConfigCreateInfoNV","text":"_DeviceDiagnosticsConfigCreateInfoNV(; next = C_NULL, flags = 0)\n\nExtension: VK_NV_device_diagnostics_config\n\nArguments:\n\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_DeviceDiagnosticsConfigCreateInfoNV(; next, flags) -> _DeviceDiagnosticsConfigCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DeviceEventInfoEXT","page":"API","title":"Vulkan._DeviceEventInfoEXT","text":"Intermediate wrapper for VkDeviceEventInfoEXT.\n\nExtension: VKEXTdisplay_control\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDeviceEventInfoEXT.html\n\nstruct _DeviceEventInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDeviceEventInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceEventInfoEXT-Tuple{DeviceEventTypeEXT}","page":"API","title":"Vulkan._DeviceEventInfoEXT","text":"_DeviceEventInfoEXT(device_event::DeviceEventTypeEXT; next = C_NULL)\n\nExtension: VK_EXT_display_control\n\nArguments:\n\ndevice_event::DeviceEventTypeEXT\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DeviceEventInfoEXT(device_event::DeviceEventTypeEXT; next) -> _DeviceEventInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DeviceGroupBindSparseInfo","page":"API","title":"Vulkan._DeviceGroupBindSparseInfo","text":"Intermediate wrapper for VkDeviceGroupBindSparseInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDeviceGroupBindSparseInfo.html\n\nstruct _DeviceGroupBindSparseInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDeviceGroupBindSparseInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceGroupBindSparseInfo-Tuple{Integer, Integer}","page":"API","title":"Vulkan._DeviceGroupBindSparseInfo","text":"_DeviceGroupBindSparseInfo(resource_device_index::Integer, memory_device_index::Integer; next = C_NULL)\n\nArguments:\n\nresource_device_index::Integer\nmemory_device_index::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DeviceGroupBindSparseInfo(resource_device_index::Integer, memory_device_index::Integer; next) -> _DeviceGroupBindSparseInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DeviceGroupCommandBufferBeginInfo","page":"API","title":"Vulkan._DeviceGroupCommandBufferBeginInfo","text":"Intermediate wrapper for VkDeviceGroupCommandBufferBeginInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDeviceGroupCommandBufferBeginInfo.html\n\nstruct _DeviceGroupCommandBufferBeginInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDeviceGroupCommandBufferBeginInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceGroupCommandBufferBeginInfo-Tuple{Integer}","page":"API","title":"Vulkan._DeviceGroupCommandBufferBeginInfo","text":"_DeviceGroupCommandBufferBeginInfo(device_mask::Integer; next = C_NULL)\n\nArguments:\n\ndevice_mask::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DeviceGroupCommandBufferBeginInfo(device_mask::Integer; next) -> _DeviceGroupCommandBufferBeginInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DeviceGroupDeviceCreateInfo","page":"API","title":"Vulkan._DeviceGroupDeviceCreateInfo","text":"Intermediate wrapper for VkDeviceGroupDeviceCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDeviceGroupDeviceCreateInfo.html\n\nstruct _DeviceGroupDeviceCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDeviceGroupDeviceCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceGroupDeviceCreateInfo-Tuple{AbstractArray}","page":"API","title":"Vulkan._DeviceGroupDeviceCreateInfo","text":"_DeviceGroupDeviceCreateInfo(physical_devices::AbstractArray{PhysicalDevice}; next = C_NULL)\n\nArguments:\n\nphysical_devices::AbstractArray{PhysicalDevice}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DeviceGroupDeviceCreateInfo(physical_devices::AbstractArray; next) -> _DeviceGroupDeviceCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DeviceGroupPresentCapabilitiesKHR","page":"API","title":"Vulkan._DeviceGroupPresentCapabilitiesKHR","text":"Intermediate wrapper for VkDeviceGroupPresentCapabilitiesKHR.\n\nExtension: VKKHRswapchain\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDeviceGroupPresentCapabilitiesKHR.html\n\nstruct _DeviceGroupPresentCapabilitiesKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDeviceGroupPresentCapabilitiesKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceGroupPresentCapabilitiesKHR-Tuple{NTuple{32, UInt32}, DeviceGroupPresentModeFlagKHR}","page":"API","title":"Vulkan._DeviceGroupPresentCapabilitiesKHR","text":"_DeviceGroupPresentCapabilitiesKHR(present_mask::NTuple{Int(VK_MAX_DEVICE_GROUP_SIZE), UInt32}, modes::DeviceGroupPresentModeFlagKHR; next = C_NULL)\n\nExtension: VK_KHR_swapchain\n\nArguments:\n\npresent_mask::NTuple{Int(VK_MAX_DEVICE_GROUP_SIZE), UInt32}\nmodes::DeviceGroupPresentModeFlagKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DeviceGroupPresentCapabilitiesKHR(present_mask::NTuple{32, UInt32}, modes::DeviceGroupPresentModeFlagKHR; next) -> _DeviceGroupPresentCapabilitiesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DeviceGroupPresentInfoKHR","page":"API","title":"Vulkan._DeviceGroupPresentInfoKHR","text":"Intermediate wrapper for VkDeviceGroupPresentInfoKHR.\n\nExtension: VKKHRswapchain\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDeviceGroupPresentInfoKHR.html\n\nstruct _DeviceGroupPresentInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDeviceGroupPresentInfoKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceGroupPresentInfoKHR-Tuple{AbstractArray, DeviceGroupPresentModeFlagKHR}","page":"API","title":"Vulkan._DeviceGroupPresentInfoKHR","text":"_DeviceGroupPresentInfoKHR(device_masks::AbstractArray{<:Integer}, mode::DeviceGroupPresentModeFlagKHR; next = C_NULL)\n\nExtension: VK_KHR_swapchain\n\nArguments:\n\ndevice_masks::AbstractArray{<:Integer}\nmode::DeviceGroupPresentModeFlagKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DeviceGroupPresentInfoKHR(device_masks::AbstractArray, mode::DeviceGroupPresentModeFlagKHR; next) -> _DeviceGroupPresentInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DeviceGroupRenderPassBeginInfo","page":"API","title":"Vulkan._DeviceGroupRenderPassBeginInfo","text":"Intermediate wrapper for VkDeviceGroupRenderPassBeginInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDeviceGroupRenderPassBeginInfo.html\n\nstruct _DeviceGroupRenderPassBeginInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDeviceGroupRenderPassBeginInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceGroupRenderPassBeginInfo-Tuple{Integer, AbstractArray}","page":"API","title":"Vulkan._DeviceGroupRenderPassBeginInfo","text":"_DeviceGroupRenderPassBeginInfo(device_mask::Integer, device_render_areas::AbstractArray{_Rect2D}; next = C_NULL)\n\nArguments:\n\ndevice_mask::Integer\ndevice_render_areas::AbstractArray{_Rect2D}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DeviceGroupRenderPassBeginInfo(device_mask::Integer, device_render_areas::AbstractArray; next) -> _DeviceGroupRenderPassBeginInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DeviceGroupSubmitInfo","page":"API","title":"Vulkan._DeviceGroupSubmitInfo","text":"Intermediate wrapper for VkDeviceGroupSubmitInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDeviceGroupSubmitInfo.html\n\nstruct _DeviceGroupSubmitInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDeviceGroupSubmitInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceGroupSubmitInfo-Tuple{AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan._DeviceGroupSubmitInfo","text":"_DeviceGroupSubmitInfo(wait_semaphore_device_indices::AbstractArray{<:Integer}, command_buffer_device_masks::AbstractArray{<:Integer}, signal_semaphore_device_indices::AbstractArray{<:Integer}; next = C_NULL)\n\nArguments:\n\nwait_semaphore_device_indices::AbstractArray{<:Integer}\ncommand_buffer_device_masks::AbstractArray{<:Integer}\nsignal_semaphore_device_indices::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DeviceGroupSubmitInfo(wait_semaphore_device_indices::AbstractArray, command_buffer_device_masks::AbstractArray, signal_semaphore_device_indices::AbstractArray; next) -> _DeviceGroupSubmitInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DeviceGroupSwapchainCreateInfoKHR","page":"API","title":"Vulkan._DeviceGroupSwapchainCreateInfoKHR","text":"Intermediate wrapper for VkDeviceGroupSwapchainCreateInfoKHR.\n\nExtension: VKKHRswapchain\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDeviceGroupSwapchainCreateInfoKHR.html\n\nstruct _DeviceGroupSwapchainCreateInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDeviceGroupSwapchainCreateInfoKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceGroupSwapchainCreateInfoKHR-Tuple{DeviceGroupPresentModeFlagKHR}","page":"API","title":"Vulkan._DeviceGroupSwapchainCreateInfoKHR","text":"_DeviceGroupSwapchainCreateInfoKHR(modes::DeviceGroupPresentModeFlagKHR; next = C_NULL)\n\nExtension: VK_KHR_swapchain\n\nArguments:\n\nmodes::DeviceGroupPresentModeFlagKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DeviceGroupSwapchainCreateInfoKHR(modes::DeviceGroupPresentModeFlagKHR; next) -> _DeviceGroupSwapchainCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DeviceMemoryOpaqueCaptureAddressInfo","page":"API","title":"Vulkan._DeviceMemoryOpaqueCaptureAddressInfo","text":"Intermediate wrapper for VkDeviceMemoryOpaqueCaptureAddressInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDeviceMemoryOpaqueCaptureAddressInfo.html\n\nstruct _DeviceMemoryOpaqueCaptureAddressInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDeviceMemoryOpaqueCaptureAddressInfo\ndeps::Vector{Any}\nmemory::DeviceMemory\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceMemoryOpaqueCaptureAddressInfo-Tuple{Any}","page":"API","title":"Vulkan._DeviceMemoryOpaqueCaptureAddressInfo","text":"_DeviceMemoryOpaqueCaptureAddressInfo(memory; next = C_NULL)\n\nArguments:\n\nmemory\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DeviceMemoryOpaqueCaptureAddressInfo(memory; next) -> _DeviceMemoryOpaqueCaptureAddressInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DeviceMemoryOverallocationCreateInfoAMD","page":"API","title":"Vulkan._DeviceMemoryOverallocationCreateInfoAMD","text":"Intermediate wrapper for VkDeviceMemoryOverallocationCreateInfoAMD.\n\nExtension: VKAMDmemoryoverallocationbehavior\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDeviceMemoryOverallocationCreateInfoAMD.html\n\nstruct _DeviceMemoryOverallocationCreateInfoAMD <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDeviceMemoryOverallocationCreateInfoAMD\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceMemoryOverallocationCreateInfoAMD-Tuple{MemoryOverallocationBehaviorAMD}","page":"API","title":"Vulkan._DeviceMemoryOverallocationCreateInfoAMD","text":"_DeviceMemoryOverallocationCreateInfoAMD(overallocation_behavior::MemoryOverallocationBehaviorAMD; next = C_NULL)\n\nExtension: VK_AMD_memory_overallocation_behavior\n\nArguments:\n\noverallocation_behavior::MemoryOverallocationBehaviorAMD\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DeviceMemoryOverallocationCreateInfoAMD(overallocation_behavior::MemoryOverallocationBehaviorAMD; next) -> _DeviceMemoryOverallocationCreateInfoAMD\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DeviceMemoryReportCallbackDataEXT","page":"API","title":"Vulkan._DeviceMemoryReportCallbackDataEXT","text":"Intermediate wrapper for VkDeviceMemoryReportCallbackDataEXT.\n\nExtension: VKEXTdevicememoryreport\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDeviceMemoryReportCallbackDataEXT.html\n\nstruct _DeviceMemoryReportCallbackDataEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDeviceMemoryReportCallbackDataEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceMemoryReportCallbackDataEXT-Tuple{Integer, DeviceMemoryReportEventTypeEXT, Integer, Integer, ObjectType, Integer, Integer}","page":"API","title":"Vulkan._DeviceMemoryReportCallbackDataEXT","text":"_DeviceMemoryReportCallbackDataEXT(flags::Integer, type::DeviceMemoryReportEventTypeEXT, memory_object_id::Integer, size::Integer, object_type::ObjectType, object_handle::Integer, heap_index::Integer; next = C_NULL)\n\nExtension: VK_EXT_device_memory_report\n\nArguments:\n\nflags::Integer\ntype::DeviceMemoryReportEventTypeEXT\nmemory_object_id::Integer\nsize::Integer\nobject_type::ObjectType\nobject_handle::Integer\nheap_index::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DeviceMemoryReportCallbackDataEXT(flags::Integer, type::DeviceMemoryReportEventTypeEXT, memory_object_id::Integer, size::Integer, object_type::ObjectType, object_handle::Integer, heap_index::Integer; next) -> _DeviceMemoryReportCallbackDataEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DeviceOrHostAddressConstKHR","page":"API","title":"Vulkan._DeviceOrHostAddressConstKHR","text":"Intermediate wrapper for VkDeviceOrHostAddressConstKHR.\n\nExtension: VKKHRacceleration_structure\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDeviceOrHostAddressConstKHR.html\n\nstruct _DeviceOrHostAddressConstKHR <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkDeviceOrHostAddressConstKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceOrHostAddressKHR","page":"API","title":"Vulkan._DeviceOrHostAddressKHR","text":"Intermediate wrapper for VkDeviceOrHostAddressKHR.\n\nExtension: VKKHRacceleration_structure\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDeviceOrHostAddressKHR.html\n\nstruct _DeviceOrHostAddressKHR <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkDeviceOrHostAddressKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DevicePrivateDataCreateInfoEXT","page":"API","title":"Vulkan._DevicePrivateDataCreateInfoEXT","text":"Intermediate wrapper for VkDevicePrivateDataCreateInfoEXT.\n\nExtension: VKEXTprivate_data\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDevicePrivateDataCreateInfoEXT.html\n\nstruct _DevicePrivateDataCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDevicePrivateDataCreateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DevicePrivateDataCreateInfoEXT-Tuple{Integer}","page":"API","title":"Vulkan._DevicePrivateDataCreateInfoEXT","text":"_DevicePrivateDataCreateInfoEXT(private_data_slot_request_count::Integer; next = C_NULL)\n\nExtension: VK_EXT_private_data\n\nArguments:\n\nprivate_data_slot_request_count::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DevicePrivateDataCreateInfoEXT(private_data_slot_request_count::Integer; next) -> _DevicePrivateDataCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DeviceQueueCreateInfo","page":"API","title":"Vulkan._DeviceQueueCreateInfo","text":"Intermediate wrapper for VkDeviceQueueCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDeviceQueueCreateInfo.html\n\nstruct _DeviceQueueCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDeviceQueueCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceQueueCreateInfo-Tuple{Integer, AbstractArray}","page":"API","title":"Vulkan._DeviceQueueCreateInfo","text":"_DeviceQueueCreateInfo(queue_family_index::Integer, queue_priorities::AbstractArray{<:Real}; next = C_NULL, flags = 0)\n\nArguments:\n\nqueue_family_index::Integer\nqueue_priorities::AbstractArray{<:Real}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_DeviceQueueCreateInfo(queue_family_index::Integer, queue_priorities::AbstractArray; next, flags) -> _DeviceQueueCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DeviceQueueGlobalPriorityCreateInfoEXT","page":"API","title":"Vulkan._DeviceQueueGlobalPriorityCreateInfoEXT","text":"Intermediate wrapper for VkDeviceQueueGlobalPriorityCreateInfoEXT.\n\nExtension: VKEXTglobal_priority\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDeviceQueueGlobalPriorityCreateInfoEXT.html\n\nstruct _DeviceQueueGlobalPriorityCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDeviceQueueGlobalPriorityCreateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceQueueGlobalPriorityCreateInfoEXT-Tuple{QueueGlobalPriorityEXT}","page":"API","title":"Vulkan._DeviceQueueGlobalPriorityCreateInfoEXT","text":"_DeviceQueueGlobalPriorityCreateInfoEXT(global_priority::QueueGlobalPriorityEXT; next = C_NULL)\n\nExtension: VK_EXT_global_priority\n\nArguments:\n\nglobal_priority::QueueGlobalPriorityEXT\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DeviceQueueGlobalPriorityCreateInfoEXT(global_priority::QueueGlobalPriorityEXT; next) -> _DeviceQueueGlobalPriorityCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DeviceQueueInfo2","page":"API","title":"Vulkan._DeviceQueueInfo2","text":"Intermediate wrapper for VkDeviceQueueInfo2.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDeviceQueueInfo2.html\n\nstruct _DeviceQueueInfo2 <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDeviceQueueInfo2\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceQueueInfo2-Tuple{Integer, Integer}","page":"API","title":"Vulkan._DeviceQueueInfo2","text":"_DeviceQueueInfo2(queue_family_index::Integer, queue_index::Integer; next = C_NULL, flags = 0)\n\nArguments:\n\nqueue_family_index::Integer\nqueue_index::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_DeviceQueueInfo2(queue_family_index::Integer, queue_index::Integer; next, flags) -> _DeviceQueueInfo2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DispatchIndirectCommand","page":"API","title":"Vulkan._DispatchIndirectCommand","text":"Intermediate wrapper for VkDispatchIndirectCommand.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDispatchIndirectCommand.html\n\nstruct _DispatchIndirectCommand <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkDispatchIndirectCommand\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DisplayEventInfoEXT","page":"API","title":"Vulkan._DisplayEventInfoEXT","text":"Intermediate wrapper for VkDisplayEventInfoEXT.\n\nExtension: VKEXTdisplay_control\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDisplayEventInfoEXT.html\n\nstruct _DisplayEventInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDisplayEventInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DisplayEventInfoEXT-Tuple{DisplayEventTypeEXT}","page":"API","title":"Vulkan._DisplayEventInfoEXT","text":"_DisplayEventInfoEXT(display_event::DisplayEventTypeEXT; next = C_NULL)\n\nExtension: VK_EXT_display_control\n\nArguments:\n\ndisplay_event::DisplayEventTypeEXT\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DisplayEventInfoEXT(display_event::DisplayEventTypeEXT; next) -> _DisplayEventInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DisplayModeCreateInfoKHR","page":"API","title":"Vulkan._DisplayModeCreateInfoKHR","text":"Intermediate wrapper for VkDisplayModeCreateInfoKHR.\n\nExtension: VKKHRdisplay\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDisplayModeCreateInfoKHR.html\n\nstruct _DisplayModeCreateInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDisplayModeCreateInfoKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DisplayModeCreateInfoKHR-Tuple{_DisplayModeParametersKHR}","page":"API","title":"Vulkan._DisplayModeCreateInfoKHR","text":"_DisplayModeCreateInfoKHR(parameters::_DisplayModeParametersKHR; next = C_NULL, flags = 0)\n\nExtension: VK_KHR_display\n\nArguments:\n\nparameters::_DisplayModeParametersKHR\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_DisplayModeCreateInfoKHR(parameters::_DisplayModeParametersKHR; next, flags) -> _DisplayModeCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DisplayModeParametersKHR","page":"API","title":"Vulkan._DisplayModeParametersKHR","text":"Intermediate wrapper for VkDisplayModeParametersKHR.\n\nExtension: VKKHRdisplay\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDisplayModeParametersKHR.html\n\nstruct _DisplayModeParametersKHR <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkDisplayModeParametersKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DisplayModeParametersKHR-Tuple{_Extent2D, Integer}","page":"API","title":"Vulkan._DisplayModeParametersKHR","text":"_DisplayModeParametersKHR(visible_region::_Extent2D, refresh_rate::Integer)\n\nExtension: VK_KHR_display\n\nArguments:\n\nvisible_region::_Extent2D\nrefresh_rate::Integer\n\nAPI documentation\n\n_DisplayModeParametersKHR(visible_region::_Extent2D, refresh_rate::Integer) -> _DisplayModeParametersKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DisplayModeProperties2KHR","page":"API","title":"Vulkan._DisplayModeProperties2KHR","text":"Intermediate wrapper for VkDisplayModeProperties2KHR.\n\nExtension: VKKHRgetdisplayproperties2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDisplayModeProperties2KHR.html\n\nstruct _DisplayModeProperties2KHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDisplayModeProperties2KHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DisplayModeProperties2KHR-Tuple{_DisplayModePropertiesKHR}","page":"API","title":"Vulkan._DisplayModeProperties2KHR","text":"_DisplayModeProperties2KHR(display_mode_properties::_DisplayModePropertiesKHR; next = C_NULL)\n\nExtension: VK_KHR_get_display_properties2\n\nArguments:\n\ndisplay_mode_properties::_DisplayModePropertiesKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DisplayModeProperties2KHR(display_mode_properties::_DisplayModePropertiesKHR; next) -> _DisplayModeProperties2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DisplayModePropertiesKHR","page":"API","title":"Vulkan._DisplayModePropertiesKHR","text":"Intermediate wrapper for VkDisplayModePropertiesKHR.\n\nExtension: VKKHRdisplay\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDisplayModePropertiesKHR.html\n\nstruct _DisplayModePropertiesKHR <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkDisplayModePropertiesKHR\ndisplay_mode::DisplayModeKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DisplayModePropertiesKHR-Tuple{Any, _DisplayModeParametersKHR}","page":"API","title":"Vulkan._DisplayModePropertiesKHR","text":"_DisplayModePropertiesKHR(display_mode, parameters::_DisplayModeParametersKHR)\n\nExtension: VK_KHR_display\n\nArguments:\n\ndisplay_mode\nparameters::_DisplayModeParametersKHR\n\nAPI documentation\n\n_DisplayModePropertiesKHR(display_mode, parameters::_DisplayModeParametersKHR) -> _DisplayModePropertiesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DisplayNativeHdrSurfaceCapabilitiesAMD","page":"API","title":"Vulkan._DisplayNativeHdrSurfaceCapabilitiesAMD","text":"Intermediate wrapper for VkDisplayNativeHdrSurfaceCapabilitiesAMD.\n\nExtension: VKAMDdisplaynativehdr\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDisplayNativeHdrSurfaceCapabilitiesAMD.html\n\nstruct _DisplayNativeHdrSurfaceCapabilitiesAMD <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDisplayNativeHdrSurfaceCapabilitiesAMD\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DisplayNativeHdrSurfaceCapabilitiesAMD-Tuple{Bool}","page":"API","title":"Vulkan._DisplayNativeHdrSurfaceCapabilitiesAMD","text":"_DisplayNativeHdrSurfaceCapabilitiesAMD(local_dimming_support::Bool; next = C_NULL)\n\nExtension: VK_AMD_display_native_hdr\n\nArguments:\n\nlocal_dimming_support::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DisplayNativeHdrSurfaceCapabilitiesAMD(local_dimming_support::Bool; next) -> _DisplayNativeHdrSurfaceCapabilitiesAMD\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DisplayPlaneCapabilities2KHR","page":"API","title":"Vulkan._DisplayPlaneCapabilities2KHR","text":"Intermediate wrapper for VkDisplayPlaneCapabilities2KHR.\n\nExtension: VKKHRgetdisplayproperties2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDisplayPlaneCapabilities2KHR.html\n\nstruct _DisplayPlaneCapabilities2KHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDisplayPlaneCapabilities2KHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DisplayPlaneCapabilities2KHR-Tuple{_DisplayPlaneCapabilitiesKHR}","page":"API","title":"Vulkan._DisplayPlaneCapabilities2KHR","text":"_DisplayPlaneCapabilities2KHR(capabilities::_DisplayPlaneCapabilitiesKHR; next = C_NULL)\n\nExtension: VK_KHR_get_display_properties2\n\nArguments:\n\ncapabilities::_DisplayPlaneCapabilitiesKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DisplayPlaneCapabilities2KHR(capabilities::_DisplayPlaneCapabilitiesKHR; next) -> _DisplayPlaneCapabilities2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DisplayPlaneCapabilitiesKHR","page":"API","title":"Vulkan._DisplayPlaneCapabilitiesKHR","text":"Intermediate wrapper for VkDisplayPlaneCapabilitiesKHR.\n\nExtension: VKKHRdisplay\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDisplayPlaneCapabilitiesKHR.html\n\nstruct _DisplayPlaneCapabilitiesKHR <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkDisplayPlaneCapabilitiesKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DisplayPlaneCapabilitiesKHR-Tuple{_Offset2D, _Offset2D, _Extent2D, _Extent2D, _Offset2D, _Offset2D, _Extent2D, _Extent2D}","page":"API","title":"Vulkan._DisplayPlaneCapabilitiesKHR","text":"_DisplayPlaneCapabilitiesKHR(min_src_position::_Offset2D, max_src_position::_Offset2D, min_src_extent::_Extent2D, max_src_extent::_Extent2D, min_dst_position::_Offset2D, max_dst_position::_Offset2D, min_dst_extent::_Extent2D, max_dst_extent::_Extent2D; supported_alpha = 0)\n\nExtension: VK_KHR_display\n\nArguments:\n\nmin_src_position::_Offset2D\nmax_src_position::_Offset2D\nmin_src_extent::_Extent2D\nmax_src_extent::_Extent2D\nmin_dst_position::_Offset2D\nmax_dst_position::_Offset2D\nmin_dst_extent::_Extent2D\nmax_dst_extent::_Extent2D\nsupported_alpha: defaults to 0\n\nAPI documentation\n\n_DisplayPlaneCapabilitiesKHR(min_src_position::_Offset2D, max_src_position::_Offset2D, min_src_extent::_Extent2D, max_src_extent::_Extent2D, min_dst_position::_Offset2D, max_dst_position::_Offset2D, min_dst_extent::_Extent2D, max_dst_extent::_Extent2D; supported_alpha) -> _DisplayPlaneCapabilitiesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DisplayPlaneInfo2KHR","page":"API","title":"Vulkan._DisplayPlaneInfo2KHR","text":"Intermediate wrapper for VkDisplayPlaneInfo2KHR.\n\nExtension: VKKHRgetdisplayproperties2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDisplayPlaneInfo2KHR.html\n\nstruct _DisplayPlaneInfo2KHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDisplayPlaneInfo2KHR\ndeps::Vector{Any}\nmode::DisplayModeKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DisplayPlaneInfo2KHR-Tuple{Any, Integer}","page":"API","title":"Vulkan._DisplayPlaneInfo2KHR","text":"_DisplayPlaneInfo2KHR(mode, plane_index::Integer; next = C_NULL)\n\nExtension: VK_KHR_get_display_properties2\n\nArguments:\n\nmode (externsync)\nplane_index::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DisplayPlaneInfo2KHR(mode, plane_index::Integer; next) -> _DisplayPlaneInfo2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DisplayPlaneProperties2KHR","page":"API","title":"Vulkan._DisplayPlaneProperties2KHR","text":"Intermediate wrapper for VkDisplayPlaneProperties2KHR.\n\nExtension: VKKHRgetdisplayproperties2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDisplayPlaneProperties2KHR.html\n\nstruct _DisplayPlaneProperties2KHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDisplayPlaneProperties2KHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DisplayPlaneProperties2KHR-Tuple{_DisplayPlanePropertiesKHR}","page":"API","title":"Vulkan._DisplayPlaneProperties2KHR","text":"_DisplayPlaneProperties2KHR(display_plane_properties::_DisplayPlanePropertiesKHR; next = C_NULL)\n\nExtension: VK_KHR_get_display_properties2\n\nArguments:\n\ndisplay_plane_properties::_DisplayPlanePropertiesKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DisplayPlaneProperties2KHR(display_plane_properties::_DisplayPlanePropertiesKHR; next) -> _DisplayPlaneProperties2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DisplayPlanePropertiesKHR","page":"API","title":"Vulkan._DisplayPlanePropertiesKHR","text":"Intermediate wrapper for VkDisplayPlanePropertiesKHR.\n\nExtension: VKKHRdisplay\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDisplayPlanePropertiesKHR.html\n\nstruct _DisplayPlanePropertiesKHR <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkDisplayPlanePropertiesKHR\ncurrent_display::DisplayKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DisplayPlanePropertiesKHR-Tuple{Any, Integer}","page":"API","title":"Vulkan._DisplayPlanePropertiesKHR","text":"_DisplayPlanePropertiesKHR(current_display, current_stack_index::Integer)\n\nExtension: VK_KHR_display\n\nArguments:\n\ncurrent_display\ncurrent_stack_index::Integer\n\nAPI documentation\n\n_DisplayPlanePropertiesKHR(current_display, current_stack_index::Integer) -> _DisplayPlanePropertiesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DisplayPowerInfoEXT","page":"API","title":"Vulkan._DisplayPowerInfoEXT","text":"Intermediate wrapper for VkDisplayPowerInfoEXT.\n\nExtension: VKEXTdisplay_control\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDisplayPowerInfoEXT.html\n\nstruct _DisplayPowerInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDisplayPowerInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DisplayPowerInfoEXT-Tuple{DisplayPowerStateEXT}","page":"API","title":"Vulkan._DisplayPowerInfoEXT","text":"_DisplayPowerInfoEXT(power_state::DisplayPowerStateEXT; next = C_NULL)\n\nExtension: VK_EXT_display_control\n\nArguments:\n\npower_state::DisplayPowerStateEXT\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DisplayPowerInfoEXT(power_state::DisplayPowerStateEXT; next) -> _DisplayPowerInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DisplayPresentInfoKHR","page":"API","title":"Vulkan._DisplayPresentInfoKHR","text":"Intermediate wrapper for VkDisplayPresentInfoKHR.\n\nExtension: VKKHRdisplay_swapchain\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDisplayPresentInfoKHR.html\n\nstruct _DisplayPresentInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDisplayPresentInfoKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DisplayPresentInfoKHR-Tuple{_Rect2D, _Rect2D, Bool}","page":"API","title":"Vulkan._DisplayPresentInfoKHR","text":"_DisplayPresentInfoKHR(src_rect::_Rect2D, dst_rect::_Rect2D, persistent::Bool; next = C_NULL)\n\nExtension: VK_KHR_display_swapchain\n\nArguments:\n\nsrc_rect::_Rect2D\ndst_rect::_Rect2D\npersistent::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DisplayPresentInfoKHR(src_rect::_Rect2D, dst_rect::_Rect2D, persistent::Bool; next) -> _DisplayPresentInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DisplayProperties2KHR","page":"API","title":"Vulkan._DisplayProperties2KHR","text":"Intermediate wrapper for VkDisplayProperties2KHR.\n\nExtension: VKKHRgetdisplayproperties2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDisplayProperties2KHR.html\n\nstruct _DisplayProperties2KHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDisplayProperties2KHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DisplayProperties2KHR-Tuple{_DisplayPropertiesKHR}","page":"API","title":"Vulkan._DisplayProperties2KHR","text":"_DisplayProperties2KHR(display_properties::_DisplayPropertiesKHR; next = C_NULL)\n\nExtension: VK_KHR_get_display_properties2\n\nArguments:\n\ndisplay_properties::_DisplayPropertiesKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\n_DisplayProperties2KHR(display_properties::_DisplayPropertiesKHR; next) -> _DisplayProperties2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DisplayPropertiesKHR","page":"API","title":"Vulkan._DisplayPropertiesKHR","text":"Intermediate wrapper for VkDisplayPropertiesKHR.\n\nExtension: VKKHRdisplay\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDisplayPropertiesKHR.html\n\nstruct _DisplayPropertiesKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDisplayPropertiesKHR\ndeps::Vector{Any}\ndisplay::DisplayKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DisplayPropertiesKHR-Tuple{Any, AbstractString, _Extent2D, _Extent2D, Bool, Bool}","page":"API","title":"Vulkan._DisplayPropertiesKHR","text":"_DisplayPropertiesKHR(display, display_name::AbstractString, physical_dimensions::_Extent2D, physical_resolution::_Extent2D, plane_reorder_possible::Bool, persistent_content::Bool; supported_transforms = 0)\n\nExtension: VK_KHR_display\n\nArguments:\n\ndisplay\ndisplay_name::AbstractString\nphysical_dimensions::_Extent2D\nphysical_resolution::_Extent2D\nplane_reorder_possible::Bool\npersistent_content::Bool\nsupported_transforms: defaults to 0\n\nAPI documentation\n\n_DisplayPropertiesKHR(display, display_name::AbstractString, physical_dimensions::_Extent2D, physical_resolution::_Extent2D, plane_reorder_possible::Bool, persistent_content::Bool; supported_transforms) -> _DisplayPropertiesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DisplaySurfaceCreateInfoKHR","page":"API","title":"Vulkan._DisplaySurfaceCreateInfoKHR","text":"Intermediate wrapper for VkDisplaySurfaceCreateInfoKHR.\n\nExtension: VKKHRdisplay\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDisplaySurfaceCreateInfoKHR.html\n\nstruct _DisplaySurfaceCreateInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDisplaySurfaceCreateInfoKHR\ndeps::Vector{Any}\ndisplay_mode::DisplayModeKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DisplaySurfaceCreateInfoKHR-Tuple{Any, Integer, Integer, SurfaceTransformFlagKHR, Real, DisplayPlaneAlphaFlagKHR, _Extent2D}","page":"API","title":"Vulkan._DisplaySurfaceCreateInfoKHR","text":"_DisplaySurfaceCreateInfoKHR(display_mode, plane_index::Integer, plane_stack_index::Integer, transform::SurfaceTransformFlagKHR, global_alpha::Real, alpha_mode::DisplayPlaneAlphaFlagKHR, image_extent::_Extent2D; next = C_NULL, flags = 0)\n\nExtension: VK_KHR_display\n\nArguments:\n\ndisplay_mode\nplane_index::Integer\nplane_stack_index::Integer\ntransform::SurfaceTransformFlagKHR\nglobal_alpha::Real\nalpha_mode::DisplayPlaneAlphaFlagKHR\nimage_extent::_Extent2D\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_DisplaySurfaceCreateInfoKHR(display_mode, plane_index::Integer, plane_stack_index::Integer, transform::SurfaceTransformFlagKHR, global_alpha::Real, alpha_mode::DisplayPlaneAlphaFlagKHR, image_extent::_Extent2D; next, flags) -> _DisplaySurfaceCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DrawIndexedIndirectCommand","page":"API","title":"Vulkan._DrawIndexedIndirectCommand","text":"Intermediate wrapper for VkDrawIndexedIndirectCommand.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDrawIndexedIndirectCommand.html\n\nstruct _DrawIndexedIndirectCommand <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkDrawIndexedIndirectCommand\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DrawIndexedIndirectCommand-NTuple{5, Integer}","page":"API","title":"Vulkan._DrawIndexedIndirectCommand","text":"_DrawIndexedIndirectCommand(index_count::Integer, instance_count::Integer, first_index::Integer, vertex_offset::Integer, first_instance::Integer)\n\nArguments:\n\nindex_count::Integer\ninstance_count::Integer\nfirst_index::Integer\nvertex_offset::Integer\nfirst_instance::Integer\n\nAPI documentation\n\n_DrawIndexedIndirectCommand(index_count::Integer, instance_count::Integer, first_index::Integer, vertex_offset::Integer, first_instance::Integer) -> _DrawIndexedIndirectCommand\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DrawIndirectCommand","page":"API","title":"Vulkan._DrawIndirectCommand","text":"Intermediate wrapper for VkDrawIndirectCommand.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDrawIndirectCommand.html\n\nstruct _DrawIndirectCommand <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkDrawIndirectCommand\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DrawIndirectCommand-NTuple{4, Integer}","page":"API","title":"Vulkan._DrawIndirectCommand","text":"_DrawIndirectCommand(vertex_count::Integer, instance_count::Integer, first_vertex::Integer, first_instance::Integer)\n\nArguments:\n\nvertex_count::Integer\ninstance_count::Integer\nfirst_vertex::Integer\nfirst_instance::Integer\n\nAPI documentation\n\n_DrawIndirectCommand(vertex_count::Integer, instance_count::Integer, first_vertex::Integer, first_instance::Integer) -> _DrawIndirectCommand\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DrawMeshTasksIndirectCommandNV","page":"API","title":"Vulkan._DrawMeshTasksIndirectCommandNV","text":"Intermediate wrapper for VkDrawMeshTasksIndirectCommandNV.\n\nExtension: VKNVmesh_shader\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDrawMeshTasksIndirectCommandNV.html\n\nstruct _DrawMeshTasksIndirectCommandNV <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkDrawMeshTasksIndirectCommandNV\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DrawMeshTasksIndirectCommandNV-Tuple{Integer, Integer}","page":"API","title":"Vulkan._DrawMeshTasksIndirectCommandNV","text":"_DrawMeshTasksIndirectCommandNV(task_count::Integer, first_task::Integer)\n\nExtension: VK_NV_mesh_shader\n\nArguments:\n\ntask_count::Integer\nfirst_task::Integer\n\nAPI documentation\n\n_DrawMeshTasksIndirectCommandNV(task_count::Integer, first_task::Integer) -> _DrawMeshTasksIndirectCommandNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DrmFormatModifierPropertiesEXT","page":"API","title":"Vulkan._DrmFormatModifierPropertiesEXT","text":"Intermediate wrapper for VkDrmFormatModifierPropertiesEXT.\n\nExtension: VKEXTimagedrmformat_modifier\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDrmFormatModifierPropertiesEXT.html\n\nstruct _DrmFormatModifierPropertiesEXT <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkDrmFormatModifierPropertiesEXT\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DrmFormatModifierPropertiesEXT-Tuple{Integer, Integer, FormatFeatureFlag}","page":"API","title":"Vulkan._DrmFormatModifierPropertiesEXT","text":"_DrmFormatModifierPropertiesEXT(drm_format_modifier::Integer, drm_format_modifier_plane_count::Integer, drm_format_modifier_tiling_features::FormatFeatureFlag)\n\nExtension: VK_EXT_image_drm_format_modifier\n\nArguments:\n\ndrm_format_modifier::Integer\ndrm_format_modifier_plane_count::Integer\ndrm_format_modifier_tiling_features::FormatFeatureFlag\n\nAPI documentation\n\n_DrmFormatModifierPropertiesEXT(drm_format_modifier::Integer, drm_format_modifier_plane_count::Integer, drm_format_modifier_tiling_features::FormatFeatureFlag) -> _DrmFormatModifierPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._DrmFormatModifierPropertiesListEXT","page":"API","title":"Vulkan._DrmFormatModifierPropertiesListEXT","text":"Intermediate wrapper for VkDrmFormatModifierPropertiesListEXT.\n\nExtension: VKEXTimagedrmformat_modifier\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkDrmFormatModifierPropertiesListEXT.html\n\nstruct _DrmFormatModifierPropertiesListEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkDrmFormatModifierPropertiesListEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DrmFormatModifierPropertiesListEXT-Tuple{}","page":"API","title":"Vulkan._DrmFormatModifierPropertiesListEXT","text":"_DrmFormatModifierPropertiesListEXT(; next = C_NULL, drm_format_modifier_properties = C_NULL)\n\nExtension: VK_EXT_image_drm_format_modifier\n\nArguments:\n\nnext: defaults to C_NULL\ndrm_format_modifier_properties: defaults to C_NULL\n\nAPI documentation\n\n_DrmFormatModifierPropertiesListEXT(; next, drm_format_modifier_properties) -> _DrmFormatModifierPropertiesListEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._EventCreateInfo","page":"API","title":"Vulkan._EventCreateInfo","text":"Intermediate wrapper for VkEventCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkEventCreateInfo.html\n\nstruct _EventCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkEventCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._EventCreateInfo-Tuple{}","page":"API","title":"Vulkan._EventCreateInfo","text":"_EventCreateInfo(; next = C_NULL, flags = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_EventCreateInfo(; next, flags) -> _EventCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ExportFenceCreateInfo","page":"API","title":"Vulkan._ExportFenceCreateInfo","text":"Intermediate wrapper for VkExportFenceCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkExportFenceCreateInfo.html\n\nstruct _ExportFenceCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkExportFenceCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ExportFenceCreateInfo-Tuple{}","page":"API","title":"Vulkan._ExportFenceCreateInfo","text":"_ExportFenceCreateInfo(; next = C_NULL, handle_types = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nhandle_types: defaults to 0\n\nAPI documentation\n\n_ExportFenceCreateInfo(; next, handle_types) -> _ExportFenceCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ExportMemoryAllocateInfo","page":"API","title":"Vulkan._ExportMemoryAllocateInfo","text":"Intermediate wrapper for VkExportMemoryAllocateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkExportMemoryAllocateInfo.html\n\nstruct _ExportMemoryAllocateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkExportMemoryAllocateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ExportMemoryAllocateInfo-Tuple{}","page":"API","title":"Vulkan._ExportMemoryAllocateInfo","text":"_ExportMemoryAllocateInfo(; next = C_NULL, handle_types = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nhandle_types: defaults to 0\n\nAPI documentation\n\n_ExportMemoryAllocateInfo(; next, handle_types) -> _ExportMemoryAllocateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ExportMemoryAllocateInfoNV","page":"API","title":"Vulkan._ExportMemoryAllocateInfoNV","text":"Intermediate wrapper for VkExportMemoryAllocateInfoNV.\n\nExtension: VKNVexternal_memory\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkExportMemoryAllocateInfoNV.html\n\nstruct _ExportMemoryAllocateInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkExportMemoryAllocateInfoNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ExportMemoryAllocateInfoNV-Tuple{}","page":"API","title":"Vulkan._ExportMemoryAllocateInfoNV","text":"_ExportMemoryAllocateInfoNV(; next = C_NULL, handle_types = 0)\n\nExtension: VK_NV_external_memory\n\nArguments:\n\nnext: defaults to C_NULL\nhandle_types: defaults to 0\n\nAPI documentation\n\n_ExportMemoryAllocateInfoNV(; next, handle_types) -> _ExportMemoryAllocateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ExportSemaphoreCreateInfo","page":"API","title":"Vulkan._ExportSemaphoreCreateInfo","text":"Intermediate wrapper for VkExportSemaphoreCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkExportSemaphoreCreateInfo.html\n\nstruct _ExportSemaphoreCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkExportSemaphoreCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ExportSemaphoreCreateInfo-Tuple{}","page":"API","title":"Vulkan._ExportSemaphoreCreateInfo","text":"_ExportSemaphoreCreateInfo(; next = C_NULL, handle_types = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nhandle_types: defaults to 0\n\nAPI documentation\n\n_ExportSemaphoreCreateInfo(; next, handle_types) -> _ExportSemaphoreCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ExtensionProperties","page":"API","title":"Vulkan._ExtensionProperties","text":"Intermediate wrapper for VkExtensionProperties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkExtensionProperties.html\n\nstruct _ExtensionProperties <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkExtensionProperties\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ExtensionProperties-Tuple{AbstractString, VersionNumber}","page":"API","title":"Vulkan._ExtensionProperties","text":"_ExtensionProperties(extension_name::AbstractString, spec_version::VersionNumber)\n\nArguments:\n\nextension_name::AbstractString\nspec_version::VersionNumber\n\nAPI documentation\n\n_ExtensionProperties(extension_name::AbstractString, spec_version::VersionNumber)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._Extent2D","page":"API","title":"Vulkan._Extent2D","text":"Intermediate wrapper for VkExtent2D.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkExtent2D.html\n\nstruct _Extent2D <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkExtent2D\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._Extent2D-Tuple{Integer, Integer}","page":"API","title":"Vulkan._Extent2D","text":"_Extent2D(width::Integer, height::Integer)\n\nArguments:\n\nwidth::Integer\nheight::Integer\n\nAPI documentation\n\n_Extent2D(width::Integer, height::Integer) -> _Extent2D\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._Extent3D","page":"API","title":"Vulkan._Extent3D","text":"Intermediate wrapper for VkExtent3D.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkExtent3D.html\n\nstruct _Extent3D <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkExtent3D\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._Extent3D-Tuple{Integer, Integer, Integer}","page":"API","title":"Vulkan._Extent3D","text":"_Extent3D(width::Integer, height::Integer, depth::Integer)\n\nArguments:\n\nwidth::Integer\nheight::Integer\ndepth::Integer\n\nAPI documentation\n\n_Extent3D(width::Integer, height::Integer, depth::Integer) -> _Extent3D\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ExternalBufferProperties","page":"API","title":"Vulkan._ExternalBufferProperties","text":"Intermediate wrapper for VkExternalBufferProperties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkExternalBufferProperties.html\n\nstruct _ExternalBufferProperties <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkExternalBufferProperties\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ExternalBufferProperties-Tuple{_ExternalMemoryProperties}","page":"API","title":"Vulkan._ExternalBufferProperties","text":"_ExternalBufferProperties(external_memory_properties::_ExternalMemoryProperties; next = C_NULL)\n\nArguments:\n\nexternal_memory_properties::_ExternalMemoryProperties\nnext: defaults to C_NULL\n\nAPI documentation\n\n_ExternalBufferProperties(external_memory_properties::_ExternalMemoryProperties; next) -> _ExternalBufferProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ExternalFenceProperties","page":"API","title":"Vulkan._ExternalFenceProperties","text":"Intermediate wrapper for VkExternalFenceProperties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkExternalFenceProperties.html\n\nstruct _ExternalFenceProperties <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkExternalFenceProperties\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ExternalFenceProperties-Tuple{ExternalFenceHandleTypeFlag, ExternalFenceHandleTypeFlag}","page":"API","title":"Vulkan._ExternalFenceProperties","text":"_ExternalFenceProperties(export_from_imported_handle_types::ExternalFenceHandleTypeFlag, compatible_handle_types::ExternalFenceHandleTypeFlag; next = C_NULL, external_fence_features = 0)\n\nArguments:\n\nexport_from_imported_handle_types::ExternalFenceHandleTypeFlag\ncompatible_handle_types::ExternalFenceHandleTypeFlag\nnext: defaults to C_NULL\nexternal_fence_features: defaults to 0\n\nAPI documentation\n\n_ExternalFenceProperties(export_from_imported_handle_types::ExternalFenceHandleTypeFlag, compatible_handle_types::ExternalFenceHandleTypeFlag; next, external_fence_features) -> _ExternalFenceProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ExternalImageFormatProperties","page":"API","title":"Vulkan._ExternalImageFormatProperties","text":"Intermediate wrapper for VkExternalImageFormatProperties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkExternalImageFormatProperties.html\n\nstruct _ExternalImageFormatProperties <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkExternalImageFormatProperties\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ExternalImageFormatProperties-Tuple{_ExternalMemoryProperties}","page":"API","title":"Vulkan._ExternalImageFormatProperties","text":"_ExternalImageFormatProperties(external_memory_properties::_ExternalMemoryProperties; next = C_NULL)\n\nArguments:\n\nexternal_memory_properties::_ExternalMemoryProperties\nnext: defaults to C_NULL\n\nAPI documentation\n\n_ExternalImageFormatProperties(external_memory_properties::_ExternalMemoryProperties; next) -> _ExternalImageFormatProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ExternalImageFormatPropertiesNV","page":"API","title":"Vulkan._ExternalImageFormatPropertiesNV","text":"Intermediate wrapper for VkExternalImageFormatPropertiesNV.\n\nExtension: VKNVexternalmemorycapabilities\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkExternalImageFormatPropertiesNV.html\n\nstruct _ExternalImageFormatPropertiesNV <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkExternalImageFormatPropertiesNV\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ExternalImageFormatPropertiesNV-Tuple{_ImageFormatProperties}","page":"API","title":"Vulkan._ExternalImageFormatPropertiesNV","text":"_ExternalImageFormatPropertiesNV(image_format_properties::_ImageFormatProperties; external_memory_features = 0, export_from_imported_handle_types = 0, compatible_handle_types = 0)\n\nExtension: VK_NV_external_memory_capabilities\n\nArguments:\n\nimage_format_properties::_ImageFormatProperties\nexternal_memory_features: defaults to 0\nexport_from_imported_handle_types: defaults to 0\ncompatible_handle_types: defaults to 0\n\nAPI documentation\n\n_ExternalImageFormatPropertiesNV(image_format_properties::_ImageFormatProperties; external_memory_features, export_from_imported_handle_types, compatible_handle_types) -> _ExternalImageFormatPropertiesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ExternalMemoryBufferCreateInfo","page":"API","title":"Vulkan._ExternalMemoryBufferCreateInfo","text":"Intermediate wrapper for VkExternalMemoryBufferCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkExternalMemoryBufferCreateInfo.html\n\nstruct _ExternalMemoryBufferCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkExternalMemoryBufferCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ExternalMemoryBufferCreateInfo-Tuple{}","page":"API","title":"Vulkan._ExternalMemoryBufferCreateInfo","text":"_ExternalMemoryBufferCreateInfo(; next = C_NULL, handle_types = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nhandle_types: defaults to 0\n\nAPI documentation\n\n_ExternalMemoryBufferCreateInfo(; next, handle_types) -> _ExternalMemoryBufferCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ExternalMemoryImageCreateInfo","page":"API","title":"Vulkan._ExternalMemoryImageCreateInfo","text":"Intermediate wrapper for VkExternalMemoryImageCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkExternalMemoryImageCreateInfo.html\n\nstruct _ExternalMemoryImageCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkExternalMemoryImageCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ExternalMemoryImageCreateInfo-Tuple{}","page":"API","title":"Vulkan._ExternalMemoryImageCreateInfo","text":"_ExternalMemoryImageCreateInfo(; next = C_NULL, handle_types = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nhandle_types: defaults to 0\n\nAPI documentation\n\n_ExternalMemoryImageCreateInfo(; next, handle_types) -> _ExternalMemoryImageCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ExternalMemoryImageCreateInfoNV","page":"API","title":"Vulkan._ExternalMemoryImageCreateInfoNV","text":"Intermediate wrapper for VkExternalMemoryImageCreateInfoNV.\n\nExtension: VKNVexternal_memory\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkExternalMemoryImageCreateInfoNV.html\n\nstruct _ExternalMemoryImageCreateInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkExternalMemoryImageCreateInfoNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ExternalMemoryImageCreateInfoNV-Tuple{}","page":"API","title":"Vulkan._ExternalMemoryImageCreateInfoNV","text":"_ExternalMemoryImageCreateInfoNV(; next = C_NULL, handle_types = 0)\n\nExtension: VK_NV_external_memory\n\nArguments:\n\nnext: defaults to C_NULL\nhandle_types: defaults to 0\n\nAPI documentation\n\n_ExternalMemoryImageCreateInfoNV(; next, handle_types) -> _ExternalMemoryImageCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ExternalMemoryProperties","page":"API","title":"Vulkan._ExternalMemoryProperties","text":"Intermediate wrapper for VkExternalMemoryProperties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkExternalMemoryProperties.html\n\nstruct _ExternalMemoryProperties <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkExternalMemoryProperties\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ExternalMemoryProperties-Tuple{ExternalMemoryFeatureFlag, ExternalMemoryHandleTypeFlag}","page":"API","title":"Vulkan._ExternalMemoryProperties","text":"_ExternalMemoryProperties(external_memory_features::ExternalMemoryFeatureFlag, compatible_handle_types::ExternalMemoryHandleTypeFlag; export_from_imported_handle_types = 0)\n\nArguments:\n\nexternal_memory_features::ExternalMemoryFeatureFlag\ncompatible_handle_types::ExternalMemoryHandleTypeFlag\nexport_from_imported_handle_types: defaults to 0\n\nAPI documentation\n\n_ExternalMemoryProperties(external_memory_features::ExternalMemoryFeatureFlag, compatible_handle_types::ExternalMemoryHandleTypeFlag; export_from_imported_handle_types) -> _ExternalMemoryProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ExternalSemaphoreProperties","page":"API","title":"Vulkan._ExternalSemaphoreProperties","text":"Intermediate wrapper for VkExternalSemaphoreProperties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkExternalSemaphoreProperties.html\n\nstruct _ExternalSemaphoreProperties <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkExternalSemaphoreProperties\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ExternalSemaphoreProperties-Tuple{ExternalSemaphoreHandleTypeFlag, ExternalSemaphoreHandleTypeFlag}","page":"API","title":"Vulkan._ExternalSemaphoreProperties","text":"_ExternalSemaphoreProperties(export_from_imported_handle_types::ExternalSemaphoreHandleTypeFlag, compatible_handle_types::ExternalSemaphoreHandleTypeFlag; next = C_NULL, external_semaphore_features = 0)\n\nArguments:\n\nexport_from_imported_handle_types::ExternalSemaphoreHandleTypeFlag\ncompatible_handle_types::ExternalSemaphoreHandleTypeFlag\nnext: defaults to C_NULL\nexternal_semaphore_features: defaults to 0\n\nAPI documentation\n\n_ExternalSemaphoreProperties(export_from_imported_handle_types::ExternalSemaphoreHandleTypeFlag, compatible_handle_types::ExternalSemaphoreHandleTypeFlag; next, external_semaphore_features) -> _ExternalSemaphoreProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._FenceCreateInfo","page":"API","title":"Vulkan._FenceCreateInfo","text":"Intermediate wrapper for VkFenceCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkFenceCreateInfo.html\n\nstruct _FenceCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkFenceCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._FenceCreateInfo-Tuple{}","page":"API","title":"Vulkan._FenceCreateInfo","text":"_FenceCreateInfo(; next = C_NULL, flags = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_FenceCreateInfo(; next, flags) -> _FenceCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._FenceGetFdInfoKHR","page":"API","title":"Vulkan._FenceGetFdInfoKHR","text":"Intermediate wrapper for VkFenceGetFdInfoKHR.\n\nExtension: VKKHRexternalfencefd\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkFenceGetFdInfoKHR.html\n\nstruct _FenceGetFdInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkFenceGetFdInfoKHR\ndeps::Vector{Any}\nfence::Fence\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._FenceGetFdInfoKHR-Tuple{Any, ExternalFenceHandleTypeFlag}","page":"API","title":"Vulkan._FenceGetFdInfoKHR","text":"_FenceGetFdInfoKHR(fence, handle_type::ExternalFenceHandleTypeFlag; next = C_NULL)\n\nExtension: VK_KHR_external_fence_fd\n\nArguments:\n\nfence\nhandle_type::ExternalFenceHandleTypeFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\n_FenceGetFdInfoKHR(fence, handle_type::ExternalFenceHandleTypeFlag; next) -> _FenceGetFdInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._FilterCubicImageViewImageFormatPropertiesEXT","page":"API","title":"Vulkan._FilterCubicImageViewImageFormatPropertiesEXT","text":"Intermediate wrapper for VkFilterCubicImageViewImageFormatPropertiesEXT.\n\nExtension: VKEXTfilter_cubic\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkFilterCubicImageViewImageFormatPropertiesEXT.html\n\nstruct _FilterCubicImageViewImageFormatPropertiesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkFilterCubicImageViewImageFormatPropertiesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._FilterCubicImageViewImageFormatPropertiesEXT-Tuple{Bool, Bool}","page":"API","title":"Vulkan._FilterCubicImageViewImageFormatPropertiesEXT","text":"_FilterCubicImageViewImageFormatPropertiesEXT(filter_cubic::Bool, filter_cubic_minmax::Bool; next = C_NULL)\n\nExtension: VK_EXT_filter_cubic\n\nArguments:\n\nfilter_cubic::Bool\nfilter_cubic_minmax::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_FilterCubicImageViewImageFormatPropertiesEXT(filter_cubic::Bool, filter_cubic_minmax::Bool; next) -> _FilterCubicImageViewImageFormatPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._FormatProperties","page":"API","title":"Vulkan._FormatProperties","text":"Intermediate wrapper for VkFormatProperties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkFormatProperties.html\n\nstruct _FormatProperties <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkFormatProperties\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._FormatProperties-Tuple{}","page":"API","title":"Vulkan._FormatProperties","text":"_FormatProperties(; linear_tiling_features = 0, optimal_tiling_features = 0, buffer_features = 0)\n\nArguments:\n\nlinear_tiling_features: defaults to 0\noptimal_tiling_features: defaults to 0\nbuffer_features: defaults to 0\n\nAPI documentation\n\n_FormatProperties(; linear_tiling_features, optimal_tiling_features, buffer_features) -> _FormatProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._FormatProperties2","page":"API","title":"Vulkan._FormatProperties2","text":"Intermediate wrapper for VkFormatProperties2.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkFormatProperties2.html\n\nstruct _FormatProperties2 <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkFormatProperties2\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._FormatProperties2-Tuple{_FormatProperties}","page":"API","title":"Vulkan._FormatProperties2","text":"_FormatProperties2(format_properties::_FormatProperties; next = C_NULL)\n\nArguments:\n\nformat_properties::_FormatProperties\nnext: defaults to C_NULL\n\nAPI documentation\n\n_FormatProperties2(format_properties::_FormatProperties; next) -> _FormatProperties2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._FragmentShadingRateAttachmentInfoKHR","page":"API","title":"Vulkan._FragmentShadingRateAttachmentInfoKHR","text":"Intermediate wrapper for VkFragmentShadingRateAttachmentInfoKHR.\n\nExtension: VKKHRfragmentshadingrate\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkFragmentShadingRateAttachmentInfoKHR.html\n\nstruct _FragmentShadingRateAttachmentInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkFragmentShadingRateAttachmentInfoKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._FragmentShadingRateAttachmentInfoKHR-Tuple{_AttachmentReference2, _Extent2D}","page":"API","title":"Vulkan._FragmentShadingRateAttachmentInfoKHR","text":"_FragmentShadingRateAttachmentInfoKHR(fragment_shading_rate_attachment::_AttachmentReference2, shading_rate_attachment_texel_size::_Extent2D; next = C_NULL)\n\nExtension: VK_KHR_fragment_shading_rate\n\nArguments:\n\nfragment_shading_rate_attachment::_AttachmentReference2\nshading_rate_attachment_texel_size::_Extent2D\nnext: defaults to C_NULL\n\nAPI documentation\n\n_FragmentShadingRateAttachmentInfoKHR(fragment_shading_rate_attachment::_AttachmentReference2, shading_rate_attachment_texel_size::_Extent2D; next) -> _FragmentShadingRateAttachmentInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._FramebufferAttachmentImageInfo","page":"API","title":"Vulkan._FramebufferAttachmentImageInfo","text":"Intermediate wrapper for VkFramebufferAttachmentImageInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkFramebufferAttachmentImageInfo.html\n\nstruct _FramebufferAttachmentImageInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkFramebufferAttachmentImageInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._FramebufferAttachmentImageInfo-Tuple{ImageUsageFlag, Integer, Integer, Integer, AbstractArray}","page":"API","title":"Vulkan._FramebufferAttachmentImageInfo","text":"_FramebufferAttachmentImageInfo(usage::ImageUsageFlag, width::Integer, height::Integer, layer_count::Integer, view_formats::AbstractArray{Format}; next = C_NULL, flags = 0)\n\nArguments:\n\nusage::ImageUsageFlag\nwidth::Integer\nheight::Integer\nlayer_count::Integer\nview_formats::AbstractArray{Format}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_FramebufferAttachmentImageInfo(usage::ImageUsageFlag, width::Integer, height::Integer, layer_count::Integer, view_formats::AbstractArray; next, flags) -> _FramebufferAttachmentImageInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._FramebufferAttachmentsCreateInfo","page":"API","title":"Vulkan._FramebufferAttachmentsCreateInfo","text":"Intermediate wrapper for VkFramebufferAttachmentsCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkFramebufferAttachmentsCreateInfo.html\n\nstruct _FramebufferAttachmentsCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkFramebufferAttachmentsCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._FramebufferAttachmentsCreateInfo-Tuple{AbstractArray}","page":"API","title":"Vulkan._FramebufferAttachmentsCreateInfo","text":"_FramebufferAttachmentsCreateInfo(attachment_image_infos::AbstractArray{_FramebufferAttachmentImageInfo}; next = C_NULL)\n\nArguments:\n\nattachment_image_infos::AbstractArray{_FramebufferAttachmentImageInfo}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_FramebufferAttachmentsCreateInfo(attachment_image_infos::AbstractArray; next) -> _FramebufferAttachmentsCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._FramebufferCreateInfo","page":"API","title":"Vulkan._FramebufferCreateInfo","text":"Intermediate wrapper for VkFramebufferCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkFramebufferCreateInfo.html\n\nstruct _FramebufferCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkFramebufferCreateInfo\ndeps::Vector{Any}\nrender_pass::RenderPass\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._FramebufferCreateInfo-Tuple{Any, AbstractArray, Integer, Integer, Integer}","page":"API","title":"Vulkan._FramebufferCreateInfo","text":"_FramebufferCreateInfo(render_pass, attachments::AbstractArray{ImageView}, width::Integer, height::Integer, layers::Integer; next = C_NULL, flags = 0)\n\nArguments:\n\nrender_pass\nattachments::AbstractArray{ImageView}\nwidth::Integer\nheight::Integer\nlayers::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_FramebufferCreateInfo(render_pass, attachments::AbstractArray, width::Integer, height::Integer, layers::Integer; next, flags) -> _FramebufferCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._FramebufferMixedSamplesCombinationNV","page":"API","title":"Vulkan._FramebufferMixedSamplesCombinationNV","text":"Intermediate wrapper for VkFramebufferMixedSamplesCombinationNV.\n\nExtension: VKNVcoveragereductionmode\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkFramebufferMixedSamplesCombinationNV.html\n\nstruct _FramebufferMixedSamplesCombinationNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkFramebufferMixedSamplesCombinationNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._FramebufferMixedSamplesCombinationNV-Tuple{CoverageReductionModeNV, SampleCountFlag, SampleCountFlag, SampleCountFlag}","page":"API","title":"Vulkan._FramebufferMixedSamplesCombinationNV","text":"_FramebufferMixedSamplesCombinationNV(coverage_reduction_mode::CoverageReductionModeNV, rasterization_samples::SampleCountFlag, depth_stencil_samples::SampleCountFlag, color_samples::SampleCountFlag; next = C_NULL)\n\nExtension: VK_NV_coverage_reduction_mode\n\nArguments:\n\ncoverage_reduction_mode::CoverageReductionModeNV\nrasterization_samples::SampleCountFlag\ndepth_stencil_samples::SampleCountFlag\ncolor_samples::SampleCountFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\n_FramebufferMixedSamplesCombinationNV(coverage_reduction_mode::CoverageReductionModeNV, rasterization_samples::SampleCountFlag, depth_stencil_samples::SampleCountFlag, color_samples::SampleCountFlag; next) -> _FramebufferMixedSamplesCombinationNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._GeneratedCommandsInfoNV","page":"API","title":"Vulkan._GeneratedCommandsInfoNV","text":"Intermediate wrapper for VkGeneratedCommandsInfoNV.\n\nExtension: VKNVdevicegeneratedcommands\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkGeneratedCommandsInfoNV.html\n\nstruct _GeneratedCommandsInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkGeneratedCommandsInfoNV\ndeps::Vector{Any}\npipeline::Pipeline\nindirect_commands_layout::IndirectCommandsLayoutNV\npreprocess_buffer::Buffer\nsequences_count_buffer::Union{Ptr{Nothing}, Buffer}\nsequences_index_buffer::Union{Ptr{Nothing}, Buffer}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._GeneratedCommandsInfoNV-Tuple{PipelineBindPoint, Any, Any, AbstractArray, Integer, Any, Integer, Integer, Integer, Integer}","page":"API","title":"Vulkan._GeneratedCommandsInfoNV","text":"_GeneratedCommandsInfoNV(pipeline_bind_point::PipelineBindPoint, pipeline, indirect_commands_layout, streams::AbstractArray{_IndirectCommandsStreamNV}, sequences_count::Integer, preprocess_buffer, preprocess_offset::Integer, preprocess_size::Integer, sequences_count_offset::Integer, sequences_index_offset::Integer; next = C_NULL, sequences_count_buffer = C_NULL, sequences_index_buffer = C_NULL)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\npipeline_bind_point::PipelineBindPoint\npipeline\nindirect_commands_layout\nstreams::AbstractArray{_IndirectCommandsStreamNV}\nsequences_count::Integer\npreprocess_buffer\npreprocess_offset::Integer\npreprocess_size::Integer\nsequences_count_offset::Integer\nsequences_index_offset::Integer\nnext: defaults to C_NULL\nsequences_count_buffer: defaults to C_NULL\nsequences_index_buffer: defaults to C_NULL\n\nAPI documentation\n\n_GeneratedCommandsInfoNV(pipeline_bind_point::PipelineBindPoint, pipeline, indirect_commands_layout, streams::AbstractArray, sequences_count::Integer, preprocess_buffer, preprocess_offset::Integer, preprocess_size::Integer, sequences_count_offset::Integer, sequences_index_offset::Integer; next, sequences_count_buffer, sequences_index_buffer) -> _GeneratedCommandsInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._GeneratedCommandsMemoryRequirementsInfoNV","page":"API","title":"Vulkan._GeneratedCommandsMemoryRequirementsInfoNV","text":"Intermediate wrapper for VkGeneratedCommandsMemoryRequirementsInfoNV.\n\nExtension: VKNVdevicegeneratedcommands\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkGeneratedCommandsMemoryRequirementsInfoNV.html\n\nstruct _GeneratedCommandsMemoryRequirementsInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkGeneratedCommandsMemoryRequirementsInfoNV\ndeps::Vector{Any}\npipeline::Pipeline\nindirect_commands_layout::IndirectCommandsLayoutNV\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._GeneratedCommandsMemoryRequirementsInfoNV-Tuple{PipelineBindPoint, Any, Any, Integer}","page":"API","title":"Vulkan._GeneratedCommandsMemoryRequirementsInfoNV","text":"_GeneratedCommandsMemoryRequirementsInfoNV(pipeline_bind_point::PipelineBindPoint, pipeline, indirect_commands_layout, max_sequences_count::Integer; next = C_NULL)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\npipeline_bind_point::PipelineBindPoint\npipeline\nindirect_commands_layout\nmax_sequences_count::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_GeneratedCommandsMemoryRequirementsInfoNV(pipeline_bind_point::PipelineBindPoint, pipeline, indirect_commands_layout, max_sequences_count::Integer; next) -> _GeneratedCommandsMemoryRequirementsInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._GeometryAABBNV","page":"API","title":"Vulkan._GeometryAABBNV","text":"Intermediate wrapper for VkGeometryAABBNV.\n\nExtension: VKNVray_tracing\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkGeometryAABBNV.html\n\nstruct _GeometryAABBNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkGeometryAABBNV\ndeps::Vector{Any}\naabb_data::Union{Ptr{Nothing}, Buffer}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._GeometryAABBNV-Tuple{Integer, Integer, Integer}","page":"API","title":"Vulkan._GeometryAABBNV","text":"_GeometryAABBNV(num_aab_bs::Integer, stride::Integer, offset::Integer; next = C_NULL, aabb_data = C_NULL)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\nnum_aab_bs::Integer\nstride::Integer\noffset::Integer\nnext: defaults to C_NULL\naabb_data: defaults to C_NULL\n\nAPI documentation\n\n_GeometryAABBNV(num_aab_bs::Integer, stride::Integer, offset::Integer; next, aabb_data) -> _GeometryAABBNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._GeometryDataNV","page":"API","title":"Vulkan._GeometryDataNV","text":"Intermediate wrapper for VkGeometryDataNV.\n\nExtension: VKNVray_tracing\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkGeometryDataNV.html\n\nstruct _GeometryDataNV <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkGeometryDataNV\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._GeometryDataNV-Tuple{_GeometryTrianglesNV, _GeometryAABBNV}","page":"API","title":"Vulkan._GeometryDataNV","text":"_GeometryDataNV(triangles::_GeometryTrianglesNV, aabbs::_GeometryAABBNV)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ntriangles::_GeometryTrianglesNV\naabbs::_GeometryAABBNV\n\nAPI documentation\n\n_GeometryDataNV(triangles::_GeometryTrianglesNV, aabbs::_GeometryAABBNV) -> _GeometryDataNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._GeometryNV","page":"API","title":"Vulkan._GeometryNV","text":"Intermediate wrapper for VkGeometryNV.\n\nExtension: VKNVray_tracing\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkGeometryNV.html\n\nstruct _GeometryNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkGeometryNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._GeometryNV-Tuple{GeometryTypeKHR, _GeometryDataNV}","page":"API","title":"Vulkan._GeometryNV","text":"_GeometryNV(geometry_type::GeometryTypeKHR, geometry::_GeometryDataNV; next = C_NULL, flags = 0)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ngeometry_type::GeometryTypeKHR\ngeometry::_GeometryDataNV\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_GeometryNV(geometry_type::GeometryTypeKHR, geometry::_GeometryDataNV; next, flags) -> _GeometryNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._GeometryTrianglesNV","page":"API","title":"Vulkan._GeometryTrianglesNV","text":"Intermediate wrapper for VkGeometryTrianglesNV.\n\nExtension: VKNVray_tracing\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkGeometryTrianglesNV.html\n\nstruct _GeometryTrianglesNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkGeometryTrianglesNV\ndeps::Vector{Any}\nvertex_data::Union{Ptr{Nothing}, Buffer}\nindex_data::Union{Ptr{Nothing}, Buffer}\ntransform_data::Union{Ptr{Nothing}, Buffer}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._GeometryTrianglesNV-Tuple{Integer, Integer, Integer, Format, Integer, Integer, IndexType, Integer}","page":"API","title":"Vulkan._GeometryTrianglesNV","text":"_GeometryTrianglesNV(vertex_offset::Integer, vertex_count::Integer, vertex_stride::Integer, vertex_format::Format, index_offset::Integer, index_count::Integer, index_type::IndexType, transform_offset::Integer; next = C_NULL, vertex_data = C_NULL, index_data = C_NULL, transform_data = C_NULL)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\nvertex_offset::Integer\nvertex_count::Integer\nvertex_stride::Integer\nvertex_format::Format\nindex_offset::Integer\nindex_count::Integer\nindex_type::IndexType\ntransform_offset::Integer\nnext: defaults to C_NULL\nvertex_data: defaults to C_NULL\nindex_data: defaults to C_NULL\ntransform_data: defaults to C_NULL\n\nAPI documentation\n\n_GeometryTrianglesNV(vertex_offset::Integer, vertex_count::Integer, vertex_stride::Integer, vertex_format::Format, index_offset::Integer, index_count::Integer, index_type::IndexType, transform_offset::Integer; next, vertex_data, index_data, transform_data) -> _GeometryTrianglesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._GraphicsPipelineCreateInfo","page":"API","title":"Vulkan._GraphicsPipelineCreateInfo","text":"Intermediate wrapper for VkGraphicsPipelineCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkGraphicsPipelineCreateInfo.html\n\nstruct _GraphicsPipelineCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkGraphicsPipelineCreateInfo\ndeps::Vector{Any}\nlayout::PipelineLayout\nrender_pass::RenderPass\nbase_pipeline_handle::Union{Ptr{Nothing}, Pipeline}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._GraphicsPipelineCreateInfo-Tuple{AbstractArray, _PipelineRasterizationStateCreateInfo, Any, Any, Integer, Integer}","page":"API","title":"Vulkan._GraphicsPipelineCreateInfo","text":"_GraphicsPipelineCreateInfo(stages::AbstractArray{_PipelineShaderStageCreateInfo}, rasterization_state::_PipelineRasterizationStateCreateInfo, layout, render_pass, subpass::Integer, base_pipeline_index::Integer; next = C_NULL, flags = 0, vertex_input_state = C_NULL, input_assembly_state = C_NULL, tessellation_state = C_NULL, viewport_state = C_NULL, multisample_state = C_NULL, depth_stencil_state = C_NULL, color_blend_state = C_NULL, dynamic_state = C_NULL, base_pipeline_handle = C_NULL)\n\nArguments:\n\nstages::AbstractArray{_PipelineShaderStageCreateInfo}\nrasterization_state::_PipelineRasterizationStateCreateInfo\nlayout\nrender_pass\nsubpass::Integer\nbase_pipeline_index::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\nvertex_input_state: defaults to C_NULL\ninput_assembly_state: defaults to C_NULL\ntessellation_state: defaults to C_NULL\nviewport_state: defaults to C_NULL\nmultisample_state: defaults to C_NULL\ndepth_stencil_state: defaults to C_NULL\ncolor_blend_state: defaults to C_NULL\ndynamic_state: defaults to C_NULL\nbase_pipeline_handle: defaults to C_NULL\n\nAPI documentation\n\n_GraphicsPipelineCreateInfo(stages::AbstractArray, rasterization_state::_PipelineRasterizationStateCreateInfo, layout, render_pass, subpass::Integer, base_pipeline_index::Integer; next, flags, vertex_input_state, input_assembly_state, tessellation_state, viewport_state, multisample_state, depth_stencil_state, color_blend_state, dynamic_state, base_pipeline_handle) -> _GraphicsPipelineCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._GraphicsPipelineShaderGroupsCreateInfoNV","page":"API","title":"Vulkan._GraphicsPipelineShaderGroupsCreateInfoNV","text":"Intermediate wrapper for VkGraphicsPipelineShaderGroupsCreateInfoNV.\n\nExtension: VKNVdevicegeneratedcommands\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkGraphicsPipelineShaderGroupsCreateInfoNV.html\n\nstruct _GraphicsPipelineShaderGroupsCreateInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkGraphicsPipelineShaderGroupsCreateInfoNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._GraphicsPipelineShaderGroupsCreateInfoNV-Tuple{AbstractArray, AbstractArray}","page":"API","title":"Vulkan._GraphicsPipelineShaderGroupsCreateInfoNV","text":"_GraphicsPipelineShaderGroupsCreateInfoNV(groups::AbstractArray{_GraphicsShaderGroupCreateInfoNV}, pipelines::AbstractArray{Pipeline}; next = C_NULL)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ngroups::AbstractArray{_GraphicsShaderGroupCreateInfoNV}\npipelines::AbstractArray{Pipeline}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_GraphicsPipelineShaderGroupsCreateInfoNV(groups::AbstractArray, pipelines::AbstractArray; next) -> _GraphicsPipelineShaderGroupsCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._GraphicsShaderGroupCreateInfoNV","page":"API","title":"Vulkan._GraphicsShaderGroupCreateInfoNV","text":"Intermediate wrapper for VkGraphicsShaderGroupCreateInfoNV.\n\nExtension: VKNVdevicegeneratedcommands\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkGraphicsShaderGroupCreateInfoNV.html\n\nstruct _GraphicsShaderGroupCreateInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkGraphicsShaderGroupCreateInfoNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._GraphicsShaderGroupCreateInfoNV-Tuple{AbstractArray}","page":"API","title":"Vulkan._GraphicsShaderGroupCreateInfoNV","text":"_GraphicsShaderGroupCreateInfoNV(stages::AbstractArray{_PipelineShaderStageCreateInfo}; next = C_NULL, vertex_input_state = C_NULL, tessellation_state = C_NULL)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\nstages::AbstractArray{_PipelineShaderStageCreateInfo}\nnext: defaults to C_NULL\nvertex_input_state: defaults to C_NULL\ntessellation_state: defaults to C_NULL\n\nAPI documentation\n\n_GraphicsShaderGroupCreateInfoNV(stages::AbstractArray; next, vertex_input_state, tessellation_state) -> _GraphicsShaderGroupCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._HdrMetadataEXT","page":"API","title":"Vulkan._HdrMetadataEXT","text":"Intermediate wrapper for VkHdrMetadataEXT.\n\nExtension: VKEXThdr_metadata\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkHdrMetadataEXT.html\n\nstruct _HdrMetadataEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkHdrMetadataEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._HdrMetadataEXT-Tuple{_XYColorEXT, _XYColorEXT, _XYColorEXT, _XYColorEXT, Real, Real, Real, Real}","page":"API","title":"Vulkan._HdrMetadataEXT","text":"_HdrMetadataEXT(display_primary_red::_XYColorEXT, display_primary_green::_XYColorEXT, display_primary_blue::_XYColorEXT, white_point::_XYColorEXT, max_luminance::Real, min_luminance::Real, max_content_light_level::Real, max_frame_average_light_level::Real; next = C_NULL)\n\nExtension: VK_EXT_hdr_metadata\n\nArguments:\n\ndisplay_primary_red::_XYColorEXT\ndisplay_primary_green::_XYColorEXT\ndisplay_primary_blue::_XYColorEXT\nwhite_point::_XYColorEXT\nmax_luminance::Real\nmin_luminance::Real\nmax_content_light_level::Real\nmax_frame_average_light_level::Real\nnext: defaults to C_NULL\n\nAPI documentation\n\n_HdrMetadataEXT(display_primary_red::_XYColorEXT, display_primary_green::_XYColorEXT, display_primary_blue::_XYColorEXT, white_point::_XYColorEXT, max_luminance::Real, min_luminance::Real, max_content_light_level::Real, max_frame_average_light_level::Real; next) -> _HdrMetadataEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._HeadlessSurfaceCreateInfoEXT","page":"API","title":"Vulkan._HeadlessSurfaceCreateInfoEXT","text":"Intermediate wrapper for VkHeadlessSurfaceCreateInfoEXT.\n\nExtension: VKEXTheadless_surface\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkHeadlessSurfaceCreateInfoEXT.html\n\nstruct _HeadlessSurfaceCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkHeadlessSurfaceCreateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._HeadlessSurfaceCreateInfoEXT-Tuple{}","page":"API","title":"Vulkan._HeadlessSurfaceCreateInfoEXT","text":"_HeadlessSurfaceCreateInfoEXT(; next = C_NULL, flags = 0)\n\nExtension: VK_EXT_headless_surface\n\nArguments:\n\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_HeadlessSurfaceCreateInfoEXT(; next, flags) -> _HeadlessSurfaceCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImageBlit","page":"API","title":"Vulkan._ImageBlit","text":"Intermediate wrapper for VkImageBlit.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageBlit.html\n\nstruct _ImageBlit <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkImageBlit\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageBlit-Tuple{_ImageSubresourceLayers, Tuple{_Offset3D, _Offset3D}, _ImageSubresourceLayers, Tuple{_Offset3D, _Offset3D}}","page":"API","title":"Vulkan._ImageBlit","text":"_ImageBlit(src_subresource::_ImageSubresourceLayers, src_offsets::NTuple{2, _Offset3D}, dst_subresource::_ImageSubresourceLayers, dst_offsets::NTuple{2, _Offset3D})\n\nArguments:\n\nsrc_subresource::_ImageSubresourceLayers\nsrc_offsets::NTuple{2, _Offset3D}\ndst_subresource::_ImageSubresourceLayers\ndst_offsets::NTuple{2, _Offset3D}\n\nAPI documentation\n\n_ImageBlit(src_subresource::_ImageSubresourceLayers, src_offsets::Tuple{_Offset3D, _Offset3D}, dst_subresource::_ImageSubresourceLayers, dst_offsets::Tuple{_Offset3D, _Offset3D}) -> _ImageBlit\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImageBlit2KHR","page":"API","title":"Vulkan._ImageBlit2KHR","text":"Intermediate wrapper for VkImageBlit2KHR.\n\nExtension: VKKHRcopy_commands2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageBlit2KHR.html\n\nstruct _ImageBlit2KHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkImageBlit2KHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageBlit2KHR-Tuple{_ImageSubresourceLayers, Tuple{_Offset3D, _Offset3D}, _ImageSubresourceLayers, Tuple{_Offset3D, _Offset3D}}","page":"API","title":"Vulkan._ImageBlit2KHR","text":"_ImageBlit2KHR(src_subresource::_ImageSubresourceLayers, src_offsets::NTuple{2, _Offset3D}, dst_subresource::_ImageSubresourceLayers, dst_offsets::NTuple{2, _Offset3D}; next = C_NULL)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\nsrc_subresource::_ImageSubresourceLayers\nsrc_offsets::NTuple{2, _Offset3D}\ndst_subresource::_ImageSubresourceLayers\ndst_offsets::NTuple{2, _Offset3D}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_ImageBlit2KHR(src_subresource::_ImageSubresourceLayers, src_offsets::Tuple{_Offset3D, _Offset3D}, dst_subresource::_ImageSubresourceLayers, dst_offsets::Tuple{_Offset3D, _Offset3D}; next) -> _ImageBlit2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImageCopy","page":"API","title":"Vulkan._ImageCopy","text":"Intermediate wrapper for VkImageCopy.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageCopy.html\n\nstruct _ImageCopy <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkImageCopy\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageCopy-Tuple{_ImageSubresourceLayers, _Offset3D, _ImageSubresourceLayers, _Offset3D, _Extent3D}","page":"API","title":"Vulkan._ImageCopy","text":"_ImageCopy(src_subresource::_ImageSubresourceLayers, src_offset::_Offset3D, dst_subresource::_ImageSubresourceLayers, dst_offset::_Offset3D, extent::_Extent3D)\n\nArguments:\n\nsrc_subresource::_ImageSubresourceLayers\nsrc_offset::_Offset3D\ndst_subresource::_ImageSubresourceLayers\ndst_offset::_Offset3D\nextent::_Extent3D\n\nAPI documentation\n\n_ImageCopy(src_subresource::_ImageSubresourceLayers, src_offset::_Offset3D, dst_subresource::_ImageSubresourceLayers, dst_offset::_Offset3D, extent::_Extent3D) -> _ImageCopy\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImageCopy2KHR","page":"API","title":"Vulkan._ImageCopy2KHR","text":"Intermediate wrapper for VkImageCopy2KHR.\n\nExtension: VKKHRcopy_commands2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageCopy2KHR.html\n\nstruct _ImageCopy2KHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkImageCopy2KHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageCopy2KHR-Tuple{_ImageSubresourceLayers, _Offset3D, _ImageSubresourceLayers, _Offset3D, _Extent3D}","page":"API","title":"Vulkan._ImageCopy2KHR","text":"_ImageCopy2KHR(src_subresource::_ImageSubresourceLayers, src_offset::_Offset3D, dst_subresource::_ImageSubresourceLayers, dst_offset::_Offset3D, extent::_Extent3D; next = C_NULL)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\nsrc_subresource::_ImageSubresourceLayers\nsrc_offset::_Offset3D\ndst_subresource::_ImageSubresourceLayers\ndst_offset::_Offset3D\nextent::_Extent3D\nnext: defaults to C_NULL\n\nAPI documentation\n\n_ImageCopy2KHR(src_subresource::_ImageSubresourceLayers, src_offset::_Offset3D, dst_subresource::_ImageSubresourceLayers, dst_offset::_Offset3D, extent::_Extent3D; next) -> _ImageCopy2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImageCreateInfo","page":"API","title":"Vulkan._ImageCreateInfo","text":"Intermediate wrapper for VkImageCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageCreateInfo.html\n\nstruct _ImageCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkImageCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageCreateInfo-Tuple{ImageType, Format, _Extent3D, Integer, Integer, SampleCountFlag, ImageTiling, ImageUsageFlag, SharingMode, AbstractArray, ImageLayout}","page":"API","title":"Vulkan._ImageCreateInfo","text":"_ImageCreateInfo(image_type::ImageType, format::Format, extent::_Extent3D, mip_levels::Integer, array_layers::Integer, samples::SampleCountFlag, tiling::ImageTiling, usage::ImageUsageFlag, sharing_mode::SharingMode, queue_family_indices::AbstractArray{<:Integer}, initial_layout::ImageLayout; next = C_NULL, flags = 0)\n\nArguments:\n\nimage_type::ImageType\nformat::Format\nextent::_Extent3D\nmip_levels::Integer\narray_layers::Integer\nsamples::SampleCountFlag\ntiling::ImageTiling\nusage::ImageUsageFlag\nsharing_mode::SharingMode\nqueue_family_indices::AbstractArray{<:Integer}\ninitial_layout::ImageLayout\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_ImageCreateInfo(image_type::ImageType, format::Format, extent::_Extent3D, mip_levels::Integer, array_layers::Integer, samples::SampleCountFlag, tiling::ImageTiling, usage::ImageUsageFlag, sharing_mode::SharingMode, queue_family_indices::AbstractArray, initial_layout::ImageLayout; next, flags) -> _ImageCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImageDrmFormatModifierExplicitCreateInfoEXT","page":"API","title":"Vulkan._ImageDrmFormatModifierExplicitCreateInfoEXT","text":"Intermediate wrapper for VkImageDrmFormatModifierExplicitCreateInfoEXT.\n\nExtension: VKEXTimagedrmformat_modifier\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageDrmFormatModifierExplicitCreateInfoEXT.html\n\nstruct _ImageDrmFormatModifierExplicitCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkImageDrmFormatModifierExplicitCreateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageDrmFormatModifierExplicitCreateInfoEXT-Tuple{Integer, AbstractArray}","page":"API","title":"Vulkan._ImageDrmFormatModifierExplicitCreateInfoEXT","text":"_ImageDrmFormatModifierExplicitCreateInfoEXT(drm_format_modifier::Integer, plane_layouts::AbstractArray{_SubresourceLayout}; next = C_NULL)\n\nExtension: VK_EXT_image_drm_format_modifier\n\nArguments:\n\ndrm_format_modifier::Integer\nplane_layouts::AbstractArray{_SubresourceLayout}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_ImageDrmFormatModifierExplicitCreateInfoEXT(drm_format_modifier::Integer, plane_layouts::AbstractArray; next) -> _ImageDrmFormatModifierExplicitCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImageDrmFormatModifierListCreateInfoEXT","page":"API","title":"Vulkan._ImageDrmFormatModifierListCreateInfoEXT","text":"Intermediate wrapper for VkImageDrmFormatModifierListCreateInfoEXT.\n\nExtension: VKEXTimagedrmformat_modifier\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageDrmFormatModifierListCreateInfoEXT.html\n\nstruct _ImageDrmFormatModifierListCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkImageDrmFormatModifierListCreateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageDrmFormatModifierListCreateInfoEXT-Tuple{AbstractArray}","page":"API","title":"Vulkan._ImageDrmFormatModifierListCreateInfoEXT","text":"_ImageDrmFormatModifierListCreateInfoEXT(drm_format_modifiers::AbstractArray{<:Integer}; next = C_NULL)\n\nExtension: VK_EXT_image_drm_format_modifier\n\nArguments:\n\ndrm_format_modifiers::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_ImageDrmFormatModifierListCreateInfoEXT(drm_format_modifiers::AbstractArray; next) -> _ImageDrmFormatModifierListCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImageDrmFormatModifierPropertiesEXT","page":"API","title":"Vulkan._ImageDrmFormatModifierPropertiesEXT","text":"Intermediate wrapper for VkImageDrmFormatModifierPropertiesEXT.\n\nExtension: VKEXTimagedrmformat_modifier\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageDrmFormatModifierPropertiesEXT.html\n\nstruct _ImageDrmFormatModifierPropertiesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkImageDrmFormatModifierPropertiesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageDrmFormatModifierPropertiesEXT-Tuple{Integer}","page":"API","title":"Vulkan._ImageDrmFormatModifierPropertiesEXT","text":"_ImageDrmFormatModifierPropertiesEXT(drm_format_modifier::Integer; next = C_NULL)\n\nExtension: VK_EXT_image_drm_format_modifier\n\nArguments:\n\ndrm_format_modifier::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_ImageDrmFormatModifierPropertiesEXT(drm_format_modifier::Integer; next) -> _ImageDrmFormatModifierPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImageFormatListCreateInfo","page":"API","title":"Vulkan._ImageFormatListCreateInfo","text":"Intermediate wrapper for VkImageFormatListCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageFormatListCreateInfo.html\n\nstruct _ImageFormatListCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkImageFormatListCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageFormatListCreateInfo-Tuple{AbstractArray}","page":"API","title":"Vulkan._ImageFormatListCreateInfo","text":"_ImageFormatListCreateInfo(view_formats::AbstractArray{Format}; next = C_NULL)\n\nArguments:\n\nview_formats::AbstractArray{Format}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_ImageFormatListCreateInfo(view_formats::AbstractArray; next) -> _ImageFormatListCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImageFormatProperties","page":"API","title":"Vulkan._ImageFormatProperties","text":"Intermediate wrapper for VkImageFormatProperties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageFormatProperties.html\n\nstruct _ImageFormatProperties <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkImageFormatProperties\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageFormatProperties-Tuple{_Extent3D, Integer, Integer, Integer}","page":"API","title":"Vulkan._ImageFormatProperties","text":"_ImageFormatProperties(max_extent::_Extent3D, max_mip_levels::Integer, max_array_layers::Integer, max_resource_size::Integer; sample_counts = 0)\n\nArguments:\n\nmax_extent::_Extent3D\nmax_mip_levels::Integer\nmax_array_layers::Integer\nmax_resource_size::Integer\nsample_counts: defaults to 0\n\nAPI documentation\n\n_ImageFormatProperties(max_extent::_Extent3D, max_mip_levels::Integer, max_array_layers::Integer, max_resource_size::Integer; sample_counts) -> _ImageFormatProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImageFormatProperties2","page":"API","title":"Vulkan._ImageFormatProperties2","text":"Intermediate wrapper for VkImageFormatProperties2.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageFormatProperties2.html\n\nstruct _ImageFormatProperties2 <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkImageFormatProperties2\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageFormatProperties2-Tuple{_ImageFormatProperties}","page":"API","title":"Vulkan._ImageFormatProperties2","text":"_ImageFormatProperties2(image_format_properties::_ImageFormatProperties; next = C_NULL)\n\nArguments:\n\nimage_format_properties::_ImageFormatProperties\nnext: defaults to C_NULL\n\nAPI documentation\n\n_ImageFormatProperties2(image_format_properties::_ImageFormatProperties; next) -> _ImageFormatProperties2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImageMemoryBarrier","page":"API","title":"Vulkan._ImageMemoryBarrier","text":"Intermediate wrapper for VkImageMemoryBarrier.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageMemoryBarrier.html\n\nstruct _ImageMemoryBarrier <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkImageMemoryBarrier\ndeps::Vector{Any}\nimage::Image\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageMemoryBarrier-Tuple{AccessFlag, AccessFlag, ImageLayout, ImageLayout, Integer, Integer, Any, _ImageSubresourceRange}","page":"API","title":"Vulkan._ImageMemoryBarrier","text":"_ImageMemoryBarrier(src_access_mask::AccessFlag, dst_access_mask::AccessFlag, old_layout::ImageLayout, new_layout::ImageLayout, src_queue_family_index::Integer, dst_queue_family_index::Integer, image, subresource_range::_ImageSubresourceRange; next = C_NULL)\n\nArguments:\n\nsrc_access_mask::AccessFlag\ndst_access_mask::AccessFlag\nold_layout::ImageLayout\nnew_layout::ImageLayout\nsrc_queue_family_index::Integer\ndst_queue_family_index::Integer\nimage\nsubresource_range::_ImageSubresourceRange\nnext: defaults to C_NULL\n\nAPI documentation\n\n_ImageMemoryBarrier(src_access_mask::AccessFlag, dst_access_mask::AccessFlag, old_layout::ImageLayout, new_layout::ImageLayout, src_queue_family_index::Integer, dst_queue_family_index::Integer, image, subresource_range::_ImageSubresourceRange; next) -> _ImageMemoryBarrier\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImageMemoryBarrier2KHR","page":"API","title":"Vulkan._ImageMemoryBarrier2KHR","text":"Intermediate wrapper for VkImageMemoryBarrier2KHR.\n\nExtension: VKKHRsynchronization2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageMemoryBarrier2KHR.html\n\nstruct _ImageMemoryBarrier2KHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkImageMemoryBarrier2KHR\ndeps::Vector{Any}\nimage::Image\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageMemoryBarrier2KHR-Tuple{ImageLayout, ImageLayout, Integer, Integer, Any, _ImageSubresourceRange}","page":"API","title":"Vulkan._ImageMemoryBarrier2KHR","text":"_ImageMemoryBarrier2KHR(old_layout::ImageLayout, new_layout::ImageLayout, src_queue_family_index::Integer, dst_queue_family_index::Integer, image, subresource_range::_ImageSubresourceRange; next = C_NULL, src_stage_mask = 0, src_access_mask = 0, dst_stage_mask = 0, dst_access_mask = 0)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\nold_layout::ImageLayout\nnew_layout::ImageLayout\nsrc_queue_family_index::Integer\ndst_queue_family_index::Integer\nimage\nsubresource_range::_ImageSubresourceRange\nnext: defaults to C_NULL\nsrc_stage_mask: defaults to 0\nsrc_access_mask: defaults to 0\ndst_stage_mask: defaults to 0\ndst_access_mask: defaults to 0\n\nAPI documentation\n\n_ImageMemoryBarrier2KHR(old_layout::ImageLayout, new_layout::ImageLayout, src_queue_family_index::Integer, dst_queue_family_index::Integer, image, subresource_range::_ImageSubresourceRange; next, src_stage_mask, src_access_mask, dst_stage_mask, dst_access_mask) -> _ImageMemoryBarrier2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImageMemoryRequirementsInfo2","page":"API","title":"Vulkan._ImageMemoryRequirementsInfo2","text":"Intermediate wrapper for VkImageMemoryRequirementsInfo2.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageMemoryRequirementsInfo2.html\n\nstruct _ImageMemoryRequirementsInfo2 <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkImageMemoryRequirementsInfo2\ndeps::Vector{Any}\nimage::Image\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageMemoryRequirementsInfo2-Tuple{Any}","page":"API","title":"Vulkan._ImageMemoryRequirementsInfo2","text":"_ImageMemoryRequirementsInfo2(image; next = C_NULL)\n\nArguments:\n\nimage\nnext: defaults to C_NULL\n\nAPI documentation\n\n_ImageMemoryRequirementsInfo2(image; next) -> _ImageMemoryRequirementsInfo2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImagePlaneMemoryRequirementsInfo","page":"API","title":"Vulkan._ImagePlaneMemoryRequirementsInfo","text":"Intermediate wrapper for VkImagePlaneMemoryRequirementsInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImagePlaneMemoryRequirementsInfo.html\n\nstruct _ImagePlaneMemoryRequirementsInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkImagePlaneMemoryRequirementsInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImagePlaneMemoryRequirementsInfo-Tuple{ImageAspectFlag}","page":"API","title":"Vulkan._ImagePlaneMemoryRequirementsInfo","text":"_ImagePlaneMemoryRequirementsInfo(plane_aspect::ImageAspectFlag; next = C_NULL)\n\nArguments:\n\nplane_aspect::ImageAspectFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\n_ImagePlaneMemoryRequirementsInfo(plane_aspect::ImageAspectFlag; next) -> _ImagePlaneMemoryRequirementsInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImageResolve","page":"API","title":"Vulkan._ImageResolve","text":"Intermediate wrapper for VkImageResolve.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageResolve.html\n\nstruct _ImageResolve <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkImageResolve\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageResolve-Tuple{_ImageSubresourceLayers, _Offset3D, _ImageSubresourceLayers, _Offset3D, _Extent3D}","page":"API","title":"Vulkan._ImageResolve","text":"_ImageResolve(src_subresource::_ImageSubresourceLayers, src_offset::_Offset3D, dst_subresource::_ImageSubresourceLayers, dst_offset::_Offset3D, extent::_Extent3D)\n\nArguments:\n\nsrc_subresource::_ImageSubresourceLayers\nsrc_offset::_Offset3D\ndst_subresource::_ImageSubresourceLayers\ndst_offset::_Offset3D\nextent::_Extent3D\n\nAPI documentation\n\n_ImageResolve(src_subresource::_ImageSubresourceLayers, src_offset::_Offset3D, dst_subresource::_ImageSubresourceLayers, dst_offset::_Offset3D, extent::_Extent3D) -> _ImageResolve\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImageResolve2KHR","page":"API","title":"Vulkan._ImageResolve2KHR","text":"Intermediate wrapper for VkImageResolve2KHR.\n\nExtension: VKKHRcopy_commands2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageResolve2KHR.html\n\nstruct _ImageResolve2KHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkImageResolve2KHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageResolve2KHR-Tuple{_ImageSubresourceLayers, _Offset3D, _ImageSubresourceLayers, _Offset3D, _Extent3D}","page":"API","title":"Vulkan._ImageResolve2KHR","text":"_ImageResolve2KHR(src_subresource::_ImageSubresourceLayers, src_offset::_Offset3D, dst_subresource::_ImageSubresourceLayers, dst_offset::_Offset3D, extent::_Extent3D; next = C_NULL)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\nsrc_subresource::_ImageSubresourceLayers\nsrc_offset::_Offset3D\ndst_subresource::_ImageSubresourceLayers\ndst_offset::_Offset3D\nextent::_Extent3D\nnext: defaults to C_NULL\n\nAPI documentation\n\n_ImageResolve2KHR(src_subresource::_ImageSubresourceLayers, src_offset::_Offset3D, dst_subresource::_ImageSubresourceLayers, dst_offset::_Offset3D, extent::_Extent3D; next) -> _ImageResolve2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImageSparseMemoryRequirementsInfo2","page":"API","title":"Vulkan._ImageSparseMemoryRequirementsInfo2","text":"Intermediate wrapper for VkImageSparseMemoryRequirementsInfo2.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageSparseMemoryRequirementsInfo2.html\n\nstruct _ImageSparseMemoryRequirementsInfo2 <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkImageSparseMemoryRequirementsInfo2\ndeps::Vector{Any}\nimage::Image\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageSparseMemoryRequirementsInfo2-Tuple{Any}","page":"API","title":"Vulkan._ImageSparseMemoryRequirementsInfo2","text":"_ImageSparseMemoryRequirementsInfo2(image; next = C_NULL)\n\nArguments:\n\nimage\nnext: defaults to C_NULL\n\nAPI documentation\n\n_ImageSparseMemoryRequirementsInfo2(image; next) -> _ImageSparseMemoryRequirementsInfo2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImageStencilUsageCreateInfo","page":"API","title":"Vulkan._ImageStencilUsageCreateInfo","text":"Intermediate wrapper for VkImageStencilUsageCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageStencilUsageCreateInfo.html\n\nstruct _ImageStencilUsageCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkImageStencilUsageCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageStencilUsageCreateInfo-Tuple{ImageUsageFlag}","page":"API","title":"Vulkan._ImageStencilUsageCreateInfo","text":"_ImageStencilUsageCreateInfo(stencil_usage::ImageUsageFlag; next = C_NULL)\n\nArguments:\n\nstencil_usage::ImageUsageFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\n_ImageStencilUsageCreateInfo(stencil_usage::ImageUsageFlag; next) -> _ImageStencilUsageCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImageSubresource","page":"API","title":"Vulkan._ImageSubresource","text":"Intermediate wrapper for VkImageSubresource.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageSubresource.html\n\nstruct _ImageSubresource <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkImageSubresource\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageSubresource-Tuple{ImageAspectFlag, Integer, Integer}","page":"API","title":"Vulkan._ImageSubresource","text":"_ImageSubresource(aspect_mask::ImageAspectFlag, mip_level::Integer, array_layer::Integer)\n\nArguments:\n\naspect_mask::ImageAspectFlag\nmip_level::Integer\narray_layer::Integer\n\nAPI documentation\n\n_ImageSubresource(aspect_mask::ImageAspectFlag, mip_level::Integer, array_layer::Integer) -> _ImageSubresource\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImageSubresourceLayers","page":"API","title":"Vulkan._ImageSubresourceLayers","text":"Intermediate wrapper for VkImageSubresourceLayers.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageSubresourceLayers.html\n\nstruct _ImageSubresourceLayers <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkImageSubresourceLayers\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageSubresourceLayers-Tuple{ImageAspectFlag, Integer, Integer, Integer}","page":"API","title":"Vulkan._ImageSubresourceLayers","text":"_ImageSubresourceLayers(aspect_mask::ImageAspectFlag, mip_level::Integer, base_array_layer::Integer, layer_count::Integer)\n\nArguments:\n\naspect_mask::ImageAspectFlag\nmip_level::Integer\nbase_array_layer::Integer\nlayer_count::Integer\n\nAPI documentation\n\n_ImageSubresourceLayers(aspect_mask::ImageAspectFlag, mip_level::Integer, base_array_layer::Integer, layer_count::Integer) -> _ImageSubresourceLayers\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImageSubresourceRange","page":"API","title":"Vulkan._ImageSubresourceRange","text":"Intermediate wrapper for VkImageSubresourceRange.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageSubresourceRange.html\n\nstruct _ImageSubresourceRange <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkImageSubresourceRange\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageSubresourceRange-Tuple{ImageAspectFlag, Integer, Integer, Integer, Integer}","page":"API","title":"Vulkan._ImageSubresourceRange","text":"_ImageSubresourceRange(aspect_mask::ImageAspectFlag, base_mip_level::Integer, level_count::Integer, base_array_layer::Integer, layer_count::Integer)\n\nArguments:\n\naspect_mask::ImageAspectFlag\nbase_mip_level::Integer\nlevel_count::Integer\nbase_array_layer::Integer\nlayer_count::Integer\n\nAPI documentation\n\n_ImageSubresourceRange(aspect_mask::ImageAspectFlag, base_mip_level::Integer, level_count::Integer, base_array_layer::Integer, layer_count::Integer) -> _ImageSubresourceRange\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImageSwapchainCreateInfoKHR","page":"API","title":"Vulkan._ImageSwapchainCreateInfoKHR","text":"Intermediate wrapper for VkImageSwapchainCreateInfoKHR.\n\nExtension: VKKHRswapchain\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageSwapchainCreateInfoKHR.html\n\nstruct _ImageSwapchainCreateInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkImageSwapchainCreateInfoKHR\ndeps::Vector{Any}\nswapchain::Union{Ptr{Nothing}, SwapchainKHR}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageSwapchainCreateInfoKHR-Tuple{}","page":"API","title":"Vulkan._ImageSwapchainCreateInfoKHR","text":"_ImageSwapchainCreateInfoKHR(; next = C_NULL, swapchain = C_NULL)\n\nExtension: VK_KHR_swapchain\n\nArguments:\n\nnext: defaults to C_NULL\nswapchain: defaults to C_NULL\n\nAPI documentation\n\n_ImageSwapchainCreateInfoKHR(; next, swapchain) -> _ImageSwapchainCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImageViewASTCDecodeModeEXT","page":"API","title":"Vulkan._ImageViewASTCDecodeModeEXT","text":"Intermediate wrapper for VkImageViewASTCDecodeModeEXT.\n\nExtension: VKEXTastcdecodemode\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageViewASTCDecodeModeEXT.html\n\nstruct _ImageViewASTCDecodeModeEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkImageViewASTCDecodeModeEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageViewASTCDecodeModeEXT-Tuple{Format}","page":"API","title":"Vulkan._ImageViewASTCDecodeModeEXT","text":"_ImageViewASTCDecodeModeEXT(decode_mode::Format; next = C_NULL)\n\nExtension: VK_EXT_astc_decode_mode\n\nArguments:\n\ndecode_mode::Format\nnext: defaults to C_NULL\n\nAPI documentation\n\n_ImageViewASTCDecodeModeEXT(decode_mode::Format; next) -> _ImageViewASTCDecodeModeEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImageViewAddressPropertiesNVX","page":"API","title":"Vulkan._ImageViewAddressPropertiesNVX","text":"Intermediate wrapper for VkImageViewAddressPropertiesNVX.\n\nExtension: VKNVXimageviewhandle\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageViewAddressPropertiesNVX.html\n\nstruct _ImageViewAddressPropertiesNVX <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkImageViewAddressPropertiesNVX\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageViewAddressPropertiesNVX-Tuple{Integer, Integer}","page":"API","title":"Vulkan._ImageViewAddressPropertiesNVX","text":"_ImageViewAddressPropertiesNVX(device_address::Integer, size::Integer; next = C_NULL)\n\nExtension: VK_NVX_image_view_handle\n\nArguments:\n\ndevice_address::Integer\nsize::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_ImageViewAddressPropertiesNVX(device_address::Integer, size::Integer; next) -> _ImageViewAddressPropertiesNVX\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImageViewCreateInfo","page":"API","title":"Vulkan._ImageViewCreateInfo","text":"Intermediate wrapper for VkImageViewCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageViewCreateInfo.html\n\nstruct _ImageViewCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkImageViewCreateInfo\ndeps::Vector{Any}\nimage::Image\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageViewCreateInfo-Tuple{Any, ImageViewType, Format, _ComponentMapping, _ImageSubresourceRange}","page":"API","title":"Vulkan._ImageViewCreateInfo","text":"_ImageViewCreateInfo(image, view_type::ImageViewType, format::Format, components::_ComponentMapping, subresource_range::_ImageSubresourceRange; next = C_NULL, flags = 0)\n\nArguments:\n\nimage\nview_type::ImageViewType\nformat::Format\ncomponents::_ComponentMapping\nsubresource_range::_ImageSubresourceRange\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_ImageViewCreateInfo(image, view_type::ImageViewType, format::Format, components::_ComponentMapping, subresource_range::_ImageSubresourceRange; next, flags) -> _ImageViewCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImageViewHandleInfoNVX","page":"API","title":"Vulkan._ImageViewHandleInfoNVX","text":"Intermediate wrapper for VkImageViewHandleInfoNVX.\n\nExtension: VKNVXimageviewhandle\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageViewHandleInfoNVX.html\n\nstruct _ImageViewHandleInfoNVX <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkImageViewHandleInfoNVX\ndeps::Vector{Any}\nimage_view::ImageView\nsampler::Union{Ptr{Nothing}, Sampler}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageViewHandleInfoNVX-Tuple{Any, DescriptorType}","page":"API","title":"Vulkan._ImageViewHandleInfoNVX","text":"_ImageViewHandleInfoNVX(image_view, descriptor_type::DescriptorType; next = C_NULL, sampler = C_NULL)\n\nExtension: VK_NVX_image_view_handle\n\nArguments:\n\nimage_view\ndescriptor_type::DescriptorType\nnext: defaults to C_NULL\nsampler: defaults to C_NULL\n\nAPI documentation\n\n_ImageViewHandleInfoNVX(image_view, descriptor_type::DescriptorType; next, sampler) -> _ImageViewHandleInfoNVX\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImageViewUsageCreateInfo","page":"API","title":"Vulkan._ImageViewUsageCreateInfo","text":"Intermediate wrapper for VkImageViewUsageCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImageViewUsageCreateInfo.html\n\nstruct _ImageViewUsageCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkImageViewUsageCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageViewUsageCreateInfo-Tuple{ImageUsageFlag}","page":"API","title":"Vulkan._ImageViewUsageCreateInfo","text":"_ImageViewUsageCreateInfo(usage::ImageUsageFlag; next = C_NULL)\n\nArguments:\n\nusage::ImageUsageFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\n_ImageViewUsageCreateInfo(usage::ImageUsageFlag; next) -> _ImageViewUsageCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImportFenceFdInfoKHR","page":"API","title":"Vulkan._ImportFenceFdInfoKHR","text":"Intermediate wrapper for VkImportFenceFdInfoKHR.\n\nExtension: VKKHRexternalfencefd\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImportFenceFdInfoKHR.html\n\nstruct _ImportFenceFdInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkImportFenceFdInfoKHR\ndeps::Vector{Any}\nfence::Fence\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImportFenceFdInfoKHR-Tuple{Any, ExternalFenceHandleTypeFlag, Integer}","page":"API","title":"Vulkan._ImportFenceFdInfoKHR","text":"_ImportFenceFdInfoKHR(fence, handle_type::ExternalFenceHandleTypeFlag, fd::Integer; next = C_NULL, flags = 0)\n\nExtension: VK_KHR_external_fence_fd\n\nArguments:\n\nfence (externsync)\nhandle_type::ExternalFenceHandleTypeFlag\nfd::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_ImportFenceFdInfoKHR(fence, handle_type::ExternalFenceHandleTypeFlag, fd::Integer; next, flags) -> _ImportFenceFdInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImportMemoryFdInfoKHR","page":"API","title":"Vulkan._ImportMemoryFdInfoKHR","text":"Intermediate wrapper for VkImportMemoryFdInfoKHR.\n\nExtension: VKKHRexternalmemoryfd\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImportMemoryFdInfoKHR.html\n\nstruct _ImportMemoryFdInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkImportMemoryFdInfoKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImportMemoryFdInfoKHR-Tuple{Integer}","page":"API","title":"Vulkan._ImportMemoryFdInfoKHR","text":"_ImportMemoryFdInfoKHR(fd::Integer; next = C_NULL, handle_type = 0)\n\nExtension: VK_KHR_external_memory_fd\n\nArguments:\n\nfd::Integer\nnext: defaults to C_NULL\nhandle_type: defaults to 0\n\nAPI documentation\n\n_ImportMemoryFdInfoKHR(fd::Integer; next, handle_type)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImportMemoryHostPointerInfoEXT","page":"API","title":"Vulkan._ImportMemoryHostPointerInfoEXT","text":"Intermediate wrapper for VkImportMemoryHostPointerInfoEXT.\n\nExtension: VKEXTexternalmemoryhost\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImportMemoryHostPointerInfoEXT.html\n\nstruct _ImportMemoryHostPointerInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkImportMemoryHostPointerInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImportMemoryHostPointerInfoEXT-Tuple{ExternalMemoryHandleTypeFlag, Ptr{Nothing}}","page":"API","title":"Vulkan._ImportMemoryHostPointerInfoEXT","text":"_ImportMemoryHostPointerInfoEXT(handle_type::ExternalMemoryHandleTypeFlag, host_pointer::Ptr{Cvoid}; next = C_NULL)\n\nExtension: VK_EXT_external_memory_host\n\nArguments:\n\nhandle_type::ExternalMemoryHandleTypeFlag\nhost_pointer::Ptr{Cvoid}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_ImportMemoryHostPointerInfoEXT(handle_type::ExternalMemoryHandleTypeFlag, host_pointer::Ptr{Nothing}; next) -> _ImportMemoryHostPointerInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ImportSemaphoreFdInfoKHR","page":"API","title":"Vulkan._ImportSemaphoreFdInfoKHR","text":"Intermediate wrapper for VkImportSemaphoreFdInfoKHR.\n\nExtension: VKKHRexternalsemaphorefd\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkImportSemaphoreFdInfoKHR.html\n\nstruct _ImportSemaphoreFdInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkImportSemaphoreFdInfoKHR\ndeps::Vector{Any}\nsemaphore::Semaphore\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImportSemaphoreFdInfoKHR-Tuple{Any, ExternalSemaphoreHandleTypeFlag, Integer}","page":"API","title":"Vulkan._ImportSemaphoreFdInfoKHR","text":"_ImportSemaphoreFdInfoKHR(semaphore, handle_type::ExternalSemaphoreHandleTypeFlag, fd::Integer; next = C_NULL, flags = 0)\n\nExtension: VK_KHR_external_semaphore_fd\n\nArguments:\n\nsemaphore (externsync)\nhandle_type::ExternalSemaphoreHandleTypeFlag\nfd::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_ImportSemaphoreFdInfoKHR(semaphore, handle_type::ExternalSemaphoreHandleTypeFlag, fd::Integer; next, flags) -> _ImportSemaphoreFdInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._IndirectCommandsLayoutCreateInfoNV","page":"API","title":"Vulkan._IndirectCommandsLayoutCreateInfoNV","text":"Intermediate wrapper for VkIndirectCommandsLayoutCreateInfoNV.\n\nExtension: VKNVdevicegeneratedcommands\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkIndirectCommandsLayoutCreateInfoNV.html\n\nstruct _IndirectCommandsLayoutCreateInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkIndirectCommandsLayoutCreateInfoNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._IndirectCommandsLayoutCreateInfoNV-Tuple{PipelineBindPoint, AbstractArray, AbstractArray}","page":"API","title":"Vulkan._IndirectCommandsLayoutCreateInfoNV","text":"_IndirectCommandsLayoutCreateInfoNV(pipeline_bind_point::PipelineBindPoint, tokens::AbstractArray{_IndirectCommandsLayoutTokenNV}, stream_strides::AbstractArray{<:Integer}; next = C_NULL, flags = 0)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\npipeline_bind_point::PipelineBindPoint\ntokens::AbstractArray{_IndirectCommandsLayoutTokenNV}\nstream_strides::AbstractArray{<:Integer}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_IndirectCommandsLayoutCreateInfoNV(pipeline_bind_point::PipelineBindPoint, tokens::AbstractArray, stream_strides::AbstractArray; next, flags) -> _IndirectCommandsLayoutCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._IndirectCommandsLayoutTokenNV","page":"API","title":"Vulkan._IndirectCommandsLayoutTokenNV","text":"Intermediate wrapper for VkIndirectCommandsLayoutTokenNV.\n\nExtension: VKNVdevicegeneratedcommands\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkIndirectCommandsLayoutTokenNV.html\n\nstruct _IndirectCommandsLayoutTokenNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkIndirectCommandsLayoutTokenNV\ndeps::Vector{Any}\npushconstant_pipeline_layout::Union{Ptr{Nothing}, PipelineLayout}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._IndirectCommandsLayoutTokenNV-Tuple{IndirectCommandsTokenTypeNV, Integer, Integer, Integer, Bool, Integer, Integer, AbstractArray, AbstractArray}","page":"API","title":"Vulkan._IndirectCommandsLayoutTokenNV","text":"_IndirectCommandsLayoutTokenNV(token_type::IndirectCommandsTokenTypeNV, stream::Integer, offset::Integer, vertex_binding_unit::Integer, vertex_dynamic_stride::Bool, pushconstant_offset::Integer, pushconstant_size::Integer, index_types::AbstractArray{IndexType}, index_type_values::AbstractArray{<:Integer}; next = C_NULL, pushconstant_pipeline_layout = C_NULL, pushconstant_shader_stage_flags = 0, indirect_state_flags = 0)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ntoken_type::IndirectCommandsTokenTypeNV\nstream::Integer\noffset::Integer\nvertex_binding_unit::Integer\nvertex_dynamic_stride::Bool\npushconstant_offset::Integer\npushconstant_size::Integer\nindex_types::AbstractArray{IndexType}\nindex_type_values::AbstractArray{<:Integer}\nnext: defaults to C_NULL\npushconstant_pipeline_layout: defaults to C_NULL\npushconstant_shader_stage_flags: defaults to 0\nindirect_state_flags: defaults to 0\n\nAPI documentation\n\n_IndirectCommandsLayoutTokenNV(token_type::IndirectCommandsTokenTypeNV, stream::Integer, offset::Integer, vertex_binding_unit::Integer, vertex_dynamic_stride::Bool, pushconstant_offset::Integer, pushconstant_size::Integer, index_types::AbstractArray, index_type_values::AbstractArray; next, pushconstant_pipeline_layout, pushconstant_shader_stage_flags, indirect_state_flags) -> _IndirectCommandsLayoutTokenNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._IndirectCommandsStreamNV","page":"API","title":"Vulkan._IndirectCommandsStreamNV","text":"Intermediate wrapper for VkIndirectCommandsStreamNV.\n\nExtension: VKNVdevicegeneratedcommands\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkIndirectCommandsStreamNV.html\n\nstruct _IndirectCommandsStreamNV <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkIndirectCommandsStreamNV\nbuffer::Buffer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._IndirectCommandsStreamNV-Tuple{Any, Integer}","page":"API","title":"Vulkan._IndirectCommandsStreamNV","text":"_IndirectCommandsStreamNV(buffer, offset::Integer)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\nbuffer\noffset::Integer\n\nAPI documentation\n\n_IndirectCommandsStreamNV(buffer, offset::Integer) -> _IndirectCommandsStreamNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._InitializePerformanceApiInfoINTEL","page":"API","title":"Vulkan._InitializePerformanceApiInfoINTEL","text":"Intermediate wrapper for VkInitializePerformanceApiInfoINTEL.\n\nExtension: VKINTELperformance_query\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkInitializePerformanceApiInfoINTEL.html\n\nstruct _InitializePerformanceApiInfoINTEL <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkInitializePerformanceApiInfoINTEL\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._InitializePerformanceApiInfoINTEL-Tuple{}","page":"API","title":"Vulkan._InitializePerformanceApiInfoINTEL","text":"_InitializePerformanceApiInfoINTEL(; next = C_NULL, user_data = C_NULL)\n\nExtension: VK_INTEL_performance_query\n\nArguments:\n\nnext: defaults to C_NULL\nuser_data: defaults to C_NULL\n\nAPI documentation\n\n_InitializePerformanceApiInfoINTEL(; next, user_data) -> _InitializePerformanceApiInfoINTEL\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._InputAttachmentAspectReference","page":"API","title":"Vulkan._InputAttachmentAspectReference","text":"Intermediate wrapper for VkInputAttachmentAspectReference.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkInputAttachmentAspectReference.html\n\nstruct _InputAttachmentAspectReference <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkInputAttachmentAspectReference\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._InputAttachmentAspectReference-Tuple{Integer, Integer, ImageAspectFlag}","page":"API","title":"Vulkan._InputAttachmentAspectReference","text":"_InputAttachmentAspectReference(subpass::Integer, input_attachment_index::Integer, aspect_mask::ImageAspectFlag)\n\nArguments:\n\nsubpass::Integer\ninput_attachment_index::Integer\naspect_mask::ImageAspectFlag\n\nAPI documentation\n\n_InputAttachmentAspectReference(subpass::Integer, input_attachment_index::Integer, aspect_mask::ImageAspectFlag) -> _InputAttachmentAspectReference\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._InstanceCreateInfo","page":"API","title":"Vulkan._InstanceCreateInfo","text":"Intermediate wrapper for VkInstanceCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkInstanceCreateInfo.html\n\nstruct _InstanceCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkInstanceCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._InstanceCreateInfo-Tuple{AbstractArray, AbstractArray}","page":"API","title":"Vulkan._InstanceCreateInfo","text":"_InstanceCreateInfo(enabled_layer_names::AbstractArray{<:AbstractString}, enabled_extension_names::AbstractArray{<:AbstractString}; next = C_NULL, flags = 0, application_info = C_NULL)\n\nArguments:\n\nenabled_layer_names::AbstractArray{<:AbstractString}\nenabled_extension_names::AbstractArray{<:AbstractString}\nnext: defaults to C_NULL\nflags: defaults to 0\napplication_info: defaults to C_NULL\n\nAPI documentation\n\n_InstanceCreateInfo(enabled_layer_names::AbstractArray, enabled_extension_names::AbstractArray; next, flags, application_info) -> _InstanceCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._LayerProperties","page":"API","title":"Vulkan._LayerProperties","text":"Intermediate wrapper for VkLayerProperties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkLayerProperties.html\n\nstruct _LayerProperties <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkLayerProperties\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._LayerProperties-Tuple{AbstractString, VersionNumber, VersionNumber, AbstractString}","page":"API","title":"Vulkan._LayerProperties","text":"_LayerProperties(layer_name::AbstractString, spec_version::VersionNumber, implementation_version::VersionNumber, description::AbstractString)\n\nArguments:\n\nlayer_name::AbstractString\nspec_version::VersionNumber\nimplementation_version::VersionNumber\ndescription::AbstractString\n\nAPI documentation\n\n_LayerProperties(layer_name::AbstractString, spec_version::VersionNumber, implementation_version::VersionNumber, description::AbstractString)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._MappedMemoryRange","page":"API","title":"Vulkan._MappedMemoryRange","text":"Intermediate wrapper for VkMappedMemoryRange.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkMappedMemoryRange.html\n\nstruct _MappedMemoryRange <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkMappedMemoryRange\ndeps::Vector{Any}\nmemory::DeviceMemory\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MappedMemoryRange-Tuple{Any, Integer, Integer}","page":"API","title":"Vulkan._MappedMemoryRange","text":"_MappedMemoryRange(memory, offset::Integer, size::Integer; next = C_NULL)\n\nArguments:\n\nmemory\noffset::Integer\nsize::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_MappedMemoryRange(memory, offset::Integer, size::Integer; next) -> _MappedMemoryRange\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._MemoryAllocateFlagsInfo","page":"API","title":"Vulkan._MemoryAllocateFlagsInfo","text":"Intermediate wrapper for VkMemoryAllocateFlagsInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkMemoryAllocateFlagsInfo.html\n\nstruct _MemoryAllocateFlagsInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkMemoryAllocateFlagsInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MemoryAllocateFlagsInfo-Tuple{Integer}","page":"API","title":"Vulkan._MemoryAllocateFlagsInfo","text":"_MemoryAllocateFlagsInfo(device_mask::Integer; next = C_NULL, flags = 0)\n\nArguments:\n\ndevice_mask::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_MemoryAllocateFlagsInfo(device_mask::Integer; next, flags) -> _MemoryAllocateFlagsInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._MemoryAllocateInfo","page":"API","title":"Vulkan._MemoryAllocateInfo","text":"Intermediate wrapper for VkMemoryAllocateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkMemoryAllocateInfo.html\n\nstruct _MemoryAllocateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkMemoryAllocateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MemoryAllocateInfo-Tuple{Integer, Integer}","page":"API","title":"Vulkan._MemoryAllocateInfo","text":"_MemoryAllocateInfo(allocation_size::Integer, memory_type_index::Integer; next = C_NULL)\n\nArguments:\n\nallocation_size::Integer\nmemory_type_index::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_MemoryAllocateInfo(allocation_size::Integer, memory_type_index::Integer; next) -> _MemoryAllocateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._MemoryBarrier","page":"API","title":"Vulkan._MemoryBarrier","text":"Intermediate wrapper for VkMemoryBarrier.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkMemoryBarrier.html\n\nstruct _MemoryBarrier <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkMemoryBarrier\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MemoryBarrier-Tuple{}","page":"API","title":"Vulkan._MemoryBarrier","text":"_MemoryBarrier(; next = C_NULL, src_access_mask = 0, dst_access_mask = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nsrc_access_mask: defaults to 0\ndst_access_mask: defaults to 0\n\nAPI documentation\n\n_MemoryBarrier(; next, src_access_mask, dst_access_mask) -> _MemoryBarrier\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._MemoryBarrier2KHR","page":"API","title":"Vulkan._MemoryBarrier2KHR","text":"Intermediate wrapper for VkMemoryBarrier2KHR.\n\nExtension: VKKHRsynchronization2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkMemoryBarrier2KHR.html\n\nstruct _MemoryBarrier2KHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkMemoryBarrier2KHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MemoryBarrier2KHR-Tuple{}","page":"API","title":"Vulkan._MemoryBarrier2KHR","text":"_MemoryBarrier2KHR(; next = C_NULL, src_stage_mask = 0, src_access_mask = 0, dst_stage_mask = 0, dst_access_mask = 0)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\nnext: defaults to C_NULL\nsrc_stage_mask: defaults to 0\nsrc_access_mask: defaults to 0\ndst_stage_mask: defaults to 0\ndst_access_mask: defaults to 0\n\nAPI documentation\n\n_MemoryBarrier2KHR(; next, src_stage_mask, src_access_mask, dst_stage_mask, dst_access_mask) -> _MemoryBarrier2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._MemoryDedicatedAllocateInfo","page":"API","title":"Vulkan._MemoryDedicatedAllocateInfo","text":"Intermediate wrapper for VkMemoryDedicatedAllocateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkMemoryDedicatedAllocateInfo.html\n\nstruct _MemoryDedicatedAllocateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkMemoryDedicatedAllocateInfo\ndeps::Vector{Any}\nimage::Union{Ptr{Nothing}, Image}\nbuffer::Union{Ptr{Nothing}, Buffer}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MemoryDedicatedAllocateInfo-Tuple{}","page":"API","title":"Vulkan._MemoryDedicatedAllocateInfo","text":"_MemoryDedicatedAllocateInfo(; next = C_NULL, image = C_NULL, buffer = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\nimage: defaults to C_NULL\nbuffer: defaults to C_NULL\n\nAPI documentation\n\n_MemoryDedicatedAllocateInfo(; next, image, buffer) -> _MemoryDedicatedAllocateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._MemoryDedicatedRequirements","page":"API","title":"Vulkan._MemoryDedicatedRequirements","text":"Intermediate wrapper for VkMemoryDedicatedRequirements.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkMemoryDedicatedRequirements.html\n\nstruct _MemoryDedicatedRequirements <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkMemoryDedicatedRequirements\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MemoryDedicatedRequirements-Tuple{Bool, Bool}","page":"API","title":"Vulkan._MemoryDedicatedRequirements","text":"_MemoryDedicatedRequirements(prefers_dedicated_allocation::Bool, requires_dedicated_allocation::Bool; next = C_NULL)\n\nArguments:\n\nprefers_dedicated_allocation::Bool\nrequires_dedicated_allocation::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_MemoryDedicatedRequirements(prefers_dedicated_allocation::Bool, requires_dedicated_allocation::Bool; next) -> _MemoryDedicatedRequirements\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._MemoryFdPropertiesKHR","page":"API","title":"Vulkan._MemoryFdPropertiesKHR","text":"Intermediate wrapper for VkMemoryFdPropertiesKHR.\n\nExtension: VKKHRexternalmemoryfd\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkMemoryFdPropertiesKHR.html\n\nstruct _MemoryFdPropertiesKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkMemoryFdPropertiesKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MemoryFdPropertiesKHR-Tuple{Integer}","page":"API","title":"Vulkan._MemoryFdPropertiesKHR","text":"_MemoryFdPropertiesKHR(memory_type_bits::Integer; next = C_NULL)\n\nExtension: VK_KHR_external_memory_fd\n\nArguments:\n\nmemory_type_bits::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_MemoryFdPropertiesKHR(memory_type_bits::Integer; next) -> _MemoryFdPropertiesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._MemoryGetFdInfoKHR","page":"API","title":"Vulkan._MemoryGetFdInfoKHR","text":"Intermediate wrapper for VkMemoryGetFdInfoKHR.\n\nExtension: VKKHRexternalmemoryfd\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkMemoryGetFdInfoKHR.html\n\nstruct _MemoryGetFdInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkMemoryGetFdInfoKHR\ndeps::Vector{Any}\nmemory::DeviceMemory\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MemoryGetFdInfoKHR-Tuple{Any, ExternalMemoryHandleTypeFlag}","page":"API","title":"Vulkan._MemoryGetFdInfoKHR","text":"_MemoryGetFdInfoKHR(memory, handle_type::ExternalMemoryHandleTypeFlag; next = C_NULL)\n\nExtension: VK_KHR_external_memory_fd\n\nArguments:\n\nmemory\nhandle_type::ExternalMemoryHandleTypeFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\n_MemoryGetFdInfoKHR(memory, handle_type::ExternalMemoryHandleTypeFlag; next) -> _MemoryGetFdInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._MemoryHeap","page":"API","title":"Vulkan._MemoryHeap","text":"Intermediate wrapper for VkMemoryHeap.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkMemoryHeap.html\n\nstruct _MemoryHeap <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkMemoryHeap\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MemoryHeap-Tuple{Integer}","page":"API","title":"Vulkan._MemoryHeap","text":"_MemoryHeap(size::Integer; flags = 0)\n\nArguments:\n\nsize::Integer\nflags: defaults to 0\n\nAPI documentation\n\n_MemoryHeap(size::Integer; flags) -> _MemoryHeap\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._MemoryHostPointerPropertiesEXT","page":"API","title":"Vulkan._MemoryHostPointerPropertiesEXT","text":"Intermediate wrapper for VkMemoryHostPointerPropertiesEXT.\n\nExtension: VKEXTexternalmemoryhost\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkMemoryHostPointerPropertiesEXT.html\n\nstruct _MemoryHostPointerPropertiesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkMemoryHostPointerPropertiesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MemoryHostPointerPropertiesEXT-Tuple{Integer}","page":"API","title":"Vulkan._MemoryHostPointerPropertiesEXT","text":"_MemoryHostPointerPropertiesEXT(memory_type_bits::Integer; next = C_NULL)\n\nExtension: VK_EXT_external_memory_host\n\nArguments:\n\nmemory_type_bits::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_MemoryHostPointerPropertiesEXT(memory_type_bits::Integer; next) -> _MemoryHostPointerPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._MemoryOpaqueCaptureAddressAllocateInfo","page":"API","title":"Vulkan._MemoryOpaqueCaptureAddressAllocateInfo","text":"Intermediate wrapper for VkMemoryOpaqueCaptureAddressAllocateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkMemoryOpaqueCaptureAddressAllocateInfo.html\n\nstruct _MemoryOpaqueCaptureAddressAllocateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkMemoryOpaqueCaptureAddressAllocateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MemoryOpaqueCaptureAddressAllocateInfo-Tuple{Integer}","page":"API","title":"Vulkan._MemoryOpaqueCaptureAddressAllocateInfo","text":"_MemoryOpaqueCaptureAddressAllocateInfo(opaque_capture_address::Integer; next = C_NULL)\n\nArguments:\n\nopaque_capture_address::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_MemoryOpaqueCaptureAddressAllocateInfo(opaque_capture_address::Integer; next) -> _MemoryOpaqueCaptureAddressAllocateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._MemoryPriorityAllocateInfoEXT","page":"API","title":"Vulkan._MemoryPriorityAllocateInfoEXT","text":"Intermediate wrapper for VkMemoryPriorityAllocateInfoEXT.\n\nExtension: VKEXTmemory_priority\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkMemoryPriorityAllocateInfoEXT.html\n\nstruct _MemoryPriorityAllocateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkMemoryPriorityAllocateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MemoryPriorityAllocateInfoEXT-Tuple{Real}","page":"API","title":"Vulkan._MemoryPriorityAllocateInfoEXT","text":"_MemoryPriorityAllocateInfoEXT(priority::Real; next = C_NULL)\n\nExtension: VK_EXT_memory_priority\n\nArguments:\n\npriority::Real\nnext: defaults to C_NULL\n\nAPI documentation\n\n_MemoryPriorityAllocateInfoEXT(priority::Real; next) -> _MemoryPriorityAllocateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._MemoryRequirements","page":"API","title":"Vulkan._MemoryRequirements","text":"Intermediate wrapper for VkMemoryRequirements.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkMemoryRequirements.html\n\nstruct _MemoryRequirements <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkMemoryRequirements\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MemoryRequirements-Tuple{Integer, Integer, Integer}","page":"API","title":"Vulkan._MemoryRequirements","text":"_MemoryRequirements(size::Integer, alignment::Integer, memory_type_bits::Integer)\n\nArguments:\n\nsize::Integer\nalignment::Integer\nmemory_type_bits::Integer\n\nAPI documentation\n\n_MemoryRequirements(size::Integer, alignment::Integer, memory_type_bits::Integer) -> _MemoryRequirements\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._MemoryRequirements2","page":"API","title":"Vulkan._MemoryRequirements2","text":"Intermediate wrapper for VkMemoryRequirements2.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkMemoryRequirements2.html\n\nstruct _MemoryRequirements2 <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkMemoryRequirements2\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MemoryRequirements2-Tuple{_MemoryRequirements}","page":"API","title":"Vulkan._MemoryRequirements2","text":"_MemoryRequirements2(memory_requirements::_MemoryRequirements; next = C_NULL)\n\nArguments:\n\nmemory_requirements::_MemoryRequirements\nnext: defaults to C_NULL\n\nAPI documentation\n\n_MemoryRequirements2(memory_requirements::_MemoryRequirements; next) -> _MemoryRequirements2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._MemoryType","page":"API","title":"Vulkan._MemoryType","text":"Intermediate wrapper for VkMemoryType.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkMemoryType.html\n\nstruct _MemoryType <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkMemoryType\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MemoryType-Tuple{Integer}","page":"API","title":"Vulkan._MemoryType","text":"_MemoryType(heap_index::Integer; property_flags = 0)\n\nArguments:\n\nheap_index::Integer\nproperty_flags: defaults to 0\n\nAPI documentation\n\n_MemoryType(heap_index::Integer; property_flags) -> _MemoryType\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._MultisamplePropertiesEXT","page":"API","title":"Vulkan._MultisamplePropertiesEXT","text":"Intermediate wrapper for VkMultisamplePropertiesEXT.\n\nExtension: VKEXTsample_locations\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkMultisamplePropertiesEXT.html\n\nstruct _MultisamplePropertiesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkMultisamplePropertiesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MultisamplePropertiesEXT-Tuple{_Extent2D}","page":"API","title":"Vulkan._MultisamplePropertiesEXT","text":"_MultisamplePropertiesEXT(max_sample_location_grid_size::_Extent2D; next = C_NULL)\n\nExtension: VK_EXT_sample_locations\n\nArguments:\n\nmax_sample_location_grid_size::_Extent2D\nnext: defaults to C_NULL\n\nAPI documentation\n\n_MultisamplePropertiesEXT(max_sample_location_grid_size::_Extent2D; next) -> _MultisamplePropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._MutableDescriptorTypeCreateInfoVALVE","page":"API","title":"Vulkan._MutableDescriptorTypeCreateInfoVALVE","text":"Intermediate wrapper for VkMutableDescriptorTypeCreateInfoVALVE.\n\nExtension: VKVALVEmutabledescriptortype\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkMutableDescriptorTypeCreateInfoVALVE.html\n\nstruct _MutableDescriptorTypeCreateInfoVALVE <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkMutableDescriptorTypeCreateInfoVALVE\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MutableDescriptorTypeCreateInfoVALVE-Tuple{AbstractArray}","page":"API","title":"Vulkan._MutableDescriptorTypeCreateInfoVALVE","text":"_MutableDescriptorTypeCreateInfoVALVE(mutable_descriptor_type_lists::AbstractArray{_MutableDescriptorTypeListVALVE}; next = C_NULL)\n\nExtension: VK_VALVE_mutable_descriptor_type\n\nArguments:\n\nmutable_descriptor_type_lists::AbstractArray{_MutableDescriptorTypeListVALVE}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_MutableDescriptorTypeCreateInfoVALVE(mutable_descriptor_type_lists::AbstractArray; next) -> _MutableDescriptorTypeCreateInfoVALVE\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._MutableDescriptorTypeListVALVE","page":"API","title":"Vulkan._MutableDescriptorTypeListVALVE","text":"Intermediate wrapper for VkMutableDescriptorTypeListVALVE.\n\nExtension: VKVALVEmutabledescriptortype\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkMutableDescriptorTypeListVALVE.html\n\nstruct _MutableDescriptorTypeListVALVE <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkMutableDescriptorTypeListVALVE\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MutableDescriptorTypeListVALVE-Tuple{AbstractArray}","page":"API","title":"Vulkan._MutableDescriptorTypeListVALVE","text":"_MutableDescriptorTypeListVALVE(descriptor_types::AbstractArray{DescriptorType})\n\nExtension: VK_VALVE_mutable_descriptor_type\n\nArguments:\n\ndescriptor_types::AbstractArray{DescriptorType}\n\nAPI documentation\n\n_MutableDescriptorTypeListVALVE(descriptor_types::AbstractArray) -> _MutableDescriptorTypeListVALVE\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._Offset2D","page":"API","title":"Vulkan._Offset2D","text":"Intermediate wrapper for VkOffset2D.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkOffset2D.html\n\nstruct _Offset2D <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkOffset2D\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._Offset3D","page":"API","title":"Vulkan._Offset3D","text":"Intermediate wrapper for VkOffset3D.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkOffset3D.html\n\nstruct _Offset3D <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkOffset3D\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PastPresentationTimingGOOGLE","page":"API","title":"Vulkan._PastPresentationTimingGOOGLE","text":"Intermediate wrapper for VkPastPresentationTimingGOOGLE.\n\nExtension: VKGOOGLEdisplay_timing\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPastPresentationTimingGOOGLE.html\n\nstruct _PastPresentationTimingGOOGLE <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkPastPresentationTimingGOOGLE\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PastPresentationTimingGOOGLE-NTuple{5, Integer}","page":"API","title":"Vulkan._PastPresentationTimingGOOGLE","text":"_PastPresentationTimingGOOGLE(present_id::Integer, desired_present_time::Integer, actual_present_time::Integer, earliest_present_time::Integer, present_margin::Integer)\n\nExtension: VK_GOOGLE_display_timing\n\nArguments:\n\npresent_id::Integer\ndesired_present_time::Integer\nactual_present_time::Integer\nearliest_present_time::Integer\npresent_margin::Integer\n\nAPI documentation\n\n_PastPresentationTimingGOOGLE(present_id::Integer, desired_present_time::Integer, actual_present_time::Integer, earliest_present_time::Integer, present_margin::Integer) -> _PastPresentationTimingGOOGLE\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PerformanceConfigurationAcquireInfoINTEL","page":"API","title":"Vulkan._PerformanceConfigurationAcquireInfoINTEL","text":"Intermediate wrapper for VkPerformanceConfigurationAcquireInfoINTEL.\n\nExtension: VKINTELperformance_query\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPerformanceConfigurationAcquireInfoINTEL.html\n\nstruct _PerformanceConfigurationAcquireInfoINTEL <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPerformanceConfigurationAcquireInfoINTEL\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PerformanceConfigurationAcquireInfoINTEL-Tuple{PerformanceConfigurationTypeINTEL}","page":"API","title":"Vulkan._PerformanceConfigurationAcquireInfoINTEL","text":"_PerformanceConfigurationAcquireInfoINTEL(type::PerformanceConfigurationTypeINTEL; next = C_NULL)\n\nExtension: VK_INTEL_performance_query\n\nArguments:\n\ntype::PerformanceConfigurationTypeINTEL\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PerformanceConfigurationAcquireInfoINTEL(type::PerformanceConfigurationTypeINTEL; next) -> _PerformanceConfigurationAcquireInfoINTEL\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PerformanceCounterDescriptionKHR","page":"API","title":"Vulkan._PerformanceCounterDescriptionKHR","text":"Intermediate wrapper for VkPerformanceCounterDescriptionKHR.\n\nExtension: VKKHRperformance_query\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPerformanceCounterDescriptionKHR.html\n\nstruct _PerformanceCounterDescriptionKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPerformanceCounterDescriptionKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PerformanceCounterDescriptionKHR-Tuple{AbstractString, AbstractString, AbstractString}","page":"API","title":"Vulkan._PerformanceCounterDescriptionKHR","text":"_PerformanceCounterDescriptionKHR(name::AbstractString, category::AbstractString, description::AbstractString; next = C_NULL, flags = 0)\n\nExtension: VK_KHR_performance_query\n\nArguments:\n\nname::AbstractString\ncategory::AbstractString\ndescription::AbstractString\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_PerformanceCounterDescriptionKHR(name::AbstractString, category::AbstractString, description::AbstractString; next, flags)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PerformanceCounterKHR","page":"API","title":"Vulkan._PerformanceCounterKHR","text":"Intermediate wrapper for VkPerformanceCounterKHR.\n\nExtension: VKKHRperformance_query\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPerformanceCounterKHR.html\n\nstruct _PerformanceCounterKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPerformanceCounterKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PerformanceCounterKHR-Tuple{PerformanceCounterUnitKHR, PerformanceCounterScopeKHR, PerformanceCounterStorageKHR, NTuple{16, UInt8}}","page":"API","title":"Vulkan._PerformanceCounterKHR","text":"_PerformanceCounterKHR(unit::PerformanceCounterUnitKHR, scope::PerformanceCounterScopeKHR, storage::PerformanceCounterStorageKHR, uuid::NTuple{Int(VK_UUID_SIZE), UInt8}; next = C_NULL)\n\nExtension: VK_KHR_performance_query\n\nArguments:\n\nunit::PerformanceCounterUnitKHR\nscope::PerformanceCounterScopeKHR\nstorage::PerformanceCounterStorageKHR\nuuid::NTuple{Int(VK_UUID_SIZE), UInt8}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PerformanceCounterKHR(unit::PerformanceCounterUnitKHR, scope::PerformanceCounterScopeKHR, storage::PerformanceCounterStorageKHR, uuid::NTuple{16, UInt8}; next) -> _PerformanceCounterKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PerformanceCounterResultKHR","page":"API","title":"Vulkan._PerformanceCounterResultKHR","text":"Intermediate wrapper for VkPerformanceCounterResultKHR.\n\nExtension: VKKHRperformance_query\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPerformanceCounterResultKHR.html\n\nstruct _PerformanceCounterResultKHR <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkPerformanceCounterResultKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PerformanceMarkerInfoINTEL","page":"API","title":"Vulkan._PerformanceMarkerInfoINTEL","text":"Intermediate wrapper for VkPerformanceMarkerInfoINTEL.\n\nExtension: VKINTELperformance_query\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPerformanceMarkerInfoINTEL.html\n\nstruct _PerformanceMarkerInfoINTEL <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPerformanceMarkerInfoINTEL\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PerformanceMarkerInfoINTEL-Tuple{Integer}","page":"API","title":"Vulkan._PerformanceMarkerInfoINTEL","text":"_PerformanceMarkerInfoINTEL(marker::Integer; next = C_NULL)\n\nExtension: VK_INTEL_performance_query\n\nArguments:\n\nmarker::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PerformanceMarkerInfoINTEL(marker::Integer; next) -> _PerformanceMarkerInfoINTEL\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PerformanceOverrideInfoINTEL","page":"API","title":"Vulkan._PerformanceOverrideInfoINTEL","text":"Intermediate wrapper for VkPerformanceOverrideInfoINTEL.\n\nExtension: VKINTELperformance_query\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPerformanceOverrideInfoINTEL.html\n\nstruct _PerformanceOverrideInfoINTEL <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPerformanceOverrideInfoINTEL\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PerformanceOverrideInfoINTEL-Tuple{PerformanceOverrideTypeINTEL, Bool, Integer}","page":"API","title":"Vulkan._PerformanceOverrideInfoINTEL","text":"_PerformanceOverrideInfoINTEL(type::PerformanceOverrideTypeINTEL, enable::Bool, parameter::Integer; next = C_NULL)\n\nExtension: VK_INTEL_performance_query\n\nArguments:\n\ntype::PerformanceOverrideTypeINTEL\nenable::Bool\nparameter::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PerformanceOverrideInfoINTEL(type::PerformanceOverrideTypeINTEL, enable::Bool, parameter::Integer; next) -> _PerformanceOverrideInfoINTEL\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PerformanceQuerySubmitInfoKHR","page":"API","title":"Vulkan._PerformanceQuerySubmitInfoKHR","text":"Intermediate wrapper for VkPerformanceQuerySubmitInfoKHR.\n\nExtension: VKKHRperformance_query\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPerformanceQuerySubmitInfoKHR.html\n\nstruct _PerformanceQuerySubmitInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPerformanceQuerySubmitInfoKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PerformanceQuerySubmitInfoKHR-Tuple{Integer}","page":"API","title":"Vulkan._PerformanceQuerySubmitInfoKHR","text":"_PerformanceQuerySubmitInfoKHR(counter_pass_index::Integer; next = C_NULL)\n\nExtension: VK_KHR_performance_query\n\nArguments:\n\ncounter_pass_index::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PerformanceQuerySubmitInfoKHR(counter_pass_index::Integer; next) -> _PerformanceQuerySubmitInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PerformanceStreamMarkerInfoINTEL","page":"API","title":"Vulkan._PerformanceStreamMarkerInfoINTEL","text":"Intermediate wrapper for VkPerformanceStreamMarkerInfoINTEL.\n\nExtension: VKINTELperformance_query\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPerformanceStreamMarkerInfoINTEL.html\n\nstruct _PerformanceStreamMarkerInfoINTEL <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPerformanceStreamMarkerInfoINTEL\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PerformanceStreamMarkerInfoINTEL-Tuple{Integer}","page":"API","title":"Vulkan._PerformanceStreamMarkerInfoINTEL","text":"_PerformanceStreamMarkerInfoINTEL(marker::Integer; next = C_NULL)\n\nExtension: VK_INTEL_performance_query\n\nArguments:\n\nmarker::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PerformanceStreamMarkerInfoINTEL(marker::Integer; next) -> _PerformanceStreamMarkerInfoINTEL\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PerformanceValueDataINTEL","page":"API","title":"Vulkan._PerformanceValueDataINTEL","text":"Intermediate wrapper for VkPerformanceValueDataINTEL.\n\nExtension: VKINTELperformance_query\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPerformanceValueDataINTEL.html\n\nstruct _PerformanceValueDataINTEL <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkPerformanceValueDataINTEL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PerformanceValueINTEL","page":"API","title":"Vulkan._PerformanceValueINTEL","text":"Intermediate wrapper for VkPerformanceValueINTEL.\n\nExtension: VKINTELperformance_query\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPerformanceValueINTEL.html\n\nstruct _PerformanceValueINTEL <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkPerformanceValueINTEL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PerformanceValueINTEL-Tuple{PerformanceValueTypeINTEL, _PerformanceValueDataINTEL}","page":"API","title":"Vulkan._PerformanceValueINTEL","text":"_PerformanceValueINTEL(type::PerformanceValueTypeINTEL, data::_PerformanceValueDataINTEL)\n\nExtension: VK_INTEL_performance_query\n\nArguments:\n\ntype::PerformanceValueTypeINTEL\ndata::_PerformanceValueDataINTEL\n\nAPI documentation\n\n_PerformanceValueINTEL(type::PerformanceValueTypeINTEL, data::_PerformanceValueDataINTEL) -> _PerformanceValueINTEL\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDevice16BitStorageFeatures","page":"API","title":"Vulkan._PhysicalDevice16BitStorageFeatures","text":"Intermediate wrapper for VkPhysicalDevice16BitStorageFeatures.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevice16BitStorageFeatures.html\n\nstruct _PhysicalDevice16BitStorageFeatures <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDevice16BitStorageFeatures\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDevice16BitStorageFeatures-NTuple{4, Bool}","page":"API","title":"Vulkan._PhysicalDevice16BitStorageFeatures","text":"_PhysicalDevice16BitStorageFeatures(storage_buffer_16_bit_access::Bool, uniform_and_storage_buffer_16_bit_access::Bool, storage_push_constant_16::Bool, storage_input_output_16::Bool; next = C_NULL)\n\nArguments:\n\nstorage_buffer_16_bit_access::Bool\nuniform_and_storage_buffer_16_bit_access::Bool\nstorage_push_constant_16::Bool\nstorage_input_output_16::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDevice16BitStorageFeatures(storage_buffer_16_bit_access::Bool, uniform_and_storage_buffer_16_bit_access::Bool, storage_push_constant_16::Bool, storage_input_output_16::Bool; next) -> _PhysicalDevice16BitStorageFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDevice4444FormatsFeaturesEXT","page":"API","title":"Vulkan._PhysicalDevice4444FormatsFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDevice4444FormatsFeaturesEXT.\n\nExtension: VKEXT4444_formats\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevice4444FormatsFeaturesEXT.html\n\nstruct _PhysicalDevice4444FormatsFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDevice4444FormatsFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDevice4444FormatsFeaturesEXT-Tuple{Bool, Bool}","page":"API","title":"Vulkan._PhysicalDevice4444FormatsFeaturesEXT","text":"_PhysicalDevice4444FormatsFeaturesEXT(format_a4r4g4b4::Bool, format_a4b4g4r4::Bool; next = C_NULL)\n\nExtension: VK_EXT_4444_formats\n\nArguments:\n\nformat_a4r4g4b4::Bool\nformat_a4b4g4r4::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDevice4444FormatsFeaturesEXT(format_a4r4g4b4::Bool, format_a4b4g4r4::Bool; next) -> _PhysicalDevice4444FormatsFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDevice8BitStorageFeatures","page":"API","title":"Vulkan._PhysicalDevice8BitStorageFeatures","text":"Intermediate wrapper for VkPhysicalDevice8BitStorageFeatures.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevice8BitStorageFeatures.html\n\nstruct _PhysicalDevice8BitStorageFeatures <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDevice8BitStorageFeatures\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDevice8BitStorageFeatures-Tuple{Bool, Bool, Bool}","page":"API","title":"Vulkan._PhysicalDevice8BitStorageFeatures","text":"_PhysicalDevice8BitStorageFeatures(storage_buffer_8_bit_access::Bool, uniform_and_storage_buffer_8_bit_access::Bool, storage_push_constant_8::Bool; next = C_NULL)\n\nArguments:\n\nstorage_buffer_8_bit_access::Bool\nuniform_and_storage_buffer_8_bit_access::Bool\nstorage_push_constant_8::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDevice8BitStorageFeatures(storage_buffer_8_bit_access::Bool, uniform_and_storage_buffer_8_bit_access::Bool, storage_push_constant_8::Bool; next) -> _PhysicalDevice8BitStorageFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceASTCDecodeFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceASTCDecodeFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceASTCDecodeFeaturesEXT.\n\nExtension: VKEXTastcdecodemode\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceASTCDecodeFeaturesEXT.html\n\nstruct _PhysicalDeviceASTCDecodeFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceASTCDecodeFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceASTCDecodeFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceASTCDecodeFeaturesEXT","text":"_PhysicalDeviceASTCDecodeFeaturesEXT(decode_mode_shared_exponent::Bool; next = C_NULL)\n\nExtension: VK_EXT_astc_decode_mode\n\nArguments:\n\ndecode_mode_shared_exponent::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceASTCDecodeFeaturesEXT(decode_mode_shared_exponent::Bool; next) -> _PhysicalDeviceASTCDecodeFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceAccelerationStructureFeaturesKHR","page":"API","title":"Vulkan._PhysicalDeviceAccelerationStructureFeaturesKHR","text":"Intermediate wrapper for VkPhysicalDeviceAccelerationStructureFeaturesKHR.\n\nExtension: VKKHRacceleration_structure\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceAccelerationStructureFeaturesKHR.html\n\nstruct _PhysicalDeviceAccelerationStructureFeaturesKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceAccelerationStructureFeaturesKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceAccelerationStructureFeaturesKHR-NTuple{5, Bool}","page":"API","title":"Vulkan._PhysicalDeviceAccelerationStructureFeaturesKHR","text":"_PhysicalDeviceAccelerationStructureFeaturesKHR(acceleration_structure::Bool, acceleration_structure_capture_replay::Bool, acceleration_structure_indirect_build::Bool, acceleration_structure_host_commands::Bool, descriptor_binding_acceleration_structure_update_after_bind::Bool; next = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\nacceleration_structure::Bool\nacceleration_structure_capture_replay::Bool\nacceleration_structure_indirect_build::Bool\nacceleration_structure_host_commands::Bool\ndescriptor_binding_acceleration_structure_update_after_bind::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceAccelerationStructureFeaturesKHR(acceleration_structure::Bool, acceleration_structure_capture_replay::Bool, acceleration_structure_indirect_build::Bool, acceleration_structure_host_commands::Bool, descriptor_binding_acceleration_structure_update_after_bind::Bool; next) -> _PhysicalDeviceAccelerationStructureFeaturesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceAccelerationStructurePropertiesKHR","page":"API","title":"Vulkan._PhysicalDeviceAccelerationStructurePropertiesKHR","text":"Intermediate wrapper for VkPhysicalDeviceAccelerationStructurePropertiesKHR.\n\nExtension: VKKHRacceleration_structure\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceAccelerationStructurePropertiesKHR.html\n\nstruct _PhysicalDeviceAccelerationStructurePropertiesKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceAccelerationStructurePropertiesKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceAccelerationStructurePropertiesKHR-NTuple{8, Integer}","page":"API","title":"Vulkan._PhysicalDeviceAccelerationStructurePropertiesKHR","text":"_PhysicalDeviceAccelerationStructurePropertiesKHR(max_geometry_count::Integer, max_instance_count::Integer, max_primitive_count::Integer, max_per_stage_descriptor_acceleration_structures::Integer, max_per_stage_descriptor_update_after_bind_acceleration_structures::Integer, max_descriptor_set_acceleration_structures::Integer, max_descriptor_set_update_after_bind_acceleration_structures::Integer, min_acceleration_structure_scratch_offset_alignment::Integer; next = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\nmax_geometry_count::Integer\nmax_instance_count::Integer\nmax_primitive_count::Integer\nmax_per_stage_descriptor_acceleration_structures::Integer\nmax_per_stage_descriptor_update_after_bind_acceleration_structures::Integer\nmax_descriptor_set_acceleration_structures::Integer\nmax_descriptor_set_update_after_bind_acceleration_structures::Integer\nmin_acceleration_structure_scratch_offset_alignment::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceAccelerationStructurePropertiesKHR(max_geometry_count::Integer, max_instance_count::Integer, max_primitive_count::Integer, max_per_stage_descriptor_acceleration_structures::Integer, max_per_stage_descriptor_update_after_bind_acceleration_structures::Integer, max_descriptor_set_acceleration_structures::Integer, max_descriptor_set_update_after_bind_acceleration_structures::Integer, min_acceleration_structure_scratch_offset_alignment::Integer; next) -> _PhysicalDeviceAccelerationStructurePropertiesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceBlendOperationAdvancedFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceBlendOperationAdvancedFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT.\n\nExtension: VKEXTblendoperationadvanced\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT.html\n\nstruct _PhysicalDeviceBlendOperationAdvancedFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceBlendOperationAdvancedFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceBlendOperationAdvancedFeaturesEXT","text":"_PhysicalDeviceBlendOperationAdvancedFeaturesEXT(advanced_blend_coherent_operations::Bool; next = C_NULL)\n\nExtension: VK_EXT_blend_operation_advanced\n\nArguments:\n\nadvanced_blend_coherent_operations::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceBlendOperationAdvancedFeaturesEXT(advanced_blend_coherent_operations::Bool; next) -> _PhysicalDeviceBlendOperationAdvancedFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceBlendOperationAdvancedPropertiesEXT","page":"API","title":"Vulkan._PhysicalDeviceBlendOperationAdvancedPropertiesEXT","text":"Intermediate wrapper for VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT.\n\nExtension: VKEXTblendoperationadvanced\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT.html\n\nstruct _PhysicalDeviceBlendOperationAdvancedPropertiesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceBlendOperationAdvancedPropertiesEXT-Tuple{Integer, Bool, Bool, Bool, Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceBlendOperationAdvancedPropertiesEXT","text":"_PhysicalDeviceBlendOperationAdvancedPropertiesEXT(advanced_blend_max_color_attachments::Integer, advanced_blend_independent_blend::Bool, advanced_blend_non_premultiplied_src_color::Bool, advanced_blend_non_premultiplied_dst_color::Bool, advanced_blend_correlated_overlap::Bool, advanced_blend_all_operations::Bool; next = C_NULL)\n\nExtension: VK_EXT_blend_operation_advanced\n\nArguments:\n\nadvanced_blend_max_color_attachments::Integer\nadvanced_blend_independent_blend::Bool\nadvanced_blend_non_premultiplied_src_color::Bool\nadvanced_blend_non_premultiplied_dst_color::Bool\nadvanced_blend_correlated_overlap::Bool\nadvanced_blend_all_operations::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceBlendOperationAdvancedPropertiesEXT(advanced_blend_max_color_attachments::Integer, advanced_blend_independent_blend::Bool, advanced_blend_non_premultiplied_src_color::Bool, advanced_blend_non_premultiplied_dst_color::Bool, advanced_blend_correlated_overlap::Bool, advanced_blend_all_operations::Bool; next) -> _PhysicalDeviceBlendOperationAdvancedPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceBufferDeviceAddressFeatures","page":"API","title":"Vulkan._PhysicalDeviceBufferDeviceAddressFeatures","text":"Intermediate wrapper for VkPhysicalDeviceBufferDeviceAddressFeatures.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceBufferDeviceAddressFeatures.html\n\nstruct _PhysicalDeviceBufferDeviceAddressFeatures <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceBufferDeviceAddressFeatures\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceBufferDeviceAddressFeatures-Tuple{Bool, Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceBufferDeviceAddressFeatures","text":"_PhysicalDeviceBufferDeviceAddressFeatures(buffer_device_address::Bool, buffer_device_address_capture_replay::Bool, buffer_device_address_multi_device::Bool; next = C_NULL)\n\nArguments:\n\nbuffer_device_address::Bool\nbuffer_device_address_capture_replay::Bool\nbuffer_device_address_multi_device::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceBufferDeviceAddressFeatures(buffer_device_address::Bool, buffer_device_address_capture_replay::Bool, buffer_device_address_multi_device::Bool; next) -> _PhysicalDeviceBufferDeviceAddressFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceBufferDeviceAddressFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceBufferDeviceAddressFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceBufferDeviceAddressFeaturesEXT.\n\nExtension: VKEXTbufferdeviceaddress\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceBufferDeviceAddressFeaturesEXT.html\n\nstruct _PhysicalDeviceBufferDeviceAddressFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceBufferDeviceAddressFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceBufferDeviceAddressFeaturesEXT-Tuple{Bool, Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceBufferDeviceAddressFeaturesEXT","text":"_PhysicalDeviceBufferDeviceAddressFeaturesEXT(buffer_device_address::Bool, buffer_device_address_capture_replay::Bool, buffer_device_address_multi_device::Bool; next = C_NULL)\n\nExtension: VK_EXT_buffer_device_address\n\nArguments:\n\nbuffer_device_address::Bool\nbuffer_device_address_capture_replay::Bool\nbuffer_device_address_multi_device::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceBufferDeviceAddressFeaturesEXT(buffer_device_address::Bool, buffer_device_address_capture_replay::Bool, buffer_device_address_multi_device::Bool; next) -> _PhysicalDeviceBufferDeviceAddressFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceCoherentMemoryFeaturesAMD","page":"API","title":"Vulkan._PhysicalDeviceCoherentMemoryFeaturesAMD","text":"Intermediate wrapper for VkPhysicalDeviceCoherentMemoryFeaturesAMD.\n\nExtension: VKAMDdevicecoherentmemory\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceCoherentMemoryFeaturesAMD.html\n\nstruct _PhysicalDeviceCoherentMemoryFeaturesAMD <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceCoherentMemoryFeaturesAMD\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceCoherentMemoryFeaturesAMD-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceCoherentMemoryFeaturesAMD","text":"_PhysicalDeviceCoherentMemoryFeaturesAMD(device_coherent_memory::Bool; next = C_NULL)\n\nExtension: VK_AMD_device_coherent_memory\n\nArguments:\n\ndevice_coherent_memory::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceCoherentMemoryFeaturesAMD(device_coherent_memory::Bool; next) -> _PhysicalDeviceCoherentMemoryFeaturesAMD\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceColorWriteEnableFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceColorWriteEnableFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceColorWriteEnableFeaturesEXT.\n\nExtension: VKEXTcolorwriteenable\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceColorWriteEnableFeaturesEXT.html\n\nstruct _PhysicalDeviceColorWriteEnableFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceColorWriteEnableFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceColorWriteEnableFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceColorWriteEnableFeaturesEXT","text":"_PhysicalDeviceColorWriteEnableFeaturesEXT(color_write_enable::Bool; next = C_NULL)\n\nExtension: VK_EXT_color_write_enable\n\nArguments:\n\ncolor_write_enable::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceColorWriteEnableFeaturesEXT(color_write_enable::Bool; next) -> _PhysicalDeviceColorWriteEnableFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceComputeShaderDerivativesFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceComputeShaderDerivativesFeaturesNV","text":"Intermediate wrapper for VkPhysicalDeviceComputeShaderDerivativesFeaturesNV.\n\nExtension: VKNVcomputeshaderderivatives\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceComputeShaderDerivativesFeaturesNV.html\n\nstruct _PhysicalDeviceComputeShaderDerivativesFeaturesNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceComputeShaderDerivativesFeaturesNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceComputeShaderDerivativesFeaturesNV-Tuple{Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceComputeShaderDerivativesFeaturesNV","text":"_PhysicalDeviceComputeShaderDerivativesFeaturesNV(compute_derivative_group_quads::Bool, compute_derivative_group_linear::Bool; next = C_NULL)\n\nExtension: VK_NV_compute_shader_derivatives\n\nArguments:\n\ncompute_derivative_group_quads::Bool\ncompute_derivative_group_linear::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceComputeShaderDerivativesFeaturesNV(compute_derivative_group_quads::Bool, compute_derivative_group_linear::Bool; next) -> _PhysicalDeviceComputeShaderDerivativesFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceConditionalRenderingFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceConditionalRenderingFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceConditionalRenderingFeaturesEXT.\n\nExtension: VKEXTconditional_rendering\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceConditionalRenderingFeaturesEXT.html\n\nstruct _PhysicalDeviceConditionalRenderingFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceConditionalRenderingFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceConditionalRenderingFeaturesEXT-Tuple{Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceConditionalRenderingFeaturesEXT","text":"_PhysicalDeviceConditionalRenderingFeaturesEXT(conditional_rendering::Bool, inherited_conditional_rendering::Bool; next = C_NULL)\n\nExtension: VK_EXT_conditional_rendering\n\nArguments:\n\nconditional_rendering::Bool\ninherited_conditional_rendering::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceConditionalRenderingFeaturesEXT(conditional_rendering::Bool, inherited_conditional_rendering::Bool; next) -> _PhysicalDeviceConditionalRenderingFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceConservativeRasterizationPropertiesEXT","page":"API","title":"Vulkan._PhysicalDeviceConservativeRasterizationPropertiesEXT","text":"Intermediate wrapper for VkPhysicalDeviceConservativeRasterizationPropertiesEXT.\n\nExtension: VKEXTconservative_rasterization\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceConservativeRasterizationPropertiesEXT.html\n\nstruct _PhysicalDeviceConservativeRasterizationPropertiesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceConservativeRasterizationPropertiesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceConservativeRasterizationPropertiesEXT-Tuple{Real, Real, Real, Bool, Bool, Bool, Bool, Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceConservativeRasterizationPropertiesEXT","text":"_PhysicalDeviceConservativeRasterizationPropertiesEXT(primitive_overestimation_size::Real, max_extra_primitive_overestimation_size::Real, extra_primitive_overestimation_size_granularity::Real, primitive_underestimation::Bool, conservative_point_and_line_rasterization::Bool, degenerate_triangles_rasterized::Bool, degenerate_lines_rasterized::Bool, fully_covered_fragment_shader_input_variable::Bool, conservative_rasterization_post_depth_coverage::Bool; next = C_NULL)\n\nExtension: VK_EXT_conservative_rasterization\n\nArguments:\n\nprimitive_overestimation_size::Real\nmax_extra_primitive_overestimation_size::Real\nextra_primitive_overestimation_size_granularity::Real\nprimitive_underestimation::Bool\nconservative_point_and_line_rasterization::Bool\ndegenerate_triangles_rasterized::Bool\ndegenerate_lines_rasterized::Bool\nfully_covered_fragment_shader_input_variable::Bool\nconservative_rasterization_post_depth_coverage::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceConservativeRasterizationPropertiesEXT(primitive_overestimation_size::Real, max_extra_primitive_overestimation_size::Real, extra_primitive_overestimation_size_granularity::Real, primitive_underestimation::Bool, conservative_point_and_line_rasterization::Bool, degenerate_triangles_rasterized::Bool, degenerate_lines_rasterized::Bool, fully_covered_fragment_shader_input_variable::Bool, conservative_rasterization_post_depth_coverage::Bool; next) -> _PhysicalDeviceConservativeRasterizationPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceCooperativeMatrixFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceCooperativeMatrixFeaturesNV","text":"Intermediate wrapper for VkPhysicalDeviceCooperativeMatrixFeaturesNV.\n\nExtension: VKNVcooperative_matrix\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceCooperativeMatrixFeaturesNV.html\n\nstruct _PhysicalDeviceCooperativeMatrixFeaturesNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceCooperativeMatrixFeaturesNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceCooperativeMatrixFeaturesNV-Tuple{Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceCooperativeMatrixFeaturesNV","text":"_PhysicalDeviceCooperativeMatrixFeaturesNV(cooperative_matrix::Bool, cooperative_matrix_robust_buffer_access::Bool; next = C_NULL)\n\nExtension: VK_NV_cooperative_matrix\n\nArguments:\n\ncooperative_matrix::Bool\ncooperative_matrix_robust_buffer_access::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceCooperativeMatrixFeaturesNV(cooperative_matrix::Bool, cooperative_matrix_robust_buffer_access::Bool; next) -> _PhysicalDeviceCooperativeMatrixFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceCooperativeMatrixPropertiesNV","page":"API","title":"Vulkan._PhysicalDeviceCooperativeMatrixPropertiesNV","text":"Intermediate wrapper for VkPhysicalDeviceCooperativeMatrixPropertiesNV.\n\nExtension: VKNVcooperative_matrix\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceCooperativeMatrixPropertiesNV.html\n\nstruct _PhysicalDeviceCooperativeMatrixPropertiesNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceCooperativeMatrixPropertiesNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceCooperativeMatrixPropertiesNV-Tuple{ShaderStageFlag}","page":"API","title":"Vulkan._PhysicalDeviceCooperativeMatrixPropertiesNV","text":"_PhysicalDeviceCooperativeMatrixPropertiesNV(cooperative_matrix_supported_stages::ShaderStageFlag; next = C_NULL)\n\nExtension: VK_NV_cooperative_matrix\n\nArguments:\n\ncooperative_matrix_supported_stages::ShaderStageFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceCooperativeMatrixPropertiesNV(cooperative_matrix_supported_stages::ShaderStageFlag; next) -> _PhysicalDeviceCooperativeMatrixPropertiesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceCornerSampledImageFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceCornerSampledImageFeaturesNV","text":"Intermediate wrapper for VkPhysicalDeviceCornerSampledImageFeaturesNV.\n\nExtension: VKNVcornersampledimage\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceCornerSampledImageFeaturesNV.html\n\nstruct _PhysicalDeviceCornerSampledImageFeaturesNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceCornerSampledImageFeaturesNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceCornerSampledImageFeaturesNV-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceCornerSampledImageFeaturesNV","text":"_PhysicalDeviceCornerSampledImageFeaturesNV(corner_sampled_image::Bool; next = C_NULL)\n\nExtension: VK_NV_corner_sampled_image\n\nArguments:\n\ncorner_sampled_image::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceCornerSampledImageFeaturesNV(corner_sampled_image::Bool; next) -> _PhysicalDeviceCornerSampledImageFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceCoverageReductionModeFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceCoverageReductionModeFeaturesNV","text":"Intermediate wrapper for VkPhysicalDeviceCoverageReductionModeFeaturesNV.\n\nExtension: VKNVcoveragereductionmode\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceCoverageReductionModeFeaturesNV.html\n\nstruct _PhysicalDeviceCoverageReductionModeFeaturesNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceCoverageReductionModeFeaturesNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceCoverageReductionModeFeaturesNV-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceCoverageReductionModeFeaturesNV","text":"_PhysicalDeviceCoverageReductionModeFeaturesNV(coverage_reduction_mode::Bool; next = C_NULL)\n\nExtension: VK_NV_coverage_reduction_mode\n\nArguments:\n\ncoverage_reduction_mode::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceCoverageReductionModeFeaturesNV(coverage_reduction_mode::Bool; next) -> _PhysicalDeviceCoverageReductionModeFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceCustomBorderColorFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceCustomBorderColorFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceCustomBorderColorFeaturesEXT.\n\nExtension: VKEXTcustombordercolor\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceCustomBorderColorFeaturesEXT.html\n\nstruct _PhysicalDeviceCustomBorderColorFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceCustomBorderColorFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceCustomBorderColorFeaturesEXT-Tuple{Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceCustomBorderColorFeaturesEXT","text":"_PhysicalDeviceCustomBorderColorFeaturesEXT(custom_border_colors::Bool, custom_border_color_without_format::Bool; next = C_NULL)\n\nExtension: VK_EXT_custom_border_color\n\nArguments:\n\ncustom_border_colors::Bool\ncustom_border_color_without_format::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceCustomBorderColorFeaturesEXT(custom_border_colors::Bool, custom_border_color_without_format::Bool; next) -> _PhysicalDeviceCustomBorderColorFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceCustomBorderColorPropertiesEXT","page":"API","title":"Vulkan._PhysicalDeviceCustomBorderColorPropertiesEXT","text":"Intermediate wrapper for VkPhysicalDeviceCustomBorderColorPropertiesEXT.\n\nExtension: VKEXTcustombordercolor\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceCustomBorderColorPropertiesEXT.html\n\nstruct _PhysicalDeviceCustomBorderColorPropertiesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceCustomBorderColorPropertiesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceCustomBorderColorPropertiesEXT-Tuple{Integer}","page":"API","title":"Vulkan._PhysicalDeviceCustomBorderColorPropertiesEXT","text":"_PhysicalDeviceCustomBorderColorPropertiesEXT(max_custom_border_color_samplers::Integer; next = C_NULL)\n\nExtension: VK_EXT_custom_border_color\n\nArguments:\n\nmax_custom_border_color_samplers::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceCustomBorderColorPropertiesEXT(max_custom_border_color_samplers::Integer; next) -> _PhysicalDeviceCustomBorderColorPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV","text":"Intermediate wrapper for VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV.\n\nExtension: VKNVdedicatedallocationimage_aliasing\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV.html\n\nstruct _PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV","text":"_PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV(dedicated_allocation_image_aliasing::Bool; next = C_NULL)\n\nExtension: VK_NV_dedicated_allocation_image_aliasing\n\nArguments:\n\ndedicated_allocation_image_aliasing::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV(dedicated_allocation_image_aliasing::Bool; next) -> _PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceDepthClipEnableFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceDepthClipEnableFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceDepthClipEnableFeaturesEXT.\n\nExtension: VKEXTdepthclipenable\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDepthClipEnableFeaturesEXT.html\n\nstruct _PhysicalDeviceDepthClipEnableFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceDepthClipEnableFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceDepthClipEnableFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceDepthClipEnableFeaturesEXT","text":"_PhysicalDeviceDepthClipEnableFeaturesEXT(depth_clip_enable::Bool; next = C_NULL)\n\nExtension: VK_EXT_depth_clip_enable\n\nArguments:\n\ndepth_clip_enable::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceDepthClipEnableFeaturesEXT(depth_clip_enable::Bool; next) -> _PhysicalDeviceDepthClipEnableFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceDepthStencilResolveProperties","page":"API","title":"Vulkan._PhysicalDeviceDepthStencilResolveProperties","text":"Intermediate wrapper for VkPhysicalDeviceDepthStencilResolveProperties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDepthStencilResolveProperties.html\n\nstruct _PhysicalDeviceDepthStencilResolveProperties <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceDepthStencilResolveProperties\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceDepthStencilResolveProperties-Tuple{ResolveModeFlag, ResolveModeFlag, Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceDepthStencilResolveProperties","text":"_PhysicalDeviceDepthStencilResolveProperties(supported_depth_resolve_modes::ResolveModeFlag, supported_stencil_resolve_modes::ResolveModeFlag, independent_resolve_none::Bool, independent_resolve::Bool; next = C_NULL)\n\nArguments:\n\nsupported_depth_resolve_modes::ResolveModeFlag\nsupported_stencil_resolve_modes::ResolveModeFlag\nindependent_resolve_none::Bool\nindependent_resolve::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceDepthStencilResolveProperties(supported_depth_resolve_modes::ResolveModeFlag, supported_stencil_resolve_modes::ResolveModeFlag, independent_resolve_none::Bool, independent_resolve::Bool; next) -> _PhysicalDeviceDepthStencilResolveProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceDescriptorIndexingFeatures","page":"API","title":"Vulkan._PhysicalDeviceDescriptorIndexingFeatures","text":"Intermediate wrapper for VkPhysicalDeviceDescriptorIndexingFeatures.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDescriptorIndexingFeatures.html\n\nstruct _PhysicalDeviceDescriptorIndexingFeatures <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceDescriptorIndexingFeatures\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceDescriptorIndexingFeatures-NTuple{20, Bool}","page":"API","title":"Vulkan._PhysicalDeviceDescriptorIndexingFeatures","text":"_PhysicalDeviceDescriptorIndexingFeatures(shader_input_attachment_array_dynamic_indexing::Bool, shader_uniform_texel_buffer_array_dynamic_indexing::Bool, shader_storage_texel_buffer_array_dynamic_indexing::Bool, shader_uniform_buffer_array_non_uniform_indexing::Bool, shader_sampled_image_array_non_uniform_indexing::Bool, shader_storage_buffer_array_non_uniform_indexing::Bool, shader_storage_image_array_non_uniform_indexing::Bool, shader_input_attachment_array_non_uniform_indexing::Bool, shader_uniform_texel_buffer_array_non_uniform_indexing::Bool, shader_storage_texel_buffer_array_non_uniform_indexing::Bool, descriptor_binding_uniform_buffer_update_after_bind::Bool, descriptor_binding_sampled_image_update_after_bind::Bool, descriptor_binding_storage_image_update_after_bind::Bool, descriptor_binding_storage_buffer_update_after_bind::Bool, descriptor_binding_uniform_texel_buffer_update_after_bind::Bool, descriptor_binding_storage_texel_buffer_update_after_bind::Bool, descriptor_binding_update_unused_while_pending::Bool, descriptor_binding_partially_bound::Bool, descriptor_binding_variable_descriptor_count::Bool, runtime_descriptor_array::Bool; next = C_NULL)\n\nArguments:\n\nshader_input_attachment_array_dynamic_indexing::Bool\nshader_uniform_texel_buffer_array_dynamic_indexing::Bool\nshader_storage_texel_buffer_array_dynamic_indexing::Bool\nshader_uniform_buffer_array_non_uniform_indexing::Bool\nshader_sampled_image_array_non_uniform_indexing::Bool\nshader_storage_buffer_array_non_uniform_indexing::Bool\nshader_storage_image_array_non_uniform_indexing::Bool\nshader_input_attachment_array_non_uniform_indexing::Bool\nshader_uniform_texel_buffer_array_non_uniform_indexing::Bool\nshader_storage_texel_buffer_array_non_uniform_indexing::Bool\ndescriptor_binding_uniform_buffer_update_after_bind::Bool\ndescriptor_binding_sampled_image_update_after_bind::Bool\ndescriptor_binding_storage_image_update_after_bind::Bool\ndescriptor_binding_storage_buffer_update_after_bind::Bool\ndescriptor_binding_uniform_texel_buffer_update_after_bind::Bool\ndescriptor_binding_storage_texel_buffer_update_after_bind::Bool\ndescriptor_binding_update_unused_while_pending::Bool\ndescriptor_binding_partially_bound::Bool\ndescriptor_binding_variable_descriptor_count::Bool\nruntime_descriptor_array::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceDescriptorIndexingFeatures(shader_input_attachment_array_dynamic_indexing::Bool, shader_uniform_texel_buffer_array_dynamic_indexing::Bool, shader_storage_texel_buffer_array_dynamic_indexing::Bool, shader_uniform_buffer_array_non_uniform_indexing::Bool, shader_sampled_image_array_non_uniform_indexing::Bool, shader_storage_buffer_array_non_uniform_indexing::Bool, shader_storage_image_array_non_uniform_indexing::Bool, shader_input_attachment_array_non_uniform_indexing::Bool, shader_uniform_texel_buffer_array_non_uniform_indexing::Bool, shader_storage_texel_buffer_array_non_uniform_indexing::Bool, descriptor_binding_uniform_buffer_update_after_bind::Bool, descriptor_binding_sampled_image_update_after_bind::Bool, descriptor_binding_storage_image_update_after_bind::Bool, descriptor_binding_storage_buffer_update_after_bind::Bool, descriptor_binding_uniform_texel_buffer_update_after_bind::Bool, descriptor_binding_storage_texel_buffer_update_after_bind::Bool, descriptor_binding_update_unused_while_pending::Bool, descriptor_binding_partially_bound::Bool, descriptor_binding_variable_descriptor_count::Bool, runtime_descriptor_array::Bool; next) -> _PhysicalDeviceDescriptorIndexingFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceDescriptorIndexingProperties","page":"API","title":"Vulkan._PhysicalDeviceDescriptorIndexingProperties","text":"Intermediate wrapper for VkPhysicalDeviceDescriptorIndexingProperties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDescriptorIndexingProperties.html\n\nstruct _PhysicalDeviceDescriptorIndexingProperties <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceDescriptorIndexingProperties\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceDescriptorIndexingProperties-Tuple{Integer, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer}","page":"API","title":"Vulkan._PhysicalDeviceDescriptorIndexingProperties","text":"_PhysicalDeviceDescriptorIndexingProperties(max_update_after_bind_descriptors_in_all_pools::Integer, shader_uniform_buffer_array_non_uniform_indexing_native::Bool, shader_sampled_image_array_non_uniform_indexing_native::Bool, shader_storage_buffer_array_non_uniform_indexing_native::Bool, shader_storage_image_array_non_uniform_indexing_native::Bool, shader_input_attachment_array_non_uniform_indexing_native::Bool, robust_buffer_access_update_after_bind::Bool, quad_divergent_implicit_lod::Bool, max_per_stage_descriptor_update_after_bind_samplers::Integer, max_per_stage_descriptor_update_after_bind_uniform_buffers::Integer, max_per_stage_descriptor_update_after_bind_storage_buffers::Integer, max_per_stage_descriptor_update_after_bind_sampled_images::Integer, max_per_stage_descriptor_update_after_bind_storage_images::Integer, max_per_stage_descriptor_update_after_bind_input_attachments::Integer, max_per_stage_update_after_bind_resources::Integer, max_descriptor_set_update_after_bind_samplers::Integer, max_descriptor_set_update_after_bind_uniform_buffers::Integer, max_descriptor_set_update_after_bind_uniform_buffers_dynamic::Integer, max_descriptor_set_update_after_bind_storage_buffers::Integer, max_descriptor_set_update_after_bind_storage_buffers_dynamic::Integer, max_descriptor_set_update_after_bind_sampled_images::Integer, max_descriptor_set_update_after_bind_storage_images::Integer, max_descriptor_set_update_after_bind_input_attachments::Integer; next = C_NULL)\n\nArguments:\n\nmax_update_after_bind_descriptors_in_all_pools::Integer\nshader_uniform_buffer_array_non_uniform_indexing_native::Bool\nshader_sampled_image_array_non_uniform_indexing_native::Bool\nshader_storage_buffer_array_non_uniform_indexing_native::Bool\nshader_storage_image_array_non_uniform_indexing_native::Bool\nshader_input_attachment_array_non_uniform_indexing_native::Bool\nrobust_buffer_access_update_after_bind::Bool\nquad_divergent_implicit_lod::Bool\nmax_per_stage_descriptor_update_after_bind_samplers::Integer\nmax_per_stage_descriptor_update_after_bind_uniform_buffers::Integer\nmax_per_stage_descriptor_update_after_bind_storage_buffers::Integer\nmax_per_stage_descriptor_update_after_bind_sampled_images::Integer\nmax_per_stage_descriptor_update_after_bind_storage_images::Integer\nmax_per_stage_descriptor_update_after_bind_input_attachments::Integer\nmax_per_stage_update_after_bind_resources::Integer\nmax_descriptor_set_update_after_bind_samplers::Integer\nmax_descriptor_set_update_after_bind_uniform_buffers::Integer\nmax_descriptor_set_update_after_bind_uniform_buffers_dynamic::Integer\nmax_descriptor_set_update_after_bind_storage_buffers::Integer\nmax_descriptor_set_update_after_bind_storage_buffers_dynamic::Integer\nmax_descriptor_set_update_after_bind_sampled_images::Integer\nmax_descriptor_set_update_after_bind_storage_images::Integer\nmax_descriptor_set_update_after_bind_input_attachments::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceDescriptorIndexingProperties(max_update_after_bind_descriptors_in_all_pools::Integer, shader_uniform_buffer_array_non_uniform_indexing_native::Bool, shader_sampled_image_array_non_uniform_indexing_native::Bool, shader_storage_buffer_array_non_uniform_indexing_native::Bool, shader_storage_image_array_non_uniform_indexing_native::Bool, shader_input_attachment_array_non_uniform_indexing_native::Bool, robust_buffer_access_update_after_bind::Bool, quad_divergent_implicit_lod::Bool, max_per_stage_descriptor_update_after_bind_samplers::Integer, max_per_stage_descriptor_update_after_bind_uniform_buffers::Integer, max_per_stage_descriptor_update_after_bind_storage_buffers::Integer, max_per_stage_descriptor_update_after_bind_sampled_images::Integer, max_per_stage_descriptor_update_after_bind_storage_images::Integer, max_per_stage_descriptor_update_after_bind_input_attachments::Integer, max_per_stage_update_after_bind_resources::Integer, max_descriptor_set_update_after_bind_samplers::Integer, max_descriptor_set_update_after_bind_uniform_buffers::Integer, max_descriptor_set_update_after_bind_uniform_buffers_dynamic::Integer, max_descriptor_set_update_after_bind_storage_buffers::Integer, max_descriptor_set_update_after_bind_storage_buffers_dynamic::Integer, max_descriptor_set_update_after_bind_sampled_images::Integer, max_descriptor_set_update_after_bind_storage_images::Integer, max_descriptor_set_update_after_bind_input_attachments::Integer; next) -> _PhysicalDeviceDescriptorIndexingProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceDeviceGeneratedCommandsFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceDeviceGeneratedCommandsFeaturesNV","text":"Intermediate wrapper for VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV.\n\nExtension: VKNVdevicegeneratedcommands\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV.html\n\nstruct _PhysicalDeviceDeviceGeneratedCommandsFeaturesNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceDeviceGeneratedCommandsFeaturesNV-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceDeviceGeneratedCommandsFeaturesNV","text":"_PhysicalDeviceDeviceGeneratedCommandsFeaturesNV(device_generated_commands::Bool; next = C_NULL)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ndevice_generated_commands::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceDeviceGeneratedCommandsFeaturesNV(device_generated_commands::Bool; next) -> _PhysicalDeviceDeviceGeneratedCommandsFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceDeviceGeneratedCommandsPropertiesNV","page":"API","title":"Vulkan._PhysicalDeviceDeviceGeneratedCommandsPropertiesNV","text":"Intermediate wrapper for VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV.\n\nExtension: VKNVdevicegeneratedcommands\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV.html\n\nstruct _PhysicalDeviceDeviceGeneratedCommandsPropertiesNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceDeviceGeneratedCommandsPropertiesNV-NTuple{9, Integer}","page":"API","title":"Vulkan._PhysicalDeviceDeviceGeneratedCommandsPropertiesNV","text":"_PhysicalDeviceDeviceGeneratedCommandsPropertiesNV(max_graphics_shader_group_count::Integer, max_indirect_sequence_count::Integer, max_indirect_commands_token_count::Integer, max_indirect_commands_stream_count::Integer, max_indirect_commands_token_offset::Integer, max_indirect_commands_stream_stride::Integer, min_sequences_count_buffer_offset_alignment::Integer, min_sequences_index_buffer_offset_alignment::Integer, min_indirect_commands_buffer_offset_alignment::Integer; next = C_NULL)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\nmax_graphics_shader_group_count::Integer\nmax_indirect_sequence_count::Integer\nmax_indirect_commands_token_count::Integer\nmax_indirect_commands_stream_count::Integer\nmax_indirect_commands_token_offset::Integer\nmax_indirect_commands_stream_stride::Integer\nmin_sequences_count_buffer_offset_alignment::Integer\nmin_sequences_index_buffer_offset_alignment::Integer\nmin_indirect_commands_buffer_offset_alignment::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceDeviceGeneratedCommandsPropertiesNV(max_graphics_shader_group_count::Integer, max_indirect_sequence_count::Integer, max_indirect_commands_token_count::Integer, max_indirect_commands_stream_count::Integer, max_indirect_commands_token_offset::Integer, max_indirect_commands_stream_stride::Integer, min_sequences_count_buffer_offset_alignment::Integer, min_sequences_index_buffer_offset_alignment::Integer, min_indirect_commands_buffer_offset_alignment::Integer; next) -> _PhysicalDeviceDeviceGeneratedCommandsPropertiesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceDeviceMemoryReportFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceDeviceMemoryReportFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceDeviceMemoryReportFeaturesEXT.\n\nExtension: VKEXTdevicememoryreport\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDeviceMemoryReportFeaturesEXT.html\n\nstruct _PhysicalDeviceDeviceMemoryReportFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceDeviceMemoryReportFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceDeviceMemoryReportFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceDeviceMemoryReportFeaturesEXT","text":"_PhysicalDeviceDeviceMemoryReportFeaturesEXT(device_memory_report::Bool; next = C_NULL)\n\nExtension: VK_EXT_device_memory_report\n\nArguments:\n\ndevice_memory_report::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceDeviceMemoryReportFeaturesEXT(device_memory_report::Bool; next) -> _PhysicalDeviceDeviceMemoryReportFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceDiagnosticsConfigFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceDiagnosticsConfigFeaturesNV","text":"Intermediate wrapper for VkPhysicalDeviceDiagnosticsConfigFeaturesNV.\n\nExtension: VKNVdevicediagnosticsconfig\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDiagnosticsConfigFeaturesNV.html\n\nstruct _PhysicalDeviceDiagnosticsConfigFeaturesNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceDiagnosticsConfigFeaturesNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceDiagnosticsConfigFeaturesNV-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceDiagnosticsConfigFeaturesNV","text":"_PhysicalDeviceDiagnosticsConfigFeaturesNV(diagnostics_config::Bool; next = C_NULL)\n\nExtension: VK_NV_device_diagnostics_config\n\nArguments:\n\ndiagnostics_config::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceDiagnosticsConfigFeaturesNV(diagnostics_config::Bool; next) -> _PhysicalDeviceDiagnosticsConfigFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceDiscardRectanglePropertiesEXT","page":"API","title":"Vulkan._PhysicalDeviceDiscardRectanglePropertiesEXT","text":"Intermediate wrapper for VkPhysicalDeviceDiscardRectanglePropertiesEXT.\n\nExtension: VKEXTdiscard_rectangles\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDiscardRectanglePropertiesEXT.html\n\nstruct _PhysicalDeviceDiscardRectanglePropertiesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceDiscardRectanglePropertiesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceDiscardRectanglePropertiesEXT-Tuple{Integer}","page":"API","title":"Vulkan._PhysicalDeviceDiscardRectanglePropertiesEXT","text":"_PhysicalDeviceDiscardRectanglePropertiesEXT(max_discard_rectangles::Integer; next = C_NULL)\n\nExtension: VK_EXT_discard_rectangles\n\nArguments:\n\nmax_discard_rectangles::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceDiscardRectanglePropertiesEXT(max_discard_rectangles::Integer; next) -> _PhysicalDeviceDiscardRectanglePropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceDriverProperties","page":"API","title":"Vulkan._PhysicalDeviceDriverProperties","text":"Intermediate wrapper for VkPhysicalDeviceDriverProperties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceDriverProperties.html\n\nstruct _PhysicalDeviceDriverProperties <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceDriverProperties\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceDriverProperties-Tuple{DriverId, AbstractString, AbstractString, _ConformanceVersion}","page":"API","title":"Vulkan._PhysicalDeviceDriverProperties","text":"_PhysicalDeviceDriverProperties(driver_id::DriverId, driver_name::AbstractString, driver_info::AbstractString, conformance_version::_ConformanceVersion; next = C_NULL)\n\nArguments:\n\ndriver_id::DriverId\ndriver_name::AbstractString\ndriver_info::AbstractString\nconformance_version::_ConformanceVersion\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceDriverProperties(driver_id::DriverId, driver_name::AbstractString, driver_info::AbstractString, conformance_version::_ConformanceVersion; next)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceExclusiveScissorFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceExclusiveScissorFeaturesNV","text":"Intermediate wrapper for VkPhysicalDeviceExclusiveScissorFeaturesNV.\n\nExtension: VKNVscissor_exclusive\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceExclusiveScissorFeaturesNV.html\n\nstruct _PhysicalDeviceExclusiveScissorFeaturesNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceExclusiveScissorFeaturesNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceExclusiveScissorFeaturesNV-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceExclusiveScissorFeaturesNV","text":"_PhysicalDeviceExclusiveScissorFeaturesNV(exclusive_scissor::Bool; next = C_NULL)\n\nExtension: VK_NV_scissor_exclusive\n\nArguments:\n\nexclusive_scissor::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceExclusiveScissorFeaturesNV(exclusive_scissor::Bool; next) -> _PhysicalDeviceExclusiveScissorFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceExtendedDynamicState2FeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceExtendedDynamicState2FeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceExtendedDynamicState2FeaturesEXT.\n\nExtension: VKEXTextendeddynamicstate2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceExtendedDynamicState2FeaturesEXT.html\n\nstruct _PhysicalDeviceExtendedDynamicState2FeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceExtendedDynamicState2FeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceExtendedDynamicState2FeaturesEXT-Tuple{Bool, Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceExtendedDynamicState2FeaturesEXT","text":"_PhysicalDeviceExtendedDynamicState2FeaturesEXT(extended_dynamic_state_2::Bool, extended_dynamic_state_2_logic_op::Bool, extended_dynamic_state_2_patch_control_points::Bool; next = C_NULL)\n\nExtension: VK_EXT_extended_dynamic_state2\n\nArguments:\n\nextended_dynamic_state_2::Bool\nextended_dynamic_state_2_logic_op::Bool\nextended_dynamic_state_2_patch_control_points::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceExtendedDynamicState2FeaturesEXT(extended_dynamic_state_2::Bool, extended_dynamic_state_2_logic_op::Bool, extended_dynamic_state_2_patch_control_points::Bool; next) -> _PhysicalDeviceExtendedDynamicState2FeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceExtendedDynamicStateFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceExtendedDynamicStateFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceExtendedDynamicStateFeaturesEXT.\n\nExtension: VKEXTextendeddynamicstate\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceExtendedDynamicStateFeaturesEXT.html\n\nstruct _PhysicalDeviceExtendedDynamicStateFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceExtendedDynamicStateFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceExtendedDynamicStateFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceExtendedDynamicStateFeaturesEXT","text":"_PhysicalDeviceExtendedDynamicStateFeaturesEXT(extended_dynamic_state::Bool; next = C_NULL)\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\nextended_dynamic_state::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceExtendedDynamicStateFeaturesEXT(extended_dynamic_state::Bool; next) -> _PhysicalDeviceExtendedDynamicStateFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceExternalBufferInfo","page":"API","title":"Vulkan._PhysicalDeviceExternalBufferInfo","text":"Intermediate wrapper for VkPhysicalDeviceExternalBufferInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceExternalBufferInfo.html\n\nstruct _PhysicalDeviceExternalBufferInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceExternalBufferInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceExternalBufferInfo-Tuple{BufferUsageFlag, ExternalMemoryHandleTypeFlag}","page":"API","title":"Vulkan._PhysicalDeviceExternalBufferInfo","text":"_PhysicalDeviceExternalBufferInfo(usage::BufferUsageFlag, handle_type::ExternalMemoryHandleTypeFlag; next = C_NULL, flags = 0)\n\nArguments:\n\nusage::BufferUsageFlag\nhandle_type::ExternalMemoryHandleTypeFlag\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_PhysicalDeviceExternalBufferInfo(usage::BufferUsageFlag, handle_type::ExternalMemoryHandleTypeFlag; next, flags) -> _PhysicalDeviceExternalBufferInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceExternalFenceInfo","page":"API","title":"Vulkan._PhysicalDeviceExternalFenceInfo","text":"Intermediate wrapper for VkPhysicalDeviceExternalFenceInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceExternalFenceInfo.html\n\nstruct _PhysicalDeviceExternalFenceInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceExternalFenceInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceExternalFenceInfo-Tuple{ExternalFenceHandleTypeFlag}","page":"API","title":"Vulkan._PhysicalDeviceExternalFenceInfo","text":"_PhysicalDeviceExternalFenceInfo(handle_type::ExternalFenceHandleTypeFlag; next = C_NULL)\n\nArguments:\n\nhandle_type::ExternalFenceHandleTypeFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceExternalFenceInfo(handle_type::ExternalFenceHandleTypeFlag; next) -> _PhysicalDeviceExternalFenceInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceExternalImageFormatInfo","page":"API","title":"Vulkan._PhysicalDeviceExternalImageFormatInfo","text":"Intermediate wrapper for VkPhysicalDeviceExternalImageFormatInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceExternalImageFormatInfo.html\n\nstruct _PhysicalDeviceExternalImageFormatInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceExternalImageFormatInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceExternalImageFormatInfo-Tuple{}","page":"API","title":"Vulkan._PhysicalDeviceExternalImageFormatInfo","text":"_PhysicalDeviceExternalImageFormatInfo(; next = C_NULL, handle_type = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nhandle_type: defaults to 0\n\nAPI documentation\n\n_PhysicalDeviceExternalImageFormatInfo(; next, handle_type)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceExternalMemoryHostPropertiesEXT","page":"API","title":"Vulkan._PhysicalDeviceExternalMemoryHostPropertiesEXT","text":"Intermediate wrapper for VkPhysicalDeviceExternalMemoryHostPropertiesEXT.\n\nExtension: VKEXTexternalmemoryhost\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceExternalMemoryHostPropertiesEXT.html\n\nstruct _PhysicalDeviceExternalMemoryHostPropertiesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceExternalMemoryHostPropertiesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceExternalMemoryHostPropertiesEXT-Tuple{Integer}","page":"API","title":"Vulkan._PhysicalDeviceExternalMemoryHostPropertiesEXT","text":"_PhysicalDeviceExternalMemoryHostPropertiesEXT(min_imported_host_pointer_alignment::Integer; next = C_NULL)\n\nExtension: VK_EXT_external_memory_host\n\nArguments:\n\nmin_imported_host_pointer_alignment::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceExternalMemoryHostPropertiesEXT(min_imported_host_pointer_alignment::Integer; next) -> _PhysicalDeviceExternalMemoryHostPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceExternalSemaphoreInfo","page":"API","title":"Vulkan._PhysicalDeviceExternalSemaphoreInfo","text":"Intermediate wrapper for VkPhysicalDeviceExternalSemaphoreInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceExternalSemaphoreInfo.html\n\nstruct _PhysicalDeviceExternalSemaphoreInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceExternalSemaphoreInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceExternalSemaphoreInfo-Tuple{ExternalSemaphoreHandleTypeFlag}","page":"API","title":"Vulkan._PhysicalDeviceExternalSemaphoreInfo","text":"_PhysicalDeviceExternalSemaphoreInfo(handle_type::ExternalSemaphoreHandleTypeFlag; next = C_NULL)\n\nArguments:\n\nhandle_type::ExternalSemaphoreHandleTypeFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceExternalSemaphoreInfo(handle_type::ExternalSemaphoreHandleTypeFlag; next) -> _PhysicalDeviceExternalSemaphoreInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceFeatures","page":"API","title":"Vulkan._PhysicalDeviceFeatures","text":"Intermediate wrapper for VkPhysicalDeviceFeatures.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFeatures.html\n\nstruct _PhysicalDeviceFeatures <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceFeatures\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceFeatures-NTuple{55, Bool}","page":"API","title":"Vulkan._PhysicalDeviceFeatures","text":"_PhysicalDeviceFeatures(robust_buffer_access::Bool, full_draw_index_uint_32::Bool, image_cube_array::Bool, independent_blend::Bool, geometry_shader::Bool, tessellation_shader::Bool, sample_rate_shading::Bool, dual_src_blend::Bool, logic_op::Bool, multi_draw_indirect::Bool, draw_indirect_first_instance::Bool, depth_clamp::Bool, depth_bias_clamp::Bool, fill_mode_non_solid::Bool, depth_bounds::Bool, wide_lines::Bool, large_points::Bool, alpha_to_one::Bool, multi_viewport::Bool, sampler_anisotropy::Bool, texture_compression_etc_2::Bool, texture_compression_astc_ldr::Bool, texture_compression_bc::Bool, occlusion_query_precise::Bool, pipeline_statistics_query::Bool, vertex_pipeline_stores_and_atomics::Bool, fragment_stores_and_atomics::Bool, shader_tessellation_and_geometry_point_size::Bool, shader_image_gather_extended::Bool, shader_storage_image_extended_formats::Bool, shader_storage_image_multisample::Bool, shader_storage_image_read_without_format::Bool, shader_storage_image_write_without_format::Bool, shader_uniform_buffer_array_dynamic_indexing::Bool, shader_sampled_image_array_dynamic_indexing::Bool, shader_storage_buffer_array_dynamic_indexing::Bool, shader_storage_image_array_dynamic_indexing::Bool, shader_clip_distance::Bool, shader_cull_distance::Bool, shader_float_64::Bool, shader_int_64::Bool, shader_int_16::Bool, shader_resource_residency::Bool, shader_resource_min_lod::Bool, sparse_binding::Bool, sparse_residency_buffer::Bool, sparse_residency_image_2_d::Bool, sparse_residency_image_3_d::Bool, sparse_residency_2_samples::Bool, sparse_residency_4_samples::Bool, sparse_residency_8_samples::Bool, sparse_residency_16_samples::Bool, sparse_residency_aliased::Bool, variable_multisample_rate::Bool, inherited_queries::Bool)\n\nArguments:\n\nrobust_buffer_access::Bool\nfull_draw_index_uint_32::Bool\nimage_cube_array::Bool\nindependent_blend::Bool\ngeometry_shader::Bool\ntessellation_shader::Bool\nsample_rate_shading::Bool\ndual_src_blend::Bool\nlogic_op::Bool\nmulti_draw_indirect::Bool\ndraw_indirect_first_instance::Bool\ndepth_clamp::Bool\ndepth_bias_clamp::Bool\nfill_mode_non_solid::Bool\ndepth_bounds::Bool\nwide_lines::Bool\nlarge_points::Bool\nalpha_to_one::Bool\nmulti_viewport::Bool\nsampler_anisotropy::Bool\ntexture_compression_etc_2::Bool\ntexture_compression_astc_ldr::Bool\ntexture_compression_bc::Bool\nocclusion_query_precise::Bool\npipeline_statistics_query::Bool\nvertex_pipeline_stores_and_atomics::Bool\nfragment_stores_and_atomics::Bool\nshader_tessellation_and_geometry_point_size::Bool\nshader_image_gather_extended::Bool\nshader_storage_image_extended_formats::Bool\nshader_storage_image_multisample::Bool\nshader_storage_image_read_without_format::Bool\nshader_storage_image_write_without_format::Bool\nshader_uniform_buffer_array_dynamic_indexing::Bool\nshader_sampled_image_array_dynamic_indexing::Bool\nshader_storage_buffer_array_dynamic_indexing::Bool\nshader_storage_image_array_dynamic_indexing::Bool\nshader_clip_distance::Bool\nshader_cull_distance::Bool\nshader_float_64::Bool\nshader_int_64::Bool\nshader_int_16::Bool\nshader_resource_residency::Bool\nshader_resource_min_lod::Bool\nsparse_binding::Bool\nsparse_residency_buffer::Bool\nsparse_residency_image_2_d::Bool\nsparse_residency_image_3_d::Bool\nsparse_residency_2_samples::Bool\nsparse_residency_4_samples::Bool\nsparse_residency_8_samples::Bool\nsparse_residency_16_samples::Bool\nsparse_residency_aliased::Bool\nvariable_multisample_rate::Bool\ninherited_queries::Bool\n\nAPI documentation\n\n_PhysicalDeviceFeatures(robust_buffer_access::Bool, full_draw_index_uint_32::Bool, image_cube_array::Bool, independent_blend::Bool, geometry_shader::Bool, tessellation_shader::Bool, sample_rate_shading::Bool, dual_src_blend::Bool, logic_op::Bool, multi_draw_indirect::Bool, draw_indirect_first_instance::Bool, depth_clamp::Bool, depth_bias_clamp::Bool, fill_mode_non_solid::Bool, depth_bounds::Bool, wide_lines::Bool, large_points::Bool, alpha_to_one::Bool, multi_viewport::Bool, sampler_anisotropy::Bool, texture_compression_etc_2::Bool, texture_compression_astc_ldr::Bool, texture_compression_bc::Bool, occlusion_query_precise::Bool, pipeline_statistics_query::Bool, vertex_pipeline_stores_and_atomics::Bool, fragment_stores_and_atomics::Bool, shader_tessellation_and_geometry_point_size::Bool, shader_image_gather_extended::Bool, shader_storage_image_extended_formats::Bool, shader_storage_image_multisample::Bool, shader_storage_image_read_without_format::Bool, shader_storage_image_write_without_format::Bool, shader_uniform_buffer_array_dynamic_indexing::Bool, shader_sampled_image_array_dynamic_indexing::Bool, shader_storage_buffer_array_dynamic_indexing::Bool, shader_storage_image_array_dynamic_indexing::Bool, shader_clip_distance::Bool, shader_cull_distance::Bool, shader_float_64::Bool, shader_int_64::Bool, shader_int_16::Bool, shader_resource_residency::Bool, shader_resource_min_lod::Bool, sparse_binding::Bool, sparse_residency_buffer::Bool, sparse_residency_image_2_d::Bool, sparse_residency_image_3_d::Bool, sparse_residency_2_samples::Bool, sparse_residency_4_samples::Bool, sparse_residency_8_samples::Bool, sparse_residency_16_samples::Bool, sparse_residency_aliased::Bool, variable_multisample_rate::Bool, inherited_queries::Bool) -> _PhysicalDeviceFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceFeatures2","page":"API","title":"Vulkan._PhysicalDeviceFeatures2","text":"Intermediate wrapper for VkPhysicalDeviceFeatures2.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFeatures2.html\n\nstruct _PhysicalDeviceFeatures2 <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceFeatures2\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceFeatures2-Tuple{_PhysicalDeviceFeatures}","page":"API","title":"Vulkan._PhysicalDeviceFeatures2","text":"_PhysicalDeviceFeatures2(features::_PhysicalDeviceFeatures; next = C_NULL)\n\nArguments:\n\nfeatures::_PhysicalDeviceFeatures\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceFeatures2(features::_PhysicalDeviceFeatures; next) -> _PhysicalDeviceFeatures2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceFloatControlsProperties","page":"API","title":"Vulkan._PhysicalDeviceFloatControlsProperties","text":"Intermediate wrapper for VkPhysicalDeviceFloatControlsProperties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFloatControlsProperties.html\n\nstruct _PhysicalDeviceFloatControlsProperties <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceFloatControlsProperties\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceFloatControlsProperties-Tuple{ShaderFloatControlsIndependence, ShaderFloatControlsIndependence, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceFloatControlsProperties","text":"_PhysicalDeviceFloatControlsProperties(denorm_behavior_independence::ShaderFloatControlsIndependence, rounding_mode_independence::ShaderFloatControlsIndependence, shader_signed_zero_inf_nan_preserve_float_16::Bool, shader_signed_zero_inf_nan_preserve_float_32::Bool, shader_signed_zero_inf_nan_preserve_float_64::Bool, shader_denorm_preserve_float_16::Bool, shader_denorm_preserve_float_32::Bool, shader_denorm_preserve_float_64::Bool, shader_denorm_flush_to_zero_float_16::Bool, shader_denorm_flush_to_zero_float_32::Bool, shader_denorm_flush_to_zero_float_64::Bool, shader_rounding_mode_rte_float_16::Bool, shader_rounding_mode_rte_float_32::Bool, shader_rounding_mode_rte_float_64::Bool, shader_rounding_mode_rtz_float_16::Bool, shader_rounding_mode_rtz_float_32::Bool, shader_rounding_mode_rtz_float_64::Bool; next = C_NULL)\n\nArguments:\n\ndenorm_behavior_independence::ShaderFloatControlsIndependence\nrounding_mode_independence::ShaderFloatControlsIndependence\nshader_signed_zero_inf_nan_preserve_float_16::Bool\nshader_signed_zero_inf_nan_preserve_float_32::Bool\nshader_signed_zero_inf_nan_preserve_float_64::Bool\nshader_denorm_preserve_float_16::Bool\nshader_denorm_preserve_float_32::Bool\nshader_denorm_preserve_float_64::Bool\nshader_denorm_flush_to_zero_float_16::Bool\nshader_denorm_flush_to_zero_float_32::Bool\nshader_denorm_flush_to_zero_float_64::Bool\nshader_rounding_mode_rte_float_16::Bool\nshader_rounding_mode_rte_float_32::Bool\nshader_rounding_mode_rte_float_64::Bool\nshader_rounding_mode_rtz_float_16::Bool\nshader_rounding_mode_rtz_float_32::Bool\nshader_rounding_mode_rtz_float_64::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceFloatControlsProperties(denorm_behavior_independence::ShaderFloatControlsIndependence, rounding_mode_independence::ShaderFloatControlsIndependence, shader_signed_zero_inf_nan_preserve_float_16::Bool, shader_signed_zero_inf_nan_preserve_float_32::Bool, shader_signed_zero_inf_nan_preserve_float_64::Bool, shader_denorm_preserve_float_16::Bool, shader_denorm_preserve_float_32::Bool, shader_denorm_preserve_float_64::Bool, shader_denorm_flush_to_zero_float_16::Bool, shader_denorm_flush_to_zero_float_32::Bool, shader_denorm_flush_to_zero_float_64::Bool, shader_rounding_mode_rte_float_16::Bool, shader_rounding_mode_rte_float_32::Bool, shader_rounding_mode_rte_float_64::Bool, shader_rounding_mode_rtz_float_16::Bool, shader_rounding_mode_rtz_float_32::Bool, shader_rounding_mode_rtz_float_64::Bool; next) -> _PhysicalDeviceFloatControlsProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceFragmentDensityMap2FeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceFragmentDensityMap2FeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceFragmentDensityMap2FeaturesEXT.\n\nExtension: VKEXTfragmentdensitymap2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFragmentDensityMap2FeaturesEXT.html\n\nstruct _PhysicalDeviceFragmentDensityMap2FeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceFragmentDensityMap2FeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceFragmentDensityMap2FeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceFragmentDensityMap2FeaturesEXT","text":"_PhysicalDeviceFragmentDensityMap2FeaturesEXT(fragment_density_map_deferred::Bool; next = C_NULL)\n\nExtension: VK_EXT_fragment_density_map2\n\nArguments:\n\nfragment_density_map_deferred::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceFragmentDensityMap2FeaturesEXT(fragment_density_map_deferred::Bool; next) -> _PhysicalDeviceFragmentDensityMap2FeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceFragmentDensityMap2PropertiesEXT","page":"API","title":"Vulkan._PhysicalDeviceFragmentDensityMap2PropertiesEXT","text":"Intermediate wrapper for VkPhysicalDeviceFragmentDensityMap2PropertiesEXT.\n\nExtension: VKEXTfragmentdensitymap2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFragmentDensityMap2PropertiesEXT.html\n\nstruct _PhysicalDeviceFragmentDensityMap2PropertiesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceFragmentDensityMap2PropertiesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceFragmentDensityMap2PropertiesEXT-Tuple{Bool, Bool, Integer, Integer}","page":"API","title":"Vulkan._PhysicalDeviceFragmentDensityMap2PropertiesEXT","text":"_PhysicalDeviceFragmentDensityMap2PropertiesEXT(subsampled_loads::Bool, subsampled_coarse_reconstruction_early_access::Bool, max_subsampled_array_layers::Integer, max_descriptor_set_subsampled_samplers::Integer; next = C_NULL)\n\nExtension: VK_EXT_fragment_density_map2\n\nArguments:\n\nsubsampled_loads::Bool\nsubsampled_coarse_reconstruction_early_access::Bool\nmax_subsampled_array_layers::Integer\nmax_descriptor_set_subsampled_samplers::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceFragmentDensityMap2PropertiesEXT(subsampled_loads::Bool, subsampled_coarse_reconstruction_early_access::Bool, max_subsampled_array_layers::Integer, max_descriptor_set_subsampled_samplers::Integer; next) -> _PhysicalDeviceFragmentDensityMap2PropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceFragmentDensityMapFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceFragmentDensityMapFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceFragmentDensityMapFeaturesEXT.\n\nExtension: VKEXTfragmentdensitymap\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFragmentDensityMapFeaturesEXT.html\n\nstruct _PhysicalDeviceFragmentDensityMapFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceFragmentDensityMapFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceFragmentDensityMapFeaturesEXT-Tuple{Bool, Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceFragmentDensityMapFeaturesEXT","text":"_PhysicalDeviceFragmentDensityMapFeaturesEXT(fragment_density_map::Bool, fragment_density_map_dynamic::Bool, fragment_density_map_non_subsampled_images::Bool; next = C_NULL)\n\nExtension: VK_EXT_fragment_density_map\n\nArguments:\n\nfragment_density_map::Bool\nfragment_density_map_dynamic::Bool\nfragment_density_map_non_subsampled_images::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceFragmentDensityMapFeaturesEXT(fragment_density_map::Bool, fragment_density_map_dynamic::Bool, fragment_density_map_non_subsampled_images::Bool; next) -> _PhysicalDeviceFragmentDensityMapFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceFragmentDensityMapPropertiesEXT","page":"API","title":"Vulkan._PhysicalDeviceFragmentDensityMapPropertiesEXT","text":"Intermediate wrapper for VkPhysicalDeviceFragmentDensityMapPropertiesEXT.\n\nExtension: VKEXTfragmentdensitymap\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFragmentDensityMapPropertiesEXT.html\n\nstruct _PhysicalDeviceFragmentDensityMapPropertiesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceFragmentDensityMapPropertiesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceFragmentDensityMapPropertiesEXT-Tuple{_Extent2D, _Extent2D, Bool}","page":"API","title":"Vulkan._PhysicalDeviceFragmentDensityMapPropertiesEXT","text":"_PhysicalDeviceFragmentDensityMapPropertiesEXT(min_fragment_density_texel_size::_Extent2D, max_fragment_density_texel_size::_Extent2D, fragment_density_invocations::Bool; next = C_NULL)\n\nExtension: VK_EXT_fragment_density_map\n\nArguments:\n\nmin_fragment_density_texel_size::_Extent2D\nmax_fragment_density_texel_size::_Extent2D\nfragment_density_invocations::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceFragmentDensityMapPropertiesEXT(min_fragment_density_texel_size::_Extent2D, max_fragment_density_texel_size::_Extent2D, fragment_density_invocations::Bool; next) -> _PhysicalDeviceFragmentDensityMapPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceFragmentShaderBarycentricFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceFragmentShaderBarycentricFeaturesNV","text":"Intermediate wrapper for VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV.\n\nExtension: VKNVfragmentshaderbarycentric\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV.html\n\nstruct _PhysicalDeviceFragmentShaderBarycentricFeaturesNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceFragmentShaderBarycentricFeaturesNV-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceFragmentShaderBarycentricFeaturesNV","text":"_PhysicalDeviceFragmentShaderBarycentricFeaturesNV(fragment_shader_barycentric::Bool; next = C_NULL)\n\nExtension: VK_NV_fragment_shader_barycentric\n\nArguments:\n\nfragment_shader_barycentric::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceFragmentShaderBarycentricFeaturesNV(fragment_shader_barycentric::Bool; next) -> _PhysicalDeviceFragmentShaderBarycentricFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceFragmentShaderInterlockFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceFragmentShaderInterlockFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT.\n\nExtension: VKEXTfragmentshaderinterlock\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT.html\n\nstruct _PhysicalDeviceFragmentShaderInterlockFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceFragmentShaderInterlockFeaturesEXT-Tuple{Bool, Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceFragmentShaderInterlockFeaturesEXT","text":"_PhysicalDeviceFragmentShaderInterlockFeaturesEXT(fragment_shader_sample_interlock::Bool, fragment_shader_pixel_interlock::Bool, fragment_shader_shading_rate_interlock::Bool; next = C_NULL)\n\nExtension: VK_EXT_fragment_shader_interlock\n\nArguments:\n\nfragment_shader_sample_interlock::Bool\nfragment_shader_pixel_interlock::Bool\nfragment_shader_shading_rate_interlock::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceFragmentShaderInterlockFeaturesEXT(fragment_shader_sample_interlock::Bool, fragment_shader_pixel_interlock::Bool, fragment_shader_shading_rate_interlock::Bool; next) -> _PhysicalDeviceFragmentShaderInterlockFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceFragmentShadingRateEnumsFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceFragmentShadingRateEnumsFeaturesNV","text":"Intermediate wrapper for VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV.\n\nExtension: VKNVfragmentshadingrate_enums\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV.html\n\nstruct _PhysicalDeviceFragmentShadingRateEnumsFeaturesNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceFragmentShadingRateEnumsFeaturesNV-Tuple{Bool, Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceFragmentShadingRateEnumsFeaturesNV","text":"_PhysicalDeviceFragmentShadingRateEnumsFeaturesNV(fragment_shading_rate_enums::Bool, supersample_fragment_shading_rates::Bool, no_invocation_fragment_shading_rates::Bool; next = C_NULL)\n\nExtension: VK_NV_fragment_shading_rate_enums\n\nArguments:\n\nfragment_shading_rate_enums::Bool\nsupersample_fragment_shading_rates::Bool\nno_invocation_fragment_shading_rates::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceFragmentShadingRateEnumsFeaturesNV(fragment_shading_rate_enums::Bool, supersample_fragment_shading_rates::Bool, no_invocation_fragment_shading_rates::Bool; next) -> _PhysicalDeviceFragmentShadingRateEnumsFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceFragmentShadingRateEnumsPropertiesNV","page":"API","title":"Vulkan._PhysicalDeviceFragmentShadingRateEnumsPropertiesNV","text":"Intermediate wrapper for VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV.\n\nExtension: VKNVfragmentshadingrate_enums\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV.html\n\nstruct _PhysicalDeviceFragmentShadingRateEnumsPropertiesNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceFragmentShadingRateEnumsPropertiesNV-Tuple{SampleCountFlag}","page":"API","title":"Vulkan._PhysicalDeviceFragmentShadingRateEnumsPropertiesNV","text":"_PhysicalDeviceFragmentShadingRateEnumsPropertiesNV(max_fragment_shading_rate_invocation_count::SampleCountFlag; next = C_NULL)\n\nExtension: VK_NV_fragment_shading_rate_enums\n\nArguments:\n\nmax_fragment_shading_rate_invocation_count::SampleCountFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceFragmentShadingRateEnumsPropertiesNV(max_fragment_shading_rate_invocation_count::SampleCountFlag; next) -> _PhysicalDeviceFragmentShadingRateEnumsPropertiesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceFragmentShadingRateFeaturesKHR","page":"API","title":"Vulkan._PhysicalDeviceFragmentShadingRateFeaturesKHR","text":"Intermediate wrapper for VkPhysicalDeviceFragmentShadingRateFeaturesKHR.\n\nExtension: VKKHRfragmentshadingrate\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFragmentShadingRateFeaturesKHR.html\n\nstruct _PhysicalDeviceFragmentShadingRateFeaturesKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceFragmentShadingRateFeaturesKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceFragmentShadingRateFeaturesKHR-Tuple{Bool, Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceFragmentShadingRateFeaturesKHR","text":"_PhysicalDeviceFragmentShadingRateFeaturesKHR(pipeline_fragment_shading_rate::Bool, primitive_fragment_shading_rate::Bool, attachment_fragment_shading_rate::Bool; next = C_NULL)\n\nExtension: VK_KHR_fragment_shading_rate\n\nArguments:\n\npipeline_fragment_shading_rate::Bool\nprimitive_fragment_shading_rate::Bool\nattachment_fragment_shading_rate::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceFragmentShadingRateFeaturesKHR(pipeline_fragment_shading_rate::Bool, primitive_fragment_shading_rate::Bool, attachment_fragment_shading_rate::Bool; next) -> _PhysicalDeviceFragmentShadingRateFeaturesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceFragmentShadingRateKHR","page":"API","title":"Vulkan._PhysicalDeviceFragmentShadingRateKHR","text":"Intermediate wrapper for VkPhysicalDeviceFragmentShadingRateKHR.\n\nExtension: VKKHRfragmentshadingrate\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFragmentShadingRateKHR.html\n\nstruct _PhysicalDeviceFragmentShadingRateKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceFragmentShadingRateKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceFragmentShadingRateKHR-Tuple{SampleCountFlag, _Extent2D}","page":"API","title":"Vulkan._PhysicalDeviceFragmentShadingRateKHR","text":"_PhysicalDeviceFragmentShadingRateKHR(sample_counts::SampleCountFlag, fragment_size::_Extent2D; next = C_NULL)\n\nExtension: VK_KHR_fragment_shading_rate\n\nArguments:\n\nsample_counts::SampleCountFlag\nfragment_size::_Extent2D\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceFragmentShadingRateKHR(sample_counts::SampleCountFlag, fragment_size::_Extent2D; next) -> _PhysicalDeviceFragmentShadingRateKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceFragmentShadingRatePropertiesKHR","page":"API","title":"Vulkan._PhysicalDeviceFragmentShadingRatePropertiesKHR","text":"Intermediate wrapper for VkPhysicalDeviceFragmentShadingRatePropertiesKHR.\n\nExtension: VKKHRfragmentshadingrate\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceFragmentShadingRatePropertiesKHR.html\n\nstruct _PhysicalDeviceFragmentShadingRatePropertiesKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceFragmentShadingRatePropertiesKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceFragmentShadingRatePropertiesKHR-Tuple{_Extent2D, _Extent2D, Integer, Bool, Bool, Bool, _Extent2D, Integer, Integer, SampleCountFlag, Bool, Bool, Bool, Bool, Bool, Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceFragmentShadingRatePropertiesKHR","text":"_PhysicalDeviceFragmentShadingRatePropertiesKHR(min_fragment_shading_rate_attachment_texel_size::_Extent2D, max_fragment_shading_rate_attachment_texel_size::_Extent2D, max_fragment_shading_rate_attachment_texel_size_aspect_ratio::Integer, primitive_fragment_shading_rate_with_multiple_viewports::Bool, layered_shading_rate_attachments::Bool, fragment_shading_rate_non_trivial_combiner_ops::Bool, max_fragment_size::_Extent2D, max_fragment_size_aspect_ratio::Integer, max_fragment_shading_rate_coverage_samples::Integer, max_fragment_shading_rate_rasterization_samples::SampleCountFlag, fragment_shading_rate_with_shader_depth_stencil_writes::Bool, fragment_shading_rate_with_sample_mask::Bool, fragment_shading_rate_with_shader_sample_mask::Bool, fragment_shading_rate_with_conservative_rasterization::Bool, fragment_shading_rate_with_fragment_shader_interlock::Bool, fragment_shading_rate_with_custom_sample_locations::Bool, fragment_shading_rate_strict_multiply_combiner::Bool; next = C_NULL)\n\nExtension: VK_KHR_fragment_shading_rate\n\nArguments:\n\nmin_fragment_shading_rate_attachment_texel_size::_Extent2D\nmax_fragment_shading_rate_attachment_texel_size::_Extent2D\nmax_fragment_shading_rate_attachment_texel_size_aspect_ratio::Integer\nprimitive_fragment_shading_rate_with_multiple_viewports::Bool\nlayered_shading_rate_attachments::Bool\nfragment_shading_rate_non_trivial_combiner_ops::Bool\nmax_fragment_size::_Extent2D\nmax_fragment_size_aspect_ratio::Integer\nmax_fragment_shading_rate_coverage_samples::Integer\nmax_fragment_shading_rate_rasterization_samples::SampleCountFlag\nfragment_shading_rate_with_shader_depth_stencil_writes::Bool\nfragment_shading_rate_with_sample_mask::Bool\nfragment_shading_rate_with_shader_sample_mask::Bool\nfragment_shading_rate_with_conservative_rasterization::Bool\nfragment_shading_rate_with_fragment_shader_interlock::Bool\nfragment_shading_rate_with_custom_sample_locations::Bool\nfragment_shading_rate_strict_multiply_combiner::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceFragmentShadingRatePropertiesKHR(min_fragment_shading_rate_attachment_texel_size::_Extent2D, max_fragment_shading_rate_attachment_texel_size::_Extent2D, max_fragment_shading_rate_attachment_texel_size_aspect_ratio::Integer, primitive_fragment_shading_rate_with_multiple_viewports::Bool, layered_shading_rate_attachments::Bool, fragment_shading_rate_non_trivial_combiner_ops::Bool, max_fragment_size::_Extent2D, max_fragment_size_aspect_ratio::Integer, max_fragment_shading_rate_coverage_samples::Integer, max_fragment_shading_rate_rasterization_samples::SampleCountFlag, fragment_shading_rate_with_shader_depth_stencil_writes::Bool, fragment_shading_rate_with_sample_mask::Bool, fragment_shading_rate_with_shader_sample_mask::Bool, fragment_shading_rate_with_conservative_rasterization::Bool, fragment_shading_rate_with_fragment_shader_interlock::Bool, fragment_shading_rate_with_custom_sample_locations::Bool, fragment_shading_rate_strict_multiply_combiner::Bool; next) -> _PhysicalDeviceFragmentShadingRatePropertiesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceGroupProperties","page":"API","title":"Vulkan._PhysicalDeviceGroupProperties","text":"Intermediate wrapper for VkPhysicalDeviceGroupProperties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceGroupProperties.html\n\nstruct _PhysicalDeviceGroupProperties <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceGroupProperties\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceGroupProperties-Tuple{Integer, NTuple{32, PhysicalDevice}, Bool}","page":"API","title":"Vulkan._PhysicalDeviceGroupProperties","text":"_PhysicalDeviceGroupProperties(physical_device_count::Integer, physical_devices::NTuple{Int(VK_MAX_DEVICE_GROUP_SIZE), PhysicalDevice}, subset_allocation::Bool; next = C_NULL)\n\nArguments:\n\nphysical_device_count::Integer\nphysical_devices::NTuple{Int(VK_MAX_DEVICE_GROUP_SIZE), PhysicalDevice}\nsubset_allocation::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceGroupProperties(physical_device_count::Integer, physical_devices::NTuple{32, PhysicalDevice}, subset_allocation::Bool; next) -> _PhysicalDeviceGroupProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceHostQueryResetFeatures","page":"API","title":"Vulkan._PhysicalDeviceHostQueryResetFeatures","text":"Intermediate wrapper for VkPhysicalDeviceHostQueryResetFeatures.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceHostQueryResetFeatures.html\n\nstruct _PhysicalDeviceHostQueryResetFeatures <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceHostQueryResetFeatures\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceHostQueryResetFeatures-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceHostQueryResetFeatures","text":"_PhysicalDeviceHostQueryResetFeatures(host_query_reset::Bool; next = C_NULL)\n\nArguments:\n\nhost_query_reset::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceHostQueryResetFeatures(host_query_reset::Bool; next) -> _PhysicalDeviceHostQueryResetFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceIDProperties","page":"API","title":"Vulkan._PhysicalDeviceIDProperties","text":"Intermediate wrapper for VkPhysicalDeviceIDProperties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceIDProperties.html\n\nstruct _PhysicalDeviceIDProperties <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceIDProperties\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceIDProperties-Tuple{NTuple{16, UInt8}, NTuple{16, UInt8}, NTuple{8, UInt8}, Integer, Bool}","page":"API","title":"Vulkan._PhysicalDeviceIDProperties","text":"_PhysicalDeviceIDProperties(device_uuid::NTuple{Int(VK_UUID_SIZE), UInt8}, driver_uuid::NTuple{Int(VK_UUID_SIZE), UInt8}, device_luid::NTuple{Int(VK_LUID_SIZE), UInt8}, device_node_mask::Integer, device_luid_valid::Bool; next = C_NULL)\n\nArguments:\n\ndevice_uuid::NTuple{Int(VK_UUID_SIZE), UInt8}\ndriver_uuid::NTuple{Int(VK_UUID_SIZE), UInt8}\ndevice_luid::NTuple{Int(VK_LUID_SIZE), UInt8}\ndevice_node_mask::Integer\ndevice_luid_valid::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceIDProperties(device_uuid::NTuple{16, UInt8}, driver_uuid::NTuple{16, UInt8}, device_luid::NTuple{8, UInt8}, device_node_mask::Integer, device_luid_valid::Bool; next) -> _PhysicalDeviceIDProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceImageDrmFormatModifierInfoEXT","page":"API","title":"Vulkan._PhysicalDeviceImageDrmFormatModifierInfoEXT","text":"Intermediate wrapper for VkPhysicalDeviceImageDrmFormatModifierInfoEXT.\n\nExtension: VKEXTimagedrmformat_modifier\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceImageDrmFormatModifierInfoEXT.html\n\nstruct _PhysicalDeviceImageDrmFormatModifierInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceImageDrmFormatModifierInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceImageDrmFormatModifierInfoEXT-Tuple{Integer, SharingMode, AbstractArray}","page":"API","title":"Vulkan._PhysicalDeviceImageDrmFormatModifierInfoEXT","text":"_PhysicalDeviceImageDrmFormatModifierInfoEXT(drm_format_modifier::Integer, sharing_mode::SharingMode, queue_family_indices::AbstractArray{<:Integer}; next = C_NULL)\n\nExtension: VK_EXT_image_drm_format_modifier\n\nArguments:\n\ndrm_format_modifier::Integer\nsharing_mode::SharingMode\nqueue_family_indices::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceImageDrmFormatModifierInfoEXT(drm_format_modifier::Integer, sharing_mode::SharingMode, queue_family_indices::AbstractArray; next) -> _PhysicalDeviceImageDrmFormatModifierInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceImageFormatInfo2","page":"API","title":"Vulkan._PhysicalDeviceImageFormatInfo2","text":"Intermediate wrapper for VkPhysicalDeviceImageFormatInfo2.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceImageFormatInfo2.html\n\nstruct _PhysicalDeviceImageFormatInfo2 <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceImageFormatInfo2\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceImageFormatInfo2-Tuple{Format, ImageType, ImageTiling, ImageUsageFlag}","page":"API","title":"Vulkan._PhysicalDeviceImageFormatInfo2","text":"_PhysicalDeviceImageFormatInfo2(format::Format, type::ImageType, tiling::ImageTiling, usage::ImageUsageFlag; next = C_NULL, flags = 0)\n\nArguments:\n\nformat::Format\ntype::ImageType\ntiling::ImageTiling\nusage::ImageUsageFlag\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_PhysicalDeviceImageFormatInfo2(format::Format, type::ImageType, tiling::ImageTiling, usage::ImageUsageFlag; next, flags) -> _PhysicalDeviceImageFormatInfo2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceImageRobustnessFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceImageRobustnessFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceImageRobustnessFeaturesEXT.\n\nExtension: VKEXTimage_robustness\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceImageRobustnessFeaturesEXT.html\n\nstruct _PhysicalDeviceImageRobustnessFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceImageRobustnessFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceImageRobustnessFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceImageRobustnessFeaturesEXT","text":"_PhysicalDeviceImageRobustnessFeaturesEXT(robust_image_access::Bool; next = C_NULL)\n\nExtension: VK_EXT_image_robustness\n\nArguments:\n\nrobust_image_access::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceImageRobustnessFeaturesEXT(robust_image_access::Bool; next) -> _PhysicalDeviceImageRobustnessFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceImageViewImageFormatInfoEXT","page":"API","title":"Vulkan._PhysicalDeviceImageViewImageFormatInfoEXT","text":"Intermediate wrapper for VkPhysicalDeviceImageViewImageFormatInfoEXT.\n\nExtension: VKEXTfilter_cubic\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceImageViewImageFormatInfoEXT.html\n\nstruct _PhysicalDeviceImageViewImageFormatInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceImageViewImageFormatInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceImageViewImageFormatInfoEXT-Tuple{ImageViewType}","page":"API","title":"Vulkan._PhysicalDeviceImageViewImageFormatInfoEXT","text":"_PhysicalDeviceImageViewImageFormatInfoEXT(image_view_type::ImageViewType; next = C_NULL)\n\nExtension: VK_EXT_filter_cubic\n\nArguments:\n\nimage_view_type::ImageViewType\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceImageViewImageFormatInfoEXT(image_view_type::ImageViewType; next) -> _PhysicalDeviceImageViewImageFormatInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceImagelessFramebufferFeatures","page":"API","title":"Vulkan._PhysicalDeviceImagelessFramebufferFeatures","text":"Intermediate wrapper for VkPhysicalDeviceImagelessFramebufferFeatures.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceImagelessFramebufferFeatures.html\n\nstruct _PhysicalDeviceImagelessFramebufferFeatures <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceImagelessFramebufferFeatures\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceImagelessFramebufferFeatures-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceImagelessFramebufferFeatures","text":"_PhysicalDeviceImagelessFramebufferFeatures(imageless_framebuffer::Bool; next = C_NULL)\n\nArguments:\n\nimageless_framebuffer::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceImagelessFramebufferFeatures(imageless_framebuffer::Bool; next) -> _PhysicalDeviceImagelessFramebufferFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceIndexTypeUint8FeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceIndexTypeUint8FeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceIndexTypeUint8FeaturesEXT.\n\nExtension: VKEXTindextypeuint8\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceIndexTypeUint8FeaturesEXT.html\n\nstruct _PhysicalDeviceIndexTypeUint8FeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceIndexTypeUint8FeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceIndexTypeUint8FeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceIndexTypeUint8FeaturesEXT","text":"_PhysicalDeviceIndexTypeUint8FeaturesEXT(index_type_uint_8::Bool; next = C_NULL)\n\nExtension: VK_EXT_index_type_uint8\n\nArguments:\n\nindex_type_uint_8::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceIndexTypeUint8FeaturesEXT(index_type_uint_8::Bool; next) -> _PhysicalDeviceIndexTypeUint8FeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceInheritedViewportScissorFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceInheritedViewportScissorFeaturesNV","text":"Intermediate wrapper for VkPhysicalDeviceInheritedViewportScissorFeaturesNV.\n\nExtension: VKNVinheritedviewportscissor\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceInheritedViewportScissorFeaturesNV.html\n\nstruct _PhysicalDeviceInheritedViewportScissorFeaturesNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceInheritedViewportScissorFeaturesNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceInheritedViewportScissorFeaturesNV-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceInheritedViewportScissorFeaturesNV","text":"_PhysicalDeviceInheritedViewportScissorFeaturesNV(inherited_viewport_scissor_2_d::Bool; next = C_NULL)\n\nExtension: VK_NV_inherited_viewport_scissor\n\nArguments:\n\ninherited_viewport_scissor_2_d::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceInheritedViewportScissorFeaturesNV(inherited_viewport_scissor_2_d::Bool; next) -> _PhysicalDeviceInheritedViewportScissorFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceInlineUniformBlockFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceInlineUniformBlockFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceInlineUniformBlockFeaturesEXT.\n\nExtension: VKEXTinlineuniformblock\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceInlineUniformBlockFeaturesEXT.html\n\nstruct _PhysicalDeviceInlineUniformBlockFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceInlineUniformBlockFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceInlineUniformBlockFeaturesEXT-Tuple{Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceInlineUniformBlockFeaturesEXT","text":"_PhysicalDeviceInlineUniformBlockFeaturesEXT(inline_uniform_block::Bool, descriptor_binding_inline_uniform_block_update_after_bind::Bool; next = C_NULL)\n\nExtension: VK_EXT_inline_uniform_block\n\nArguments:\n\ninline_uniform_block::Bool\ndescriptor_binding_inline_uniform_block_update_after_bind::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceInlineUniformBlockFeaturesEXT(inline_uniform_block::Bool, descriptor_binding_inline_uniform_block_update_after_bind::Bool; next) -> _PhysicalDeviceInlineUniformBlockFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceInlineUniformBlockPropertiesEXT","page":"API","title":"Vulkan._PhysicalDeviceInlineUniformBlockPropertiesEXT","text":"Intermediate wrapper for VkPhysicalDeviceInlineUniformBlockPropertiesEXT.\n\nExtension: VKEXTinlineuniformblock\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceInlineUniformBlockPropertiesEXT.html\n\nstruct _PhysicalDeviceInlineUniformBlockPropertiesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceInlineUniformBlockPropertiesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceInlineUniformBlockPropertiesEXT-NTuple{5, Integer}","page":"API","title":"Vulkan._PhysicalDeviceInlineUniformBlockPropertiesEXT","text":"_PhysicalDeviceInlineUniformBlockPropertiesEXT(max_inline_uniform_block_size::Integer, max_per_stage_descriptor_inline_uniform_blocks::Integer, max_per_stage_descriptor_update_after_bind_inline_uniform_blocks::Integer, max_descriptor_set_inline_uniform_blocks::Integer, max_descriptor_set_update_after_bind_inline_uniform_blocks::Integer; next = C_NULL)\n\nExtension: VK_EXT_inline_uniform_block\n\nArguments:\n\nmax_inline_uniform_block_size::Integer\nmax_per_stage_descriptor_inline_uniform_blocks::Integer\nmax_per_stage_descriptor_update_after_bind_inline_uniform_blocks::Integer\nmax_descriptor_set_inline_uniform_blocks::Integer\nmax_descriptor_set_update_after_bind_inline_uniform_blocks::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceInlineUniformBlockPropertiesEXT(max_inline_uniform_block_size::Integer, max_per_stage_descriptor_inline_uniform_blocks::Integer, max_per_stage_descriptor_update_after_bind_inline_uniform_blocks::Integer, max_descriptor_set_inline_uniform_blocks::Integer, max_descriptor_set_update_after_bind_inline_uniform_blocks::Integer; next) -> _PhysicalDeviceInlineUniformBlockPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceLimits","page":"API","title":"Vulkan._PhysicalDeviceLimits","text":"Intermediate wrapper for VkPhysicalDeviceLimits.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceLimits.html\n\nstruct _PhysicalDeviceLimits <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceLimits\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceLimits-Tuple{Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Tuple{UInt32, UInt32, UInt32}, Integer, Tuple{UInt32, UInt32, UInt32}, Integer, Integer, Integer, Integer, Integer, Real, Real, Integer, Tuple{UInt32, UInt32}, Tuple{Float32, Float32}, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Real, Real, Integer, Integer, Integer, Integer, Integer, Integer, Bool, Real, Integer, Integer, Integer, Integer, Tuple{Float32, Float32}, Tuple{Float32, Float32}, Real, Real, Bool, Bool, Integer, Integer, Integer}","page":"API","title":"Vulkan._PhysicalDeviceLimits","text":"_PhysicalDeviceLimits(max_image_dimension_1_d::Integer, max_image_dimension_2_d::Integer, max_image_dimension_3_d::Integer, max_image_dimension_cube::Integer, max_image_array_layers::Integer, max_texel_buffer_elements::Integer, max_uniform_buffer_range::Integer, max_storage_buffer_range::Integer, max_push_constants_size::Integer, max_memory_allocation_count::Integer, max_sampler_allocation_count::Integer, buffer_image_granularity::Integer, sparse_address_space_size::Integer, max_bound_descriptor_sets::Integer, max_per_stage_descriptor_samplers::Integer, max_per_stage_descriptor_uniform_buffers::Integer, max_per_stage_descriptor_storage_buffers::Integer, max_per_stage_descriptor_sampled_images::Integer, max_per_stage_descriptor_storage_images::Integer, max_per_stage_descriptor_input_attachments::Integer, max_per_stage_resources::Integer, max_descriptor_set_samplers::Integer, max_descriptor_set_uniform_buffers::Integer, max_descriptor_set_uniform_buffers_dynamic::Integer, max_descriptor_set_storage_buffers::Integer, max_descriptor_set_storage_buffers_dynamic::Integer, max_descriptor_set_sampled_images::Integer, max_descriptor_set_storage_images::Integer, max_descriptor_set_input_attachments::Integer, max_vertex_input_attributes::Integer, max_vertex_input_bindings::Integer, max_vertex_input_attribute_offset::Integer, max_vertex_input_binding_stride::Integer, max_vertex_output_components::Integer, max_tessellation_generation_level::Integer, max_tessellation_patch_size::Integer, max_tessellation_control_per_vertex_input_components::Integer, max_tessellation_control_per_vertex_output_components::Integer, max_tessellation_control_per_patch_output_components::Integer, max_tessellation_control_total_output_components::Integer, max_tessellation_evaluation_input_components::Integer, max_tessellation_evaluation_output_components::Integer, max_geometry_shader_invocations::Integer, max_geometry_input_components::Integer, max_geometry_output_components::Integer, max_geometry_output_vertices::Integer, max_geometry_total_output_components::Integer, max_fragment_input_components::Integer, max_fragment_output_attachments::Integer, max_fragment_dual_src_attachments::Integer, max_fragment_combined_output_resources::Integer, max_compute_shared_memory_size::Integer, max_compute_work_group_count::NTuple{3, UInt32}, max_compute_work_group_invocations::Integer, max_compute_work_group_size::NTuple{3, UInt32}, sub_pixel_precision_bits::Integer, sub_texel_precision_bits::Integer, mipmap_precision_bits::Integer, max_draw_indexed_index_value::Integer, max_draw_indirect_count::Integer, max_sampler_lod_bias::Real, max_sampler_anisotropy::Real, max_viewports::Integer, max_viewport_dimensions::NTuple{2, UInt32}, viewport_bounds_range::NTuple{2, Float32}, viewport_sub_pixel_bits::Integer, min_memory_map_alignment::Integer, min_texel_buffer_offset_alignment::Integer, min_uniform_buffer_offset_alignment::Integer, min_storage_buffer_offset_alignment::Integer, min_texel_offset::Integer, max_texel_offset::Integer, min_texel_gather_offset::Integer, max_texel_gather_offset::Integer, min_interpolation_offset::Real, max_interpolation_offset::Real, sub_pixel_interpolation_offset_bits::Integer, max_framebuffer_width::Integer, max_framebuffer_height::Integer, max_framebuffer_layers::Integer, max_color_attachments::Integer, max_sample_mask_words::Integer, timestamp_compute_and_graphics::Bool, timestamp_period::Real, max_clip_distances::Integer, max_cull_distances::Integer, max_combined_clip_and_cull_distances::Integer, discrete_queue_priorities::Integer, point_size_range::NTuple{2, Float32}, line_width_range::NTuple{2, Float32}, point_size_granularity::Real, line_width_granularity::Real, strict_lines::Bool, standard_sample_locations::Bool, optimal_buffer_copy_offset_alignment::Integer, optimal_buffer_copy_row_pitch_alignment::Integer, non_coherent_atom_size::Integer; framebuffer_color_sample_counts = 0, framebuffer_depth_sample_counts = 0, framebuffer_stencil_sample_counts = 0, framebuffer_no_attachments_sample_counts = 0, sampled_image_color_sample_counts = 0, sampled_image_integer_sample_counts = 0, sampled_image_depth_sample_counts = 0, sampled_image_stencil_sample_counts = 0, storage_image_sample_counts = 0)\n\nArguments:\n\nmax_image_dimension_1_d::Integer\nmax_image_dimension_2_d::Integer\nmax_image_dimension_3_d::Integer\nmax_image_dimension_cube::Integer\nmax_image_array_layers::Integer\nmax_texel_buffer_elements::Integer\nmax_uniform_buffer_range::Integer\nmax_storage_buffer_range::Integer\nmax_push_constants_size::Integer\nmax_memory_allocation_count::Integer\nmax_sampler_allocation_count::Integer\nbuffer_image_granularity::Integer\nsparse_address_space_size::Integer\nmax_bound_descriptor_sets::Integer\nmax_per_stage_descriptor_samplers::Integer\nmax_per_stage_descriptor_uniform_buffers::Integer\nmax_per_stage_descriptor_storage_buffers::Integer\nmax_per_stage_descriptor_sampled_images::Integer\nmax_per_stage_descriptor_storage_images::Integer\nmax_per_stage_descriptor_input_attachments::Integer\nmax_per_stage_resources::Integer\nmax_descriptor_set_samplers::Integer\nmax_descriptor_set_uniform_buffers::Integer\nmax_descriptor_set_uniform_buffers_dynamic::Integer\nmax_descriptor_set_storage_buffers::Integer\nmax_descriptor_set_storage_buffers_dynamic::Integer\nmax_descriptor_set_sampled_images::Integer\nmax_descriptor_set_storage_images::Integer\nmax_descriptor_set_input_attachments::Integer\nmax_vertex_input_attributes::Integer\nmax_vertex_input_bindings::Integer\nmax_vertex_input_attribute_offset::Integer\nmax_vertex_input_binding_stride::Integer\nmax_vertex_output_components::Integer\nmax_tessellation_generation_level::Integer\nmax_tessellation_patch_size::Integer\nmax_tessellation_control_per_vertex_input_components::Integer\nmax_tessellation_control_per_vertex_output_components::Integer\nmax_tessellation_control_per_patch_output_components::Integer\nmax_tessellation_control_total_output_components::Integer\nmax_tessellation_evaluation_input_components::Integer\nmax_tessellation_evaluation_output_components::Integer\nmax_geometry_shader_invocations::Integer\nmax_geometry_input_components::Integer\nmax_geometry_output_components::Integer\nmax_geometry_output_vertices::Integer\nmax_geometry_total_output_components::Integer\nmax_fragment_input_components::Integer\nmax_fragment_output_attachments::Integer\nmax_fragment_dual_src_attachments::Integer\nmax_fragment_combined_output_resources::Integer\nmax_compute_shared_memory_size::Integer\nmax_compute_work_group_count::NTuple{3, UInt32}\nmax_compute_work_group_invocations::Integer\nmax_compute_work_group_size::NTuple{3, UInt32}\nsub_pixel_precision_bits::Integer\nsub_texel_precision_bits::Integer\nmipmap_precision_bits::Integer\nmax_draw_indexed_index_value::Integer\nmax_draw_indirect_count::Integer\nmax_sampler_lod_bias::Real\nmax_sampler_anisotropy::Real\nmax_viewports::Integer\nmax_viewport_dimensions::NTuple{2, UInt32}\nviewport_bounds_range::NTuple{2, Float32}\nviewport_sub_pixel_bits::Integer\nmin_memory_map_alignment::Integer\nmin_texel_buffer_offset_alignment::Integer\nmin_uniform_buffer_offset_alignment::Integer\nmin_storage_buffer_offset_alignment::Integer\nmin_texel_offset::Integer\nmax_texel_offset::Integer\nmin_texel_gather_offset::Integer\nmax_texel_gather_offset::Integer\nmin_interpolation_offset::Real\nmax_interpolation_offset::Real\nsub_pixel_interpolation_offset_bits::Integer\nmax_framebuffer_width::Integer\nmax_framebuffer_height::Integer\nmax_framebuffer_layers::Integer\nmax_color_attachments::Integer\nmax_sample_mask_words::Integer\ntimestamp_compute_and_graphics::Bool\ntimestamp_period::Real\nmax_clip_distances::Integer\nmax_cull_distances::Integer\nmax_combined_clip_and_cull_distances::Integer\ndiscrete_queue_priorities::Integer\npoint_size_range::NTuple{2, Float32}\nline_width_range::NTuple{2, Float32}\npoint_size_granularity::Real\nline_width_granularity::Real\nstrict_lines::Bool\nstandard_sample_locations::Bool\noptimal_buffer_copy_offset_alignment::Integer\noptimal_buffer_copy_row_pitch_alignment::Integer\nnon_coherent_atom_size::Integer\nframebuffer_color_sample_counts: defaults to 0\nframebuffer_depth_sample_counts: defaults to 0\nframebuffer_stencil_sample_counts: defaults to 0\nframebuffer_no_attachments_sample_counts: defaults to 0\nsampled_image_color_sample_counts: defaults to 0\nsampled_image_integer_sample_counts: defaults to 0\nsampled_image_depth_sample_counts: defaults to 0\nsampled_image_stencil_sample_counts: defaults to 0\nstorage_image_sample_counts: defaults to 0\n\nAPI documentation\n\n_PhysicalDeviceLimits(max_image_dimension_1_d::Integer, max_image_dimension_2_d::Integer, max_image_dimension_3_d::Integer, max_image_dimension_cube::Integer, max_image_array_layers::Integer, max_texel_buffer_elements::Integer, max_uniform_buffer_range::Integer, max_storage_buffer_range::Integer, max_push_constants_size::Integer, max_memory_allocation_count::Integer, max_sampler_allocation_count::Integer, buffer_image_granularity::Integer, sparse_address_space_size::Integer, max_bound_descriptor_sets::Integer, max_per_stage_descriptor_samplers::Integer, max_per_stage_descriptor_uniform_buffers::Integer, max_per_stage_descriptor_storage_buffers::Integer, max_per_stage_descriptor_sampled_images::Integer, max_per_stage_descriptor_storage_images::Integer, max_per_stage_descriptor_input_attachments::Integer, max_per_stage_resources::Integer, max_descriptor_set_samplers::Integer, max_descriptor_set_uniform_buffers::Integer, max_descriptor_set_uniform_buffers_dynamic::Integer, max_descriptor_set_storage_buffers::Integer, max_descriptor_set_storage_buffers_dynamic::Integer, max_descriptor_set_sampled_images::Integer, max_descriptor_set_storage_images::Integer, max_descriptor_set_input_attachments::Integer, max_vertex_input_attributes::Integer, max_vertex_input_bindings::Integer, max_vertex_input_attribute_offset::Integer, max_vertex_input_binding_stride::Integer, max_vertex_output_components::Integer, max_tessellation_generation_level::Integer, max_tessellation_patch_size::Integer, max_tessellation_control_per_vertex_input_components::Integer, max_tessellation_control_per_vertex_output_components::Integer, max_tessellation_control_per_patch_output_components::Integer, max_tessellation_control_total_output_components::Integer, max_tessellation_evaluation_input_components::Integer, max_tessellation_evaluation_output_components::Integer, max_geometry_shader_invocations::Integer, max_geometry_input_components::Integer, max_geometry_output_components::Integer, max_geometry_output_vertices::Integer, max_geometry_total_output_components::Integer, max_fragment_input_components::Integer, max_fragment_output_attachments::Integer, max_fragment_dual_src_attachments::Integer, max_fragment_combined_output_resources::Integer, max_compute_shared_memory_size::Integer, max_compute_work_group_count::Tuple{UInt32, UInt32, UInt32}, max_compute_work_group_invocations::Integer, max_compute_work_group_size::Tuple{UInt32, UInt32, UInt32}, sub_pixel_precision_bits::Integer, sub_texel_precision_bits::Integer, mipmap_precision_bits::Integer, max_draw_indexed_index_value::Integer, max_draw_indirect_count::Integer, max_sampler_lod_bias::Real, max_sampler_anisotropy::Real, max_viewports::Integer, max_viewport_dimensions::Tuple{UInt32, UInt32}, viewport_bounds_range::Tuple{Float32, Float32}, viewport_sub_pixel_bits::Integer, min_memory_map_alignment::Integer, min_texel_buffer_offset_alignment::Integer, min_uniform_buffer_offset_alignment::Integer, min_storage_buffer_offset_alignment::Integer, min_texel_offset::Integer, max_texel_offset::Integer, min_texel_gather_offset::Integer, max_texel_gather_offset::Integer, min_interpolation_offset::Real, max_interpolation_offset::Real, sub_pixel_interpolation_offset_bits::Integer, max_framebuffer_width::Integer, max_framebuffer_height::Integer, max_framebuffer_layers::Integer, max_color_attachments::Integer, max_sample_mask_words::Integer, timestamp_compute_and_graphics::Bool, timestamp_period::Real, max_clip_distances::Integer, max_cull_distances::Integer, max_combined_clip_and_cull_distances::Integer, discrete_queue_priorities::Integer, point_size_range::Tuple{Float32, Float32}, line_width_range::Tuple{Float32, Float32}, point_size_granularity::Real, line_width_granularity::Real, strict_lines::Bool, standard_sample_locations::Bool, optimal_buffer_copy_offset_alignment::Integer, optimal_buffer_copy_row_pitch_alignment::Integer, non_coherent_atom_size::Integer; framebuffer_color_sample_counts, framebuffer_depth_sample_counts, framebuffer_stencil_sample_counts, framebuffer_no_attachments_sample_counts, sampled_image_color_sample_counts, sampled_image_integer_sample_counts, sampled_image_depth_sample_counts, sampled_image_stencil_sample_counts, storage_image_sample_counts) -> _PhysicalDeviceLimits\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceLineRasterizationFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceLineRasterizationFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceLineRasterizationFeaturesEXT.\n\nExtension: VKEXTline_rasterization\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceLineRasterizationFeaturesEXT.html\n\nstruct _PhysicalDeviceLineRasterizationFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceLineRasterizationFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceLineRasterizationFeaturesEXT-NTuple{6, Bool}","page":"API","title":"Vulkan._PhysicalDeviceLineRasterizationFeaturesEXT","text":"_PhysicalDeviceLineRasterizationFeaturesEXT(rectangular_lines::Bool, bresenham_lines::Bool, smooth_lines::Bool, stippled_rectangular_lines::Bool, stippled_bresenham_lines::Bool, stippled_smooth_lines::Bool; next = C_NULL)\n\nExtension: VK_EXT_line_rasterization\n\nArguments:\n\nrectangular_lines::Bool\nbresenham_lines::Bool\nsmooth_lines::Bool\nstippled_rectangular_lines::Bool\nstippled_bresenham_lines::Bool\nstippled_smooth_lines::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceLineRasterizationFeaturesEXT(rectangular_lines::Bool, bresenham_lines::Bool, smooth_lines::Bool, stippled_rectangular_lines::Bool, stippled_bresenham_lines::Bool, stippled_smooth_lines::Bool; next) -> _PhysicalDeviceLineRasterizationFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceLineRasterizationPropertiesEXT","page":"API","title":"Vulkan._PhysicalDeviceLineRasterizationPropertiesEXT","text":"Intermediate wrapper for VkPhysicalDeviceLineRasterizationPropertiesEXT.\n\nExtension: VKEXTline_rasterization\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceLineRasterizationPropertiesEXT.html\n\nstruct _PhysicalDeviceLineRasterizationPropertiesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceLineRasterizationPropertiesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceLineRasterizationPropertiesEXT-Tuple{Integer}","page":"API","title":"Vulkan._PhysicalDeviceLineRasterizationPropertiesEXT","text":"_PhysicalDeviceLineRasterizationPropertiesEXT(line_sub_pixel_precision_bits::Integer; next = C_NULL)\n\nExtension: VK_EXT_line_rasterization\n\nArguments:\n\nline_sub_pixel_precision_bits::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceLineRasterizationPropertiesEXT(line_sub_pixel_precision_bits::Integer; next) -> _PhysicalDeviceLineRasterizationPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceMaintenance3Properties","page":"API","title":"Vulkan._PhysicalDeviceMaintenance3Properties","text":"Intermediate wrapper for VkPhysicalDeviceMaintenance3Properties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMaintenance3Properties.html\n\nstruct _PhysicalDeviceMaintenance3Properties <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceMaintenance3Properties\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceMaintenance3Properties-Tuple{Integer, Integer}","page":"API","title":"Vulkan._PhysicalDeviceMaintenance3Properties","text":"_PhysicalDeviceMaintenance3Properties(max_per_set_descriptors::Integer, max_memory_allocation_size::Integer; next = C_NULL)\n\nArguments:\n\nmax_per_set_descriptors::Integer\nmax_memory_allocation_size::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceMaintenance3Properties(max_per_set_descriptors::Integer, max_memory_allocation_size::Integer; next) -> _PhysicalDeviceMaintenance3Properties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceMemoryBudgetPropertiesEXT","page":"API","title":"Vulkan._PhysicalDeviceMemoryBudgetPropertiesEXT","text":"Intermediate wrapper for VkPhysicalDeviceMemoryBudgetPropertiesEXT.\n\nExtension: VKEXTmemory_budget\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMemoryBudgetPropertiesEXT.html\n\nstruct _PhysicalDeviceMemoryBudgetPropertiesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceMemoryBudgetPropertiesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceMemoryBudgetPropertiesEXT-Tuple{NTuple{16, UInt64}, NTuple{16, UInt64}}","page":"API","title":"Vulkan._PhysicalDeviceMemoryBudgetPropertiesEXT","text":"_PhysicalDeviceMemoryBudgetPropertiesEXT(heap_budget::NTuple{Int(VK_MAX_MEMORY_HEAPS), UInt64}, heap_usage::NTuple{Int(VK_MAX_MEMORY_HEAPS), UInt64}; next = C_NULL)\n\nExtension: VK_EXT_memory_budget\n\nArguments:\n\nheap_budget::NTuple{Int(VK_MAX_MEMORY_HEAPS), UInt64}\nheap_usage::NTuple{Int(VK_MAX_MEMORY_HEAPS), UInt64}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceMemoryBudgetPropertiesEXT(heap_budget::NTuple{16, UInt64}, heap_usage::NTuple{16, UInt64}; next) -> _PhysicalDeviceMemoryBudgetPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceMemoryPriorityFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceMemoryPriorityFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceMemoryPriorityFeaturesEXT.\n\nExtension: VKEXTmemory_priority\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMemoryPriorityFeaturesEXT.html\n\nstruct _PhysicalDeviceMemoryPriorityFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceMemoryPriorityFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceMemoryPriorityFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceMemoryPriorityFeaturesEXT","text":"_PhysicalDeviceMemoryPriorityFeaturesEXT(memory_priority::Bool; next = C_NULL)\n\nExtension: VK_EXT_memory_priority\n\nArguments:\n\nmemory_priority::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceMemoryPriorityFeaturesEXT(memory_priority::Bool; next) -> _PhysicalDeviceMemoryPriorityFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceMemoryProperties","page":"API","title":"Vulkan._PhysicalDeviceMemoryProperties","text":"Intermediate wrapper for VkPhysicalDeviceMemoryProperties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMemoryProperties.html\n\nstruct _PhysicalDeviceMemoryProperties <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceMemoryProperties\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceMemoryProperties-Tuple{Integer, NTuple{32, _MemoryType}, Integer, NTuple{16, _MemoryHeap}}","page":"API","title":"Vulkan._PhysicalDeviceMemoryProperties","text":"_PhysicalDeviceMemoryProperties(memory_type_count::Integer, memory_types::NTuple{Int(VK_MAX_MEMORY_TYPES), _MemoryType}, memory_heap_count::Integer, memory_heaps::NTuple{Int(VK_MAX_MEMORY_HEAPS), _MemoryHeap})\n\nArguments:\n\nmemory_type_count::Integer\nmemory_types::NTuple{Int(VK_MAX_MEMORY_TYPES), _MemoryType}\nmemory_heap_count::Integer\nmemory_heaps::NTuple{Int(VK_MAX_MEMORY_HEAPS), _MemoryHeap}\n\nAPI documentation\n\n_PhysicalDeviceMemoryProperties(memory_type_count::Integer, memory_types::NTuple{32, _MemoryType}, memory_heap_count::Integer, memory_heaps::NTuple{16, _MemoryHeap})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceMemoryProperties2","page":"API","title":"Vulkan._PhysicalDeviceMemoryProperties2","text":"Intermediate wrapper for VkPhysicalDeviceMemoryProperties2.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMemoryProperties2.html\n\nstruct _PhysicalDeviceMemoryProperties2 <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceMemoryProperties2\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceMemoryProperties2-Tuple{_PhysicalDeviceMemoryProperties}","page":"API","title":"Vulkan._PhysicalDeviceMemoryProperties2","text":"_PhysicalDeviceMemoryProperties2(memory_properties::_PhysicalDeviceMemoryProperties; next = C_NULL)\n\nArguments:\n\nmemory_properties::_PhysicalDeviceMemoryProperties\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceMemoryProperties2(memory_properties::_PhysicalDeviceMemoryProperties; next) -> _PhysicalDeviceMemoryProperties2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceMeshShaderFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceMeshShaderFeaturesNV","text":"Intermediate wrapper for VkPhysicalDeviceMeshShaderFeaturesNV.\n\nExtension: VKNVmesh_shader\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMeshShaderFeaturesNV.html\n\nstruct _PhysicalDeviceMeshShaderFeaturesNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceMeshShaderFeaturesNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceMeshShaderFeaturesNV-Tuple{Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceMeshShaderFeaturesNV","text":"_PhysicalDeviceMeshShaderFeaturesNV(task_shader::Bool, mesh_shader::Bool; next = C_NULL)\n\nExtension: VK_NV_mesh_shader\n\nArguments:\n\ntask_shader::Bool\nmesh_shader::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceMeshShaderFeaturesNV(task_shader::Bool, mesh_shader::Bool; next) -> _PhysicalDeviceMeshShaderFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceMeshShaderPropertiesNV","page":"API","title":"Vulkan._PhysicalDeviceMeshShaderPropertiesNV","text":"Intermediate wrapper for VkPhysicalDeviceMeshShaderPropertiesNV.\n\nExtension: VKNVmesh_shader\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMeshShaderPropertiesNV.html\n\nstruct _PhysicalDeviceMeshShaderPropertiesNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceMeshShaderPropertiesNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceMeshShaderPropertiesNV-Tuple{Integer, Integer, Tuple{UInt32, UInt32, UInt32}, Integer, Integer, Integer, Tuple{UInt32, UInt32, UInt32}, Integer, Integer, Integer, Integer, Integer, Integer}","page":"API","title":"Vulkan._PhysicalDeviceMeshShaderPropertiesNV","text":"_PhysicalDeviceMeshShaderPropertiesNV(max_draw_mesh_tasks_count::Integer, max_task_work_group_invocations::Integer, max_task_work_group_size::NTuple{3, UInt32}, max_task_total_memory_size::Integer, max_task_output_count::Integer, max_mesh_work_group_invocations::Integer, max_mesh_work_group_size::NTuple{3, UInt32}, max_mesh_total_memory_size::Integer, max_mesh_output_vertices::Integer, max_mesh_output_primitives::Integer, max_mesh_multiview_view_count::Integer, mesh_output_per_vertex_granularity::Integer, mesh_output_per_primitive_granularity::Integer; next = C_NULL)\n\nExtension: VK_NV_mesh_shader\n\nArguments:\n\nmax_draw_mesh_tasks_count::Integer\nmax_task_work_group_invocations::Integer\nmax_task_work_group_size::NTuple{3, UInt32}\nmax_task_total_memory_size::Integer\nmax_task_output_count::Integer\nmax_mesh_work_group_invocations::Integer\nmax_mesh_work_group_size::NTuple{3, UInt32}\nmax_mesh_total_memory_size::Integer\nmax_mesh_output_vertices::Integer\nmax_mesh_output_primitives::Integer\nmax_mesh_multiview_view_count::Integer\nmesh_output_per_vertex_granularity::Integer\nmesh_output_per_primitive_granularity::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceMeshShaderPropertiesNV(max_draw_mesh_tasks_count::Integer, max_task_work_group_invocations::Integer, max_task_work_group_size::Tuple{UInt32, UInt32, UInt32}, max_task_total_memory_size::Integer, max_task_output_count::Integer, max_mesh_work_group_invocations::Integer, max_mesh_work_group_size::Tuple{UInt32, UInt32, UInt32}, max_mesh_total_memory_size::Integer, max_mesh_output_vertices::Integer, max_mesh_output_primitives::Integer, max_mesh_multiview_view_count::Integer, mesh_output_per_vertex_granularity::Integer, mesh_output_per_primitive_granularity::Integer; next) -> _PhysicalDeviceMeshShaderPropertiesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceMultiviewFeatures","page":"API","title":"Vulkan._PhysicalDeviceMultiviewFeatures","text":"Intermediate wrapper for VkPhysicalDeviceMultiviewFeatures.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMultiviewFeatures.html\n\nstruct _PhysicalDeviceMultiviewFeatures <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceMultiviewFeatures\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceMultiviewFeatures-Tuple{Bool, Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceMultiviewFeatures","text":"_PhysicalDeviceMultiviewFeatures(multiview::Bool, multiview_geometry_shader::Bool, multiview_tessellation_shader::Bool; next = C_NULL)\n\nArguments:\n\nmultiview::Bool\nmultiview_geometry_shader::Bool\nmultiview_tessellation_shader::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceMultiviewFeatures(multiview::Bool, multiview_geometry_shader::Bool, multiview_tessellation_shader::Bool; next) -> _PhysicalDeviceMultiviewFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX","page":"API","title":"Vulkan._PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX","text":"Intermediate wrapper for VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX.\n\nExtension: VKNVXmultiviewperview_attributes\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX.html\n\nstruct _PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX","text":"_PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX(per_view_position_all_components::Bool; next = C_NULL)\n\nExtension: VK_NVX_multiview_per_view_attributes\n\nArguments:\n\nper_view_position_all_components::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX(per_view_position_all_components::Bool; next) -> _PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceMultiviewProperties","page":"API","title":"Vulkan._PhysicalDeviceMultiviewProperties","text":"Intermediate wrapper for VkPhysicalDeviceMultiviewProperties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMultiviewProperties.html\n\nstruct _PhysicalDeviceMultiviewProperties <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceMultiviewProperties\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceMultiviewProperties-Tuple{Integer, Integer}","page":"API","title":"Vulkan._PhysicalDeviceMultiviewProperties","text":"_PhysicalDeviceMultiviewProperties(max_multiview_view_count::Integer, max_multiview_instance_index::Integer; next = C_NULL)\n\nArguments:\n\nmax_multiview_view_count::Integer\nmax_multiview_instance_index::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceMultiviewProperties(max_multiview_view_count::Integer, max_multiview_instance_index::Integer; next) -> _PhysicalDeviceMultiviewProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceMutableDescriptorTypeFeaturesVALVE","page":"API","title":"Vulkan._PhysicalDeviceMutableDescriptorTypeFeaturesVALVE","text":"Intermediate wrapper for VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE.\n\nExtension: VKVALVEmutabledescriptortype\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE.html\n\nstruct _PhysicalDeviceMutableDescriptorTypeFeaturesVALVE <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceMutableDescriptorTypeFeaturesVALVE-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceMutableDescriptorTypeFeaturesVALVE","text":"_PhysicalDeviceMutableDescriptorTypeFeaturesVALVE(mutable_descriptor_type::Bool; next = C_NULL)\n\nExtension: VK_VALVE_mutable_descriptor_type\n\nArguments:\n\nmutable_descriptor_type::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceMutableDescriptorTypeFeaturesVALVE(mutable_descriptor_type::Bool; next) -> _PhysicalDeviceMutableDescriptorTypeFeaturesVALVE\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDevicePCIBusInfoPropertiesEXT","page":"API","title":"Vulkan._PhysicalDevicePCIBusInfoPropertiesEXT","text":"Intermediate wrapper for VkPhysicalDevicePCIBusInfoPropertiesEXT.\n\nExtension: VKEXTpcibusinfo\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePCIBusInfoPropertiesEXT.html\n\nstruct _PhysicalDevicePCIBusInfoPropertiesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDevicePCIBusInfoPropertiesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDevicePCIBusInfoPropertiesEXT-NTuple{4, Integer}","page":"API","title":"Vulkan._PhysicalDevicePCIBusInfoPropertiesEXT","text":"_PhysicalDevicePCIBusInfoPropertiesEXT(pci_domain::Integer, pci_bus::Integer, pci_device::Integer, pci_function::Integer; next = C_NULL)\n\nExtension: VK_EXT_pci_bus_info\n\nArguments:\n\npci_domain::Integer\npci_bus::Integer\npci_device::Integer\npci_function::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDevicePCIBusInfoPropertiesEXT(pci_domain::Integer, pci_bus::Integer, pci_device::Integer, pci_function::Integer; next) -> _PhysicalDevicePCIBusInfoPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDevicePerformanceQueryFeaturesKHR","page":"API","title":"Vulkan._PhysicalDevicePerformanceQueryFeaturesKHR","text":"Intermediate wrapper for VkPhysicalDevicePerformanceQueryFeaturesKHR.\n\nExtension: VKKHRperformance_query\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePerformanceQueryFeaturesKHR.html\n\nstruct _PhysicalDevicePerformanceQueryFeaturesKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDevicePerformanceQueryFeaturesKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDevicePerformanceQueryFeaturesKHR-Tuple{Bool, Bool}","page":"API","title":"Vulkan._PhysicalDevicePerformanceQueryFeaturesKHR","text":"_PhysicalDevicePerformanceQueryFeaturesKHR(performance_counter_query_pools::Bool, performance_counter_multiple_query_pools::Bool; next = C_NULL)\n\nExtension: VK_KHR_performance_query\n\nArguments:\n\nperformance_counter_query_pools::Bool\nperformance_counter_multiple_query_pools::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDevicePerformanceQueryFeaturesKHR(performance_counter_query_pools::Bool, performance_counter_multiple_query_pools::Bool; next) -> _PhysicalDevicePerformanceQueryFeaturesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDevicePerformanceQueryPropertiesKHR","page":"API","title":"Vulkan._PhysicalDevicePerformanceQueryPropertiesKHR","text":"Intermediate wrapper for VkPhysicalDevicePerformanceQueryPropertiesKHR.\n\nExtension: VKKHRperformance_query\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePerformanceQueryPropertiesKHR.html\n\nstruct _PhysicalDevicePerformanceQueryPropertiesKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDevicePerformanceQueryPropertiesKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDevicePerformanceQueryPropertiesKHR-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDevicePerformanceQueryPropertiesKHR","text":"_PhysicalDevicePerformanceQueryPropertiesKHR(allow_command_buffer_query_copies::Bool; next = C_NULL)\n\nExtension: VK_KHR_performance_query\n\nArguments:\n\nallow_command_buffer_query_copies::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDevicePerformanceQueryPropertiesKHR(allow_command_buffer_query_copies::Bool; next) -> _PhysicalDevicePerformanceQueryPropertiesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDevicePipelineCreationCacheControlFeaturesEXT","page":"API","title":"Vulkan._PhysicalDevicePipelineCreationCacheControlFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT.\n\nExtension: VKEXTpipelinecreationcache_control\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT.html\n\nstruct _PhysicalDevicePipelineCreationCacheControlFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDevicePipelineCreationCacheControlFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDevicePipelineCreationCacheControlFeaturesEXT","text":"_PhysicalDevicePipelineCreationCacheControlFeaturesEXT(pipeline_creation_cache_control::Bool; next = C_NULL)\n\nExtension: VK_EXT_pipeline_creation_cache_control\n\nArguments:\n\npipeline_creation_cache_control::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDevicePipelineCreationCacheControlFeaturesEXT(pipeline_creation_cache_control::Bool; next) -> _PhysicalDevicePipelineCreationCacheControlFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDevicePipelineExecutablePropertiesFeaturesKHR","page":"API","title":"Vulkan._PhysicalDevicePipelineExecutablePropertiesFeaturesKHR","text":"Intermediate wrapper for VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR.\n\nExtension: VKKHRpipelineexecutableproperties\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR.html\n\nstruct _PhysicalDevicePipelineExecutablePropertiesFeaturesKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDevicePipelineExecutablePropertiesFeaturesKHR-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDevicePipelineExecutablePropertiesFeaturesKHR","text":"_PhysicalDevicePipelineExecutablePropertiesFeaturesKHR(pipeline_executable_info::Bool; next = C_NULL)\n\nExtension: VK_KHR_pipeline_executable_properties\n\nArguments:\n\npipeline_executable_info::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDevicePipelineExecutablePropertiesFeaturesKHR(pipeline_executable_info::Bool; next) -> _PhysicalDevicePipelineExecutablePropertiesFeaturesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDevicePointClippingProperties","page":"API","title":"Vulkan._PhysicalDevicePointClippingProperties","text":"Intermediate wrapper for VkPhysicalDevicePointClippingProperties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePointClippingProperties.html\n\nstruct _PhysicalDevicePointClippingProperties <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDevicePointClippingProperties\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDevicePointClippingProperties-Tuple{PointClippingBehavior}","page":"API","title":"Vulkan._PhysicalDevicePointClippingProperties","text":"_PhysicalDevicePointClippingProperties(point_clipping_behavior::PointClippingBehavior; next = C_NULL)\n\nArguments:\n\npoint_clipping_behavior::PointClippingBehavior\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDevicePointClippingProperties(point_clipping_behavior::PointClippingBehavior; next) -> _PhysicalDevicePointClippingProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDevicePrivateDataFeaturesEXT","page":"API","title":"Vulkan._PhysicalDevicePrivateDataFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDevicePrivateDataFeaturesEXT.\n\nExtension: VKEXTprivate_data\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePrivateDataFeaturesEXT.html\n\nstruct _PhysicalDevicePrivateDataFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDevicePrivateDataFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDevicePrivateDataFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDevicePrivateDataFeaturesEXT","text":"_PhysicalDevicePrivateDataFeaturesEXT(private_data::Bool; next = C_NULL)\n\nExtension: VK_EXT_private_data\n\nArguments:\n\nprivate_data::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDevicePrivateDataFeaturesEXT(private_data::Bool; next) -> _PhysicalDevicePrivateDataFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceProperties","page":"API","title":"Vulkan._PhysicalDeviceProperties","text":"Intermediate wrapper for VkPhysicalDeviceProperties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceProperties.html\n\nstruct _PhysicalDeviceProperties <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceProperties\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceProperties-Tuple{VersionNumber, VersionNumber, Integer, Integer, PhysicalDeviceType, AbstractString, NTuple{16, UInt8}, _PhysicalDeviceLimits, _PhysicalDeviceSparseProperties}","page":"API","title":"Vulkan._PhysicalDeviceProperties","text":"_PhysicalDeviceProperties(api_version::VersionNumber, driver_version::VersionNumber, vendor_id::Integer, device_id::Integer, device_type::PhysicalDeviceType, device_name::AbstractString, pipeline_cache_uuid::NTuple{Int(VK_UUID_SIZE), UInt8}, limits::_PhysicalDeviceLimits, sparse_properties::_PhysicalDeviceSparseProperties)\n\nArguments:\n\napi_version::VersionNumber\ndriver_version::VersionNumber\nvendor_id::Integer\ndevice_id::Integer\ndevice_type::PhysicalDeviceType\ndevice_name::AbstractString\npipeline_cache_uuid::NTuple{Int(VK_UUID_SIZE), UInt8}\nlimits::_PhysicalDeviceLimits\nsparse_properties::_PhysicalDeviceSparseProperties\n\nAPI documentation\n\n_PhysicalDeviceProperties(api_version::VersionNumber, driver_version::VersionNumber, vendor_id::Integer, device_id::Integer, device_type::PhysicalDeviceType, device_name::AbstractString, pipeline_cache_uuid::NTuple{16, UInt8}, limits::_PhysicalDeviceLimits, sparse_properties::_PhysicalDeviceSparseProperties)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceProperties2","page":"API","title":"Vulkan._PhysicalDeviceProperties2","text":"Intermediate wrapper for VkPhysicalDeviceProperties2.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceProperties2.html\n\nstruct _PhysicalDeviceProperties2 <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceProperties2\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceProperties2-Tuple{_PhysicalDeviceProperties}","page":"API","title":"Vulkan._PhysicalDeviceProperties2","text":"_PhysicalDeviceProperties2(properties::_PhysicalDeviceProperties; next = C_NULL)\n\nArguments:\n\nproperties::_PhysicalDeviceProperties\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceProperties2(properties::_PhysicalDeviceProperties; next) -> _PhysicalDeviceProperties2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceProtectedMemoryFeatures","page":"API","title":"Vulkan._PhysicalDeviceProtectedMemoryFeatures","text":"Intermediate wrapper for VkPhysicalDeviceProtectedMemoryFeatures.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceProtectedMemoryFeatures.html\n\nstruct _PhysicalDeviceProtectedMemoryFeatures <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceProtectedMemoryFeatures\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceProtectedMemoryFeatures-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceProtectedMemoryFeatures","text":"_PhysicalDeviceProtectedMemoryFeatures(protected_memory::Bool; next = C_NULL)\n\nArguments:\n\nprotected_memory::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceProtectedMemoryFeatures(protected_memory::Bool; next) -> _PhysicalDeviceProtectedMemoryFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceProtectedMemoryProperties","page":"API","title":"Vulkan._PhysicalDeviceProtectedMemoryProperties","text":"Intermediate wrapper for VkPhysicalDeviceProtectedMemoryProperties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceProtectedMemoryProperties.html\n\nstruct _PhysicalDeviceProtectedMemoryProperties <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceProtectedMemoryProperties\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceProtectedMemoryProperties-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceProtectedMemoryProperties","text":"_PhysicalDeviceProtectedMemoryProperties(protected_no_fault::Bool; next = C_NULL)\n\nArguments:\n\nprotected_no_fault::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceProtectedMemoryProperties(protected_no_fault::Bool; next) -> _PhysicalDeviceProtectedMemoryProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceProvokingVertexFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceProvokingVertexFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceProvokingVertexFeaturesEXT.\n\nExtension: VKEXTprovoking_vertex\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceProvokingVertexFeaturesEXT.html\n\nstruct _PhysicalDeviceProvokingVertexFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceProvokingVertexFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceProvokingVertexFeaturesEXT-Tuple{Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceProvokingVertexFeaturesEXT","text":"_PhysicalDeviceProvokingVertexFeaturesEXT(provoking_vertex_last::Bool, transform_feedback_preserves_provoking_vertex::Bool; next = C_NULL)\n\nExtension: VK_EXT_provoking_vertex\n\nArguments:\n\nprovoking_vertex_last::Bool\ntransform_feedback_preserves_provoking_vertex::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceProvokingVertexFeaturesEXT(provoking_vertex_last::Bool, transform_feedback_preserves_provoking_vertex::Bool; next) -> _PhysicalDeviceProvokingVertexFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceProvokingVertexPropertiesEXT","page":"API","title":"Vulkan._PhysicalDeviceProvokingVertexPropertiesEXT","text":"Intermediate wrapper for VkPhysicalDeviceProvokingVertexPropertiesEXT.\n\nExtension: VKEXTprovoking_vertex\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceProvokingVertexPropertiesEXT.html\n\nstruct _PhysicalDeviceProvokingVertexPropertiesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceProvokingVertexPropertiesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceProvokingVertexPropertiesEXT-Tuple{Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceProvokingVertexPropertiesEXT","text":"_PhysicalDeviceProvokingVertexPropertiesEXT(provoking_vertex_mode_per_pipeline::Bool, transform_feedback_preserves_triangle_fan_provoking_vertex::Bool; next = C_NULL)\n\nExtension: VK_EXT_provoking_vertex\n\nArguments:\n\nprovoking_vertex_mode_per_pipeline::Bool\ntransform_feedback_preserves_triangle_fan_provoking_vertex::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceProvokingVertexPropertiesEXT(provoking_vertex_mode_per_pipeline::Bool, transform_feedback_preserves_triangle_fan_provoking_vertex::Bool; next) -> _PhysicalDeviceProvokingVertexPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDevicePushDescriptorPropertiesKHR","page":"API","title":"Vulkan._PhysicalDevicePushDescriptorPropertiesKHR","text":"Intermediate wrapper for VkPhysicalDevicePushDescriptorPropertiesKHR.\n\nExtension: VKKHRpush_descriptor\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDevicePushDescriptorPropertiesKHR.html\n\nstruct _PhysicalDevicePushDescriptorPropertiesKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDevicePushDescriptorPropertiesKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDevicePushDescriptorPropertiesKHR-Tuple{Integer}","page":"API","title":"Vulkan._PhysicalDevicePushDescriptorPropertiesKHR","text":"_PhysicalDevicePushDescriptorPropertiesKHR(max_push_descriptors::Integer; next = C_NULL)\n\nExtension: VK_KHR_push_descriptor\n\nArguments:\n\nmax_push_descriptors::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDevicePushDescriptorPropertiesKHR(max_push_descriptors::Integer; next) -> _PhysicalDevicePushDescriptorPropertiesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceRayQueryFeaturesKHR","page":"API","title":"Vulkan._PhysicalDeviceRayQueryFeaturesKHR","text":"Intermediate wrapper for VkPhysicalDeviceRayQueryFeaturesKHR.\n\nExtension: VKKHRray_query\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceRayQueryFeaturesKHR.html\n\nstruct _PhysicalDeviceRayQueryFeaturesKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceRayQueryFeaturesKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceRayQueryFeaturesKHR-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceRayQueryFeaturesKHR","text":"_PhysicalDeviceRayQueryFeaturesKHR(ray_query::Bool; next = C_NULL)\n\nExtension: VK_KHR_ray_query\n\nArguments:\n\nray_query::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceRayQueryFeaturesKHR(ray_query::Bool; next) -> _PhysicalDeviceRayQueryFeaturesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceRayTracingPipelineFeaturesKHR","page":"API","title":"Vulkan._PhysicalDeviceRayTracingPipelineFeaturesKHR","text":"Intermediate wrapper for VkPhysicalDeviceRayTracingPipelineFeaturesKHR.\n\nExtension: VKKHRraytracingpipeline\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceRayTracingPipelineFeaturesKHR.html\n\nstruct _PhysicalDeviceRayTracingPipelineFeaturesKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceRayTracingPipelineFeaturesKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceRayTracingPipelineFeaturesKHR-NTuple{5, Bool}","page":"API","title":"Vulkan._PhysicalDeviceRayTracingPipelineFeaturesKHR","text":"_PhysicalDeviceRayTracingPipelineFeaturesKHR(ray_tracing_pipeline::Bool, ray_tracing_pipeline_shader_group_handle_capture_replay::Bool, ray_tracing_pipeline_shader_group_handle_capture_replay_mixed::Bool, ray_tracing_pipeline_trace_rays_indirect::Bool, ray_traversal_primitive_culling::Bool; next = C_NULL)\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\nray_tracing_pipeline::Bool\nray_tracing_pipeline_shader_group_handle_capture_replay::Bool\nray_tracing_pipeline_shader_group_handle_capture_replay_mixed::Bool\nray_tracing_pipeline_trace_rays_indirect::Bool\nray_traversal_primitive_culling::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceRayTracingPipelineFeaturesKHR(ray_tracing_pipeline::Bool, ray_tracing_pipeline_shader_group_handle_capture_replay::Bool, ray_tracing_pipeline_shader_group_handle_capture_replay_mixed::Bool, ray_tracing_pipeline_trace_rays_indirect::Bool, ray_traversal_primitive_culling::Bool; next) -> _PhysicalDeviceRayTracingPipelineFeaturesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceRayTracingPipelinePropertiesKHR","page":"API","title":"Vulkan._PhysicalDeviceRayTracingPipelinePropertiesKHR","text":"Intermediate wrapper for VkPhysicalDeviceRayTracingPipelinePropertiesKHR.\n\nExtension: VKKHRraytracingpipeline\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceRayTracingPipelinePropertiesKHR.html\n\nstruct _PhysicalDeviceRayTracingPipelinePropertiesKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceRayTracingPipelinePropertiesKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceRayTracingPipelinePropertiesKHR-NTuple{8, Integer}","page":"API","title":"Vulkan._PhysicalDeviceRayTracingPipelinePropertiesKHR","text":"_PhysicalDeviceRayTracingPipelinePropertiesKHR(shader_group_handle_size::Integer, max_ray_recursion_depth::Integer, max_shader_group_stride::Integer, shader_group_base_alignment::Integer, shader_group_handle_capture_replay_size::Integer, max_ray_dispatch_invocation_count::Integer, shader_group_handle_alignment::Integer, max_ray_hit_attribute_size::Integer; next = C_NULL)\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\nshader_group_handle_size::Integer\nmax_ray_recursion_depth::Integer\nmax_shader_group_stride::Integer\nshader_group_base_alignment::Integer\nshader_group_handle_capture_replay_size::Integer\nmax_ray_dispatch_invocation_count::Integer\nshader_group_handle_alignment::Integer\nmax_ray_hit_attribute_size::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceRayTracingPipelinePropertiesKHR(shader_group_handle_size::Integer, max_ray_recursion_depth::Integer, max_shader_group_stride::Integer, shader_group_base_alignment::Integer, shader_group_handle_capture_replay_size::Integer, max_ray_dispatch_invocation_count::Integer, shader_group_handle_alignment::Integer, max_ray_hit_attribute_size::Integer; next) -> _PhysicalDeviceRayTracingPipelinePropertiesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceRayTracingPropertiesNV","page":"API","title":"Vulkan._PhysicalDeviceRayTracingPropertiesNV","text":"Intermediate wrapper for VkPhysicalDeviceRayTracingPropertiesNV.\n\nExtension: VKNVray_tracing\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceRayTracingPropertiesNV.html\n\nstruct _PhysicalDeviceRayTracingPropertiesNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceRayTracingPropertiesNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceRayTracingPropertiesNV-NTuple{8, Integer}","page":"API","title":"Vulkan._PhysicalDeviceRayTracingPropertiesNV","text":"_PhysicalDeviceRayTracingPropertiesNV(shader_group_handle_size::Integer, max_recursion_depth::Integer, max_shader_group_stride::Integer, shader_group_base_alignment::Integer, max_geometry_count::Integer, max_instance_count::Integer, max_triangle_count::Integer, max_descriptor_set_acceleration_structures::Integer; next = C_NULL)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\nshader_group_handle_size::Integer\nmax_recursion_depth::Integer\nmax_shader_group_stride::Integer\nshader_group_base_alignment::Integer\nmax_geometry_count::Integer\nmax_instance_count::Integer\nmax_triangle_count::Integer\nmax_descriptor_set_acceleration_structures::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceRayTracingPropertiesNV(shader_group_handle_size::Integer, max_recursion_depth::Integer, max_shader_group_stride::Integer, shader_group_base_alignment::Integer, max_geometry_count::Integer, max_instance_count::Integer, max_triangle_count::Integer, max_descriptor_set_acceleration_structures::Integer; next) -> _PhysicalDeviceRayTracingPropertiesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceRepresentativeFragmentTestFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceRepresentativeFragmentTestFeaturesNV","text":"Intermediate wrapper for VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV.\n\nExtension: VKNVrepresentativefragmenttest\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV.html\n\nstruct _PhysicalDeviceRepresentativeFragmentTestFeaturesNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceRepresentativeFragmentTestFeaturesNV-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceRepresentativeFragmentTestFeaturesNV","text":"_PhysicalDeviceRepresentativeFragmentTestFeaturesNV(representative_fragment_test::Bool; next = C_NULL)\n\nExtension: VK_NV_representative_fragment_test\n\nArguments:\n\nrepresentative_fragment_test::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceRepresentativeFragmentTestFeaturesNV(representative_fragment_test::Bool; next) -> _PhysicalDeviceRepresentativeFragmentTestFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceRobustness2FeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceRobustness2FeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceRobustness2FeaturesEXT.\n\nExtension: VKEXTrobustness2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceRobustness2FeaturesEXT.html\n\nstruct _PhysicalDeviceRobustness2FeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceRobustness2FeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceRobustness2FeaturesEXT-Tuple{Bool, Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceRobustness2FeaturesEXT","text":"_PhysicalDeviceRobustness2FeaturesEXT(robust_buffer_access_2::Bool, robust_image_access_2::Bool, null_descriptor::Bool; next = C_NULL)\n\nExtension: VK_EXT_robustness2\n\nArguments:\n\nrobust_buffer_access_2::Bool\nrobust_image_access_2::Bool\nnull_descriptor::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceRobustness2FeaturesEXT(robust_buffer_access_2::Bool, robust_image_access_2::Bool, null_descriptor::Bool; next) -> _PhysicalDeviceRobustness2FeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceRobustness2PropertiesEXT","page":"API","title":"Vulkan._PhysicalDeviceRobustness2PropertiesEXT","text":"Intermediate wrapper for VkPhysicalDeviceRobustness2PropertiesEXT.\n\nExtension: VKEXTrobustness2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceRobustness2PropertiesEXT.html\n\nstruct _PhysicalDeviceRobustness2PropertiesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceRobustness2PropertiesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceRobustness2PropertiesEXT-Tuple{Integer, Integer}","page":"API","title":"Vulkan._PhysicalDeviceRobustness2PropertiesEXT","text":"_PhysicalDeviceRobustness2PropertiesEXT(robust_storage_buffer_access_size_alignment::Integer, robust_uniform_buffer_access_size_alignment::Integer; next = C_NULL)\n\nExtension: VK_EXT_robustness2\n\nArguments:\n\nrobust_storage_buffer_access_size_alignment::Integer\nrobust_uniform_buffer_access_size_alignment::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceRobustness2PropertiesEXT(robust_storage_buffer_access_size_alignment::Integer, robust_uniform_buffer_access_size_alignment::Integer; next) -> _PhysicalDeviceRobustness2PropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceSampleLocationsPropertiesEXT","page":"API","title":"Vulkan._PhysicalDeviceSampleLocationsPropertiesEXT","text":"Intermediate wrapper for VkPhysicalDeviceSampleLocationsPropertiesEXT.\n\nExtension: VKEXTsample_locations\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSampleLocationsPropertiesEXT.html\n\nstruct _PhysicalDeviceSampleLocationsPropertiesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceSampleLocationsPropertiesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceSampleLocationsPropertiesEXT-Tuple{SampleCountFlag, _Extent2D, Tuple{Float32, Float32}, Integer, Bool}","page":"API","title":"Vulkan._PhysicalDeviceSampleLocationsPropertiesEXT","text":"_PhysicalDeviceSampleLocationsPropertiesEXT(sample_location_sample_counts::SampleCountFlag, max_sample_location_grid_size::_Extent2D, sample_location_coordinate_range::NTuple{2, Float32}, sample_location_sub_pixel_bits::Integer, variable_sample_locations::Bool; next = C_NULL)\n\nExtension: VK_EXT_sample_locations\n\nArguments:\n\nsample_location_sample_counts::SampleCountFlag\nmax_sample_location_grid_size::_Extent2D\nsample_location_coordinate_range::NTuple{2, Float32}\nsample_location_sub_pixel_bits::Integer\nvariable_sample_locations::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceSampleLocationsPropertiesEXT(sample_location_sample_counts::SampleCountFlag, max_sample_location_grid_size::_Extent2D, sample_location_coordinate_range::Tuple{Float32, Float32}, sample_location_sub_pixel_bits::Integer, variable_sample_locations::Bool; next) -> _PhysicalDeviceSampleLocationsPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceSamplerFilterMinmaxProperties","page":"API","title":"Vulkan._PhysicalDeviceSamplerFilterMinmaxProperties","text":"Intermediate wrapper for VkPhysicalDeviceSamplerFilterMinmaxProperties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSamplerFilterMinmaxProperties.html\n\nstruct _PhysicalDeviceSamplerFilterMinmaxProperties <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceSamplerFilterMinmaxProperties\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceSamplerFilterMinmaxProperties-Tuple{Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceSamplerFilterMinmaxProperties","text":"_PhysicalDeviceSamplerFilterMinmaxProperties(filter_minmax_single_component_formats::Bool, filter_minmax_image_component_mapping::Bool; next = C_NULL)\n\nArguments:\n\nfilter_minmax_single_component_formats::Bool\nfilter_minmax_image_component_mapping::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceSamplerFilterMinmaxProperties(filter_minmax_single_component_formats::Bool, filter_minmax_image_component_mapping::Bool; next) -> _PhysicalDeviceSamplerFilterMinmaxProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceSamplerYcbcrConversionFeatures","page":"API","title":"Vulkan._PhysicalDeviceSamplerYcbcrConversionFeatures","text":"Intermediate wrapper for VkPhysicalDeviceSamplerYcbcrConversionFeatures.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSamplerYcbcrConversionFeatures.html\n\nstruct _PhysicalDeviceSamplerYcbcrConversionFeatures <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceSamplerYcbcrConversionFeatures\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceSamplerYcbcrConversionFeatures-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceSamplerYcbcrConversionFeatures","text":"_PhysicalDeviceSamplerYcbcrConversionFeatures(sampler_ycbcr_conversion::Bool; next = C_NULL)\n\nArguments:\n\nsampler_ycbcr_conversion::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceSamplerYcbcrConversionFeatures(sampler_ycbcr_conversion::Bool; next) -> _PhysicalDeviceSamplerYcbcrConversionFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceScalarBlockLayoutFeatures","page":"API","title":"Vulkan._PhysicalDeviceScalarBlockLayoutFeatures","text":"Intermediate wrapper for VkPhysicalDeviceScalarBlockLayoutFeatures.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceScalarBlockLayoutFeatures.html\n\nstruct _PhysicalDeviceScalarBlockLayoutFeatures <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceScalarBlockLayoutFeatures\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceScalarBlockLayoutFeatures-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceScalarBlockLayoutFeatures","text":"_PhysicalDeviceScalarBlockLayoutFeatures(scalar_block_layout::Bool; next = C_NULL)\n\nArguments:\n\nscalar_block_layout::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceScalarBlockLayoutFeatures(scalar_block_layout::Bool; next) -> _PhysicalDeviceScalarBlockLayoutFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceSeparateDepthStencilLayoutsFeatures","page":"API","title":"Vulkan._PhysicalDeviceSeparateDepthStencilLayoutsFeatures","text":"Intermediate wrapper for VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures.html\n\nstruct _PhysicalDeviceSeparateDepthStencilLayoutsFeatures <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceSeparateDepthStencilLayoutsFeatures-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceSeparateDepthStencilLayoutsFeatures","text":"_PhysicalDeviceSeparateDepthStencilLayoutsFeatures(separate_depth_stencil_layouts::Bool; next = C_NULL)\n\nArguments:\n\nseparate_depth_stencil_layouts::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceSeparateDepthStencilLayoutsFeatures(separate_depth_stencil_layouts::Bool; next) -> _PhysicalDeviceSeparateDepthStencilLayoutsFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceShaderAtomicFloatFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceShaderAtomicFloatFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceShaderAtomicFloatFeaturesEXT.\n\nExtension: VKEXTshaderatomicfloat\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderAtomicFloatFeaturesEXT.html\n\nstruct _PhysicalDeviceShaderAtomicFloatFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceShaderAtomicFloatFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShaderAtomicFloatFeaturesEXT-NTuple{12, Bool}","page":"API","title":"Vulkan._PhysicalDeviceShaderAtomicFloatFeaturesEXT","text":"_PhysicalDeviceShaderAtomicFloatFeaturesEXT(shader_buffer_float_32_atomics::Bool, shader_buffer_float_32_atomic_add::Bool, shader_buffer_float_64_atomics::Bool, shader_buffer_float_64_atomic_add::Bool, shader_shared_float_32_atomics::Bool, shader_shared_float_32_atomic_add::Bool, shader_shared_float_64_atomics::Bool, shader_shared_float_64_atomic_add::Bool, shader_image_float_32_atomics::Bool, shader_image_float_32_atomic_add::Bool, sparse_image_float_32_atomics::Bool, sparse_image_float_32_atomic_add::Bool; next = C_NULL)\n\nExtension: VK_EXT_shader_atomic_float\n\nArguments:\n\nshader_buffer_float_32_atomics::Bool\nshader_buffer_float_32_atomic_add::Bool\nshader_buffer_float_64_atomics::Bool\nshader_buffer_float_64_atomic_add::Bool\nshader_shared_float_32_atomics::Bool\nshader_shared_float_32_atomic_add::Bool\nshader_shared_float_64_atomics::Bool\nshader_shared_float_64_atomic_add::Bool\nshader_image_float_32_atomics::Bool\nshader_image_float_32_atomic_add::Bool\nsparse_image_float_32_atomics::Bool\nsparse_image_float_32_atomic_add::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceShaderAtomicFloatFeaturesEXT(shader_buffer_float_32_atomics::Bool, shader_buffer_float_32_atomic_add::Bool, shader_buffer_float_64_atomics::Bool, shader_buffer_float_64_atomic_add::Bool, shader_shared_float_32_atomics::Bool, shader_shared_float_32_atomic_add::Bool, shader_shared_float_64_atomics::Bool, shader_shared_float_64_atomic_add::Bool, shader_image_float_32_atomics::Bool, shader_image_float_32_atomic_add::Bool, sparse_image_float_32_atomics::Bool, sparse_image_float_32_atomic_add::Bool; next) -> _PhysicalDeviceShaderAtomicFloatFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceShaderAtomicInt64Features","page":"API","title":"Vulkan._PhysicalDeviceShaderAtomicInt64Features","text":"Intermediate wrapper for VkPhysicalDeviceShaderAtomicInt64Features.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderAtomicInt64Features.html\n\nstruct _PhysicalDeviceShaderAtomicInt64Features <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceShaderAtomicInt64Features\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShaderAtomicInt64Features-Tuple{Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceShaderAtomicInt64Features","text":"_PhysicalDeviceShaderAtomicInt64Features(shader_buffer_int_64_atomics::Bool, shader_shared_int_64_atomics::Bool; next = C_NULL)\n\nArguments:\n\nshader_buffer_int_64_atomics::Bool\nshader_shared_int_64_atomics::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceShaderAtomicInt64Features(shader_buffer_int_64_atomics::Bool, shader_shared_int_64_atomics::Bool; next) -> _PhysicalDeviceShaderAtomicInt64Features\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceShaderClockFeaturesKHR","page":"API","title":"Vulkan._PhysicalDeviceShaderClockFeaturesKHR","text":"Intermediate wrapper for VkPhysicalDeviceShaderClockFeaturesKHR.\n\nExtension: VKKHRshader_clock\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderClockFeaturesKHR.html\n\nstruct _PhysicalDeviceShaderClockFeaturesKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceShaderClockFeaturesKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShaderClockFeaturesKHR-Tuple{Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceShaderClockFeaturesKHR","text":"_PhysicalDeviceShaderClockFeaturesKHR(shader_subgroup_clock::Bool, shader_device_clock::Bool; next = C_NULL)\n\nExtension: VK_KHR_shader_clock\n\nArguments:\n\nshader_subgroup_clock::Bool\nshader_device_clock::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceShaderClockFeaturesKHR(shader_subgroup_clock::Bool, shader_device_clock::Bool; next) -> _PhysicalDeviceShaderClockFeaturesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceShaderCoreProperties2AMD","page":"API","title":"Vulkan._PhysicalDeviceShaderCoreProperties2AMD","text":"Intermediate wrapper for VkPhysicalDeviceShaderCoreProperties2AMD.\n\nExtension: VKAMDshadercoreproperties2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderCoreProperties2AMD.html\n\nstruct _PhysicalDeviceShaderCoreProperties2AMD <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceShaderCoreProperties2AMD\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShaderCoreProperties2AMD-Tuple{ShaderCorePropertiesFlagAMD, Integer}","page":"API","title":"Vulkan._PhysicalDeviceShaderCoreProperties2AMD","text":"_PhysicalDeviceShaderCoreProperties2AMD(shader_core_features::ShaderCorePropertiesFlagAMD, active_compute_unit_count::Integer; next = C_NULL)\n\nExtension: VK_AMD_shader_core_properties2\n\nArguments:\n\nshader_core_features::ShaderCorePropertiesFlagAMD\nactive_compute_unit_count::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceShaderCoreProperties2AMD(shader_core_features::ShaderCorePropertiesFlagAMD, active_compute_unit_count::Integer; next) -> _PhysicalDeviceShaderCoreProperties2AMD\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceShaderCorePropertiesAMD","page":"API","title":"Vulkan._PhysicalDeviceShaderCorePropertiesAMD","text":"Intermediate wrapper for VkPhysicalDeviceShaderCorePropertiesAMD.\n\nExtension: VKAMDshadercoreproperties\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderCorePropertiesAMD.html\n\nstruct _PhysicalDeviceShaderCorePropertiesAMD <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceShaderCorePropertiesAMD\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShaderCorePropertiesAMD-NTuple{14, Integer}","page":"API","title":"Vulkan._PhysicalDeviceShaderCorePropertiesAMD","text":"_PhysicalDeviceShaderCorePropertiesAMD(shader_engine_count::Integer, shader_arrays_per_engine_count::Integer, compute_units_per_shader_array::Integer, simd_per_compute_unit::Integer, wavefronts_per_simd::Integer, wavefront_size::Integer, sgprs_per_simd::Integer, min_sgpr_allocation::Integer, max_sgpr_allocation::Integer, sgpr_allocation_granularity::Integer, vgprs_per_simd::Integer, min_vgpr_allocation::Integer, max_vgpr_allocation::Integer, vgpr_allocation_granularity::Integer; next = C_NULL)\n\nExtension: VK_AMD_shader_core_properties\n\nArguments:\n\nshader_engine_count::Integer\nshader_arrays_per_engine_count::Integer\ncompute_units_per_shader_array::Integer\nsimd_per_compute_unit::Integer\nwavefronts_per_simd::Integer\nwavefront_size::Integer\nsgprs_per_simd::Integer\nmin_sgpr_allocation::Integer\nmax_sgpr_allocation::Integer\nsgpr_allocation_granularity::Integer\nvgprs_per_simd::Integer\nmin_vgpr_allocation::Integer\nmax_vgpr_allocation::Integer\nvgpr_allocation_granularity::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceShaderCorePropertiesAMD(shader_engine_count::Integer, shader_arrays_per_engine_count::Integer, compute_units_per_shader_array::Integer, simd_per_compute_unit::Integer, wavefronts_per_simd::Integer, wavefront_size::Integer, sgprs_per_simd::Integer, min_sgpr_allocation::Integer, max_sgpr_allocation::Integer, sgpr_allocation_granularity::Integer, vgprs_per_simd::Integer, min_vgpr_allocation::Integer, max_vgpr_allocation::Integer, vgpr_allocation_granularity::Integer; next) -> _PhysicalDeviceShaderCorePropertiesAMD\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT.\n\nExtension: VKEXTshaderdemotetohelperinvocation\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT.html\n\nstruct _PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT","text":"_PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT(shader_demote_to_helper_invocation::Bool; next = C_NULL)\n\nExtension: VK_EXT_shader_demote_to_helper_invocation\n\nArguments:\n\nshader_demote_to_helper_invocation::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT(shader_demote_to_helper_invocation::Bool; next) -> _PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceShaderDrawParametersFeatures","page":"API","title":"Vulkan._PhysicalDeviceShaderDrawParametersFeatures","text":"Intermediate wrapper for VkPhysicalDeviceShaderDrawParametersFeatures.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderDrawParametersFeatures.html\n\nstruct _PhysicalDeviceShaderDrawParametersFeatures <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceShaderDrawParametersFeatures\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShaderDrawParametersFeatures-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceShaderDrawParametersFeatures","text":"_PhysicalDeviceShaderDrawParametersFeatures(shader_draw_parameters::Bool; next = C_NULL)\n\nArguments:\n\nshader_draw_parameters::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceShaderDrawParametersFeatures(shader_draw_parameters::Bool; next) -> _PhysicalDeviceShaderDrawParametersFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceShaderFloat16Int8Features","page":"API","title":"Vulkan._PhysicalDeviceShaderFloat16Int8Features","text":"Intermediate wrapper for VkPhysicalDeviceShaderFloat16Int8Features.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderFloat16Int8Features.html\n\nstruct _PhysicalDeviceShaderFloat16Int8Features <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceShaderFloat16Int8Features\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShaderFloat16Int8Features-Tuple{Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceShaderFloat16Int8Features","text":"_PhysicalDeviceShaderFloat16Int8Features(shader_float_16::Bool, shader_int_8::Bool; next = C_NULL)\n\nArguments:\n\nshader_float_16::Bool\nshader_int_8::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceShaderFloat16Int8Features(shader_float_16::Bool, shader_int_8::Bool; next) -> _PhysicalDeviceShaderFloat16Int8Features\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceShaderImageAtomicInt64FeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceShaderImageAtomicInt64FeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT.\n\nExtension: VKEXTshaderimageatomic_int64\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT.html\n\nstruct _PhysicalDeviceShaderImageAtomicInt64FeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShaderImageAtomicInt64FeaturesEXT-Tuple{Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceShaderImageAtomicInt64FeaturesEXT","text":"_PhysicalDeviceShaderImageAtomicInt64FeaturesEXT(shader_image_int_64_atomics::Bool, sparse_image_int_64_atomics::Bool; next = C_NULL)\n\nExtension: VK_EXT_shader_image_atomic_int64\n\nArguments:\n\nshader_image_int_64_atomics::Bool\nsparse_image_int_64_atomics::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceShaderImageAtomicInt64FeaturesEXT(shader_image_int_64_atomics::Bool, sparse_image_int_64_atomics::Bool; next) -> _PhysicalDeviceShaderImageAtomicInt64FeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceShaderImageFootprintFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceShaderImageFootprintFeaturesNV","text":"Intermediate wrapper for VkPhysicalDeviceShaderImageFootprintFeaturesNV.\n\nExtension: VKNVshaderimagefootprint\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderImageFootprintFeaturesNV.html\n\nstruct _PhysicalDeviceShaderImageFootprintFeaturesNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceShaderImageFootprintFeaturesNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShaderImageFootprintFeaturesNV-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceShaderImageFootprintFeaturesNV","text":"_PhysicalDeviceShaderImageFootprintFeaturesNV(image_footprint::Bool; next = C_NULL)\n\nExtension: VK_NV_shader_image_footprint\n\nArguments:\n\nimage_footprint::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceShaderImageFootprintFeaturesNV(image_footprint::Bool; next) -> _PhysicalDeviceShaderImageFootprintFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL","page":"API","title":"Vulkan._PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL","text":"Intermediate wrapper for VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL.\n\nExtension: VKINTELshaderintegerfunctions2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL.html\n\nstruct _PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL","text":"_PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL(shader_integer_functions_2::Bool; next = C_NULL)\n\nExtension: VK_INTEL_shader_integer_functions2\n\nArguments:\n\nshader_integer_functions_2::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL(shader_integer_functions_2::Bool; next) -> _PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceShaderSMBuiltinsFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceShaderSMBuiltinsFeaturesNV","text":"Intermediate wrapper for VkPhysicalDeviceShaderSMBuiltinsFeaturesNV.\n\nExtension: VKNVshadersmbuiltins\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderSMBuiltinsFeaturesNV.html\n\nstruct _PhysicalDeviceShaderSMBuiltinsFeaturesNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceShaderSMBuiltinsFeaturesNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShaderSMBuiltinsFeaturesNV-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceShaderSMBuiltinsFeaturesNV","text":"_PhysicalDeviceShaderSMBuiltinsFeaturesNV(shader_sm_builtins::Bool; next = C_NULL)\n\nExtension: VK_NV_shader_sm_builtins\n\nArguments:\n\nshader_sm_builtins::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceShaderSMBuiltinsFeaturesNV(shader_sm_builtins::Bool; next) -> _PhysicalDeviceShaderSMBuiltinsFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceShaderSMBuiltinsPropertiesNV","page":"API","title":"Vulkan._PhysicalDeviceShaderSMBuiltinsPropertiesNV","text":"Intermediate wrapper for VkPhysicalDeviceShaderSMBuiltinsPropertiesNV.\n\nExtension: VKNVshadersmbuiltins\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderSMBuiltinsPropertiesNV.html\n\nstruct _PhysicalDeviceShaderSMBuiltinsPropertiesNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceShaderSMBuiltinsPropertiesNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShaderSMBuiltinsPropertiesNV-Tuple{Integer, Integer}","page":"API","title":"Vulkan._PhysicalDeviceShaderSMBuiltinsPropertiesNV","text":"_PhysicalDeviceShaderSMBuiltinsPropertiesNV(shader_sm_count::Integer, shader_warps_per_sm::Integer; next = C_NULL)\n\nExtension: VK_NV_shader_sm_builtins\n\nArguments:\n\nshader_sm_count::Integer\nshader_warps_per_sm::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceShaderSMBuiltinsPropertiesNV(shader_sm_count::Integer, shader_warps_per_sm::Integer; next) -> _PhysicalDeviceShaderSMBuiltinsPropertiesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceShaderSubgroupExtendedTypesFeatures","page":"API","title":"Vulkan._PhysicalDeviceShaderSubgroupExtendedTypesFeatures","text":"Intermediate wrapper for VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures.html\n\nstruct _PhysicalDeviceShaderSubgroupExtendedTypesFeatures <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShaderSubgroupExtendedTypesFeatures-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceShaderSubgroupExtendedTypesFeatures","text":"_PhysicalDeviceShaderSubgroupExtendedTypesFeatures(shader_subgroup_extended_types::Bool; next = C_NULL)\n\nArguments:\n\nshader_subgroup_extended_types::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceShaderSubgroupExtendedTypesFeatures(shader_subgroup_extended_types::Bool; next) -> _PhysicalDeviceShaderSubgroupExtendedTypesFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceShaderTerminateInvocationFeaturesKHR","page":"API","title":"Vulkan._PhysicalDeviceShaderTerminateInvocationFeaturesKHR","text":"Intermediate wrapper for VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR.\n\nExtension: VKKHRshaderterminateinvocation\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR.html\n\nstruct _PhysicalDeviceShaderTerminateInvocationFeaturesKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShaderTerminateInvocationFeaturesKHR-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceShaderTerminateInvocationFeaturesKHR","text":"_PhysicalDeviceShaderTerminateInvocationFeaturesKHR(shader_terminate_invocation::Bool; next = C_NULL)\n\nExtension: VK_KHR_shader_terminate_invocation\n\nArguments:\n\nshader_terminate_invocation::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceShaderTerminateInvocationFeaturesKHR(shader_terminate_invocation::Bool; next) -> _PhysicalDeviceShaderTerminateInvocationFeaturesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceShadingRateImageFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceShadingRateImageFeaturesNV","text":"Intermediate wrapper for VkPhysicalDeviceShadingRateImageFeaturesNV.\n\nExtension: VKNVshadingrateimage\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShadingRateImageFeaturesNV.html\n\nstruct _PhysicalDeviceShadingRateImageFeaturesNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceShadingRateImageFeaturesNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShadingRateImageFeaturesNV-Tuple{Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceShadingRateImageFeaturesNV","text":"_PhysicalDeviceShadingRateImageFeaturesNV(shading_rate_image::Bool, shading_rate_coarse_sample_order::Bool; next = C_NULL)\n\nExtension: VK_NV_shading_rate_image\n\nArguments:\n\nshading_rate_image::Bool\nshading_rate_coarse_sample_order::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceShadingRateImageFeaturesNV(shading_rate_image::Bool, shading_rate_coarse_sample_order::Bool; next) -> _PhysicalDeviceShadingRateImageFeaturesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceShadingRateImagePropertiesNV","page":"API","title":"Vulkan._PhysicalDeviceShadingRateImagePropertiesNV","text":"Intermediate wrapper for VkPhysicalDeviceShadingRateImagePropertiesNV.\n\nExtension: VKNVshadingrateimage\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceShadingRateImagePropertiesNV.html\n\nstruct _PhysicalDeviceShadingRateImagePropertiesNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceShadingRateImagePropertiesNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShadingRateImagePropertiesNV-Tuple{_Extent2D, Integer, Integer}","page":"API","title":"Vulkan._PhysicalDeviceShadingRateImagePropertiesNV","text":"_PhysicalDeviceShadingRateImagePropertiesNV(shading_rate_texel_size::_Extent2D, shading_rate_palette_size::Integer, shading_rate_max_coarse_samples::Integer; next = C_NULL)\n\nExtension: VK_NV_shading_rate_image\n\nArguments:\n\nshading_rate_texel_size::_Extent2D\nshading_rate_palette_size::Integer\nshading_rate_max_coarse_samples::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceShadingRateImagePropertiesNV(shading_rate_texel_size::_Extent2D, shading_rate_palette_size::Integer, shading_rate_max_coarse_samples::Integer; next) -> _PhysicalDeviceShadingRateImagePropertiesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceSparseImageFormatInfo2","page":"API","title":"Vulkan._PhysicalDeviceSparseImageFormatInfo2","text":"Intermediate wrapper for VkPhysicalDeviceSparseImageFormatInfo2.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSparseImageFormatInfo2.html\n\nstruct _PhysicalDeviceSparseImageFormatInfo2 <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceSparseImageFormatInfo2\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceSparseImageFormatInfo2-Tuple{Format, ImageType, SampleCountFlag, ImageUsageFlag, ImageTiling}","page":"API","title":"Vulkan._PhysicalDeviceSparseImageFormatInfo2","text":"_PhysicalDeviceSparseImageFormatInfo2(format::Format, type::ImageType, samples::SampleCountFlag, usage::ImageUsageFlag, tiling::ImageTiling; next = C_NULL)\n\nArguments:\n\nformat::Format\ntype::ImageType\nsamples::SampleCountFlag\nusage::ImageUsageFlag\ntiling::ImageTiling\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceSparseImageFormatInfo2(format::Format, type::ImageType, samples::SampleCountFlag, usage::ImageUsageFlag, tiling::ImageTiling; next) -> _PhysicalDeviceSparseImageFormatInfo2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceSparseProperties","page":"API","title":"Vulkan._PhysicalDeviceSparseProperties","text":"Intermediate wrapper for VkPhysicalDeviceSparseProperties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSparseProperties.html\n\nstruct _PhysicalDeviceSparseProperties <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceSparseProperties\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceSparseProperties-NTuple{5, Bool}","page":"API","title":"Vulkan._PhysicalDeviceSparseProperties","text":"_PhysicalDeviceSparseProperties(residency_standard_2_d_block_shape::Bool, residency_standard_2_d_multisample_block_shape::Bool, residency_standard_3_d_block_shape::Bool, residency_aligned_mip_size::Bool, residency_non_resident_strict::Bool)\n\nArguments:\n\nresidency_standard_2_d_block_shape::Bool\nresidency_standard_2_d_multisample_block_shape::Bool\nresidency_standard_3_d_block_shape::Bool\nresidency_aligned_mip_size::Bool\nresidency_non_resident_strict::Bool\n\nAPI documentation\n\n_PhysicalDeviceSparseProperties(residency_standard_2_d_block_shape::Bool, residency_standard_2_d_multisample_block_shape::Bool, residency_standard_3_d_block_shape::Bool, residency_aligned_mip_size::Bool, residency_non_resident_strict::Bool) -> _PhysicalDeviceSparseProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceSubgroupProperties","page":"API","title":"Vulkan._PhysicalDeviceSubgroupProperties","text":"Intermediate wrapper for VkPhysicalDeviceSubgroupProperties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSubgroupProperties.html\n\nstruct _PhysicalDeviceSubgroupProperties <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceSubgroupProperties\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceSubgroupProperties-Tuple{Integer, ShaderStageFlag, SubgroupFeatureFlag, Bool}","page":"API","title":"Vulkan._PhysicalDeviceSubgroupProperties","text":"_PhysicalDeviceSubgroupProperties(subgroup_size::Integer, supported_stages::ShaderStageFlag, supported_operations::SubgroupFeatureFlag, quad_operations_in_all_stages::Bool; next = C_NULL)\n\nArguments:\n\nsubgroup_size::Integer\nsupported_stages::ShaderStageFlag\nsupported_operations::SubgroupFeatureFlag\nquad_operations_in_all_stages::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceSubgroupProperties(subgroup_size::Integer, supported_stages::ShaderStageFlag, supported_operations::SubgroupFeatureFlag, quad_operations_in_all_stages::Bool; next) -> _PhysicalDeviceSubgroupProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceSubgroupSizeControlFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceSubgroupSizeControlFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceSubgroupSizeControlFeaturesEXT.\n\nExtension: VKEXTsubgroupsizecontrol\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSubgroupSizeControlFeaturesEXT.html\n\nstruct _PhysicalDeviceSubgroupSizeControlFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceSubgroupSizeControlFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceSubgroupSizeControlFeaturesEXT-Tuple{Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceSubgroupSizeControlFeaturesEXT","text":"_PhysicalDeviceSubgroupSizeControlFeaturesEXT(subgroup_size_control::Bool, compute_full_subgroups::Bool; next = C_NULL)\n\nExtension: VK_EXT_subgroup_size_control\n\nArguments:\n\nsubgroup_size_control::Bool\ncompute_full_subgroups::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceSubgroupSizeControlFeaturesEXT(subgroup_size_control::Bool, compute_full_subgroups::Bool; next) -> _PhysicalDeviceSubgroupSizeControlFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceSubgroupSizeControlPropertiesEXT","page":"API","title":"Vulkan._PhysicalDeviceSubgroupSizeControlPropertiesEXT","text":"Intermediate wrapper for VkPhysicalDeviceSubgroupSizeControlPropertiesEXT.\n\nExtension: VKEXTsubgroupsizecontrol\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSubgroupSizeControlPropertiesEXT.html\n\nstruct _PhysicalDeviceSubgroupSizeControlPropertiesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceSubgroupSizeControlPropertiesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceSubgroupSizeControlPropertiesEXT-Tuple{Integer, Integer, Integer, ShaderStageFlag}","page":"API","title":"Vulkan._PhysicalDeviceSubgroupSizeControlPropertiesEXT","text":"_PhysicalDeviceSubgroupSizeControlPropertiesEXT(min_subgroup_size::Integer, max_subgroup_size::Integer, max_compute_workgroup_subgroups::Integer, required_subgroup_size_stages::ShaderStageFlag; next = C_NULL)\n\nExtension: VK_EXT_subgroup_size_control\n\nArguments:\n\nmin_subgroup_size::Integer\nmax_subgroup_size::Integer\nmax_compute_workgroup_subgroups::Integer\nrequired_subgroup_size_stages::ShaderStageFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceSubgroupSizeControlPropertiesEXT(min_subgroup_size::Integer, max_subgroup_size::Integer, max_compute_workgroup_subgroups::Integer, required_subgroup_size_stages::ShaderStageFlag; next) -> _PhysicalDeviceSubgroupSizeControlPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceSurfaceInfo2KHR","page":"API","title":"Vulkan._PhysicalDeviceSurfaceInfo2KHR","text":"Intermediate wrapper for VkPhysicalDeviceSurfaceInfo2KHR.\n\nExtension: VKKHRgetsurfacecapabilities2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSurfaceInfo2KHR.html\n\nstruct _PhysicalDeviceSurfaceInfo2KHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceSurfaceInfo2KHR\ndeps::Vector{Any}\nsurface::SurfaceKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceSurfaceInfo2KHR-Tuple{Any}","page":"API","title":"Vulkan._PhysicalDeviceSurfaceInfo2KHR","text":"_PhysicalDeviceSurfaceInfo2KHR(surface; next = C_NULL)\n\nExtension: VK_KHR_get_surface_capabilities2\n\nArguments:\n\nsurface\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceSurfaceInfo2KHR(surface; next) -> _PhysicalDeviceSurfaceInfo2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceSynchronization2FeaturesKHR","page":"API","title":"Vulkan._PhysicalDeviceSynchronization2FeaturesKHR","text":"Intermediate wrapper for VkPhysicalDeviceSynchronization2FeaturesKHR.\n\nExtension: VKKHRsynchronization2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceSynchronization2FeaturesKHR.html\n\nstruct _PhysicalDeviceSynchronization2FeaturesKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceSynchronization2FeaturesKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceSynchronization2FeaturesKHR-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceSynchronization2FeaturesKHR","text":"_PhysicalDeviceSynchronization2FeaturesKHR(synchronization2::Bool; next = C_NULL)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\nsynchronization2::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceSynchronization2FeaturesKHR(synchronization2::Bool; next) -> _PhysicalDeviceSynchronization2FeaturesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceTexelBufferAlignmentFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceTexelBufferAlignmentFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT.\n\nExtension: VKEXTtexelbufferalignment\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT.html\n\nstruct _PhysicalDeviceTexelBufferAlignmentFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceTexelBufferAlignmentFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceTexelBufferAlignmentFeaturesEXT","text":"_PhysicalDeviceTexelBufferAlignmentFeaturesEXT(texel_buffer_alignment::Bool; next = C_NULL)\n\nExtension: VK_EXT_texel_buffer_alignment\n\nArguments:\n\ntexel_buffer_alignment::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceTexelBufferAlignmentFeaturesEXT(texel_buffer_alignment::Bool; next) -> _PhysicalDeviceTexelBufferAlignmentFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceTexelBufferAlignmentPropertiesEXT","page":"API","title":"Vulkan._PhysicalDeviceTexelBufferAlignmentPropertiesEXT","text":"Intermediate wrapper for VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT.\n\nExtension: VKEXTtexelbufferalignment\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT.html\n\nstruct _PhysicalDeviceTexelBufferAlignmentPropertiesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceTexelBufferAlignmentPropertiesEXT-Tuple{Integer, Bool, Integer, Bool}","page":"API","title":"Vulkan._PhysicalDeviceTexelBufferAlignmentPropertiesEXT","text":"_PhysicalDeviceTexelBufferAlignmentPropertiesEXT(storage_texel_buffer_offset_alignment_bytes::Integer, storage_texel_buffer_offset_single_texel_alignment::Bool, uniform_texel_buffer_offset_alignment_bytes::Integer, uniform_texel_buffer_offset_single_texel_alignment::Bool; next = C_NULL)\n\nExtension: VK_EXT_texel_buffer_alignment\n\nArguments:\n\nstorage_texel_buffer_offset_alignment_bytes::Integer\nstorage_texel_buffer_offset_single_texel_alignment::Bool\nuniform_texel_buffer_offset_alignment_bytes::Integer\nuniform_texel_buffer_offset_single_texel_alignment::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceTexelBufferAlignmentPropertiesEXT(storage_texel_buffer_offset_alignment_bytes::Integer, storage_texel_buffer_offset_single_texel_alignment::Bool, uniform_texel_buffer_offset_alignment_bytes::Integer, uniform_texel_buffer_offset_single_texel_alignment::Bool; next) -> _PhysicalDeviceTexelBufferAlignmentPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceTextureCompressionASTCHDRFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceTextureCompressionASTCHDRFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT.\n\nExtension: VKEXTtexturecompressionastc_hdr\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT.html\n\nstruct _PhysicalDeviceTextureCompressionASTCHDRFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceTextureCompressionASTCHDRFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceTextureCompressionASTCHDRFeaturesEXT","text":"_PhysicalDeviceTextureCompressionASTCHDRFeaturesEXT(texture_compression_astc_hdr::Bool; next = C_NULL)\n\nExtension: VK_EXT_texture_compression_astc_hdr\n\nArguments:\n\ntexture_compression_astc_hdr::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceTextureCompressionASTCHDRFeaturesEXT(texture_compression_astc_hdr::Bool; next) -> _PhysicalDeviceTextureCompressionASTCHDRFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceTimelineSemaphoreFeatures","page":"API","title":"Vulkan._PhysicalDeviceTimelineSemaphoreFeatures","text":"Intermediate wrapper for VkPhysicalDeviceTimelineSemaphoreFeatures.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceTimelineSemaphoreFeatures.html\n\nstruct _PhysicalDeviceTimelineSemaphoreFeatures <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceTimelineSemaphoreFeatures\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceTimelineSemaphoreFeatures-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceTimelineSemaphoreFeatures","text":"_PhysicalDeviceTimelineSemaphoreFeatures(timeline_semaphore::Bool; next = C_NULL)\n\nArguments:\n\ntimeline_semaphore::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceTimelineSemaphoreFeatures(timeline_semaphore::Bool; next) -> _PhysicalDeviceTimelineSemaphoreFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceTimelineSemaphoreProperties","page":"API","title":"Vulkan._PhysicalDeviceTimelineSemaphoreProperties","text":"Intermediate wrapper for VkPhysicalDeviceTimelineSemaphoreProperties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceTimelineSemaphoreProperties.html\n\nstruct _PhysicalDeviceTimelineSemaphoreProperties <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceTimelineSemaphoreProperties\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceTimelineSemaphoreProperties-Tuple{Integer}","page":"API","title":"Vulkan._PhysicalDeviceTimelineSemaphoreProperties","text":"_PhysicalDeviceTimelineSemaphoreProperties(max_timeline_semaphore_value_difference::Integer; next = C_NULL)\n\nArguments:\n\nmax_timeline_semaphore_value_difference::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceTimelineSemaphoreProperties(max_timeline_semaphore_value_difference::Integer; next) -> _PhysicalDeviceTimelineSemaphoreProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceToolPropertiesEXT","page":"API","title":"Vulkan._PhysicalDeviceToolPropertiesEXT","text":"Intermediate wrapper for VkPhysicalDeviceToolPropertiesEXT.\n\nExtension: VKEXTtooling_info\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceToolPropertiesEXT.html\n\nstruct _PhysicalDeviceToolPropertiesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceToolPropertiesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceToolPropertiesEXT-Tuple{AbstractString, AbstractString, ToolPurposeFlagEXT, AbstractString, AbstractString}","page":"API","title":"Vulkan._PhysicalDeviceToolPropertiesEXT","text":"_PhysicalDeviceToolPropertiesEXT(name::AbstractString, version::AbstractString, purposes::ToolPurposeFlagEXT, description::AbstractString, layer::AbstractString; next = C_NULL)\n\nExtension: VK_EXT_tooling_info\n\nArguments:\n\nname::AbstractString\nversion::AbstractString\npurposes::ToolPurposeFlagEXT\ndescription::AbstractString\nlayer::AbstractString\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceToolPropertiesEXT(name::AbstractString, version::AbstractString, purposes::ToolPurposeFlagEXT, description::AbstractString, layer::AbstractString; next)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceTransformFeedbackFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceTransformFeedbackFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceTransformFeedbackFeaturesEXT.\n\nExtension: VKEXTtransform_feedback\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceTransformFeedbackFeaturesEXT.html\n\nstruct _PhysicalDeviceTransformFeedbackFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceTransformFeedbackFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceTransformFeedbackFeaturesEXT-Tuple{Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceTransformFeedbackFeaturesEXT","text":"_PhysicalDeviceTransformFeedbackFeaturesEXT(transform_feedback::Bool, geometry_streams::Bool; next = C_NULL)\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\ntransform_feedback::Bool\ngeometry_streams::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceTransformFeedbackFeaturesEXT(transform_feedback::Bool, geometry_streams::Bool; next) -> _PhysicalDeviceTransformFeedbackFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceTransformFeedbackPropertiesEXT","page":"API","title":"Vulkan._PhysicalDeviceTransformFeedbackPropertiesEXT","text":"Intermediate wrapper for VkPhysicalDeviceTransformFeedbackPropertiesEXT.\n\nExtension: VKEXTtransform_feedback\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceTransformFeedbackPropertiesEXT.html\n\nstruct _PhysicalDeviceTransformFeedbackPropertiesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceTransformFeedbackPropertiesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceTransformFeedbackPropertiesEXT-Tuple{Integer, Integer, Integer, Integer, Integer, Integer, Bool, Bool, Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceTransformFeedbackPropertiesEXT","text":"_PhysicalDeviceTransformFeedbackPropertiesEXT(max_transform_feedback_streams::Integer, max_transform_feedback_buffers::Integer, max_transform_feedback_buffer_size::Integer, max_transform_feedback_stream_data_size::Integer, max_transform_feedback_buffer_data_size::Integer, max_transform_feedback_buffer_data_stride::Integer, transform_feedback_queries::Bool, transform_feedback_streams_lines_triangles::Bool, transform_feedback_rasterization_stream_select::Bool, transform_feedback_draw::Bool; next = C_NULL)\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\nmax_transform_feedback_streams::Integer\nmax_transform_feedback_buffers::Integer\nmax_transform_feedback_buffer_size::Integer\nmax_transform_feedback_stream_data_size::Integer\nmax_transform_feedback_buffer_data_size::Integer\nmax_transform_feedback_buffer_data_stride::Integer\ntransform_feedback_queries::Bool\ntransform_feedback_streams_lines_triangles::Bool\ntransform_feedback_rasterization_stream_select::Bool\ntransform_feedback_draw::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceTransformFeedbackPropertiesEXT(max_transform_feedback_streams::Integer, max_transform_feedback_buffers::Integer, max_transform_feedback_buffer_size::Integer, max_transform_feedback_stream_data_size::Integer, max_transform_feedback_buffer_data_size::Integer, max_transform_feedback_buffer_data_stride::Integer, transform_feedback_queries::Bool, transform_feedback_streams_lines_triangles::Bool, transform_feedback_rasterization_stream_select::Bool, transform_feedback_draw::Bool; next) -> _PhysicalDeviceTransformFeedbackPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceUniformBufferStandardLayoutFeatures","page":"API","title":"Vulkan._PhysicalDeviceUniformBufferStandardLayoutFeatures","text":"Intermediate wrapper for VkPhysicalDeviceUniformBufferStandardLayoutFeatures.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceUniformBufferStandardLayoutFeatures.html\n\nstruct _PhysicalDeviceUniformBufferStandardLayoutFeatures <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceUniformBufferStandardLayoutFeatures\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceUniformBufferStandardLayoutFeatures-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceUniformBufferStandardLayoutFeatures","text":"_PhysicalDeviceUniformBufferStandardLayoutFeatures(uniform_buffer_standard_layout::Bool; next = C_NULL)\n\nArguments:\n\nuniform_buffer_standard_layout::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceUniformBufferStandardLayoutFeatures(uniform_buffer_standard_layout::Bool; next) -> _PhysicalDeviceUniformBufferStandardLayoutFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceVariablePointersFeatures","page":"API","title":"Vulkan._PhysicalDeviceVariablePointersFeatures","text":"Intermediate wrapper for VkPhysicalDeviceVariablePointersFeatures.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceVariablePointersFeatures.html\n\nstruct _PhysicalDeviceVariablePointersFeatures <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceVariablePointersFeatures\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceVariablePointersFeatures-Tuple{Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceVariablePointersFeatures","text":"_PhysicalDeviceVariablePointersFeatures(variable_pointers_storage_buffer::Bool, variable_pointers::Bool; next = C_NULL)\n\nArguments:\n\nvariable_pointers_storage_buffer::Bool\nvariable_pointers::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceVariablePointersFeatures(variable_pointers_storage_buffer::Bool, variable_pointers::Bool; next) -> _PhysicalDeviceVariablePointersFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceVertexAttributeDivisorFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceVertexAttributeDivisorFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT.\n\nExtension: VKEXTvertexattributedivisor\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT.html\n\nstruct _PhysicalDeviceVertexAttributeDivisorFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceVertexAttributeDivisorFeaturesEXT-Tuple{Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceVertexAttributeDivisorFeaturesEXT","text":"_PhysicalDeviceVertexAttributeDivisorFeaturesEXT(vertex_attribute_instance_rate_divisor::Bool, vertex_attribute_instance_rate_zero_divisor::Bool; next = C_NULL)\n\nExtension: VK_EXT_vertex_attribute_divisor\n\nArguments:\n\nvertex_attribute_instance_rate_divisor::Bool\nvertex_attribute_instance_rate_zero_divisor::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceVertexAttributeDivisorFeaturesEXT(vertex_attribute_instance_rate_divisor::Bool, vertex_attribute_instance_rate_zero_divisor::Bool; next) -> _PhysicalDeviceVertexAttributeDivisorFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceVertexAttributeDivisorPropertiesEXT","page":"API","title":"Vulkan._PhysicalDeviceVertexAttributeDivisorPropertiesEXT","text":"Intermediate wrapper for VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT.\n\nExtension: VKEXTvertexattributedivisor\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT.html\n\nstruct _PhysicalDeviceVertexAttributeDivisorPropertiesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceVertexAttributeDivisorPropertiesEXT-Tuple{Integer}","page":"API","title":"Vulkan._PhysicalDeviceVertexAttributeDivisorPropertiesEXT","text":"_PhysicalDeviceVertexAttributeDivisorPropertiesEXT(max_vertex_attrib_divisor::Integer; next = C_NULL)\n\nExtension: VK_EXT_vertex_attribute_divisor\n\nArguments:\n\nmax_vertex_attrib_divisor::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceVertexAttributeDivisorPropertiesEXT(max_vertex_attrib_divisor::Integer; next) -> _PhysicalDeviceVertexAttributeDivisorPropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceVertexInputDynamicStateFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceVertexInputDynamicStateFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT.\n\nExtension: VKEXTvertexinputdynamic_state\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT.html\n\nstruct _PhysicalDeviceVertexInputDynamicStateFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceVertexInputDynamicStateFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceVertexInputDynamicStateFeaturesEXT","text":"_PhysicalDeviceVertexInputDynamicStateFeaturesEXT(vertex_input_dynamic_state::Bool; next = C_NULL)\n\nExtension: VK_EXT_vertex_input_dynamic_state\n\nArguments:\n\nvertex_input_dynamic_state::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceVertexInputDynamicStateFeaturesEXT(vertex_input_dynamic_state::Bool; next) -> _PhysicalDeviceVertexInputDynamicStateFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceVulkan11Features","page":"API","title":"Vulkan._PhysicalDeviceVulkan11Features","text":"Intermediate wrapper for VkPhysicalDeviceVulkan11Features.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceVulkan11Features.html\n\nstruct _PhysicalDeviceVulkan11Features <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceVulkan11Features\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceVulkan11Features-NTuple{12, Bool}","page":"API","title":"Vulkan._PhysicalDeviceVulkan11Features","text":"_PhysicalDeviceVulkan11Features(storage_buffer_16_bit_access::Bool, uniform_and_storage_buffer_16_bit_access::Bool, storage_push_constant_16::Bool, storage_input_output_16::Bool, multiview::Bool, multiview_geometry_shader::Bool, multiview_tessellation_shader::Bool, variable_pointers_storage_buffer::Bool, variable_pointers::Bool, protected_memory::Bool, sampler_ycbcr_conversion::Bool, shader_draw_parameters::Bool; next = C_NULL)\n\nArguments:\n\nstorage_buffer_16_bit_access::Bool\nuniform_and_storage_buffer_16_bit_access::Bool\nstorage_push_constant_16::Bool\nstorage_input_output_16::Bool\nmultiview::Bool\nmultiview_geometry_shader::Bool\nmultiview_tessellation_shader::Bool\nvariable_pointers_storage_buffer::Bool\nvariable_pointers::Bool\nprotected_memory::Bool\nsampler_ycbcr_conversion::Bool\nshader_draw_parameters::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceVulkan11Features(storage_buffer_16_bit_access::Bool, uniform_and_storage_buffer_16_bit_access::Bool, storage_push_constant_16::Bool, storage_input_output_16::Bool, multiview::Bool, multiview_geometry_shader::Bool, multiview_tessellation_shader::Bool, variable_pointers_storage_buffer::Bool, variable_pointers::Bool, protected_memory::Bool, sampler_ycbcr_conversion::Bool, shader_draw_parameters::Bool; next) -> _PhysicalDeviceVulkan11Features\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceVulkan11Properties","page":"API","title":"Vulkan._PhysicalDeviceVulkan11Properties","text":"Intermediate wrapper for VkPhysicalDeviceVulkan11Properties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceVulkan11Properties.html\n\nstruct _PhysicalDeviceVulkan11Properties <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceVulkan11Properties\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceVulkan11Properties-Tuple{NTuple{16, UInt8}, NTuple{16, UInt8}, NTuple{8, UInt8}, Integer, Bool, Integer, ShaderStageFlag, SubgroupFeatureFlag, Bool, PointClippingBehavior, Integer, Integer, Bool, Integer, Integer}","page":"API","title":"Vulkan._PhysicalDeviceVulkan11Properties","text":"_PhysicalDeviceVulkan11Properties(device_uuid::NTuple{Int(VK_UUID_SIZE), UInt8}, driver_uuid::NTuple{Int(VK_UUID_SIZE), UInt8}, device_luid::NTuple{Int(VK_LUID_SIZE), UInt8}, device_node_mask::Integer, device_luid_valid::Bool, subgroup_size::Integer, subgroup_supported_stages::ShaderStageFlag, subgroup_supported_operations::SubgroupFeatureFlag, subgroup_quad_operations_in_all_stages::Bool, point_clipping_behavior::PointClippingBehavior, max_multiview_view_count::Integer, max_multiview_instance_index::Integer, protected_no_fault::Bool, max_per_set_descriptors::Integer, max_memory_allocation_size::Integer; next = C_NULL)\n\nArguments:\n\ndevice_uuid::NTuple{Int(VK_UUID_SIZE), UInt8}\ndriver_uuid::NTuple{Int(VK_UUID_SIZE), UInt8}\ndevice_luid::NTuple{Int(VK_LUID_SIZE), UInt8}\ndevice_node_mask::Integer\ndevice_luid_valid::Bool\nsubgroup_size::Integer\nsubgroup_supported_stages::ShaderStageFlag\nsubgroup_supported_operations::SubgroupFeatureFlag\nsubgroup_quad_operations_in_all_stages::Bool\npoint_clipping_behavior::PointClippingBehavior\nmax_multiview_view_count::Integer\nmax_multiview_instance_index::Integer\nprotected_no_fault::Bool\nmax_per_set_descriptors::Integer\nmax_memory_allocation_size::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceVulkan11Properties(device_uuid::NTuple{16, UInt8}, driver_uuid::NTuple{16, UInt8}, device_luid::NTuple{8, UInt8}, device_node_mask::Integer, device_luid_valid::Bool, subgroup_size::Integer, subgroup_supported_stages::ShaderStageFlag, subgroup_supported_operations::SubgroupFeatureFlag, subgroup_quad_operations_in_all_stages::Bool, point_clipping_behavior::PointClippingBehavior, max_multiview_view_count::Integer, max_multiview_instance_index::Integer, protected_no_fault::Bool, max_per_set_descriptors::Integer, max_memory_allocation_size::Integer; next) -> _PhysicalDeviceVulkan11Properties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceVulkan12Features","page":"API","title":"Vulkan._PhysicalDeviceVulkan12Features","text":"Intermediate wrapper for VkPhysicalDeviceVulkan12Features.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceVulkan12Features.html\n\nstruct _PhysicalDeviceVulkan12Features <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceVulkan12Features\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceVulkan12Features-NTuple{47, Bool}","page":"API","title":"Vulkan._PhysicalDeviceVulkan12Features","text":"_PhysicalDeviceVulkan12Features(sampler_mirror_clamp_to_edge::Bool, draw_indirect_count::Bool, storage_buffer_8_bit_access::Bool, uniform_and_storage_buffer_8_bit_access::Bool, storage_push_constant_8::Bool, shader_buffer_int_64_atomics::Bool, shader_shared_int_64_atomics::Bool, shader_float_16::Bool, shader_int_8::Bool, descriptor_indexing::Bool, shader_input_attachment_array_dynamic_indexing::Bool, shader_uniform_texel_buffer_array_dynamic_indexing::Bool, shader_storage_texel_buffer_array_dynamic_indexing::Bool, shader_uniform_buffer_array_non_uniform_indexing::Bool, shader_sampled_image_array_non_uniform_indexing::Bool, shader_storage_buffer_array_non_uniform_indexing::Bool, shader_storage_image_array_non_uniform_indexing::Bool, shader_input_attachment_array_non_uniform_indexing::Bool, shader_uniform_texel_buffer_array_non_uniform_indexing::Bool, shader_storage_texel_buffer_array_non_uniform_indexing::Bool, descriptor_binding_uniform_buffer_update_after_bind::Bool, descriptor_binding_sampled_image_update_after_bind::Bool, descriptor_binding_storage_image_update_after_bind::Bool, descriptor_binding_storage_buffer_update_after_bind::Bool, descriptor_binding_uniform_texel_buffer_update_after_bind::Bool, descriptor_binding_storage_texel_buffer_update_after_bind::Bool, descriptor_binding_update_unused_while_pending::Bool, descriptor_binding_partially_bound::Bool, descriptor_binding_variable_descriptor_count::Bool, runtime_descriptor_array::Bool, sampler_filter_minmax::Bool, scalar_block_layout::Bool, imageless_framebuffer::Bool, uniform_buffer_standard_layout::Bool, shader_subgroup_extended_types::Bool, separate_depth_stencil_layouts::Bool, host_query_reset::Bool, timeline_semaphore::Bool, buffer_device_address::Bool, buffer_device_address_capture_replay::Bool, buffer_device_address_multi_device::Bool, vulkan_memory_model::Bool, vulkan_memory_model_device_scope::Bool, vulkan_memory_model_availability_visibility_chains::Bool, shader_output_viewport_index::Bool, shader_output_layer::Bool, subgroup_broadcast_dynamic_id::Bool; next = C_NULL)\n\nArguments:\n\nsampler_mirror_clamp_to_edge::Bool\ndraw_indirect_count::Bool\nstorage_buffer_8_bit_access::Bool\nuniform_and_storage_buffer_8_bit_access::Bool\nstorage_push_constant_8::Bool\nshader_buffer_int_64_atomics::Bool\nshader_shared_int_64_atomics::Bool\nshader_float_16::Bool\nshader_int_8::Bool\ndescriptor_indexing::Bool\nshader_input_attachment_array_dynamic_indexing::Bool\nshader_uniform_texel_buffer_array_dynamic_indexing::Bool\nshader_storage_texel_buffer_array_dynamic_indexing::Bool\nshader_uniform_buffer_array_non_uniform_indexing::Bool\nshader_sampled_image_array_non_uniform_indexing::Bool\nshader_storage_buffer_array_non_uniform_indexing::Bool\nshader_storage_image_array_non_uniform_indexing::Bool\nshader_input_attachment_array_non_uniform_indexing::Bool\nshader_uniform_texel_buffer_array_non_uniform_indexing::Bool\nshader_storage_texel_buffer_array_non_uniform_indexing::Bool\ndescriptor_binding_uniform_buffer_update_after_bind::Bool\ndescriptor_binding_sampled_image_update_after_bind::Bool\ndescriptor_binding_storage_image_update_after_bind::Bool\ndescriptor_binding_storage_buffer_update_after_bind::Bool\ndescriptor_binding_uniform_texel_buffer_update_after_bind::Bool\ndescriptor_binding_storage_texel_buffer_update_after_bind::Bool\ndescriptor_binding_update_unused_while_pending::Bool\ndescriptor_binding_partially_bound::Bool\ndescriptor_binding_variable_descriptor_count::Bool\nruntime_descriptor_array::Bool\nsampler_filter_minmax::Bool\nscalar_block_layout::Bool\nimageless_framebuffer::Bool\nuniform_buffer_standard_layout::Bool\nshader_subgroup_extended_types::Bool\nseparate_depth_stencil_layouts::Bool\nhost_query_reset::Bool\ntimeline_semaphore::Bool\nbuffer_device_address::Bool\nbuffer_device_address_capture_replay::Bool\nbuffer_device_address_multi_device::Bool\nvulkan_memory_model::Bool\nvulkan_memory_model_device_scope::Bool\nvulkan_memory_model_availability_visibility_chains::Bool\nshader_output_viewport_index::Bool\nshader_output_layer::Bool\nsubgroup_broadcast_dynamic_id::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceVulkan12Features(sampler_mirror_clamp_to_edge::Bool, draw_indirect_count::Bool, storage_buffer_8_bit_access::Bool, uniform_and_storage_buffer_8_bit_access::Bool, storage_push_constant_8::Bool, shader_buffer_int_64_atomics::Bool, shader_shared_int_64_atomics::Bool, shader_float_16::Bool, shader_int_8::Bool, descriptor_indexing::Bool, shader_input_attachment_array_dynamic_indexing::Bool, shader_uniform_texel_buffer_array_dynamic_indexing::Bool, shader_storage_texel_buffer_array_dynamic_indexing::Bool, shader_uniform_buffer_array_non_uniform_indexing::Bool, shader_sampled_image_array_non_uniform_indexing::Bool, shader_storage_buffer_array_non_uniform_indexing::Bool, shader_storage_image_array_non_uniform_indexing::Bool, shader_input_attachment_array_non_uniform_indexing::Bool, shader_uniform_texel_buffer_array_non_uniform_indexing::Bool, shader_storage_texel_buffer_array_non_uniform_indexing::Bool, descriptor_binding_uniform_buffer_update_after_bind::Bool, descriptor_binding_sampled_image_update_after_bind::Bool, descriptor_binding_storage_image_update_after_bind::Bool, descriptor_binding_storage_buffer_update_after_bind::Bool, descriptor_binding_uniform_texel_buffer_update_after_bind::Bool, descriptor_binding_storage_texel_buffer_update_after_bind::Bool, descriptor_binding_update_unused_while_pending::Bool, descriptor_binding_partially_bound::Bool, descriptor_binding_variable_descriptor_count::Bool, runtime_descriptor_array::Bool, sampler_filter_minmax::Bool, scalar_block_layout::Bool, imageless_framebuffer::Bool, uniform_buffer_standard_layout::Bool, shader_subgroup_extended_types::Bool, separate_depth_stencil_layouts::Bool, host_query_reset::Bool, timeline_semaphore::Bool, buffer_device_address::Bool, buffer_device_address_capture_replay::Bool, buffer_device_address_multi_device::Bool, vulkan_memory_model::Bool, vulkan_memory_model_device_scope::Bool, vulkan_memory_model_availability_visibility_chains::Bool, shader_output_viewport_index::Bool, shader_output_layer::Bool, subgroup_broadcast_dynamic_id::Bool; next) -> _PhysicalDeviceVulkan12Features\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceVulkan12Properties","page":"API","title":"Vulkan._PhysicalDeviceVulkan12Properties","text":"Intermediate wrapper for VkPhysicalDeviceVulkan12Properties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceVulkan12Properties.html\n\nstruct _PhysicalDeviceVulkan12Properties <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceVulkan12Properties\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceVulkan12Properties-Tuple{DriverId, AbstractString, AbstractString, _ConformanceVersion, ShaderFloatControlsIndependence, ShaderFloatControlsIndependence, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Integer, Bool, Bool, Bool, Bool, Bool, Bool, Bool, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, ResolveModeFlag, ResolveModeFlag, Bool, Bool, Bool, Bool, Integer}","page":"API","title":"Vulkan._PhysicalDeviceVulkan12Properties","text":"_PhysicalDeviceVulkan12Properties(driver_id::DriverId, driver_name::AbstractString, driver_info::AbstractString, conformance_version::_ConformanceVersion, denorm_behavior_independence::ShaderFloatControlsIndependence, rounding_mode_independence::ShaderFloatControlsIndependence, shader_signed_zero_inf_nan_preserve_float_16::Bool, shader_signed_zero_inf_nan_preserve_float_32::Bool, shader_signed_zero_inf_nan_preserve_float_64::Bool, shader_denorm_preserve_float_16::Bool, shader_denorm_preserve_float_32::Bool, shader_denorm_preserve_float_64::Bool, shader_denorm_flush_to_zero_float_16::Bool, shader_denorm_flush_to_zero_float_32::Bool, shader_denorm_flush_to_zero_float_64::Bool, shader_rounding_mode_rte_float_16::Bool, shader_rounding_mode_rte_float_32::Bool, shader_rounding_mode_rte_float_64::Bool, shader_rounding_mode_rtz_float_16::Bool, shader_rounding_mode_rtz_float_32::Bool, shader_rounding_mode_rtz_float_64::Bool, max_update_after_bind_descriptors_in_all_pools::Integer, shader_uniform_buffer_array_non_uniform_indexing_native::Bool, shader_sampled_image_array_non_uniform_indexing_native::Bool, shader_storage_buffer_array_non_uniform_indexing_native::Bool, shader_storage_image_array_non_uniform_indexing_native::Bool, shader_input_attachment_array_non_uniform_indexing_native::Bool, robust_buffer_access_update_after_bind::Bool, quad_divergent_implicit_lod::Bool, max_per_stage_descriptor_update_after_bind_samplers::Integer, max_per_stage_descriptor_update_after_bind_uniform_buffers::Integer, max_per_stage_descriptor_update_after_bind_storage_buffers::Integer, max_per_stage_descriptor_update_after_bind_sampled_images::Integer, max_per_stage_descriptor_update_after_bind_storage_images::Integer, max_per_stage_descriptor_update_after_bind_input_attachments::Integer, max_per_stage_update_after_bind_resources::Integer, max_descriptor_set_update_after_bind_samplers::Integer, max_descriptor_set_update_after_bind_uniform_buffers::Integer, max_descriptor_set_update_after_bind_uniform_buffers_dynamic::Integer, max_descriptor_set_update_after_bind_storage_buffers::Integer, max_descriptor_set_update_after_bind_storage_buffers_dynamic::Integer, max_descriptor_set_update_after_bind_sampled_images::Integer, max_descriptor_set_update_after_bind_storage_images::Integer, max_descriptor_set_update_after_bind_input_attachments::Integer, supported_depth_resolve_modes::ResolveModeFlag, supported_stencil_resolve_modes::ResolveModeFlag, independent_resolve_none::Bool, independent_resolve::Bool, filter_minmax_single_component_formats::Bool, filter_minmax_image_component_mapping::Bool, max_timeline_semaphore_value_difference::Integer; next = C_NULL, framebuffer_integer_color_sample_counts = 0)\n\nArguments:\n\ndriver_id::DriverId\ndriver_name::AbstractString\ndriver_info::AbstractString\nconformance_version::_ConformanceVersion\ndenorm_behavior_independence::ShaderFloatControlsIndependence\nrounding_mode_independence::ShaderFloatControlsIndependence\nshader_signed_zero_inf_nan_preserve_float_16::Bool\nshader_signed_zero_inf_nan_preserve_float_32::Bool\nshader_signed_zero_inf_nan_preserve_float_64::Bool\nshader_denorm_preserve_float_16::Bool\nshader_denorm_preserve_float_32::Bool\nshader_denorm_preserve_float_64::Bool\nshader_denorm_flush_to_zero_float_16::Bool\nshader_denorm_flush_to_zero_float_32::Bool\nshader_denorm_flush_to_zero_float_64::Bool\nshader_rounding_mode_rte_float_16::Bool\nshader_rounding_mode_rte_float_32::Bool\nshader_rounding_mode_rte_float_64::Bool\nshader_rounding_mode_rtz_float_16::Bool\nshader_rounding_mode_rtz_float_32::Bool\nshader_rounding_mode_rtz_float_64::Bool\nmax_update_after_bind_descriptors_in_all_pools::Integer\nshader_uniform_buffer_array_non_uniform_indexing_native::Bool\nshader_sampled_image_array_non_uniform_indexing_native::Bool\nshader_storage_buffer_array_non_uniform_indexing_native::Bool\nshader_storage_image_array_non_uniform_indexing_native::Bool\nshader_input_attachment_array_non_uniform_indexing_native::Bool\nrobust_buffer_access_update_after_bind::Bool\nquad_divergent_implicit_lod::Bool\nmax_per_stage_descriptor_update_after_bind_samplers::Integer\nmax_per_stage_descriptor_update_after_bind_uniform_buffers::Integer\nmax_per_stage_descriptor_update_after_bind_storage_buffers::Integer\nmax_per_stage_descriptor_update_after_bind_sampled_images::Integer\nmax_per_stage_descriptor_update_after_bind_storage_images::Integer\nmax_per_stage_descriptor_update_after_bind_input_attachments::Integer\nmax_per_stage_update_after_bind_resources::Integer\nmax_descriptor_set_update_after_bind_samplers::Integer\nmax_descriptor_set_update_after_bind_uniform_buffers::Integer\nmax_descriptor_set_update_after_bind_uniform_buffers_dynamic::Integer\nmax_descriptor_set_update_after_bind_storage_buffers::Integer\nmax_descriptor_set_update_after_bind_storage_buffers_dynamic::Integer\nmax_descriptor_set_update_after_bind_sampled_images::Integer\nmax_descriptor_set_update_after_bind_storage_images::Integer\nmax_descriptor_set_update_after_bind_input_attachments::Integer\nsupported_depth_resolve_modes::ResolveModeFlag\nsupported_stencil_resolve_modes::ResolveModeFlag\nindependent_resolve_none::Bool\nindependent_resolve::Bool\nfilter_minmax_single_component_formats::Bool\nfilter_minmax_image_component_mapping::Bool\nmax_timeline_semaphore_value_difference::Integer\nnext: defaults to C_NULL\nframebuffer_integer_color_sample_counts: defaults to 0\n\nAPI documentation\n\n_PhysicalDeviceVulkan12Properties(driver_id::DriverId, driver_name::AbstractString, driver_info::AbstractString, conformance_version::_ConformanceVersion, denorm_behavior_independence::ShaderFloatControlsIndependence, rounding_mode_independence::ShaderFloatControlsIndependence, shader_signed_zero_inf_nan_preserve_float_16::Bool, shader_signed_zero_inf_nan_preserve_float_32::Bool, shader_signed_zero_inf_nan_preserve_float_64::Bool, shader_denorm_preserve_float_16::Bool, shader_denorm_preserve_float_32::Bool, shader_denorm_preserve_float_64::Bool, shader_denorm_flush_to_zero_float_16::Bool, shader_denorm_flush_to_zero_float_32::Bool, shader_denorm_flush_to_zero_float_64::Bool, shader_rounding_mode_rte_float_16::Bool, shader_rounding_mode_rte_float_32::Bool, shader_rounding_mode_rte_float_64::Bool, shader_rounding_mode_rtz_float_16::Bool, shader_rounding_mode_rtz_float_32::Bool, shader_rounding_mode_rtz_float_64::Bool, max_update_after_bind_descriptors_in_all_pools::Integer, shader_uniform_buffer_array_non_uniform_indexing_native::Bool, shader_sampled_image_array_non_uniform_indexing_native::Bool, shader_storage_buffer_array_non_uniform_indexing_native::Bool, shader_storage_image_array_non_uniform_indexing_native::Bool, shader_input_attachment_array_non_uniform_indexing_native::Bool, robust_buffer_access_update_after_bind::Bool, quad_divergent_implicit_lod::Bool, max_per_stage_descriptor_update_after_bind_samplers::Integer, max_per_stage_descriptor_update_after_bind_uniform_buffers::Integer, max_per_stage_descriptor_update_after_bind_storage_buffers::Integer, max_per_stage_descriptor_update_after_bind_sampled_images::Integer, max_per_stage_descriptor_update_after_bind_storage_images::Integer, max_per_stage_descriptor_update_after_bind_input_attachments::Integer, max_per_stage_update_after_bind_resources::Integer, max_descriptor_set_update_after_bind_samplers::Integer, max_descriptor_set_update_after_bind_uniform_buffers::Integer, max_descriptor_set_update_after_bind_uniform_buffers_dynamic::Integer, max_descriptor_set_update_after_bind_storage_buffers::Integer, max_descriptor_set_update_after_bind_storage_buffers_dynamic::Integer, max_descriptor_set_update_after_bind_sampled_images::Integer, max_descriptor_set_update_after_bind_storage_images::Integer, max_descriptor_set_update_after_bind_input_attachments::Integer, supported_depth_resolve_modes::ResolveModeFlag, supported_stencil_resolve_modes::ResolveModeFlag, independent_resolve_none::Bool, independent_resolve::Bool, filter_minmax_single_component_formats::Bool, filter_minmax_image_component_mapping::Bool, max_timeline_semaphore_value_difference::Integer; next, framebuffer_integer_color_sample_counts)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceVulkanMemoryModelFeatures","page":"API","title":"Vulkan._PhysicalDeviceVulkanMemoryModelFeatures","text":"Intermediate wrapper for VkPhysicalDeviceVulkanMemoryModelFeatures.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceVulkanMemoryModelFeatures.html\n\nstruct _PhysicalDeviceVulkanMemoryModelFeatures <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceVulkanMemoryModelFeatures\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceVulkanMemoryModelFeatures-Tuple{Bool, Bool, Bool}","page":"API","title":"Vulkan._PhysicalDeviceVulkanMemoryModelFeatures","text":"_PhysicalDeviceVulkanMemoryModelFeatures(vulkan_memory_model::Bool, vulkan_memory_model_device_scope::Bool, vulkan_memory_model_availability_visibility_chains::Bool; next = C_NULL)\n\nArguments:\n\nvulkan_memory_model::Bool\nvulkan_memory_model_device_scope::Bool\nvulkan_memory_model_availability_visibility_chains::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceVulkanMemoryModelFeatures(vulkan_memory_model::Bool, vulkan_memory_model_device_scope::Bool, vulkan_memory_model_availability_visibility_chains::Bool; next) -> _PhysicalDeviceVulkanMemoryModelFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR","page":"API","title":"Vulkan._PhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR","text":"Intermediate wrapper for VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR.\n\nExtension: VKKHRworkgroupmemoryexplicit_layout\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR.html\n\nstruct _PhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR-NTuple{4, Bool}","page":"API","title":"Vulkan._PhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR","text":"_PhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR(workgroup_memory_explicit_layout::Bool, workgroup_memory_explicit_layout_scalar_block_layout::Bool, workgroup_memory_explicit_layout_8_bit_access::Bool, workgroup_memory_explicit_layout_16_bit_access::Bool; next = C_NULL)\n\nExtension: VK_KHR_workgroup_memory_explicit_layout\n\nArguments:\n\nworkgroup_memory_explicit_layout::Bool\nworkgroup_memory_explicit_layout_scalar_block_layout::Bool\nworkgroup_memory_explicit_layout_8_bit_access::Bool\nworkgroup_memory_explicit_layout_16_bit_access::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR(workgroup_memory_explicit_layout::Bool, workgroup_memory_explicit_layout_scalar_block_layout::Bool, workgroup_memory_explicit_layout_8_bit_access::Bool, workgroup_memory_explicit_layout_16_bit_access::Bool; next) -> _PhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT.\n\nExtension: VKEXTycbcr2plane444_formats\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT.html\n\nstruct _PhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT","text":"_PhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT(ycbcr_444_formats::Bool; next = C_NULL)\n\nExtension: VK_EXT_ycbcr_2plane_444_formats\n\nArguments:\n\nycbcr_444_formats::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT(ycbcr_444_formats::Bool; next) -> _PhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceYcbcrImageArraysFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceYcbcrImageArraysFeaturesEXT","text":"Intermediate wrapper for VkPhysicalDeviceYcbcrImageArraysFeaturesEXT.\n\nExtension: VKEXTycbcrimagearrays\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceYcbcrImageArraysFeaturesEXT.html\n\nstruct _PhysicalDeviceYcbcrImageArraysFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceYcbcrImageArraysFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceYcbcrImageArraysFeaturesEXT-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceYcbcrImageArraysFeaturesEXT","text":"_PhysicalDeviceYcbcrImageArraysFeaturesEXT(ycbcr_image_arrays::Bool; next = C_NULL)\n\nExtension: VK_EXT_ycbcr_image_arrays\n\nArguments:\n\nycbcr_image_arrays::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceYcbcrImageArraysFeaturesEXT(ycbcr_image_arrays::Bool; next) -> _PhysicalDeviceYcbcrImageArraysFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR","page":"API","title":"Vulkan._PhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR","text":"Intermediate wrapper for VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR.\n\nExtension: VKKHRzeroinitializeworkgroup_memory\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR.html\n\nstruct _PhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR-Tuple{Bool}","page":"API","title":"Vulkan._PhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR","text":"_PhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR(shader_zero_initialize_workgroup_memory::Bool; next = C_NULL)\n\nExtension: VK_KHR_zero_initialize_workgroup_memory\n\nArguments:\n\nshader_zero_initialize_workgroup_memory::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR(shader_zero_initialize_workgroup_memory::Bool; next) -> _PhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineCacheCreateInfo","page":"API","title":"Vulkan._PipelineCacheCreateInfo","text":"Intermediate wrapper for VkPipelineCacheCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineCacheCreateInfo.html\n\nstruct _PipelineCacheCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineCacheCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineCacheCreateInfo-Tuple{Ptr{Nothing}}","page":"API","title":"Vulkan._PipelineCacheCreateInfo","text":"_PipelineCacheCreateInfo(initial_data::Ptr{Cvoid}; next = C_NULL, flags = 0, initial_data_size = 0)\n\nArguments:\n\ninitial_data::Ptr{Cvoid}\nnext: defaults to C_NULL\nflags: defaults to 0\ninitial_data_size: defaults to 0\n\nAPI documentation\n\n_PipelineCacheCreateInfo(initial_data::Ptr{Nothing}; next, flags, initial_data_size) -> _PipelineCacheCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineColorBlendAdvancedStateCreateInfoEXT","page":"API","title":"Vulkan._PipelineColorBlendAdvancedStateCreateInfoEXT","text":"Intermediate wrapper for VkPipelineColorBlendAdvancedStateCreateInfoEXT.\n\nExtension: VKEXTblendoperationadvanced\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineColorBlendAdvancedStateCreateInfoEXT.html\n\nstruct _PipelineColorBlendAdvancedStateCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineColorBlendAdvancedStateCreateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineColorBlendAdvancedStateCreateInfoEXT-Tuple{Bool, Bool, BlendOverlapEXT}","page":"API","title":"Vulkan._PipelineColorBlendAdvancedStateCreateInfoEXT","text":"_PipelineColorBlendAdvancedStateCreateInfoEXT(src_premultiplied::Bool, dst_premultiplied::Bool, blend_overlap::BlendOverlapEXT; next = C_NULL)\n\nExtension: VK_EXT_blend_operation_advanced\n\nArguments:\n\nsrc_premultiplied::Bool\ndst_premultiplied::Bool\nblend_overlap::BlendOverlapEXT\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PipelineColorBlendAdvancedStateCreateInfoEXT(src_premultiplied::Bool, dst_premultiplied::Bool, blend_overlap::BlendOverlapEXT; next) -> _PipelineColorBlendAdvancedStateCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineColorBlendAttachmentState","page":"API","title":"Vulkan._PipelineColorBlendAttachmentState","text":"Intermediate wrapper for VkPipelineColorBlendAttachmentState.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineColorBlendAttachmentState.html\n\nstruct _PipelineColorBlendAttachmentState <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkPipelineColorBlendAttachmentState\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineColorBlendAttachmentState-Tuple{Bool, BlendFactor, BlendFactor, BlendOp, BlendFactor, BlendFactor, BlendOp}","page":"API","title":"Vulkan._PipelineColorBlendAttachmentState","text":"_PipelineColorBlendAttachmentState(blend_enable::Bool, src_color_blend_factor::BlendFactor, dst_color_blend_factor::BlendFactor, color_blend_op::BlendOp, src_alpha_blend_factor::BlendFactor, dst_alpha_blend_factor::BlendFactor, alpha_blend_op::BlendOp; color_write_mask = 0)\n\nArguments:\n\nblend_enable::Bool\nsrc_color_blend_factor::BlendFactor\ndst_color_blend_factor::BlendFactor\ncolor_blend_op::BlendOp\nsrc_alpha_blend_factor::BlendFactor\ndst_alpha_blend_factor::BlendFactor\nalpha_blend_op::BlendOp\ncolor_write_mask: defaults to 0\n\nAPI documentation\n\n_PipelineColorBlendAttachmentState(blend_enable::Bool, src_color_blend_factor::BlendFactor, dst_color_blend_factor::BlendFactor, color_blend_op::BlendOp, src_alpha_blend_factor::BlendFactor, dst_alpha_blend_factor::BlendFactor, alpha_blend_op::BlendOp; color_write_mask) -> _PipelineColorBlendAttachmentState\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineColorBlendStateCreateInfo","page":"API","title":"Vulkan._PipelineColorBlendStateCreateInfo","text":"Intermediate wrapper for VkPipelineColorBlendStateCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineColorBlendStateCreateInfo.html\n\nstruct _PipelineColorBlendStateCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineColorBlendStateCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineColorBlendStateCreateInfo-Tuple{Bool, LogicOp, AbstractArray, NTuple{4, Float32}}","page":"API","title":"Vulkan._PipelineColorBlendStateCreateInfo","text":"_PipelineColorBlendStateCreateInfo(logic_op_enable::Bool, logic_op::LogicOp, attachments::AbstractArray{_PipelineColorBlendAttachmentState}, blend_constants::NTuple{4, Float32}; next = C_NULL, flags = 0)\n\nArguments:\n\nlogic_op_enable::Bool\nlogic_op::LogicOp\nattachments::AbstractArray{_PipelineColorBlendAttachmentState}\nblend_constants::NTuple{4, Float32}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_PipelineColorBlendStateCreateInfo(logic_op_enable::Bool, logic_op::LogicOp, attachments::AbstractArray, blend_constants::NTuple{4, Float32}; next, flags) -> _PipelineColorBlendStateCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineColorWriteCreateInfoEXT","page":"API","title":"Vulkan._PipelineColorWriteCreateInfoEXT","text":"Intermediate wrapper for VkPipelineColorWriteCreateInfoEXT.\n\nExtension: VKEXTcolorwriteenable\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineColorWriteCreateInfoEXT.html\n\nstruct _PipelineColorWriteCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineColorWriteCreateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineColorWriteCreateInfoEXT-Tuple{AbstractArray}","page":"API","title":"Vulkan._PipelineColorWriteCreateInfoEXT","text":"_PipelineColorWriteCreateInfoEXT(color_write_enables::AbstractArray{Bool}; next = C_NULL)\n\nExtension: VK_EXT_color_write_enable\n\nArguments:\n\ncolor_write_enables::AbstractArray{Bool}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PipelineColorWriteCreateInfoEXT(color_write_enables::AbstractArray; next) -> _PipelineColorWriteCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineCompilerControlCreateInfoAMD","page":"API","title":"Vulkan._PipelineCompilerControlCreateInfoAMD","text":"Intermediate wrapper for VkPipelineCompilerControlCreateInfoAMD.\n\nExtension: VKAMDpipelinecompilercontrol\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineCompilerControlCreateInfoAMD.html\n\nstruct _PipelineCompilerControlCreateInfoAMD <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineCompilerControlCreateInfoAMD\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineCompilerControlCreateInfoAMD-Tuple{}","page":"API","title":"Vulkan._PipelineCompilerControlCreateInfoAMD","text":"_PipelineCompilerControlCreateInfoAMD(; next = C_NULL, compiler_control_flags = 0)\n\nExtension: VK_AMD_pipeline_compiler_control\n\nArguments:\n\nnext: defaults to C_NULL\ncompiler_control_flags: defaults to 0\n\nAPI documentation\n\n_PipelineCompilerControlCreateInfoAMD(; next, compiler_control_flags) -> _PipelineCompilerControlCreateInfoAMD\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineCoverageModulationStateCreateInfoNV","page":"API","title":"Vulkan._PipelineCoverageModulationStateCreateInfoNV","text":"Intermediate wrapper for VkPipelineCoverageModulationStateCreateInfoNV.\n\nExtension: VKNVframebuffermixedsamples\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineCoverageModulationStateCreateInfoNV.html\n\nstruct _PipelineCoverageModulationStateCreateInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineCoverageModulationStateCreateInfoNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineCoverageModulationStateCreateInfoNV-Tuple{CoverageModulationModeNV, Bool}","page":"API","title":"Vulkan._PipelineCoverageModulationStateCreateInfoNV","text":"_PipelineCoverageModulationStateCreateInfoNV(coverage_modulation_mode::CoverageModulationModeNV, coverage_modulation_table_enable::Bool; next = C_NULL, flags = 0, coverage_modulation_table = C_NULL)\n\nExtension: VK_NV_framebuffer_mixed_samples\n\nArguments:\n\ncoverage_modulation_mode::CoverageModulationModeNV\ncoverage_modulation_table_enable::Bool\nnext: defaults to C_NULL\nflags: defaults to 0\ncoverage_modulation_table: defaults to C_NULL\n\nAPI documentation\n\n_PipelineCoverageModulationStateCreateInfoNV(coverage_modulation_mode::CoverageModulationModeNV, coverage_modulation_table_enable::Bool; next, flags, coverage_modulation_table) -> _PipelineCoverageModulationStateCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineCoverageReductionStateCreateInfoNV","page":"API","title":"Vulkan._PipelineCoverageReductionStateCreateInfoNV","text":"Intermediate wrapper for VkPipelineCoverageReductionStateCreateInfoNV.\n\nExtension: VKNVcoveragereductionmode\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineCoverageReductionStateCreateInfoNV.html\n\nstruct _PipelineCoverageReductionStateCreateInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineCoverageReductionStateCreateInfoNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineCoverageReductionStateCreateInfoNV-Tuple{CoverageReductionModeNV}","page":"API","title":"Vulkan._PipelineCoverageReductionStateCreateInfoNV","text":"_PipelineCoverageReductionStateCreateInfoNV(coverage_reduction_mode::CoverageReductionModeNV; next = C_NULL, flags = 0)\n\nExtension: VK_NV_coverage_reduction_mode\n\nArguments:\n\ncoverage_reduction_mode::CoverageReductionModeNV\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_PipelineCoverageReductionStateCreateInfoNV(coverage_reduction_mode::CoverageReductionModeNV; next, flags) -> _PipelineCoverageReductionStateCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineCoverageToColorStateCreateInfoNV","page":"API","title":"Vulkan._PipelineCoverageToColorStateCreateInfoNV","text":"Intermediate wrapper for VkPipelineCoverageToColorStateCreateInfoNV.\n\nExtension: VKNVfragmentcoverageto_color\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineCoverageToColorStateCreateInfoNV.html\n\nstruct _PipelineCoverageToColorStateCreateInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineCoverageToColorStateCreateInfoNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineCoverageToColorStateCreateInfoNV-Tuple{Bool}","page":"API","title":"Vulkan._PipelineCoverageToColorStateCreateInfoNV","text":"_PipelineCoverageToColorStateCreateInfoNV(coverage_to_color_enable::Bool; next = C_NULL, flags = 0, coverage_to_color_location = 0)\n\nExtension: VK_NV_fragment_coverage_to_color\n\nArguments:\n\ncoverage_to_color_enable::Bool\nnext: defaults to C_NULL\nflags: defaults to 0\ncoverage_to_color_location: defaults to 0\n\nAPI documentation\n\n_PipelineCoverageToColorStateCreateInfoNV(coverage_to_color_enable::Bool; next, flags, coverage_to_color_location) -> _PipelineCoverageToColorStateCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineCreationFeedbackCreateInfoEXT","page":"API","title":"Vulkan._PipelineCreationFeedbackCreateInfoEXT","text":"Intermediate wrapper for VkPipelineCreationFeedbackCreateInfoEXT.\n\nExtension: VKEXTpipelinecreationfeedback\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineCreationFeedbackCreateInfoEXT.html\n\nstruct _PipelineCreationFeedbackCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineCreationFeedbackCreateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineCreationFeedbackCreateInfoEXT-Tuple{_PipelineCreationFeedbackEXT, AbstractArray}","page":"API","title":"Vulkan._PipelineCreationFeedbackCreateInfoEXT","text":"_PipelineCreationFeedbackCreateInfoEXT(pipeline_creation_feedback::_PipelineCreationFeedbackEXT, pipeline_stage_creation_feedbacks::AbstractArray{_PipelineCreationFeedbackEXT}; next = C_NULL)\n\nExtension: VK_EXT_pipeline_creation_feedback\n\nArguments:\n\npipeline_creation_feedback::_PipelineCreationFeedbackEXT\npipeline_stage_creation_feedbacks::AbstractArray{_PipelineCreationFeedbackEXT}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PipelineCreationFeedbackCreateInfoEXT(pipeline_creation_feedback::_PipelineCreationFeedbackEXT, pipeline_stage_creation_feedbacks::AbstractArray; next) -> _PipelineCreationFeedbackCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineCreationFeedbackEXT","page":"API","title":"Vulkan._PipelineCreationFeedbackEXT","text":"Intermediate wrapper for VkPipelineCreationFeedbackEXT.\n\nExtension: VKEXTpipelinecreationfeedback\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineCreationFeedbackEXT.html\n\nstruct _PipelineCreationFeedbackEXT <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkPipelineCreationFeedbackEXT\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineCreationFeedbackEXT-Tuple{PipelineCreationFeedbackFlagEXT, Integer}","page":"API","title":"Vulkan._PipelineCreationFeedbackEXT","text":"_PipelineCreationFeedbackEXT(flags::PipelineCreationFeedbackFlagEXT, duration::Integer)\n\nExtension: VK_EXT_pipeline_creation_feedback\n\nArguments:\n\nflags::PipelineCreationFeedbackFlagEXT\nduration::Integer\n\nAPI documentation\n\n_PipelineCreationFeedbackEXT(flags::PipelineCreationFeedbackFlagEXT, duration::Integer) -> _PipelineCreationFeedbackEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineDepthStencilStateCreateInfo","page":"API","title":"Vulkan._PipelineDepthStencilStateCreateInfo","text":"Intermediate wrapper for VkPipelineDepthStencilStateCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineDepthStencilStateCreateInfo.html\n\nstruct _PipelineDepthStencilStateCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineDepthStencilStateCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineDepthStencilStateCreateInfo-Tuple{Bool, Bool, CompareOp, Bool, Bool, _StencilOpState, _StencilOpState, Real, Real}","page":"API","title":"Vulkan._PipelineDepthStencilStateCreateInfo","text":"_PipelineDepthStencilStateCreateInfo(depth_test_enable::Bool, depth_write_enable::Bool, depth_compare_op::CompareOp, depth_bounds_test_enable::Bool, stencil_test_enable::Bool, front::_StencilOpState, back::_StencilOpState, min_depth_bounds::Real, max_depth_bounds::Real; next = C_NULL, flags = 0)\n\nArguments:\n\ndepth_test_enable::Bool\ndepth_write_enable::Bool\ndepth_compare_op::CompareOp\ndepth_bounds_test_enable::Bool\nstencil_test_enable::Bool\nfront::_StencilOpState\nback::_StencilOpState\nmin_depth_bounds::Real\nmax_depth_bounds::Real\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_PipelineDepthStencilStateCreateInfo(depth_test_enable::Bool, depth_write_enable::Bool, depth_compare_op::CompareOp, depth_bounds_test_enable::Bool, stencil_test_enable::Bool, front::_StencilOpState, back::_StencilOpState, min_depth_bounds::Real, max_depth_bounds::Real; next, flags) -> _PipelineDepthStencilStateCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineDiscardRectangleStateCreateInfoEXT","page":"API","title":"Vulkan._PipelineDiscardRectangleStateCreateInfoEXT","text":"Intermediate wrapper for VkPipelineDiscardRectangleStateCreateInfoEXT.\n\nExtension: VKEXTdiscard_rectangles\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineDiscardRectangleStateCreateInfoEXT.html\n\nstruct _PipelineDiscardRectangleStateCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineDiscardRectangleStateCreateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineDiscardRectangleStateCreateInfoEXT-Tuple{DiscardRectangleModeEXT, AbstractArray}","page":"API","title":"Vulkan._PipelineDiscardRectangleStateCreateInfoEXT","text":"_PipelineDiscardRectangleStateCreateInfoEXT(discard_rectangle_mode::DiscardRectangleModeEXT, discard_rectangles::AbstractArray{_Rect2D}; next = C_NULL, flags = 0)\n\nExtension: VK_EXT_discard_rectangles\n\nArguments:\n\ndiscard_rectangle_mode::DiscardRectangleModeEXT\ndiscard_rectangles::AbstractArray{_Rect2D}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_PipelineDiscardRectangleStateCreateInfoEXT(discard_rectangle_mode::DiscardRectangleModeEXT, discard_rectangles::AbstractArray; next, flags) -> _PipelineDiscardRectangleStateCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineDynamicStateCreateInfo","page":"API","title":"Vulkan._PipelineDynamicStateCreateInfo","text":"Intermediate wrapper for VkPipelineDynamicStateCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineDynamicStateCreateInfo.html\n\nstruct _PipelineDynamicStateCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineDynamicStateCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineDynamicStateCreateInfo-Tuple{AbstractArray}","page":"API","title":"Vulkan._PipelineDynamicStateCreateInfo","text":"_PipelineDynamicStateCreateInfo(dynamic_states::AbstractArray{DynamicState}; next = C_NULL, flags = 0)\n\nArguments:\n\ndynamic_states::AbstractArray{DynamicState}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_PipelineDynamicStateCreateInfo(dynamic_states::AbstractArray; next, flags) -> _PipelineDynamicStateCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineExecutableInfoKHR","page":"API","title":"Vulkan._PipelineExecutableInfoKHR","text":"Intermediate wrapper for VkPipelineExecutableInfoKHR.\n\nExtension: VKKHRpipelineexecutableproperties\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineExecutableInfoKHR.html\n\nstruct _PipelineExecutableInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineExecutableInfoKHR\ndeps::Vector{Any}\npipeline::Pipeline\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineExecutableInfoKHR-Tuple{Any, Integer}","page":"API","title":"Vulkan._PipelineExecutableInfoKHR","text":"_PipelineExecutableInfoKHR(pipeline, executable_index::Integer; next = C_NULL)\n\nExtension: VK_KHR_pipeline_executable_properties\n\nArguments:\n\npipeline\nexecutable_index::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PipelineExecutableInfoKHR(pipeline, executable_index::Integer; next) -> _PipelineExecutableInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineExecutableInternalRepresentationKHR","page":"API","title":"Vulkan._PipelineExecutableInternalRepresentationKHR","text":"Intermediate wrapper for VkPipelineExecutableInternalRepresentationKHR.\n\nExtension: VKKHRpipelineexecutableproperties\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineExecutableInternalRepresentationKHR.html\n\nstruct _PipelineExecutableInternalRepresentationKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineExecutableInternalRepresentationKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineExecutableInternalRepresentationKHR-Tuple{AbstractString, AbstractString, Bool, Integer}","page":"API","title":"Vulkan._PipelineExecutableInternalRepresentationKHR","text":"_PipelineExecutableInternalRepresentationKHR(name::AbstractString, description::AbstractString, is_text::Bool, data_size::Integer; next = C_NULL, data = C_NULL)\n\nExtension: VK_KHR_pipeline_executable_properties\n\nArguments:\n\nname::AbstractString\ndescription::AbstractString\nis_text::Bool\ndata_size::Integer\nnext: defaults to C_NULL\ndata: defaults to C_NULL\n\nAPI documentation\n\n_PipelineExecutableInternalRepresentationKHR(name::AbstractString, description::AbstractString, is_text::Bool, data_size::Integer; next, data)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineExecutablePropertiesKHR","page":"API","title":"Vulkan._PipelineExecutablePropertiesKHR","text":"Intermediate wrapper for VkPipelineExecutablePropertiesKHR.\n\nExtension: VKKHRpipelineexecutableproperties\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineExecutablePropertiesKHR.html\n\nstruct _PipelineExecutablePropertiesKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineExecutablePropertiesKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineExecutablePropertiesKHR-Tuple{ShaderStageFlag, AbstractString, AbstractString, Integer}","page":"API","title":"Vulkan._PipelineExecutablePropertiesKHR","text":"_PipelineExecutablePropertiesKHR(stages::ShaderStageFlag, name::AbstractString, description::AbstractString, subgroup_size::Integer; next = C_NULL)\n\nExtension: VK_KHR_pipeline_executable_properties\n\nArguments:\n\nstages::ShaderStageFlag\nname::AbstractString\ndescription::AbstractString\nsubgroup_size::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PipelineExecutablePropertiesKHR(stages::ShaderStageFlag, name::AbstractString, description::AbstractString, subgroup_size::Integer; next)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineExecutableStatisticKHR","page":"API","title":"Vulkan._PipelineExecutableStatisticKHR","text":"Intermediate wrapper for VkPipelineExecutableStatisticKHR.\n\nExtension: VKKHRpipelineexecutableproperties\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineExecutableStatisticKHR.html\n\nstruct _PipelineExecutableStatisticKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineExecutableStatisticKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineExecutableStatisticKHR-Tuple{AbstractString, AbstractString, PipelineExecutableStatisticFormatKHR, _PipelineExecutableStatisticValueKHR}","page":"API","title":"Vulkan._PipelineExecutableStatisticKHR","text":"_PipelineExecutableStatisticKHR(name::AbstractString, description::AbstractString, format::PipelineExecutableStatisticFormatKHR, value::_PipelineExecutableStatisticValueKHR; next = C_NULL)\n\nExtension: VK_KHR_pipeline_executable_properties\n\nArguments:\n\nname::AbstractString\ndescription::AbstractString\nformat::PipelineExecutableStatisticFormatKHR\nvalue::_PipelineExecutableStatisticValueKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PipelineExecutableStatisticKHR(name::AbstractString, description::AbstractString, format::PipelineExecutableStatisticFormatKHR, value::_PipelineExecutableStatisticValueKHR; next)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineExecutableStatisticValueKHR","page":"API","title":"Vulkan._PipelineExecutableStatisticValueKHR","text":"Intermediate wrapper for VkPipelineExecutableStatisticValueKHR.\n\nExtension: VKKHRpipelineexecutableproperties\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineExecutableStatisticValueKHR.html\n\nstruct _PipelineExecutableStatisticValueKHR <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkPipelineExecutableStatisticValueKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineFragmentShadingRateEnumStateCreateInfoNV","page":"API","title":"Vulkan._PipelineFragmentShadingRateEnumStateCreateInfoNV","text":"Intermediate wrapper for VkPipelineFragmentShadingRateEnumStateCreateInfoNV.\n\nExtension: VKNVfragmentshadingrate_enums\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineFragmentShadingRateEnumStateCreateInfoNV.html\n\nstruct _PipelineFragmentShadingRateEnumStateCreateInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineFragmentShadingRateEnumStateCreateInfoNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineFragmentShadingRateEnumStateCreateInfoNV-Tuple{FragmentShadingRateTypeNV, FragmentShadingRateNV, Tuple{FragmentShadingRateCombinerOpKHR, FragmentShadingRateCombinerOpKHR}}","page":"API","title":"Vulkan._PipelineFragmentShadingRateEnumStateCreateInfoNV","text":"_PipelineFragmentShadingRateEnumStateCreateInfoNV(shading_rate_type::FragmentShadingRateTypeNV, shading_rate::FragmentShadingRateNV, combiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR}; next = C_NULL)\n\nExtension: VK_NV_fragment_shading_rate_enums\n\nArguments:\n\nshading_rate_type::FragmentShadingRateTypeNV\nshading_rate::FragmentShadingRateNV\ncombiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PipelineFragmentShadingRateEnumStateCreateInfoNV(shading_rate_type::FragmentShadingRateTypeNV, shading_rate::FragmentShadingRateNV, combiner_ops::Tuple{FragmentShadingRateCombinerOpKHR, FragmentShadingRateCombinerOpKHR}; next)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineFragmentShadingRateStateCreateInfoKHR","page":"API","title":"Vulkan._PipelineFragmentShadingRateStateCreateInfoKHR","text":"Intermediate wrapper for VkPipelineFragmentShadingRateStateCreateInfoKHR.\n\nExtension: VKKHRfragmentshadingrate\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineFragmentShadingRateStateCreateInfoKHR.html\n\nstruct _PipelineFragmentShadingRateStateCreateInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineFragmentShadingRateStateCreateInfoKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineFragmentShadingRateStateCreateInfoKHR-Tuple{_Extent2D, Tuple{FragmentShadingRateCombinerOpKHR, FragmentShadingRateCombinerOpKHR}}","page":"API","title":"Vulkan._PipelineFragmentShadingRateStateCreateInfoKHR","text":"_PipelineFragmentShadingRateStateCreateInfoKHR(fragment_size::_Extent2D, combiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR}; next = C_NULL)\n\nExtension: VK_KHR_fragment_shading_rate\n\nArguments:\n\nfragment_size::_Extent2D\ncombiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PipelineFragmentShadingRateStateCreateInfoKHR(fragment_size::_Extent2D, combiner_ops::Tuple{FragmentShadingRateCombinerOpKHR, FragmentShadingRateCombinerOpKHR}; next)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineInfoKHR","page":"API","title":"Vulkan._PipelineInfoKHR","text":"Intermediate wrapper for VkPipelineInfoKHR.\n\nExtension: VKKHRpipelineexecutableproperties\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineInfoKHR.html\n\nstruct _PipelineInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineInfoKHR\ndeps::Vector{Any}\npipeline::Pipeline\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineInfoKHR-Tuple{Any}","page":"API","title":"Vulkan._PipelineInfoKHR","text":"_PipelineInfoKHR(pipeline; next = C_NULL)\n\nExtension: VK_KHR_pipeline_executable_properties\n\nArguments:\n\npipeline\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PipelineInfoKHR(pipeline; next) -> _PipelineInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineInputAssemblyStateCreateInfo","page":"API","title":"Vulkan._PipelineInputAssemblyStateCreateInfo","text":"Intermediate wrapper for VkPipelineInputAssemblyStateCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineInputAssemblyStateCreateInfo.html\n\nstruct _PipelineInputAssemblyStateCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineInputAssemblyStateCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineInputAssemblyStateCreateInfo-Tuple{PrimitiveTopology, Bool}","page":"API","title":"Vulkan._PipelineInputAssemblyStateCreateInfo","text":"_PipelineInputAssemblyStateCreateInfo(topology::PrimitiveTopology, primitive_restart_enable::Bool; next = C_NULL, flags = 0)\n\nArguments:\n\ntopology::PrimitiveTopology\nprimitive_restart_enable::Bool\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_PipelineInputAssemblyStateCreateInfo(topology::PrimitiveTopology, primitive_restart_enable::Bool; next, flags) -> _PipelineInputAssemblyStateCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineLayoutCreateInfo","page":"API","title":"Vulkan._PipelineLayoutCreateInfo","text":"Intermediate wrapper for VkPipelineLayoutCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineLayoutCreateInfo.html\n\nstruct _PipelineLayoutCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineLayoutCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineLayoutCreateInfo-Tuple{AbstractArray, AbstractArray}","page":"API","title":"Vulkan._PipelineLayoutCreateInfo","text":"_PipelineLayoutCreateInfo(set_layouts::AbstractArray{DescriptorSetLayout}, push_constant_ranges::AbstractArray{_PushConstantRange}; next = C_NULL, flags = 0)\n\nArguments:\n\nset_layouts::AbstractArray{DescriptorSetLayout}\npush_constant_ranges::AbstractArray{_PushConstantRange}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_PipelineLayoutCreateInfo(set_layouts::AbstractArray, push_constant_ranges::AbstractArray; next, flags) -> _PipelineLayoutCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineLibraryCreateInfoKHR","page":"API","title":"Vulkan._PipelineLibraryCreateInfoKHR","text":"Intermediate wrapper for VkPipelineLibraryCreateInfoKHR.\n\nExtension: VKKHRpipeline_library\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineLibraryCreateInfoKHR.html\n\nstruct _PipelineLibraryCreateInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineLibraryCreateInfoKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineLibraryCreateInfoKHR-Tuple{AbstractArray}","page":"API","title":"Vulkan._PipelineLibraryCreateInfoKHR","text":"_PipelineLibraryCreateInfoKHR(libraries::AbstractArray{Pipeline}; next = C_NULL)\n\nExtension: VK_KHR_pipeline_library\n\nArguments:\n\nlibraries::AbstractArray{Pipeline}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PipelineLibraryCreateInfoKHR(libraries::AbstractArray; next) -> _PipelineLibraryCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineMultisampleStateCreateInfo","page":"API","title":"Vulkan._PipelineMultisampleStateCreateInfo","text":"Intermediate wrapper for VkPipelineMultisampleStateCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineMultisampleStateCreateInfo.html\n\nstruct _PipelineMultisampleStateCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineMultisampleStateCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineMultisampleStateCreateInfo-Tuple{SampleCountFlag, Bool, Real, Bool, Bool}","page":"API","title":"Vulkan._PipelineMultisampleStateCreateInfo","text":"_PipelineMultisampleStateCreateInfo(rasterization_samples::SampleCountFlag, sample_shading_enable::Bool, min_sample_shading::Real, alpha_to_coverage_enable::Bool, alpha_to_one_enable::Bool; next = C_NULL, flags = 0, sample_mask = C_NULL)\n\nArguments:\n\nrasterization_samples::SampleCountFlag\nsample_shading_enable::Bool\nmin_sample_shading::Real\nalpha_to_coverage_enable::Bool\nalpha_to_one_enable::Bool\nnext: defaults to C_NULL\nflags: defaults to 0\nsample_mask: defaults to C_NULL\n\nAPI documentation\n\n_PipelineMultisampleStateCreateInfo(rasterization_samples::SampleCountFlag, sample_shading_enable::Bool, min_sample_shading::Real, alpha_to_coverage_enable::Bool, alpha_to_one_enable::Bool; next, flags, sample_mask) -> _PipelineMultisampleStateCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineRasterizationConservativeStateCreateInfoEXT","page":"API","title":"Vulkan._PipelineRasterizationConservativeStateCreateInfoEXT","text":"Intermediate wrapper for VkPipelineRasterizationConservativeStateCreateInfoEXT.\n\nExtension: VKEXTconservative_rasterization\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineRasterizationConservativeStateCreateInfoEXT.html\n\nstruct _PipelineRasterizationConservativeStateCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineRasterizationConservativeStateCreateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineRasterizationConservativeStateCreateInfoEXT-Tuple{ConservativeRasterizationModeEXT, Real}","page":"API","title":"Vulkan._PipelineRasterizationConservativeStateCreateInfoEXT","text":"_PipelineRasterizationConservativeStateCreateInfoEXT(conservative_rasterization_mode::ConservativeRasterizationModeEXT, extra_primitive_overestimation_size::Real; next = C_NULL, flags = 0)\n\nExtension: VK_EXT_conservative_rasterization\n\nArguments:\n\nconservative_rasterization_mode::ConservativeRasterizationModeEXT\nextra_primitive_overestimation_size::Real\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_PipelineRasterizationConservativeStateCreateInfoEXT(conservative_rasterization_mode::ConservativeRasterizationModeEXT, extra_primitive_overestimation_size::Real; next, flags) -> _PipelineRasterizationConservativeStateCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineRasterizationDepthClipStateCreateInfoEXT","page":"API","title":"Vulkan._PipelineRasterizationDepthClipStateCreateInfoEXT","text":"Intermediate wrapper for VkPipelineRasterizationDepthClipStateCreateInfoEXT.\n\nExtension: VKEXTdepthclipenable\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineRasterizationDepthClipStateCreateInfoEXT.html\n\nstruct _PipelineRasterizationDepthClipStateCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineRasterizationDepthClipStateCreateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineRasterizationDepthClipStateCreateInfoEXT-Tuple{Bool}","page":"API","title":"Vulkan._PipelineRasterizationDepthClipStateCreateInfoEXT","text":"_PipelineRasterizationDepthClipStateCreateInfoEXT(depth_clip_enable::Bool; next = C_NULL, flags = 0)\n\nExtension: VK_EXT_depth_clip_enable\n\nArguments:\n\ndepth_clip_enable::Bool\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_PipelineRasterizationDepthClipStateCreateInfoEXT(depth_clip_enable::Bool; next, flags) -> _PipelineRasterizationDepthClipStateCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineRasterizationLineStateCreateInfoEXT","page":"API","title":"Vulkan._PipelineRasterizationLineStateCreateInfoEXT","text":"Intermediate wrapper for VkPipelineRasterizationLineStateCreateInfoEXT.\n\nExtension: VKEXTline_rasterization\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineRasterizationLineStateCreateInfoEXT.html\n\nstruct _PipelineRasterizationLineStateCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineRasterizationLineStateCreateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineRasterizationLineStateCreateInfoEXT-Tuple{LineRasterizationModeEXT, Bool, Integer, Integer}","page":"API","title":"Vulkan._PipelineRasterizationLineStateCreateInfoEXT","text":"_PipelineRasterizationLineStateCreateInfoEXT(line_rasterization_mode::LineRasterizationModeEXT, stippled_line_enable::Bool, line_stipple_factor::Integer, line_stipple_pattern::Integer; next = C_NULL)\n\nExtension: VK_EXT_line_rasterization\n\nArguments:\n\nline_rasterization_mode::LineRasterizationModeEXT\nstippled_line_enable::Bool\nline_stipple_factor::Integer\nline_stipple_pattern::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PipelineRasterizationLineStateCreateInfoEXT(line_rasterization_mode::LineRasterizationModeEXT, stippled_line_enable::Bool, line_stipple_factor::Integer, line_stipple_pattern::Integer; next) -> _PipelineRasterizationLineStateCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineRasterizationProvokingVertexStateCreateInfoEXT","page":"API","title":"Vulkan._PipelineRasterizationProvokingVertexStateCreateInfoEXT","text":"Intermediate wrapper for VkPipelineRasterizationProvokingVertexStateCreateInfoEXT.\n\nExtension: VKEXTprovoking_vertex\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineRasterizationProvokingVertexStateCreateInfoEXT.html\n\nstruct _PipelineRasterizationProvokingVertexStateCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineRasterizationProvokingVertexStateCreateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineRasterizationProvokingVertexStateCreateInfoEXT-Tuple{ProvokingVertexModeEXT}","page":"API","title":"Vulkan._PipelineRasterizationProvokingVertexStateCreateInfoEXT","text":"_PipelineRasterizationProvokingVertexStateCreateInfoEXT(provoking_vertex_mode::ProvokingVertexModeEXT; next = C_NULL)\n\nExtension: VK_EXT_provoking_vertex\n\nArguments:\n\nprovoking_vertex_mode::ProvokingVertexModeEXT\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PipelineRasterizationProvokingVertexStateCreateInfoEXT(provoking_vertex_mode::ProvokingVertexModeEXT; next) -> _PipelineRasterizationProvokingVertexStateCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineRasterizationStateCreateInfo","page":"API","title":"Vulkan._PipelineRasterizationStateCreateInfo","text":"Intermediate wrapper for VkPipelineRasterizationStateCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineRasterizationStateCreateInfo.html\n\nstruct _PipelineRasterizationStateCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineRasterizationStateCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineRasterizationStateCreateInfo-Tuple{Bool, Bool, PolygonMode, FrontFace, Bool, Real, Real, Real, Real}","page":"API","title":"Vulkan._PipelineRasterizationStateCreateInfo","text":"_PipelineRasterizationStateCreateInfo(depth_clamp_enable::Bool, rasterizer_discard_enable::Bool, polygon_mode::PolygonMode, front_face::FrontFace, depth_bias_enable::Bool, depth_bias_constant_factor::Real, depth_bias_clamp::Real, depth_bias_slope_factor::Real, line_width::Real; next = C_NULL, flags = 0, cull_mode = 0)\n\nArguments:\n\ndepth_clamp_enable::Bool\nrasterizer_discard_enable::Bool\npolygon_mode::PolygonMode\nfront_face::FrontFace\ndepth_bias_enable::Bool\ndepth_bias_constant_factor::Real\ndepth_bias_clamp::Real\ndepth_bias_slope_factor::Real\nline_width::Real\nnext: defaults to C_NULL\nflags: defaults to 0\ncull_mode: defaults to 0\n\nAPI documentation\n\n_PipelineRasterizationStateCreateInfo(depth_clamp_enable::Bool, rasterizer_discard_enable::Bool, polygon_mode::PolygonMode, front_face::FrontFace, depth_bias_enable::Bool, depth_bias_constant_factor::Real, depth_bias_clamp::Real, depth_bias_slope_factor::Real, line_width::Real; next, flags, cull_mode) -> _PipelineRasterizationStateCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineRasterizationStateRasterizationOrderAMD","page":"API","title":"Vulkan._PipelineRasterizationStateRasterizationOrderAMD","text":"Intermediate wrapper for VkPipelineRasterizationStateRasterizationOrderAMD.\n\nExtension: VKAMDrasterization_order\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineRasterizationStateRasterizationOrderAMD.html\n\nstruct _PipelineRasterizationStateRasterizationOrderAMD <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineRasterizationStateRasterizationOrderAMD\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineRasterizationStateRasterizationOrderAMD-Tuple{RasterizationOrderAMD}","page":"API","title":"Vulkan._PipelineRasterizationStateRasterizationOrderAMD","text":"_PipelineRasterizationStateRasterizationOrderAMD(rasterization_order::RasterizationOrderAMD; next = C_NULL)\n\nExtension: VK_AMD_rasterization_order\n\nArguments:\n\nrasterization_order::RasterizationOrderAMD\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PipelineRasterizationStateRasterizationOrderAMD(rasterization_order::RasterizationOrderAMD; next) -> _PipelineRasterizationStateRasterizationOrderAMD\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineRasterizationStateStreamCreateInfoEXT","page":"API","title":"Vulkan._PipelineRasterizationStateStreamCreateInfoEXT","text":"Intermediate wrapper for VkPipelineRasterizationStateStreamCreateInfoEXT.\n\nExtension: VKEXTtransform_feedback\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineRasterizationStateStreamCreateInfoEXT.html\n\nstruct _PipelineRasterizationStateStreamCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineRasterizationStateStreamCreateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineRasterizationStateStreamCreateInfoEXT-Tuple{Integer}","page":"API","title":"Vulkan._PipelineRasterizationStateStreamCreateInfoEXT","text":"_PipelineRasterizationStateStreamCreateInfoEXT(rasterization_stream::Integer; next = C_NULL, flags = 0)\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\nrasterization_stream::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_PipelineRasterizationStateStreamCreateInfoEXT(rasterization_stream::Integer; next, flags) -> _PipelineRasterizationStateStreamCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineRepresentativeFragmentTestStateCreateInfoNV","page":"API","title":"Vulkan._PipelineRepresentativeFragmentTestStateCreateInfoNV","text":"Intermediate wrapper for VkPipelineRepresentativeFragmentTestStateCreateInfoNV.\n\nExtension: VKNVrepresentativefragmenttest\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineRepresentativeFragmentTestStateCreateInfoNV.html\n\nstruct _PipelineRepresentativeFragmentTestStateCreateInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineRepresentativeFragmentTestStateCreateInfoNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineRepresentativeFragmentTestStateCreateInfoNV-Tuple{Bool}","page":"API","title":"Vulkan._PipelineRepresentativeFragmentTestStateCreateInfoNV","text":"_PipelineRepresentativeFragmentTestStateCreateInfoNV(representative_fragment_test_enable::Bool; next = C_NULL)\n\nExtension: VK_NV_representative_fragment_test\n\nArguments:\n\nrepresentative_fragment_test_enable::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PipelineRepresentativeFragmentTestStateCreateInfoNV(representative_fragment_test_enable::Bool; next) -> _PipelineRepresentativeFragmentTestStateCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineSampleLocationsStateCreateInfoEXT","page":"API","title":"Vulkan._PipelineSampleLocationsStateCreateInfoEXT","text":"Intermediate wrapper for VkPipelineSampleLocationsStateCreateInfoEXT.\n\nExtension: VKEXTsample_locations\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineSampleLocationsStateCreateInfoEXT.html\n\nstruct _PipelineSampleLocationsStateCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineSampleLocationsStateCreateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineSampleLocationsStateCreateInfoEXT-Tuple{Bool, _SampleLocationsInfoEXT}","page":"API","title":"Vulkan._PipelineSampleLocationsStateCreateInfoEXT","text":"_PipelineSampleLocationsStateCreateInfoEXT(sample_locations_enable::Bool, sample_locations_info::_SampleLocationsInfoEXT; next = C_NULL)\n\nExtension: VK_EXT_sample_locations\n\nArguments:\n\nsample_locations_enable::Bool\nsample_locations_info::_SampleLocationsInfoEXT\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PipelineSampleLocationsStateCreateInfoEXT(sample_locations_enable::Bool, sample_locations_info::_SampleLocationsInfoEXT; next) -> _PipelineSampleLocationsStateCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineShaderStageCreateInfo","page":"API","title":"Vulkan._PipelineShaderStageCreateInfo","text":"Intermediate wrapper for VkPipelineShaderStageCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineShaderStageCreateInfo.html\n\nstruct _PipelineShaderStageCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineShaderStageCreateInfo\ndeps::Vector{Any}\n_module::ShaderModule\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineShaderStageCreateInfo-Tuple{ShaderStageFlag, Any, AbstractString}","page":"API","title":"Vulkan._PipelineShaderStageCreateInfo","text":"_PipelineShaderStageCreateInfo(stage::ShaderStageFlag, _module, name::AbstractString; next = C_NULL, flags = 0, specialization_info = C_NULL)\n\nArguments:\n\nstage::ShaderStageFlag\n_module\nname::AbstractString\nnext: defaults to C_NULL\nflags: defaults to 0\nspecialization_info: defaults to C_NULL\n\nAPI documentation\n\n_PipelineShaderStageCreateInfo(stage::ShaderStageFlag, _module, name::AbstractString; next, flags, specialization_info) -> _PipelineShaderStageCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineShaderStageRequiredSubgroupSizeCreateInfoEXT","page":"API","title":"Vulkan._PipelineShaderStageRequiredSubgroupSizeCreateInfoEXT","text":"Intermediate wrapper for VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT.\n\nExtension: VKEXTsubgroupsizecontrol\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT.html\n\nstruct _PipelineShaderStageRequiredSubgroupSizeCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineShaderStageRequiredSubgroupSizeCreateInfoEXT-Tuple{Integer}","page":"API","title":"Vulkan._PipelineShaderStageRequiredSubgroupSizeCreateInfoEXT","text":"_PipelineShaderStageRequiredSubgroupSizeCreateInfoEXT(required_subgroup_size::Integer; next = C_NULL)\n\nExtension: VK_EXT_subgroup_size_control\n\nArguments:\n\nrequired_subgroup_size::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PipelineShaderStageRequiredSubgroupSizeCreateInfoEXT(required_subgroup_size::Integer; next) -> _PipelineShaderStageRequiredSubgroupSizeCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineTessellationDomainOriginStateCreateInfo","page":"API","title":"Vulkan._PipelineTessellationDomainOriginStateCreateInfo","text":"Intermediate wrapper for VkPipelineTessellationDomainOriginStateCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineTessellationDomainOriginStateCreateInfo.html\n\nstruct _PipelineTessellationDomainOriginStateCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineTessellationDomainOriginStateCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineTessellationDomainOriginStateCreateInfo-Tuple{TessellationDomainOrigin}","page":"API","title":"Vulkan._PipelineTessellationDomainOriginStateCreateInfo","text":"_PipelineTessellationDomainOriginStateCreateInfo(domain_origin::TessellationDomainOrigin; next = C_NULL)\n\nArguments:\n\ndomain_origin::TessellationDomainOrigin\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PipelineTessellationDomainOriginStateCreateInfo(domain_origin::TessellationDomainOrigin; next) -> _PipelineTessellationDomainOriginStateCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineTessellationStateCreateInfo","page":"API","title":"Vulkan._PipelineTessellationStateCreateInfo","text":"Intermediate wrapper for VkPipelineTessellationStateCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineTessellationStateCreateInfo.html\n\nstruct _PipelineTessellationStateCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineTessellationStateCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineTessellationStateCreateInfo-Tuple{Integer}","page":"API","title":"Vulkan._PipelineTessellationStateCreateInfo","text":"_PipelineTessellationStateCreateInfo(patch_control_points::Integer; next = C_NULL, flags = 0)\n\nArguments:\n\npatch_control_points::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_PipelineTessellationStateCreateInfo(patch_control_points::Integer; next, flags) -> _PipelineTessellationStateCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineVertexInputDivisorStateCreateInfoEXT","page":"API","title":"Vulkan._PipelineVertexInputDivisorStateCreateInfoEXT","text":"Intermediate wrapper for VkPipelineVertexInputDivisorStateCreateInfoEXT.\n\nExtension: VKEXTvertexattributedivisor\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineVertexInputDivisorStateCreateInfoEXT.html\n\nstruct _PipelineVertexInputDivisorStateCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineVertexInputDivisorStateCreateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineVertexInputDivisorStateCreateInfoEXT-Tuple{AbstractArray}","page":"API","title":"Vulkan._PipelineVertexInputDivisorStateCreateInfoEXT","text":"_PipelineVertexInputDivisorStateCreateInfoEXT(vertex_binding_divisors::AbstractArray{_VertexInputBindingDivisorDescriptionEXT}; next = C_NULL)\n\nExtension: VK_EXT_vertex_attribute_divisor\n\nArguments:\n\nvertex_binding_divisors::AbstractArray{_VertexInputBindingDivisorDescriptionEXT}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PipelineVertexInputDivisorStateCreateInfoEXT(vertex_binding_divisors::AbstractArray; next) -> _PipelineVertexInputDivisorStateCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineVertexInputStateCreateInfo","page":"API","title":"Vulkan._PipelineVertexInputStateCreateInfo","text":"Intermediate wrapper for VkPipelineVertexInputStateCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineVertexInputStateCreateInfo.html\n\nstruct _PipelineVertexInputStateCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineVertexInputStateCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineVertexInputStateCreateInfo-Tuple{AbstractArray, AbstractArray}","page":"API","title":"Vulkan._PipelineVertexInputStateCreateInfo","text":"_PipelineVertexInputStateCreateInfo(vertex_binding_descriptions::AbstractArray{_VertexInputBindingDescription}, vertex_attribute_descriptions::AbstractArray{_VertexInputAttributeDescription}; next = C_NULL, flags = 0)\n\nArguments:\n\nvertex_binding_descriptions::AbstractArray{_VertexInputBindingDescription}\nvertex_attribute_descriptions::AbstractArray{_VertexInputAttributeDescription}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_PipelineVertexInputStateCreateInfo(vertex_binding_descriptions::AbstractArray, vertex_attribute_descriptions::AbstractArray; next, flags) -> _PipelineVertexInputStateCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineViewportCoarseSampleOrderStateCreateInfoNV","page":"API","title":"Vulkan._PipelineViewportCoarseSampleOrderStateCreateInfoNV","text":"Intermediate wrapper for VkPipelineViewportCoarseSampleOrderStateCreateInfoNV.\n\nExtension: VKNVshadingrateimage\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineViewportCoarseSampleOrderStateCreateInfoNV.html\n\nstruct _PipelineViewportCoarseSampleOrderStateCreateInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineViewportCoarseSampleOrderStateCreateInfoNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineViewportCoarseSampleOrderStateCreateInfoNV-Tuple{CoarseSampleOrderTypeNV, AbstractArray}","page":"API","title":"Vulkan._PipelineViewportCoarseSampleOrderStateCreateInfoNV","text":"_PipelineViewportCoarseSampleOrderStateCreateInfoNV(sample_order_type::CoarseSampleOrderTypeNV, custom_sample_orders::AbstractArray{_CoarseSampleOrderCustomNV}; next = C_NULL)\n\nExtension: VK_NV_shading_rate_image\n\nArguments:\n\nsample_order_type::CoarseSampleOrderTypeNV\ncustom_sample_orders::AbstractArray{_CoarseSampleOrderCustomNV}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PipelineViewportCoarseSampleOrderStateCreateInfoNV(sample_order_type::CoarseSampleOrderTypeNV, custom_sample_orders::AbstractArray; next) -> _PipelineViewportCoarseSampleOrderStateCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineViewportExclusiveScissorStateCreateInfoNV","page":"API","title":"Vulkan._PipelineViewportExclusiveScissorStateCreateInfoNV","text":"Intermediate wrapper for VkPipelineViewportExclusiveScissorStateCreateInfoNV.\n\nExtension: VKNVscissor_exclusive\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineViewportExclusiveScissorStateCreateInfoNV.html\n\nstruct _PipelineViewportExclusiveScissorStateCreateInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineViewportExclusiveScissorStateCreateInfoNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineViewportExclusiveScissorStateCreateInfoNV-Tuple{AbstractArray}","page":"API","title":"Vulkan._PipelineViewportExclusiveScissorStateCreateInfoNV","text":"_PipelineViewportExclusiveScissorStateCreateInfoNV(exclusive_scissors::AbstractArray{_Rect2D}; next = C_NULL)\n\nExtension: VK_NV_scissor_exclusive\n\nArguments:\n\nexclusive_scissors::AbstractArray{_Rect2D}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PipelineViewportExclusiveScissorStateCreateInfoNV(exclusive_scissors::AbstractArray; next) -> _PipelineViewportExclusiveScissorStateCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineViewportShadingRateImageStateCreateInfoNV","page":"API","title":"Vulkan._PipelineViewportShadingRateImageStateCreateInfoNV","text":"Intermediate wrapper for VkPipelineViewportShadingRateImageStateCreateInfoNV.\n\nExtension: VKNVshadingrateimage\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineViewportShadingRateImageStateCreateInfoNV.html\n\nstruct _PipelineViewportShadingRateImageStateCreateInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineViewportShadingRateImageStateCreateInfoNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineViewportShadingRateImageStateCreateInfoNV-Tuple{Bool, AbstractArray}","page":"API","title":"Vulkan._PipelineViewportShadingRateImageStateCreateInfoNV","text":"_PipelineViewportShadingRateImageStateCreateInfoNV(shading_rate_image_enable::Bool, shading_rate_palettes::AbstractArray{_ShadingRatePaletteNV}; next = C_NULL)\n\nExtension: VK_NV_shading_rate_image\n\nArguments:\n\nshading_rate_image_enable::Bool\nshading_rate_palettes::AbstractArray{_ShadingRatePaletteNV}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PipelineViewportShadingRateImageStateCreateInfoNV(shading_rate_image_enable::Bool, shading_rate_palettes::AbstractArray; next) -> _PipelineViewportShadingRateImageStateCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineViewportStateCreateInfo","page":"API","title":"Vulkan._PipelineViewportStateCreateInfo","text":"Intermediate wrapper for VkPipelineViewportStateCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineViewportStateCreateInfo.html\n\nstruct _PipelineViewportStateCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineViewportStateCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineViewportStateCreateInfo-Tuple{}","page":"API","title":"Vulkan._PipelineViewportStateCreateInfo","text":"_PipelineViewportStateCreateInfo(; next = C_NULL, flags = 0, viewports = C_NULL, scissors = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\nflags: defaults to 0\nviewports: defaults to C_NULL\nscissors: defaults to C_NULL\n\nAPI documentation\n\n_PipelineViewportStateCreateInfo(; next, flags, viewports, scissors) -> _PipelineViewportStateCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineViewportSwizzleStateCreateInfoNV","page":"API","title":"Vulkan._PipelineViewportSwizzleStateCreateInfoNV","text":"Intermediate wrapper for VkPipelineViewportSwizzleStateCreateInfoNV.\n\nExtension: VKNVviewport_swizzle\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineViewportSwizzleStateCreateInfoNV.html\n\nstruct _PipelineViewportSwizzleStateCreateInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineViewportSwizzleStateCreateInfoNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineViewportSwizzleStateCreateInfoNV-Tuple{AbstractArray}","page":"API","title":"Vulkan._PipelineViewportSwizzleStateCreateInfoNV","text":"_PipelineViewportSwizzleStateCreateInfoNV(viewport_swizzles::AbstractArray{_ViewportSwizzleNV}; next = C_NULL, flags = 0)\n\nExtension: VK_NV_viewport_swizzle\n\nArguments:\n\nviewport_swizzles::AbstractArray{_ViewportSwizzleNV}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_PipelineViewportSwizzleStateCreateInfoNV(viewport_swizzles::AbstractArray; next, flags) -> _PipelineViewportSwizzleStateCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PipelineViewportWScalingStateCreateInfoNV","page":"API","title":"Vulkan._PipelineViewportWScalingStateCreateInfoNV","text":"Intermediate wrapper for VkPipelineViewportWScalingStateCreateInfoNV.\n\nExtension: VKNVclipspacew_scaling\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPipelineViewportWScalingStateCreateInfoNV.html\n\nstruct _PipelineViewportWScalingStateCreateInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPipelineViewportWScalingStateCreateInfoNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineViewportWScalingStateCreateInfoNV-Tuple{Bool}","page":"API","title":"Vulkan._PipelineViewportWScalingStateCreateInfoNV","text":"_PipelineViewportWScalingStateCreateInfoNV(viewport_w_scaling_enable::Bool; next = C_NULL, viewport_w_scalings = C_NULL)\n\nExtension: VK_NV_clip_space_w_scaling\n\nArguments:\n\nviewport_w_scaling_enable::Bool\nnext: defaults to C_NULL\nviewport_w_scalings: defaults to C_NULL\n\nAPI documentation\n\n_PipelineViewportWScalingStateCreateInfoNV(viewport_w_scaling_enable::Bool; next, viewport_w_scalings) -> _PipelineViewportWScalingStateCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PresentInfoKHR","page":"API","title":"Vulkan._PresentInfoKHR","text":"Intermediate wrapper for VkPresentInfoKHR.\n\nExtension: VKKHRswapchain\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPresentInfoKHR.html\n\nstruct _PresentInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPresentInfoKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PresentInfoKHR-Tuple{AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan._PresentInfoKHR","text":"_PresentInfoKHR(wait_semaphores::AbstractArray{Semaphore}, swapchains::AbstractArray{SwapchainKHR}, image_indices::AbstractArray{<:Integer}; next = C_NULL, results = C_NULL)\n\nExtension: VK_KHR_swapchain\n\nArguments:\n\nwait_semaphores::AbstractArray{Semaphore}\nswapchains::AbstractArray{SwapchainKHR}\nimage_indices::AbstractArray{<:Integer}\nnext: defaults to C_NULL\nresults: defaults to C_NULL\n\nAPI documentation\n\n_PresentInfoKHR(wait_semaphores::AbstractArray, swapchains::AbstractArray, image_indices::AbstractArray; next, results) -> _PresentInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PresentRegionKHR","page":"API","title":"Vulkan._PresentRegionKHR","text":"Intermediate wrapper for VkPresentRegionKHR.\n\nExtension: VKKHRincremental_present\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPresentRegionKHR.html\n\nstruct _PresentRegionKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPresentRegionKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PresentRegionKHR-Tuple{}","page":"API","title":"Vulkan._PresentRegionKHR","text":"_PresentRegionKHR(; rectangles = C_NULL)\n\nExtension: VK_KHR_incremental_present\n\nArguments:\n\nrectangles: defaults to C_NULL\n\nAPI documentation\n\n_PresentRegionKHR(; rectangles) -> _PresentRegionKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PresentRegionsKHR","page":"API","title":"Vulkan._PresentRegionsKHR","text":"Intermediate wrapper for VkPresentRegionsKHR.\n\nExtension: VKKHRincremental_present\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPresentRegionsKHR.html\n\nstruct _PresentRegionsKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPresentRegionsKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PresentRegionsKHR-Tuple{}","page":"API","title":"Vulkan._PresentRegionsKHR","text":"_PresentRegionsKHR(; next = C_NULL, regions = C_NULL)\n\nExtension: VK_KHR_incremental_present\n\nArguments:\n\nnext: defaults to C_NULL\nregions: defaults to C_NULL\n\nAPI documentation\n\n_PresentRegionsKHR(; next, regions) -> _PresentRegionsKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PresentTimeGOOGLE","page":"API","title":"Vulkan._PresentTimeGOOGLE","text":"Intermediate wrapper for VkPresentTimeGOOGLE.\n\nExtension: VKGOOGLEdisplay_timing\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPresentTimeGOOGLE.html\n\nstruct _PresentTimeGOOGLE <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkPresentTimeGOOGLE\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PresentTimeGOOGLE-Tuple{Integer, Integer}","page":"API","title":"Vulkan._PresentTimeGOOGLE","text":"_PresentTimeGOOGLE(present_id::Integer, desired_present_time::Integer)\n\nExtension: VK_GOOGLE_display_timing\n\nArguments:\n\npresent_id::Integer\ndesired_present_time::Integer\n\nAPI documentation\n\n_PresentTimeGOOGLE(present_id::Integer, desired_present_time::Integer) -> _PresentTimeGOOGLE\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PresentTimesInfoGOOGLE","page":"API","title":"Vulkan._PresentTimesInfoGOOGLE","text":"Intermediate wrapper for VkPresentTimesInfoGOOGLE.\n\nExtension: VKGOOGLEdisplay_timing\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPresentTimesInfoGOOGLE.html\n\nstruct _PresentTimesInfoGOOGLE <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPresentTimesInfoGOOGLE\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PresentTimesInfoGOOGLE-Tuple{}","page":"API","title":"Vulkan._PresentTimesInfoGOOGLE","text":"_PresentTimesInfoGOOGLE(; next = C_NULL, times = C_NULL)\n\nExtension: VK_GOOGLE_display_timing\n\nArguments:\n\nnext: defaults to C_NULL\ntimes: defaults to C_NULL\n\nAPI documentation\n\n_PresentTimesInfoGOOGLE(; next, times) -> _PresentTimesInfoGOOGLE\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PrivateDataSlotCreateInfoEXT","page":"API","title":"Vulkan._PrivateDataSlotCreateInfoEXT","text":"Intermediate wrapper for VkPrivateDataSlotCreateInfoEXT.\n\nExtension: VKEXTprivate_data\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPrivateDataSlotCreateInfoEXT.html\n\nstruct _PrivateDataSlotCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkPrivateDataSlotCreateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PrivateDataSlotCreateInfoEXT-Tuple{PrivateDataSlotCreateFlagEXT}","page":"API","title":"Vulkan._PrivateDataSlotCreateInfoEXT","text":"_PrivateDataSlotCreateInfoEXT(flags::PrivateDataSlotCreateFlagEXT; next = C_NULL)\n\nExtension: VK_EXT_private_data\n\nArguments:\n\nflags::PrivateDataSlotCreateFlagEXT\nnext: defaults to C_NULL\n\nAPI documentation\n\n_PrivateDataSlotCreateInfoEXT(flags::PrivateDataSlotCreateFlagEXT; next) -> _PrivateDataSlotCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ProtectedSubmitInfo","page":"API","title":"Vulkan._ProtectedSubmitInfo","text":"Intermediate wrapper for VkProtectedSubmitInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkProtectedSubmitInfo.html\n\nstruct _ProtectedSubmitInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkProtectedSubmitInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ProtectedSubmitInfo-Tuple{Bool}","page":"API","title":"Vulkan._ProtectedSubmitInfo","text":"_ProtectedSubmitInfo(protected_submit::Bool; next = C_NULL)\n\nArguments:\n\nprotected_submit::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_ProtectedSubmitInfo(protected_submit::Bool; next) -> _ProtectedSubmitInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._PushConstantRange","page":"API","title":"Vulkan._PushConstantRange","text":"Intermediate wrapper for VkPushConstantRange.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkPushConstantRange.html\n\nstruct _PushConstantRange <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkPushConstantRange\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PushConstantRange-Tuple{ShaderStageFlag, Integer, Integer}","page":"API","title":"Vulkan._PushConstantRange","text":"_PushConstantRange(stage_flags::ShaderStageFlag, offset::Integer, size::Integer)\n\nArguments:\n\nstage_flags::ShaderStageFlag\noffset::Integer\nsize::Integer\n\nAPI documentation\n\n_PushConstantRange(stage_flags::ShaderStageFlag, offset::Integer, size::Integer) -> _PushConstantRange\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._QueryPoolCreateInfo","page":"API","title":"Vulkan._QueryPoolCreateInfo","text":"Intermediate wrapper for VkQueryPoolCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkQueryPoolCreateInfo.html\n\nstruct _QueryPoolCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkQueryPoolCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._QueryPoolCreateInfo-Tuple{QueryType, Integer}","page":"API","title":"Vulkan._QueryPoolCreateInfo","text":"_QueryPoolCreateInfo(query_type::QueryType, query_count::Integer; next = C_NULL, flags = 0, pipeline_statistics = 0)\n\nArguments:\n\nquery_type::QueryType\nquery_count::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\npipeline_statistics: defaults to 0\n\nAPI documentation\n\n_QueryPoolCreateInfo(query_type::QueryType, query_count::Integer; next, flags, pipeline_statistics) -> _QueryPoolCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._QueryPoolPerformanceCreateInfoKHR","page":"API","title":"Vulkan._QueryPoolPerformanceCreateInfoKHR","text":"Intermediate wrapper for VkQueryPoolPerformanceCreateInfoKHR.\n\nExtension: VKKHRperformance_query\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkQueryPoolPerformanceCreateInfoKHR.html\n\nstruct _QueryPoolPerformanceCreateInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkQueryPoolPerformanceCreateInfoKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._QueryPoolPerformanceCreateInfoKHR-Tuple{Integer, AbstractArray}","page":"API","title":"Vulkan._QueryPoolPerformanceCreateInfoKHR","text":"_QueryPoolPerformanceCreateInfoKHR(queue_family_index::Integer, counter_indices::AbstractArray{<:Integer}; next = C_NULL)\n\nExtension: VK_KHR_performance_query\n\nArguments:\n\nqueue_family_index::Integer\ncounter_indices::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_QueryPoolPerformanceCreateInfoKHR(queue_family_index::Integer, counter_indices::AbstractArray; next) -> _QueryPoolPerformanceCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._QueryPoolPerformanceQueryCreateInfoINTEL","page":"API","title":"Vulkan._QueryPoolPerformanceQueryCreateInfoINTEL","text":"Intermediate wrapper for VkQueryPoolPerformanceQueryCreateInfoINTEL.\n\nExtension: VKINTELperformance_query\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkQueryPoolPerformanceQueryCreateInfoINTEL.html\n\nstruct _QueryPoolPerformanceQueryCreateInfoINTEL <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkQueryPoolPerformanceQueryCreateInfoINTEL\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._QueryPoolPerformanceQueryCreateInfoINTEL-Tuple{QueryPoolSamplingModeINTEL}","page":"API","title":"Vulkan._QueryPoolPerformanceQueryCreateInfoINTEL","text":"_QueryPoolPerformanceQueryCreateInfoINTEL(performance_counters_sampling::QueryPoolSamplingModeINTEL; next = C_NULL)\n\nExtension: VK_INTEL_performance_query\n\nArguments:\n\nperformance_counters_sampling::QueryPoolSamplingModeINTEL\nnext: defaults to C_NULL\n\nAPI documentation\n\n_QueryPoolPerformanceQueryCreateInfoINTEL(performance_counters_sampling::QueryPoolSamplingModeINTEL; next) -> _QueryPoolPerformanceQueryCreateInfoINTEL\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._QueueFamilyCheckpointProperties2NV","page":"API","title":"Vulkan._QueueFamilyCheckpointProperties2NV","text":"Intermediate wrapper for VkQueueFamilyCheckpointProperties2NV.\n\nExtension: VKKHRsynchronization2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkQueueFamilyCheckpointProperties2NV.html\n\nstruct _QueueFamilyCheckpointProperties2NV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkQueueFamilyCheckpointProperties2NV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._QueueFamilyCheckpointProperties2NV-Tuple{Integer}","page":"API","title":"Vulkan._QueueFamilyCheckpointProperties2NV","text":"_QueueFamilyCheckpointProperties2NV(checkpoint_execution_stage_mask::Integer; next = C_NULL)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncheckpoint_execution_stage_mask::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_QueueFamilyCheckpointProperties2NV(checkpoint_execution_stage_mask::Integer; next) -> _QueueFamilyCheckpointProperties2NV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._QueueFamilyCheckpointPropertiesNV","page":"API","title":"Vulkan._QueueFamilyCheckpointPropertiesNV","text":"Intermediate wrapper for VkQueueFamilyCheckpointPropertiesNV.\n\nExtension: VKNVdevicediagnosticcheckpoints\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkQueueFamilyCheckpointPropertiesNV.html\n\nstruct _QueueFamilyCheckpointPropertiesNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkQueueFamilyCheckpointPropertiesNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._QueueFamilyCheckpointPropertiesNV-Tuple{PipelineStageFlag}","page":"API","title":"Vulkan._QueueFamilyCheckpointPropertiesNV","text":"_QueueFamilyCheckpointPropertiesNV(checkpoint_execution_stage_mask::PipelineStageFlag; next = C_NULL)\n\nExtension: VK_NV_device_diagnostic_checkpoints\n\nArguments:\n\ncheckpoint_execution_stage_mask::PipelineStageFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\n_QueueFamilyCheckpointPropertiesNV(checkpoint_execution_stage_mask::PipelineStageFlag; next) -> _QueueFamilyCheckpointPropertiesNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._QueueFamilyProperties","page":"API","title":"Vulkan._QueueFamilyProperties","text":"Intermediate wrapper for VkQueueFamilyProperties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkQueueFamilyProperties.html\n\nstruct _QueueFamilyProperties <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkQueueFamilyProperties\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._QueueFamilyProperties-Tuple{Integer, Integer, _Extent3D}","page":"API","title":"Vulkan._QueueFamilyProperties","text":"_QueueFamilyProperties(queue_count::Integer, timestamp_valid_bits::Integer, min_image_transfer_granularity::_Extent3D; queue_flags = 0)\n\nArguments:\n\nqueue_count::Integer\ntimestamp_valid_bits::Integer\nmin_image_transfer_granularity::_Extent3D\nqueue_flags: defaults to 0\n\nAPI documentation\n\n_QueueFamilyProperties(queue_count::Integer, timestamp_valid_bits::Integer, min_image_transfer_granularity::_Extent3D; queue_flags) -> _QueueFamilyProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._QueueFamilyProperties2","page":"API","title":"Vulkan._QueueFamilyProperties2","text":"Intermediate wrapper for VkQueueFamilyProperties2.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkQueueFamilyProperties2.html\n\nstruct _QueueFamilyProperties2 <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkQueueFamilyProperties2\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._QueueFamilyProperties2-Tuple{_QueueFamilyProperties}","page":"API","title":"Vulkan._QueueFamilyProperties2","text":"_QueueFamilyProperties2(queue_family_properties::_QueueFamilyProperties; next = C_NULL)\n\nArguments:\n\nqueue_family_properties::_QueueFamilyProperties\nnext: defaults to C_NULL\n\nAPI documentation\n\n_QueueFamilyProperties2(queue_family_properties::_QueueFamilyProperties; next) -> _QueueFamilyProperties2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._RayTracingPipelineCreateInfoKHR","page":"API","title":"Vulkan._RayTracingPipelineCreateInfoKHR","text":"Intermediate wrapper for VkRayTracingPipelineCreateInfoKHR.\n\nExtension: VKKHRraytracingpipeline\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkRayTracingPipelineCreateInfoKHR.html\n\nstruct _RayTracingPipelineCreateInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkRayTracingPipelineCreateInfoKHR\ndeps::Vector{Any}\nlayout::PipelineLayout\nbase_pipeline_handle::Union{Ptr{Nothing}, Pipeline}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RayTracingPipelineCreateInfoKHR-Tuple{AbstractArray, AbstractArray, Integer, Any, Integer}","page":"API","title":"Vulkan._RayTracingPipelineCreateInfoKHR","text":"_RayTracingPipelineCreateInfoKHR(stages::AbstractArray{_PipelineShaderStageCreateInfo}, groups::AbstractArray{_RayTracingShaderGroupCreateInfoKHR}, max_pipeline_ray_recursion_depth::Integer, layout, base_pipeline_index::Integer; next = C_NULL, flags = 0, library_info = C_NULL, library_interface = C_NULL, dynamic_state = C_NULL, base_pipeline_handle = C_NULL)\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\nstages::AbstractArray{_PipelineShaderStageCreateInfo}\ngroups::AbstractArray{_RayTracingShaderGroupCreateInfoKHR}\nmax_pipeline_ray_recursion_depth::Integer\nlayout\nbase_pipeline_index::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\nlibrary_info: defaults to C_NULL\nlibrary_interface: defaults to C_NULL\ndynamic_state: defaults to C_NULL\nbase_pipeline_handle: defaults to C_NULL\n\nAPI documentation\n\n_RayTracingPipelineCreateInfoKHR(stages::AbstractArray, groups::AbstractArray, max_pipeline_ray_recursion_depth::Integer, layout, base_pipeline_index::Integer; next, flags, library_info, library_interface, dynamic_state, base_pipeline_handle) -> _RayTracingPipelineCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._RayTracingPipelineCreateInfoNV","page":"API","title":"Vulkan._RayTracingPipelineCreateInfoNV","text":"Intermediate wrapper for VkRayTracingPipelineCreateInfoNV.\n\nExtension: VKNVray_tracing\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkRayTracingPipelineCreateInfoNV.html\n\nstruct _RayTracingPipelineCreateInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkRayTracingPipelineCreateInfoNV\ndeps::Vector{Any}\nlayout::PipelineLayout\nbase_pipeline_handle::Union{Ptr{Nothing}, Pipeline}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RayTracingPipelineCreateInfoNV-Tuple{AbstractArray, AbstractArray, Integer, Any, Integer}","page":"API","title":"Vulkan._RayTracingPipelineCreateInfoNV","text":"_RayTracingPipelineCreateInfoNV(stages::AbstractArray{_PipelineShaderStageCreateInfo}, groups::AbstractArray{_RayTracingShaderGroupCreateInfoNV}, max_recursion_depth::Integer, layout, base_pipeline_index::Integer; next = C_NULL, flags = 0, base_pipeline_handle = C_NULL)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\nstages::AbstractArray{_PipelineShaderStageCreateInfo}\ngroups::AbstractArray{_RayTracingShaderGroupCreateInfoNV}\nmax_recursion_depth::Integer\nlayout\nbase_pipeline_index::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\nbase_pipeline_handle: defaults to C_NULL\n\nAPI documentation\n\n_RayTracingPipelineCreateInfoNV(stages::AbstractArray, groups::AbstractArray, max_recursion_depth::Integer, layout, base_pipeline_index::Integer; next, flags, base_pipeline_handle) -> _RayTracingPipelineCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._RayTracingPipelineInterfaceCreateInfoKHR","page":"API","title":"Vulkan._RayTracingPipelineInterfaceCreateInfoKHR","text":"Intermediate wrapper for VkRayTracingPipelineInterfaceCreateInfoKHR.\n\nExtension: VKKHRraytracingpipeline\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkRayTracingPipelineInterfaceCreateInfoKHR.html\n\nstruct _RayTracingPipelineInterfaceCreateInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkRayTracingPipelineInterfaceCreateInfoKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RayTracingPipelineInterfaceCreateInfoKHR-Tuple{Integer, Integer}","page":"API","title":"Vulkan._RayTracingPipelineInterfaceCreateInfoKHR","text":"_RayTracingPipelineInterfaceCreateInfoKHR(max_pipeline_ray_payload_size::Integer, max_pipeline_ray_hit_attribute_size::Integer; next = C_NULL)\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\nmax_pipeline_ray_payload_size::Integer\nmax_pipeline_ray_hit_attribute_size::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_RayTracingPipelineInterfaceCreateInfoKHR(max_pipeline_ray_payload_size::Integer, max_pipeline_ray_hit_attribute_size::Integer; next) -> _RayTracingPipelineInterfaceCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._RayTracingShaderGroupCreateInfoKHR","page":"API","title":"Vulkan._RayTracingShaderGroupCreateInfoKHR","text":"Intermediate wrapper for VkRayTracingShaderGroupCreateInfoKHR.\n\nExtension: VKKHRraytracingpipeline\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkRayTracingShaderGroupCreateInfoKHR.html\n\nstruct _RayTracingShaderGroupCreateInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkRayTracingShaderGroupCreateInfoKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RayTracingShaderGroupCreateInfoKHR-Tuple{RayTracingShaderGroupTypeKHR, Integer, Integer, Integer, Integer}","page":"API","title":"Vulkan._RayTracingShaderGroupCreateInfoKHR","text":"_RayTracingShaderGroupCreateInfoKHR(type::RayTracingShaderGroupTypeKHR, general_shader::Integer, closest_hit_shader::Integer, any_hit_shader::Integer, intersection_shader::Integer; next = C_NULL, shader_group_capture_replay_handle = C_NULL)\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\ntype::RayTracingShaderGroupTypeKHR\ngeneral_shader::Integer\nclosest_hit_shader::Integer\nany_hit_shader::Integer\nintersection_shader::Integer\nnext: defaults to C_NULL\nshader_group_capture_replay_handle: defaults to C_NULL\n\nAPI documentation\n\n_RayTracingShaderGroupCreateInfoKHR(type::RayTracingShaderGroupTypeKHR, general_shader::Integer, closest_hit_shader::Integer, any_hit_shader::Integer, intersection_shader::Integer; next, shader_group_capture_replay_handle) -> _RayTracingShaderGroupCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._RayTracingShaderGroupCreateInfoNV","page":"API","title":"Vulkan._RayTracingShaderGroupCreateInfoNV","text":"Intermediate wrapper for VkRayTracingShaderGroupCreateInfoNV.\n\nExtension: VKNVray_tracing\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkRayTracingShaderGroupCreateInfoNV.html\n\nstruct _RayTracingShaderGroupCreateInfoNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkRayTracingShaderGroupCreateInfoNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RayTracingShaderGroupCreateInfoNV-Tuple{RayTracingShaderGroupTypeKHR, Integer, Integer, Integer, Integer}","page":"API","title":"Vulkan._RayTracingShaderGroupCreateInfoNV","text":"_RayTracingShaderGroupCreateInfoNV(type::RayTracingShaderGroupTypeKHR, general_shader::Integer, closest_hit_shader::Integer, any_hit_shader::Integer, intersection_shader::Integer; next = C_NULL)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ntype::RayTracingShaderGroupTypeKHR\ngeneral_shader::Integer\nclosest_hit_shader::Integer\nany_hit_shader::Integer\nintersection_shader::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_RayTracingShaderGroupCreateInfoNV(type::RayTracingShaderGroupTypeKHR, general_shader::Integer, closest_hit_shader::Integer, any_hit_shader::Integer, intersection_shader::Integer; next) -> _RayTracingShaderGroupCreateInfoNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._Rect2D","page":"API","title":"Vulkan._Rect2D","text":"Intermediate wrapper for VkRect2D.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkRect2D.html\n\nstruct _Rect2D <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkRect2D\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._Rect2D-Tuple{_Offset2D, _Extent2D}","page":"API","title":"Vulkan._Rect2D","text":"_Rect2D(offset::_Offset2D, extent::_Extent2D)\n\nArguments:\n\noffset::_Offset2D\nextent::_Extent2D\n\nAPI documentation\n\n_Rect2D(offset::_Offset2D, extent::_Extent2D) -> _Rect2D\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._RectLayerKHR","page":"API","title":"Vulkan._RectLayerKHR","text":"Intermediate wrapper for VkRectLayerKHR.\n\nExtension: VKKHRincremental_present\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkRectLayerKHR.html\n\nstruct _RectLayerKHR <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkRectLayerKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RectLayerKHR-Tuple{_Offset2D, _Extent2D, Integer}","page":"API","title":"Vulkan._RectLayerKHR","text":"_RectLayerKHR(offset::_Offset2D, extent::_Extent2D, layer::Integer)\n\nExtension: VK_KHR_incremental_present\n\nArguments:\n\noffset::_Offset2D\nextent::_Extent2D\nlayer::Integer\n\nAPI documentation\n\n_RectLayerKHR(offset::_Offset2D, extent::_Extent2D, layer::Integer) -> _RectLayerKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._RefreshCycleDurationGOOGLE","page":"API","title":"Vulkan._RefreshCycleDurationGOOGLE","text":"Intermediate wrapper for VkRefreshCycleDurationGOOGLE.\n\nExtension: VKGOOGLEdisplay_timing\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkRefreshCycleDurationGOOGLE.html\n\nstruct _RefreshCycleDurationGOOGLE <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkRefreshCycleDurationGOOGLE\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RefreshCycleDurationGOOGLE-Tuple{Integer}","page":"API","title":"Vulkan._RefreshCycleDurationGOOGLE","text":"_RefreshCycleDurationGOOGLE(refresh_duration::Integer)\n\nExtension: VK_GOOGLE_display_timing\n\nArguments:\n\nrefresh_duration::Integer\n\nAPI documentation\n\n_RefreshCycleDurationGOOGLE(refresh_duration::Integer) -> _RefreshCycleDurationGOOGLE\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._RenderPassAttachmentBeginInfo","page":"API","title":"Vulkan._RenderPassAttachmentBeginInfo","text":"Intermediate wrapper for VkRenderPassAttachmentBeginInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkRenderPassAttachmentBeginInfo.html\n\nstruct _RenderPassAttachmentBeginInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkRenderPassAttachmentBeginInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RenderPassAttachmentBeginInfo-Tuple{AbstractArray}","page":"API","title":"Vulkan._RenderPassAttachmentBeginInfo","text":"_RenderPassAttachmentBeginInfo(attachments::AbstractArray{ImageView}; next = C_NULL)\n\nArguments:\n\nattachments::AbstractArray{ImageView}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_RenderPassAttachmentBeginInfo(attachments::AbstractArray; next) -> _RenderPassAttachmentBeginInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._RenderPassBeginInfo","page":"API","title":"Vulkan._RenderPassBeginInfo","text":"Intermediate wrapper for VkRenderPassBeginInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkRenderPassBeginInfo.html\n\nstruct _RenderPassBeginInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkRenderPassBeginInfo\ndeps::Vector{Any}\nrender_pass::RenderPass\nframebuffer::Framebuffer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RenderPassBeginInfo-Tuple{Any, Any, _Rect2D, AbstractArray}","page":"API","title":"Vulkan._RenderPassBeginInfo","text":"_RenderPassBeginInfo(render_pass, framebuffer, render_area::_Rect2D, clear_values::AbstractArray{_ClearValue}; next = C_NULL)\n\nArguments:\n\nrender_pass\nframebuffer\nrender_area::_Rect2D\nclear_values::AbstractArray{_ClearValue}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_RenderPassBeginInfo(render_pass, framebuffer, render_area::_Rect2D, clear_values::AbstractArray; next) -> _RenderPassBeginInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._RenderPassCreateInfo","page":"API","title":"Vulkan._RenderPassCreateInfo","text":"Intermediate wrapper for VkRenderPassCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkRenderPassCreateInfo.html\n\nstruct _RenderPassCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkRenderPassCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RenderPassCreateInfo-Tuple{AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan._RenderPassCreateInfo","text":"_RenderPassCreateInfo(attachments::AbstractArray{_AttachmentDescription}, subpasses::AbstractArray{_SubpassDescription}, dependencies::AbstractArray{_SubpassDependency}; next = C_NULL, flags = 0)\n\nArguments:\n\nattachments::AbstractArray{_AttachmentDescription}\nsubpasses::AbstractArray{_SubpassDescription}\ndependencies::AbstractArray{_SubpassDependency}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_RenderPassCreateInfo(attachments::AbstractArray, subpasses::AbstractArray, dependencies::AbstractArray; next, flags) -> _RenderPassCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._RenderPassCreateInfo2","page":"API","title":"Vulkan._RenderPassCreateInfo2","text":"Intermediate wrapper for VkRenderPassCreateInfo2.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkRenderPassCreateInfo2.html\n\nstruct _RenderPassCreateInfo2 <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkRenderPassCreateInfo2\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RenderPassCreateInfo2-NTuple{4, AbstractArray}","page":"API","title":"Vulkan._RenderPassCreateInfo2","text":"_RenderPassCreateInfo2(attachments::AbstractArray{_AttachmentDescription2}, subpasses::AbstractArray{_SubpassDescription2}, dependencies::AbstractArray{_SubpassDependency2}, correlated_view_masks::AbstractArray{<:Integer}; next = C_NULL, flags = 0)\n\nArguments:\n\nattachments::AbstractArray{_AttachmentDescription2}\nsubpasses::AbstractArray{_SubpassDescription2}\ndependencies::AbstractArray{_SubpassDependency2}\ncorrelated_view_masks::AbstractArray{<:Integer}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_RenderPassCreateInfo2(attachments::AbstractArray, subpasses::AbstractArray, dependencies::AbstractArray, correlated_view_masks::AbstractArray; next, flags) -> _RenderPassCreateInfo2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._RenderPassFragmentDensityMapCreateInfoEXT","page":"API","title":"Vulkan._RenderPassFragmentDensityMapCreateInfoEXT","text":"Intermediate wrapper for VkRenderPassFragmentDensityMapCreateInfoEXT.\n\nExtension: VKEXTfragmentdensitymap\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkRenderPassFragmentDensityMapCreateInfoEXT.html\n\nstruct _RenderPassFragmentDensityMapCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkRenderPassFragmentDensityMapCreateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RenderPassFragmentDensityMapCreateInfoEXT-Tuple{_AttachmentReference}","page":"API","title":"Vulkan._RenderPassFragmentDensityMapCreateInfoEXT","text":"_RenderPassFragmentDensityMapCreateInfoEXT(fragment_density_map_attachment::_AttachmentReference; next = C_NULL)\n\nExtension: VK_EXT_fragment_density_map\n\nArguments:\n\nfragment_density_map_attachment::_AttachmentReference\nnext: defaults to C_NULL\n\nAPI documentation\n\n_RenderPassFragmentDensityMapCreateInfoEXT(fragment_density_map_attachment::_AttachmentReference; next) -> _RenderPassFragmentDensityMapCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._RenderPassInputAttachmentAspectCreateInfo","page":"API","title":"Vulkan._RenderPassInputAttachmentAspectCreateInfo","text":"Intermediate wrapper for VkRenderPassInputAttachmentAspectCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkRenderPassInputAttachmentAspectCreateInfo.html\n\nstruct _RenderPassInputAttachmentAspectCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkRenderPassInputAttachmentAspectCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RenderPassInputAttachmentAspectCreateInfo-Tuple{AbstractArray}","page":"API","title":"Vulkan._RenderPassInputAttachmentAspectCreateInfo","text":"_RenderPassInputAttachmentAspectCreateInfo(aspect_references::AbstractArray{_InputAttachmentAspectReference}; next = C_NULL)\n\nArguments:\n\naspect_references::AbstractArray{_InputAttachmentAspectReference}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_RenderPassInputAttachmentAspectCreateInfo(aspect_references::AbstractArray; next) -> _RenderPassInputAttachmentAspectCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._RenderPassMultiviewCreateInfo","page":"API","title":"Vulkan._RenderPassMultiviewCreateInfo","text":"Intermediate wrapper for VkRenderPassMultiviewCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkRenderPassMultiviewCreateInfo.html\n\nstruct _RenderPassMultiviewCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkRenderPassMultiviewCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RenderPassMultiviewCreateInfo-Tuple{AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan._RenderPassMultiviewCreateInfo","text":"_RenderPassMultiviewCreateInfo(view_masks::AbstractArray{<:Integer}, view_offsets::AbstractArray{<:Integer}, correlation_masks::AbstractArray{<:Integer}; next = C_NULL)\n\nArguments:\n\nview_masks::AbstractArray{<:Integer}\nview_offsets::AbstractArray{<:Integer}\ncorrelation_masks::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_RenderPassMultiviewCreateInfo(view_masks::AbstractArray, view_offsets::AbstractArray, correlation_masks::AbstractArray; next) -> _RenderPassMultiviewCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._RenderPassSampleLocationsBeginInfoEXT","page":"API","title":"Vulkan._RenderPassSampleLocationsBeginInfoEXT","text":"Intermediate wrapper for VkRenderPassSampleLocationsBeginInfoEXT.\n\nExtension: VKEXTsample_locations\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkRenderPassSampleLocationsBeginInfoEXT.html\n\nstruct _RenderPassSampleLocationsBeginInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkRenderPassSampleLocationsBeginInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RenderPassSampleLocationsBeginInfoEXT-Tuple{AbstractArray, AbstractArray}","page":"API","title":"Vulkan._RenderPassSampleLocationsBeginInfoEXT","text":"_RenderPassSampleLocationsBeginInfoEXT(attachment_initial_sample_locations::AbstractArray{_AttachmentSampleLocationsEXT}, post_subpass_sample_locations::AbstractArray{_SubpassSampleLocationsEXT}; next = C_NULL)\n\nExtension: VK_EXT_sample_locations\n\nArguments:\n\nattachment_initial_sample_locations::AbstractArray{_AttachmentSampleLocationsEXT}\npost_subpass_sample_locations::AbstractArray{_SubpassSampleLocationsEXT}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_RenderPassSampleLocationsBeginInfoEXT(attachment_initial_sample_locations::AbstractArray, post_subpass_sample_locations::AbstractArray; next) -> _RenderPassSampleLocationsBeginInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._RenderPassTransformBeginInfoQCOM","page":"API","title":"Vulkan._RenderPassTransformBeginInfoQCOM","text":"Intermediate wrapper for VkRenderPassTransformBeginInfoQCOM.\n\nExtension: VKQCOMrenderpasstransform\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkRenderPassTransformBeginInfoQCOM.html\n\nstruct _RenderPassTransformBeginInfoQCOM <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkRenderPassTransformBeginInfoQCOM\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RenderPassTransformBeginInfoQCOM-Tuple{SurfaceTransformFlagKHR}","page":"API","title":"Vulkan._RenderPassTransformBeginInfoQCOM","text":"_RenderPassTransformBeginInfoQCOM(transform::SurfaceTransformFlagKHR; next = C_NULL)\n\nExtension: VK_QCOM_render_pass_transform\n\nArguments:\n\ntransform::SurfaceTransformFlagKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\n_RenderPassTransformBeginInfoQCOM(transform::SurfaceTransformFlagKHR; next) -> _RenderPassTransformBeginInfoQCOM\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ResolveImageInfo2KHR","page":"API","title":"Vulkan._ResolveImageInfo2KHR","text":"Intermediate wrapper for VkResolveImageInfo2KHR.\n\nExtension: VKKHRcopy_commands2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkResolveImageInfo2KHR.html\n\nstruct _ResolveImageInfo2KHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkResolveImageInfo2KHR\ndeps::Vector{Any}\nsrc_image::Image\ndst_image::Image\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ResolveImageInfo2KHR-Tuple{Any, ImageLayout, Any, ImageLayout, AbstractArray}","page":"API","title":"Vulkan._ResolveImageInfo2KHR","text":"_ResolveImageInfo2KHR(src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray{_ImageResolve2KHR}; next = C_NULL)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\nsrc_image\nsrc_image_layout::ImageLayout\ndst_image\ndst_image_layout::ImageLayout\nregions::AbstractArray{_ImageResolve2KHR}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_ResolveImageInfo2KHR(src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray; next) -> _ResolveImageInfo2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SampleLocationEXT","page":"API","title":"Vulkan._SampleLocationEXT","text":"Intermediate wrapper for VkSampleLocationEXT.\n\nExtension: VKEXTsample_locations\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSampleLocationEXT.html\n\nstruct _SampleLocationEXT <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkSampleLocationEXT\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SampleLocationsInfoEXT","page":"API","title":"Vulkan._SampleLocationsInfoEXT","text":"Intermediate wrapper for VkSampleLocationsInfoEXT.\n\nExtension: VKEXTsample_locations\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSampleLocationsInfoEXT.html\n\nstruct _SampleLocationsInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSampleLocationsInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SampleLocationsInfoEXT-Tuple{SampleCountFlag, _Extent2D, AbstractArray}","page":"API","title":"Vulkan._SampleLocationsInfoEXT","text":"_SampleLocationsInfoEXT(sample_locations_per_pixel::SampleCountFlag, sample_location_grid_size::_Extent2D, sample_locations::AbstractArray{_SampleLocationEXT}; next = C_NULL)\n\nExtension: VK_EXT_sample_locations\n\nArguments:\n\nsample_locations_per_pixel::SampleCountFlag\nsample_location_grid_size::_Extent2D\nsample_locations::AbstractArray{_SampleLocationEXT}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_SampleLocationsInfoEXT(sample_locations_per_pixel::SampleCountFlag, sample_location_grid_size::_Extent2D, sample_locations::AbstractArray; next) -> _SampleLocationsInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SamplerCreateInfo","page":"API","title":"Vulkan._SamplerCreateInfo","text":"Intermediate wrapper for VkSamplerCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSamplerCreateInfo.html\n\nstruct _SamplerCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSamplerCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SamplerCreateInfo-Tuple{Filter, Filter, SamplerMipmapMode, SamplerAddressMode, SamplerAddressMode, SamplerAddressMode, Real, Bool, Real, Bool, CompareOp, Real, Real, BorderColor, Bool}","page":"API","title":"Vulkan._SamplerCreateInfo","text":"_SamplerCreateInfo(mag_filter::Filter, min_filter::Filter, mipmap_mode::SamplerMipmapMode, address_mode_u::SamplerAddressMode, address_mode_v::SamplerAddressMode, address_mode_w::SamplerAddressMode, mip_lod_bias::Real, anisotropy_enable::Bool, max_anisotropy::Real, compare_enable::Bool, compare_op::CompareOp, min_lod::Real, max_lod::Real, border_color::BorderColor, unnormalized_coordinates::Bool; next = C_NULL, flags = 0)\n\nArguments:\n\nmag_filter::Filter\nmin_filter::Filter\nmipmap_mode::SamplerMipmapMode\naddress_mode_u::SamplerAddressMode\naddress_mode_v::SamplerAddressMode\naddress_mode_w::SamplerAddressMode\nmip_lod_bias::Real\nanisotropy_enable::Bool\nmax_anisotropy::Real\ncompare_enable::Bool\ncompare_op::CompareOp\nmin_lod::Real\nmax_lod::Real\nborder_color::BorderColor\nunnormalized_coordinates::Bool\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_SamplerCreateInfo(mag_filter::Filter, min_filter::Filter, mipmap_mode::SamplerMipmapMode, address_mode_u::SamplerAddressMode, address_mode_v::SamplerAddressMode, address_mode_w::SamplerAddressMode, mip_lod_bias::Real, anisotropy_enable::Bool, max_anisotropy::Real, compare_enable::Bool, compare_op::CompareOp, min_lod::Real, max_lod::Real, border_color::BorderColor, unnormalized_coordinates::Bool; next, flags) -> _SamplerCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SamplerCustomBorderColorCreateInfoEXT","page":"API","title":"Vulkan._SamplerCustomBorderColorCreateInfoEXT","text":"Intermediate wrapper for VkSamplerCustomBorderColorCreateInfoEXT.\n\nExtension: VKEXTcustombordercolor\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSamplerCustomBorderColorCreateInfoEXT.html\n\nstruct _SamplerCustomBorderColorCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSamplerCustomBorderColorCreateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SamplerCustomBorderColorCreateInfoEXT-Tuple{_ClearColorValue, Format}","page":"API","title":"Vulkan._SamplerCustomBorderColorCreateInfoEXT","text":"_SamplerCustomBorderColorCreateInfoEXT(custom_border_color::_ClearColorValue, format::Format; next = C_NULL)\n\nExtension: VK_EXT_custom_border_color\n\nArguments:\n\ncustom_border_color::_ClearColorValue\nformat::Format\nnext: defaults to C_NULL\n\nAPI documentation\n\n_SamplerCustomBorderColorCreateInfoEXT(custom_border_color::_ClearColorValue, format::Format; next) -> _SamplerCustomBorderColorCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SamplerReductionModeCreateInfo","page":"API","title":"Vulkan._SamplerReductionModeCreateInfo","text":"Intermediate wrapper for VkSamplerReductionModeCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSamplerReductionModeCreateInfo.html\n\nstruct _SamplerReductionModeCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSamplerReductionModeCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SamplerReductionModeCreateInfo-Tuple{SamplerReductionMode}","page":"API","title":"Vulkan._SamplerReductionModeCreateInfo","text":"_SamplerReductionModeCreateInfo(reduction_mode::SamplerReductionMode; next = C_NULL)\n\nArguments:\n\nreduction_mode::SamplerReductionMode\nnext: defaults to C_NULL\n\nAPI documentation\n\n_SamplerReductionModeCreateInfo(reduction_mode::SamplerReductionMode; next) -> _SamplerReductionModeCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SamplerYcbcrConversionCreateInfo","page":"API","title":"Vulkan._SamplerYcbcrConversionCreateInfo","text":"Intermediate wrapper for VkSamplerYcbcrConversionCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSamplerYcbcrConversionCreateInfo.html\n\nstruct _SamplerYcbcrConversionCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSamplerYcbcrConversionCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SamplerYcbcrConversionCreateInfo-Tuple{Format, SamplerYcbcrModelConversion, SamplerYcbcrRange, _ComponentMapping, ChromaLocation, ChromaLocation, Filter, Bool}","page":"API","title":"Vulkan._SamplerYcbcrConversionCreateInfo","text":"_SamplerYcbcrConversionCreateInfo(format::Format, ycbcr_model::SamplerYcbcrModelConversion, ycbcr_range::SamplerYcbcrRange, components::_ComponentMapping, x_chroma_offset::ChromaLocation, y_chroma_offset::ChromaLocation, chroma_filter::Filter, force_explicit_reconstruction::Bool; next = C_NULL)\n\nArguments:\n\nformat::Format\nycbcr_model::SamplerYcbcrModelConversion\nycbcr_range::SamplerYcbcrRange\ncomponents::_ComponentMapping\nx_chroma_offset::ChromaLocation\ny_chroma_offset::ChromaLocation\nchroma_filter::Filter\nforce_explicit_reconstruction::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_SamplerYcbcrConversionCreateInfo(format::Format, ycbcr_model::SamplerYcbcrModelConversion, ycbcr_range::SamplerYcbcrRange, components::_ComponentMapping, x_chroma_offset::ChromaLocation, y_chroma_offset::ChromaLocation, chroma_filter::Filter, force_explicit_reconstruction::Bool; next) -> _SamplerYcbcrConversionCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SamplerYcbcrConversionImageFormatProperties","page":"API","title":"Vulkan._SamplerYcbcrConversionImageFormatProperties","text":"Intermediate wrapper for VkSamplerYcbcrConversionImageFormatProperties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSamplerYcbcrConversionImageFormatProperties.html\n\nstruct _SamplerYcbcrConversionImageFormatProperties <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSamplerYcbcrConversionImageFormatProperties\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SamplerYcbcrConversionImageFormatProperties-Tuple{Integer}","page":"API","title":"Vulkan._SamplerYcbcrConversionImageFormatProperties","text":"_SamplerYcbcrConversionImageFormatProperties(combined_image_sampler_descriptor_count::Integer; next = C_NULL)\n\nArguments:\n\ncombined_image_sampler_descriptor_count::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_SamplerYcbcrConversionImageFormatProperties(combined_image_sampler_descriptor_count::Integer; next) -> _SamplerYcbcrConversionImageFormatProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SamplerYcbcrConversionInfo","page":"API","title":"Vulkan._SamplerYcbcrConversionInfo","text":"Intermediate wrapper for VkSamplerYcbcrConversionInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSamplerYcbcrConversionInfo.html\n\nstruct _SamplerYcbcrConversionInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSamplerYcbcrConversionInfo\ndeps::Vector{Any}\nconversion::SamplerYcbcrConversion\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SamplerYcbcrConversionInfo-Tuple{Any}","page":"API","title":"Vulkan._SamplerYcbcrConversionInfo","text":"_SamplerYcbcrConversionInfo(conversion; next = C_NULL)\n\nArguments:\n\nconversion\nnext: defaults to C_NULL\n\nAPI documentation\n\n_SamplerYcbcrConversionInfo(conversion; next) -> _SamplerYcbcrConversionInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SemaphoreCreateInfo","page":"API","title":"Vulkan._SemaphoreCreateInfo","text":"Intermediate wrapper for VkSemaphoreCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSemaphoreCreateInfo.html\n\nstruct _SemaphoreCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSemaphoreCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SemaphoreCreateInfo-Tuple{}","page":"API","title":"Vulkan._SemaphoreCreateInfo","text":"_SemaphoreCreateInfo(; next = C_NULL, flags = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_SemaphoreCreateInfo(; next, flags) -> _SemaphoreCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SemaphoreGetFdInfoKHR","page":"API","title":"Vulkan._SemaphoreGetFdInfoKHR","text":"Intermediate wrapper for VkSemaphoreGetFdInfoKHR.\n\nExtension: VKKHRexternalsemaphorefd\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSemaphoreGetFdInfoKHR.html\n\nstruct _SemaphoreGetFdInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSemaphoreGetFdInfoKHR\ndeps::Vector{Any}\nsemaphore::Semaphore\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SemaphoreGetFdInfoKHR-Tuple{Any, ExternalSemaphoreHandleTypeFlag}","page":"API","title":"Vulkan._SemaphoreGetFdInfoKHR","text":"_SemaphoreGetFdInfoKHR(semaphore, handle_type::ExternalSemaphoreHandleTypeFlag; next = C_NULL)\n\nExtension: VK_KHR_external_semaphore_fd\n\nArguments:\n\nsemaphore\nhandle_type::ExternalSemaphoreHandleTypeFlag\nnext: defaults to C_NULL\n\nAPI documentation\n\n_SemaphoreGetFdInfoKHR(semaphore, handle_type::ExternalSemaphoreHandleTypeFlag; next) -> _SemaphoreGetFdInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SemaphoreSignalInfo","page":"API","title":"Vulkan._SemaphoreSignalInfo","text":"Intermediate wrapper for VkSemaphoreSignalInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSemaphoreSignalInfo.html\n\nstruct _SemaphoreSignalInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSemaphoreSignalInfo\ndeps::Vector{Any}\nsemaphore::Semaphore\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SemaphoreSignalInfo-Tuple{Any, Integer}","page":"API","title":"Vulkan._SemaphoreSignalInfo","text":"_SemaphoreSignalInfo(semaphore, value::Integer; next = C_NULL)\n\nArguments:\n\nsemaphore\nvalue::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_SemaphoreSignalInfo(semaphore, value::Integer; next) -> _SemaphoreSignalInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SemaphoreSubmitInfoKHR","page":"API","title":"Vulkan._SemaphoreSubmitInfoKHR","text":"Intermediate wrapper for VkSemaphoreSubmitInfoKHR.\n\nExtension: VKKHRsynchronization2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSemaphoreSubmitInfoKHR.html\n\nstruct _SemaphoreSubmitInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSemaphoreSubmitInfoKHR\ndeps::Vector{Any}\nsemaphore::Semaphore\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SemaphoreSubmitInfoKHR-Tuple{Any, Integer, Integer}","page":"API","title":"Vulkan._SemaphoreSubmitInfoKHR","text":"_SemaphoreSubmitInfoKHR(semaphore, value::Integer, device_index::Integer; next = C_NULL, stage_mask = 0)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\nsemaphore\nvalue::Integer\ndevice_index::Integer\nnext: defaults to C_NULL\nstage_mask: defaults to 0\n\nAPI documentation\n\n_SemaphoreSubmitInfoKHR(semaphore, value::Integer, device_index::Integer; next, stage_mask) -> _SemaphoreSubmitInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SemaphoreTypeCreateInfo","page":"API","title":"Vulkan._SemaphoreTypeCreateInfo","text":"Intermediate wrapper for VkSemaphoreTypeCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSemaphoreTypeCreateInfo.html\n\nstruct _SemaphoreTypeCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSemaphoreTypeCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SemaphoreTypeCreateInfo-Tuple{SemaphoreType, Integer}","page":"API","title":"Vulkan._SemaphoreTypeCreateInfo","text":"_SemaphoreTypeCreateInfo(semaphore_type::SemaphoreType, initial_value::Integer; next = C_NULL)\n\nArguments:\n\nsemaphore_type::SemaphoreType\ninitial_value::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_SemaphoreTypeCreateInfo(semaphore_type::SemaphoreType, initial_value::Integer; next) -> _SemaphoreTypeCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SemaphoreWaitInfo","page":"API","title":"Vulkan._SemaphoreWaitInfo","text":"Intermediate wrapper for VkSemaphoreWaitInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSemaphoreWaitInfo.html\n\nstruct _SemaphoreWaitInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSemaphoreWaitInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SemaphoreWaitInfo-Tuple{AbstractArray, AbstractArray}","page":"API","title":"Vulkan._SemaphoreWaitInfo","text":"_SemaphoreWaitInfo(semaphores::AbstractArray{Semaphore}, values::AbstractArray{<:Integer}; next = C_NULL, flags = 0)\n\nArguments:\n\nsemaphores::AbstractArray{Semaphore}\nvalues::AbstractArray{<:Integer}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_SemaphoreWaitInfo(semaphores::AbstractArray, values::AbstractArray; next, flags) -> _SemaphoreWaitInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SetStateFlagsIndirectCommandNV","page":"API","title":"Vulkan._SetStateFlagsIndirectCommandNV","text":"Intermediate wrapper for VkSetStateFlagsIndirectCommandNV.\n\nExtension: VKNVdevicegeneratedcommands\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSetStateFlagsIndirectCommandNV.html\n\nstruct _SetStateFlagsIndirectCommandNV <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkSetStateFlagsIndirectCommandNV\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SetStateFlagsIndirectCommandNV-Tuple{Integer}","page":"API","title":"Vulkan._SetStateFlagsIndirectCommandNV","text":"_SetStateFlagsIndirectCommandNV(data::Integer)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ndata::Integer\n\nAPI documentation\n\n_SetStateFlagsIndirectCommandNV(data::Integer) -> _SetStateFlagsIndirectCommandNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ShaderModuleCreateInfo","page":"API","title":"Vulkan._ShaderModuleCreateInfo","text":"Intermediate wrapper for VkShaderModuleCreateInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkShaderModuleCreateInfo.html\n\nstruct _ShaderModuleCreateInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkShaderModuleCreateInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ShaderModuleCreateInfo-Tuple{Integer, AbstractArray}","page":"API","title":"Vulkan._ShaderModuleCreateInfo","text":"_ShaderModuleCreateInfo(code_size::Integer, code::AbstractArray{<:Integer}; next = C_NULL, flags = 0)\n\nArguments:\n\ncode_size::Integer\ncode::AbstractArray{<:Integer}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_ShaderModuleCreateInfo(code_size::Integer, code::AbstractArray; next, flags) -> _ShaderModuleCreateInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ShaderModuleValidationCacheCreateInfoEXT","page":"API","title":"Vulkan._ShaderModuleValidationCacheCreateInfoEXT","text":"Intermediate wrapper for VkShaderModuleValidationCacheCreateInfoEXT.\n\nExtension: VKEXTvalidation_cache\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkShaderModuleValidationCacheCreateInfoEXT.html\n\nstruct _ShaderModuleValidationCacheCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkShaderModuleValidationCacheCreateInfoEXT\ndeps::Vector{Any}\nvalidation_cache::ValidationCacheEXT\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ShaderModuleValidationCacheCreateInfoEXT-Tuple{Any}","page":"API","title":"Vulkan._ShaderModuleValidationCacheCreateInfoEXT","text":"_ShaderModuleValidationCacheCreateInfoEXT(validation_cache; next = C_NULL)\n\nExtension: VK_EXT_validation_cache\n\nArguments:\n\nvalidation_cache\nnext: defaults to C_NULL\n\nAPI documentation\n\n_ShaderModuleValidationCacheCreateInfoEXT(validation_cache; next) -> _ShaderModuleValidationCacheCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ShaderResourceUsageAMD","page":"API","title":"Vulkan._ShaderResourceUsageAMD","text":"Intermediate wrapper for VkShaderResourceUsageAMD.\n\nExtension: VKAMDshader_info\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkShaderResourceUsageAMD.html\n\nstruct _ShaderResourceUsageAMD <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkShaderResourceUsageAMD\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ShaderResourceUsageAMD-NTuple{5, Integer}","page":"API","title":"Vulkan._ShaderResourceUsageAMD","text":"_ShaderResourceUsageAMD(num_used_vgprs::Integer, num_used_sgprs::Integer, lds_size_per_local_work_group::Integer, lds_usage_size_in_bytes::Integer, scratch_mem_usage_in_bytes::Integer)\n\nExtension: VK_AMD_shader_info\n\nArguments:\n\nnum_used_vgprs::Integer\nnum_used_sgprs::Integer\nlds_size_per_local_work_group::Integer\nlds_usage_size_in_bytes::Integer\nscratch_mem_usage_in_bytes::Integer\n\nAPI documentation\n\n_ShaderResourceUsageAMD(num_used_vgprs::Integer, num_used_sgprs::Integer, lds_size_per_local_work_group::Integer, lds_usage_size_in_bytes::Integer, scratch_mem_usage_in_bytes::Integer) -> _ShaderResourceUsageAMD\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ShaderStatisticsInfoAMD","page":"API","title":"Vulkan._ShaderStatisticsInfoAMD","text":"Intermediate wrapper for VkShaderStatisticsInfoAMD.\n\nExtension: VKAMDshader_info\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkShaderStatisticsInfoAMD.html\n\nstruct _ShaderStatisticsInfoAMD <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkShaderStatisticsInfoAMD\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ShaderStatisticsInfoAMD-Tuple{ShaderStageFlag, _ShaderResourceUsageAMD, Integer, Integer, Integer, Integer, Tuple{UInt32, UInt32, UInt32}}","page":"API","title":"Vulkan._ShaderStatisticsInfoAMD","text":"_ShaderStatisticsInfoAMD(shader_stage_mask::ShaderStageFlag, resource_usage::_ShaderResourceUsageAMD, num_physical_vgprs::Integer, num_physical_sgprs::Integer, num_available_vgprs::Integer, num_available_sgprs::Integer, compute_work_group_size::NTuple{3, UInt32})\n\nExtension: VK_AMD_shader_info\n\nArguments:\n\nshader_stage_mask::ShaderStageFlag\nresource_usage::_ShaderResourceUsageAMD\nnum_physical_vgprs::Integer\nnum_physical_sgprs::Integer\nnum_available_vgprs::Integer\nnum_available_sgprs::Integer\ncompute_work_group_size::NTuple{3, UInt32}\n\nAPI documentation\n\n_ShaderStatisticsInfoAMD(shader_stage_mask::ShaderStageFlag, resource_usage::_ShaderResourceUsageAMD, num_physical_vgprs::Integer, num_physical_sgprs::Integer, num_available_vgprs::Integer, num_available_sgprs::Integer, compute_work_group_size::Tuple{UInt32, UInt32, UInt32}) -> _ShaderStatisticsInfoAMD\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ShadingRatePaletteNV","page":"API","title":"Vulkan._ShadingRatePaletteNV","text":"Intermediate wrapper for VkShadingRatePaletteNV.\n\nExtension: VKNVshadingrateimage\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkShadingRatePaletteNV.html\n\nstruct _ShadingRatePaletteNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkShadingRatePaletteNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ShadingRatePaletteNV-Tuple{AbstractArray}","page":"API","title":"Vulkan._ShadingRatePaletteNV","text":"_ShadingRatePaletteNV(shading_rate_palette_entries::AbstractArray{ShadingRatePaletteEntryNV})\n\nExtension: VK_NV_shading_rate_image\n\nArguments:\n\nshading_rate_palette_entries::AbstractArray{ShadingRatePaletteEntryNV}\n\nAPI documentation\n\n_ShadingRatePaletteNV(shading_rate_palette_entries::AbstractArray) -> _ShadingRatePaletteNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SharedPresentSurfaceCapabilitiesKHR","page":"API","title":"Vulkan._SharedPresentSurfaceCapabilitiesKHR","text":"Intermediate wrapper for VkSharedPresentSurfaceCapabilitiesKHR.\n\nExtension: VKKHRsharedpresentableimage\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSharedPresentSurfaceCapabilitiesKHR.html\n\nstruct _SharedPresentSurfaceCapabilitiesKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSharedPresentSurfaceCapabilitiesKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SharedPresentSurfaceCapabilitiesKHR-Tuple{}","page":"API","title":"Vulkan._SharedPresentSurfaceCapabilitiesKHR","text":"_SharedPresentSurfaceCapabilitiesKHR(; next = C_NULL, shared_present_supported_usage_flags = 0)\n\nExtension: VK_KHR_shared_presentable_image\n\nArguments:\n\nnext: defaults to C_NULL\nshared_present_supported_usage_flags: defaults to 0\n\nAPI documentation\n\n_SharedPresentSurfaceCapabilitiesKHR(; next, shared_present_supported_usage_flags) -> _SharedPresentSurfaceCapabilitiesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SparseBufferMemoryBindInfo","page":"API","title":"Vulkan._SparseBufferMemoryBindInfo","text":"Intermediate wrapper for VkSparseBufferMemoryBindInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSparseBufferMemoryBindInfo.html\n\nstruct _SparseBufferMemoryBindInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSparseBufferMemoryBindInfo\ndeps::Vector{Any}\nbuffer::Buffer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SparseBufferMemoryBindInfo-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._SparseBufferMemoryBindInfo","text":"_SparseBufferMemoryBindInfo(buffer, binds::AbstractArray{_SparseMemoryBind})\n\nArguments:\n\nbuffer\nbinds::AbstractArray{_SparseMemoryBind}\n\nAPI documentation\n\n_SparseBufferMemoryBindInfo(buffer, binds::AbstractArray) -> _SparseBufferMemoryBindInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SparseImageFormatProperties","page":"API","title":"Vulkan._SparseImageFormatProperties","text":"Intermediate wrapper for VkSparseImageFormatProperties.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSparseImageFormatProperties.html\n\nstruct _SparseImageFormatProperties <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkSparseImageFormatProperties\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SparseImageFormatProperties-Tuple{_Extent3D}","page":"API","title":"Vulkan._SparseImageFormatProperties","text":"_SparseImageFormatProperties(image_granularity::_Extent3D; aspect_mask = 0, flags = 0)\n\nArguments:\n\nimage_granularity::_Extent3D\naspect_mask: defaults to 0\nflags: defaults to 0\n\nAPI documentation\n\n_SparseImageFormatProperties(image_granularity::_Extent3D; aspect_mask, flags) -> _SparseImageFormatProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SparseImageFormatProperties2","page":"API","title":"Vulkan._SparseImageFormatProperties2","text":"Intermediate wrapper for VkSparseImageFormatProperties2.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSparseImageFormatProperties2.html\n\nstruct _SparseImageFormatProperties2 <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSparseImageFormatProperties2\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SparseImageFormatProperties2-Tuple{_SparseImageFormatProperties}","page":"API","title":"Vulkan._SparseImageFormatProperties2","text":"_SparseImageFormatProperties2(properties::_SparseImageFormatProperties; next = C_NULL)\n\nArguments:\n\nproperties::_SparseImageFormatProperties\nnext: defaults to C_NULL\n\nAPI documentation\n\n_SparseImageFormatProperties2(properties::_SparseImageFormatProperties; next) -> _SparseImageFormatProperties2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SparseImageMemoryBind","page":"API","title":"Vulkan._SparseImageMemoryBind","text":"Intermediate wrapper for VkSparseImageMemoryBind.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSparseImageMemoryBind.html\n\nstruct _SparseImageMemoryBind <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkSparseImageMemoryBind\nmemory::Union{Ptr{Nothing}, DeviceMemory}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SparseImageMemoryBind-Tuple{_ImageSubresource, _Offset3D, _Extent3D, Integer}","page":"API","title":"Vulkan._SparseImageMemoryBind","text":"_SparseImageMemoryBind(subresource::_ImageSubresource, offset::_Offset3D, extent::_Extent3D, memory_offset::Integer; memory = C_NULL, flags = 0)\n\nArguments:\n\nsubresource::_ImageSubresource\noffset::_Offset3D\nextent::_Extent3D\nmemory_offset::Integer\nmemory: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_SparseImageMemoryBind(subresource::_ImageSubresource, offset::_Offset3D, extent::_Extent3D, memory_offset::Integer; memory, flags) -> _SparseImageMemoryBind\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SparseImageMemoryBindInfo","page":"API","title":"Vulkan._SparseImageMemoryBindInfo","text":"Intermediate wrapper for VkSparseImageMemoryBindInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSparseImageMemoryBindInfo.html\n\nstruct _SparseImageMemoryBindInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSparseImageMemoryBindInfo\ndeps::Vector{Any}\nimage::Image\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SparseImageMemoryBindInfo-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._SparseImageMemoryBindInfo","text":"_SparseImageMemoryBindInfo(image, binds::AbstractArray{_SparseImageMemoryBind})\n\nArguments:\n\nimage\nbinds::AbstractArray{_SparseImageMemoryBind}\n\nAPI documentation\n\n_SparseImageMemoryBindInfo(image, binds::AbstractArray) -> _SparseImageMemoryBindInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SparseImageMemoryRequirements","page":"API","title":"Vulkan._SparseImageMemoryRequirements","text":"Intermediate wrapper for VkSparseImageMemoryRequirements.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSparseImageMemoryRequirements.html\n\nstruct _SparseImageMemoryRequirements <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkSparseImageMemoryRequirements\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SparseImageMemoryRequirements-Tuple{_SparseImageFormatProperties, Integer, Integer, Integer, Integer}","page":"API","title":"Vulkan._SparseImageMemoryRequirements","text":"_SparseImageMemoryRequirements(format_properties::_SparseImageFormatProperties, image_mip_tail_first_lod::Integer, image_mip_tail_size::Integer, image_mip_tail_offset::Integer, image_mip_tail_stride::Integer)\n\nArguments:\n\nformat_properties::_SparseImageFormatProperties\nimage_mip_tail_first_lod::Integer\nimage_mip_tail_size::Integer\nimage_mip_tail_offset::Integer\nimage_mip_tail_stride::Integer\n\nAPI documentation\n\n_SparseImageMemoryRequirements(format_properties::_SparseImageFormatProperties, image_mip_tail_first_lod::Integer, image_mip_tail_size::Integer, image_mip_tail_offset::Integer, image_mip_tail_stride::Integer) -> _SparseImageMemoryRequirements\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SparseImageMemoryRequirements2","page":"API","title":"Vulkan._SparseImageMemoryRequirements2","text":"Intermediate wrapper for VkSparseImageMemoryRequirements2.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSparseImageMemoryRequirements2.html\n\nstruct _SparseImageMemoryRequirements2 <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSparseImageMemoryRequirements2\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SparseImageMemoryRequirements2-Tuple{_SparseImageMemoryRequirements}","page":"API","title":"Vulkan._SparseImageMemoryRequirements2","text":"_SparseImageMemoryRequirements2(memory_requirements::_SparseImageMemoryRequirements; next = C_NULL)\n\nArguments:\n\nmemory_requirements::_SparseImageMemoryRequirements\nnext: defaults to C_NULL\n\nAPI documentation\n\n_SparseImageMemoryRequirements2(memory_requirements::_SparseImageMemoryRequirements; next) -> _SparseImageMemoryRequirements2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SparseImageOpaqueMemoryBindInfo","page":"API","title":"Vulkan._SparseImageOpaqueMemoryBindInfo","text":"Intermediate wrapper for VkSparseImageOpaqueMemoryBindInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSparseImageOpaqueMemoryBindInfo.html\n\nstruct _SparseImageOpaqueMemoryBindInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSparseImageOpaqueMemoryBindInfo\ndeps::Vector{Any}\nimage::Image\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SparseImageOpaqueMemoryBindInfo-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._SparseImageOpaqueMemoryBindInfo","text":"_SparseImageOpaqueMemoryBindInfo(image, binds::AbstractArray{_SparseMemoryBind})\n\nArguments:\n\nimage\nbinds::AbstractArray{_SparseMemoryBind}\n\nAPI documentation\n\n_SparseImageOpaqueMemoryBindInfo(image, binds::AbstractArray) -> _SparseImageOpaqueMemoryBindInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SparseMemoryBind","page":"API","title":"Vulkan._SparseMemoryBind","text":"Intermediate wrapper for VkSparseMemoryBind.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSparseMemoryBind.html\n\nstruct _SparseMemoryBind <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkSparseMemoryBind\nmemory::Union{Ptr{Nothing}, DeviceMemory}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SparseMemoryBind-Tuple{Integer, Integer, Integer}","page":"API","title":"Vulkan._SparseMemoryBind","text":"_SparseMemoryBind(resource_offset::Integer, size::Integer, memory_offset::Integer; memory = C_NULL, flags = 0)\n\nArguments:\n\nresource_offset::Integer\nsize::Integer\nmemory_offset::Integer\nmemory: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_SparseMemoryBind(resource_offset::Integer, size::Integer, memory_offset::Integer; memory, flags) -> _SparseMemoryBind\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SpecializationInfo","page":"API","title":"Vulkan._SpecializationInfo","text":"Intermediate wrapper for VkSpecializationInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSpecializationInfo.html\n\nstruct _SpecializationInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSpecializationInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SpecializationInfo-Tuple{AbstractArray, Ptr{Nothing}}","page":"API","title":"Vulkan._SpecializationInfo","text":"_SpecializationInfo(map_entries::AbstractArray{_SpecializationMapEntry}, data::Ptr{Cvoid}; data_size = 0)\n\nArguments:\n\nmap_entries::AbstractArray{_SpecializationMapEntry}\ndata::Ptr{Cvoid}\ndata_size: defaults to 0\n\nAPI documentation\n\n_SpecializationInfo(map_entries::AbstractArray, data::Ptr{Nothing}; data_size) -> _SpecializationInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SpecializationMapEntry","page":"API","title":"Vulkan._SpecializationMapEntry","text":"Intermediate wrapper for VkSpecializationMapEntry.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSpecializationMapEntry.html\n\nstruct _SpecializationMapEntry <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkSpecializationMapEntry\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SpecializationMapEntry-Tuple{Integer, Integer, Integer}","page":"API","title":"Vulkan._SpecializationMapEntry","text":"_SpecializationMapEntry(constant_id::Integer, offset::Integer, size::Integer)\n\nArguments:\n\nconstant_id::Integer\noffset::Integer\nsize::Integer\n\nAPI documentation\n\n_SpecializationMapEntry(constant_id::Integer, offset::Integer, size::Integer) -> _SpecializationMapEntry\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._StencilOpState","page":"API","title":"Vulkan._StencilOpState","text":"Intermediate wrapper for VkStencilOpState.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkStencilOpState.html\n\nstruct _StencilOpState <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkStencilOpState\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._StencilOpState-Tuple{StencilOp, StencilOp, StencilOp, CompareOp, Integer, Integer, Integer}","page":"API","title":"Vulkan._StencilOpState","text":"_StencilOpState(fail_op::StencilOp, pass_op::StencilOp, depth_fail_op::StencilOp, compare_op::CompareOp, compare_mask::Integer, write_mask::Integer, reference::Integer)\n\nArguments:\n\nfail_op::StencilOp\npass_op::StencilOp\ndepth_fail_op::StencilOp\ncompare_op::CompareOp\ncompare_mask::Integer\nwrite_mask::Integer\nreference::Integer\n\nAPI documentation\n\n_StencilOpState(fail_op::StencilOp, pass_op::StencilOp, depth_fail_op::StencilOp, compare_op::CompareOp, compare_mask::Integer, write_mask::Integer, reference::Integer) -> _StencilOpState\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._StridedDeviceAddressRegionKHR","page":"API","title":"Vulkan._StridedDeviceAddressRegionKHR","text":"Intermediate wrapper for VkStridedDeviceAddressRegionKHR.\n\nExtension: VKKHRraytracingpipeline\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkStridedDeviceAddressRegionKHR.html\n\nstruct _StridedDeviceAddressRegionKHR <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkStridedDeviceAddressRegionKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._StridedDeviceAddressRegionKHR-Tuple{Integer, Integer}","page":"API","title":"Vulkan._StridedDeviceAddressRegionKHR","text":"_StridedDeviceAddressRegionKHR(stride::Integer, size::Integer; device_address = 0)\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\nstride::Integer\nsize::Integer\ndevice_address: defaults to 0\n\nAPI documentation\n\n_StridedDeviceAddressRegionKHR(stride::Integer, size::Integer; device_address) -> _StridedDeviceAddressRegionKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SubmitInfo","page":"API","title":"Vulkan._SubmitInfo","text":"Intermediate wrapper for VkSubmitInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSubmitInfo.html\n\nstruct _SubmitInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSubmitInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SubmitInfo-NTuple{4, AbstractArray}","page":"API","title":"Vulkan._SubmitInfo","text":"_SubmitInfo(wait_semaphores::AbstractArray{Semaphore}, wait_dst_stage_mask::AbstractArray{PipelineStageFlag}, command_buffers::AbstractArray{CommandBuffer}, signal_semaphores::AbstractArray{Semaphore}; next = C_NULL)\n\nArguments:\n\nwait_semaphores::AbstractArray{Semaphore}\nwait_dst_stage_mask::AbstractArray{PipelineStageFlag}\ncommand_buffers::AbstractArray{CommandBuffer}\nsignal_semaphores::AbstractArray{Semaphore}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_SubmitInfo(wait_semaphores::AbstractArray, wait_dst_stage_mask::AbstractArray, command_buffers::AbstractArray, signal_semaphores::AbstractArray; next) -> _SubmitInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SubmitInfo2KHR","page":"API","title":"Vulkan._SubmitInfo2KHR","text":"Intermediate wrapper for VkSubmitInfo2KHR.\n\nExtension: VKKHRsynchronization2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSubmitInfo2KHR.html\n\nstruct _SubmitInfo2KHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSubmitInfo2KHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SubmitInfo2KHR-Tuple{AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan._SubmitInfo2KHR","text":"_SubmitInfo2KHR(wait_semaphore_infos::AbstractArray{_SemaphoreSubmitInfoKHR}, command_buffer_infos::AbstractArray{_CommandBufferSubmitInfoKHR}, signal_semaphore_infos::AbstractArray{_SemaphoreSubmitInfoKHR}; next = C_NULL, flags = 0)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\nwait_semaphore_infos::AbstractArray{_SemaphoreSubmitInfoKHR}\ncommand_buffer_infos::AbstractArray{_CommandBufferSubmitInfoKHR}\nsignal_semaphore_infos::AbstractArray{_SemaphoreSubmitInfoKHR}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_SubmitInfo2KHR(wait_semaphore_infos::AbstractArray, command_buffer_infos::AbstractArray, signal_semaphore_infos::AbstractArray; next, flags) -> _SubmitInfo2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SubpassBeginInfo","page":"API","title":"Vulkan._SubpassBeginInfo","text":"Intermediate wrapper for VkSubpassBeginInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSubpassBeginInfo.html\n\nstruct _SubpassBeginInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSubpassBeginInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SubpassBeginInfo-Tuple{SubpassContents}","page":"API","title":"Vulkan._SubpassBeginInfo","text":"_SubpassBeginInfo(contents::SubpassContents; next = C_NULL)\n\nArguments:\n\ncontents::SubpassContents\nnext: defaults to C_NULL\n\nAPI documentation\n\n_SubpassBeginInfo(contents::SubpassContents; next) -> _SubpassBeginInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SubpassDependency","page":"API","title":"Vulkan._SubpassDependency","text":"Intermediate wrapper for VkSubpassDependency.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSubpassDependency.html\n\nstruct _SubpassDependency <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkSubpassDependency\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SubpassDependency-Tuple{Integer, Integer}","page":"API","title":"Vulkan._SubpassDependency","text":"_SubpassDependency(src_subpass::Integer, dst_subpass::Integer; src_stage_mask = 0, dst_stage_mask = 0, src_access_mask = 0, dst_access_mask = 0, dependency_flags = 0)\n\nArguments:\n\nsrc_subpass::Integer\ndst_subpass::Integer\nsrc_stage_mask: defaults to 0\ndst_stage_mask: defaults to 0\nsrc_access_mask: defaults to 0\ndst_access_mask: defaults to 0\ndependency_flags: defaults to 0\n\nAPI documentation\n\n_SubpassDependency(src_subpass::Integer, dst_subpass::Integer; src_stage_mask, dst_stage_mask, src_access_mask, dst_access_mask, dependency_flags) -> _SubpassDependency\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SubpassDependency2","page":"API","title":"Vulkan._SubpassDependency2","text":"Intermediate wrapper for VkSubpassDependency2.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSubpassDependency2.html\n\nstruct _SubpassDependency2 <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSubpassDependency2\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SubpassDependency2-Tuple{Integer, Integer, Integer}","page":"API","title":"Vulkan._SubpassDependency2","text":"_SubpassDependency2(src_subpass::Integer, dst_subpass::Integer, view_offset::Integer; next = C_NULL, src_stage_mask = 0, dst_stage_mask = 0, src_access_mask = 0, dst_access_mask = 0, dependency_flags = 0)\n\nArguments:\n\nsrc_subpass::Integer\ndst_subpass::Integer\nview_offset::Integer\nnext: defaults to C_NULL\nsrc_stage_mask: defaults to 0\ndst_stage_mask: defaults to 0\nsrc_access_mask: defaults to 0\ndst_access_mask: defaults to 0\ndependency_flags: defaults to 0\n\nAPI documentation\n\n_SubpassDependency2(src_subpass::Integer, dst_subpass::Integer, view_offset::Integer; next, src_stage_mask, dst_stage_mask, src_access_mask, dst_access_mask, dependency_flags) -> _SubpassDependency2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SubpassDescription","page":"API","title":"Vulkan._SubpassDescription","text":"Intermediate wrapper for VkSubpassDescription.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSubpassDescription.html\n\nstruct _SubpassDescription <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSubpassDescription\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SubpassDescription-Tuple{PipelineBindPoint, AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan._SubpassDescription","text":"_SubpassDescription(pipeline_bind_point::PipelineBindPoint, input_attachments::AbstractArray{_AttachmentReference}, color_attachments::AbstractArray{_AttachmentReference}, preserve_attachments::AbstractArray{<:Integer}; flags = 0, resolve_attachments = C_NULL, depth_stencil_attachment = C_NULL)\n\nArguments:\n\npipeline_bind_point::PipelineBindPoint\ninput_attachments::AbstractArray{_AttachmentReference}\ncolor_attachments::AbstractArray{_AttachmentReference}\npreserve_attachments::AbstractArray{<:Integer}\nflags: defaults to 0\nresolve_attachments: defaults to C_NULL\ndepth_stencil_attachment: defaults to C_NULL\n\nAPI documentation\n\n_SubpassDescription(pipeline_bind_point::PipelineBindPoint, input_attachments::AbstractArray, color_attachments::AbstractArray, preserve_attachments::AbstractArray; flags, resolve_attachments, depth_stencil_attachment) -> _SubpassDescription\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SubpassDescription2","page":"API","title":"Vulkan._SubpassDescription2","text":"Intermediate wrapper for VkSubpassDescription2.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSubpassDescription2.html\n\nstruct _SubpassDescription2 <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSubpassDescription2\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SubpassDescription2-Tuple{PipelineBindPoint, Integer, AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan._SubpassDescription2","text":"_SubpassDescription2(pipeline_bind_point::PipelineBindPoint, view_mask::Integer, input_attachments::AbstractArray{_AttachmentReference2}, color_attachments::AbstractArray{_AttachmentReference2}, preserve_attachments::AbstractArray{<:Integer}; next = C_NULL, flags = 0, resolve_attachments = C_NULL, depth_stencil_attachment = C_NULL)\n\nArguments:\n\npipeline_bind_point::PipelineBindPoint\nview_mask::Integer\ninput_attachments::AbstractArray{_AttachmentReference2}\ncolor_attachments::AbstractArray{_AttachmentReference2}\npreserve_attachments::AbstractArray{<:Integer}\nnext: defaults to C_NULL\nflags: defaults to 0\nresolve_attachments: defaults to C_NULL\ndepth_stencil_attachment: defaults to C_NULL\n\nAPI documentation\n\n_SubpassDescription2(pipeline_bind_point::PipelineBindPoint, view_mask::Integer, input_attachments::AbstractArray, color_attachments::AbstractArray, preserve_attachments::AbstractArray; next, flags, resolve_attachments, depth_stencil_attachment) -> _SubpassDescription2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SubpassDescriptionDepthStencilResolve","page":"API","title":"Vulkan._SubpassDescriptionDepthStencilResolve","text":"Intermediate wrapper for VkSubpassDescriptionDepthStencilResolve.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSubpassDescriptionDepthStencilResolve.html\n\nstruct _SubpassDescriptionDepthStencilResolve <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSubpassDescriptionDepthStencilResolve\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SubpassDescriptionDepthStencilResolve-Tuple{ResolveModeFlag, ResolveModeFlag}","page":"API","title":"Vulkan._SubpassDescriptionDepthStencilResolve","text":"_SubpassDescriptionDepthStencilResolve(depth_resolve_mode::ResolveModeFlag, stencil_resolve_mode::ResolveModeFlag; next = C_NULL, depth_stencil_resolve_attachment = C_NULL)\n\nArguments:\n\ndepth_resolve_mode::ResolveModeFlag\nstencil_resolve_mode::ResolveModeFlag\nnext: defaults to C_NULL\ndepth_stencil_resolve_attachment: defaults to C_NULL\n\nAPI documentation\n\n_SubpassDescriptionDepthStencilResolve(depth_resolve_mode::ResolveModeFlag, stencil_resolve_mode::ResolveModeFlag; next, depth_stencil_resolve_attachment) -> _SubpassDescriptionDepthStencilResolve\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SubpassEndInfo","page":"API","title":"Vulkan._SubpassEndInfo","text":"Intermediate wrapper for VkSubpassEndInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSubpassEndInfo.html\n\nstruct _SubpassEndInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSubpassEndInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SubpassEndInfo-Tuple{}","page":"API","title":"Vulkan._SubpassEndInfo","text":"_SubpassEndInfo(; next = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\n\nAPI documentation\n\n_SubpassEndInfo(; next) -> _SubpassEndInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SubpassSampleLocationsEXT","page":"API","title":"Vulkan._SubpassSampleLocationsEXT","text":"Intermediate wrapper for VkSubpassSampleLocationsEXT.\n\nExtension: VKEXTsample_locations\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSubpassSampleLocationsEXT.html\n\nstruct _SubpassSampleLocationsEXT <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkSubpassSampleLocationsEXT\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SubpassSampleLocationsEXT-Tuple{Integer, _SampleLocationsInfoEXT}","page":"API","title":"Vulkan._SubpassSampleLocationsEXT","text":"_SubpassSampleLocationsEXT(subpass_index::Integer, sample_locations_info::_SampleLocationsInfoEXT)\n\nExtension: VK_EXT_sample_locations\n\nArguments:\n\nsubpass_index::Integer\nsample_locations_info::_SampleLocationsInfoEXT\n\nAPI documentation\n\n_SubpassSampleLocationsEXT(subpass_index::Integer, sample_locations_info::_SampleLocationsInfoEXT) -> _SubpassSampleLocationsEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SubresourceLayout","page":"API","title":"Vulkan._SubresourceLayout","text":"Intermediate wrapper for VkSubresourceLayout.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSubresourceLayout.html\n\nstruct _SubresourceLayout <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkSubresourceLayout\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SubresourceLayout-NTuple{5, Integer}","page":"API","title":"Vulkan._SubresourceLayout","text":"_SubresourceLayout(offset::Integer, size::Integer, row_pitch::Integer, array_pitch::Integer, depth_pitch::Integer)\n\nArguments:\n\noffset::Integer\nsize::Integer\nrow_pitch::Integer\narray_pitch::Integer\ndepth_pitch::Integer\n\nAPI documentation\n\n_SubresourceLayout(offset::Integer, size::Integer, row_pitch::Integer, array_pitch::Integer, depth_pitch::Integer) -> _SubresourceLayout\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SurfaceCapabilities2EXT","page":"API","title":"Vulkan._SurfaceCapabilities2EXT","text":"Intermediate wrapper for VkSurfaceCapabilities2EXT.\n\nExtension: VKEXTdisplaysurfacecounter\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSurfaceCapabilities2EXT.html\n\nstruct _SurfaceCapabilities2EXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSurfaceCapabilities2EXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SurfaceCapabilities2EXT-Tuple{Integer, Integer, _Extent2D, _Extent2D, _Extent2D, Integer, SurfaceTransformFlagKHR}","page":"API","title":"Vulkan._SurfaceCapabilities2EXT","text":"_SurfaceCapabilities2EXT(min_image_count::Integer, max_image_count::Integer, current_extent::_Extent2D, min_image_extent::_Extent2D, max_image_extent::_Extent2D, max_image_array_layers::Integer, current_transform::SurfaceTransformFlagKHR; next = C_NULL, supported_transforms = 0, supported_composite_alpha = 0, supported_usage_flags = 0, supported_surface_counters = 0)\n\nExtension: VK_EXT_display_surface_counter\n\nArguments:\n\nmin_image_count::Integer\nmax_image_count::Integer\ncurrent_extent::_Extent2D\nmin_image_extent::_Extent2D\nmax_image_extent::_Extent2D\nmax_image_array_layers::Integer\ncurrent_transform::SurfaceTransformFlagKHR\nnext: defaults to C_NULL\nsupported_transforms: defaults to 0\nsupported_composite_alpha: defaults to 0\nsupported_usage_flags: defaults to 0\nsupported_surface_counters: defaults to 0\n\nAPI documentation\n\n_SurfaceCapabilities2EXT(min_image_count::Integer, max_image_count::Integer, current_extent::_Extent2D, min_image_extent::_Extent2D, max_image_extent::_Extent2D, max_image_array_layers::Integer, current_transform::SurfaceTransformFlagKHR; next, supported_transforms, supported_composite_alpha, supported_usage_flags, supported_surface_counters) -> _SurfaceCapabilities2EXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SurfaceCapabilities2KHR","page":"API","title":"Vulkan._SurfaceCapabilities2KHR","text":"Intermediate wrapper for VkSurfaceCapabilities2KHR.\n\nExtension: VKKHRgetsurfacecapabilities2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSurfaceCapabilities2KHR.html\n\nstruct _SurfaceCapabilities2KHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSurfaceCapabilities2KHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SurfaceCapabilities2KHR-Tuple{_SurfaceCapabilitiesKHR}","page":"API","title":"Vulkan._SurfaceCapabilities2KHR","text":"_SurfaceCapabilities2KHR(surface_capabilities::_SurfaceCapabilitiesKHR; next = C_NULL)\n\nExtension: VK_KHR_get_surface_capabilities2\n\nArguments:\n\nsurface_capabilities::_SurfaceCapabilitiesKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\n_SurfaceCapabilities2KHR(surface_capabilities::_SurfaceCapabilitiesKHR; next) -> _SurfaceCapabilities2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SurfaceCapabilitiesKHR","page":"API","title":"Vulkan._SurfaceCapabilitiesKHR","text":"Intermediate wrapper for VkSurfaceCapabilitiesKHR.\n\nExtension: VKKHRsurface\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSurfaceCapabilitiesKHR.html\n\nstruct _SurfaceCapabilitiesKHR <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkSurfaceCapabilitiesKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SurfaceCapabilitiesKHR-Tuple{Integer, Integer, _Extent2D, _Extent2D, _Extent2D, Integer, SurfaceTransformFlagKHR}","page":"API","title":"Vulkan._SurfaceCapabilitiesKHR","text":"_SurfaceCapabilitiesKHR(min_image_count::Integer, max_image_count::Integer, current_extent::_Extent2D, min_image_extent::_Extent2D, max_image_extent::_Extent2D, max_image_array_layers::Integer, current_transform::SurfaceTransformFlagKHR; supported_transforms = 0, supported_composite_alpha = 0, supported_usage_flags = 0)\n\nExtension: VK_KHR_surface\n\nArguments:\n\nmin_image_count::Integer\nmax_image_count::Integer\ncurrent_extent::_Extent2D\nmin_image_extent::_Extent2D\nmax_image_extent::_Extent2D\nmax_image_array_layers::Integer\ncurrent_transform::SurfaceTransformFlagKHR\nsupported_transforms: defaults to 0\nsupported_composite_alpha: defaults to 0\nsupported_usage_flags: defaults to 0\n\nAPI documentation\n\n_SurfaceCapabilitiesKHR(min_image_count::Integer, max_image_count::Integer, current_extent::_Extent2D, min_image_extent::_Extent2D, max_image_extent::_Extent2D, max_image_array_layers::Integer, current_transform::SurfaceTransformFlagKHR; supported_transforms, supported_composite_alpha, supported_usage_flags) -> _SurfaceCapabilitiesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SurfaceFormat2KHR","page":"API","title":"Vulkan._SurfaceFormat2KHR","text":"Intermediate wrapper for VkSurfaceFormat2KHR.\n\nExtension: VKKHRgetsurfacecapabilities2\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSurfaceFormat2KHR.html\n\nstruct _SurfaceFormat2KHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSurfaceFormat2KHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SurfaceFormat2KHR-Tuple{_SurfaceFormatKHR}","page":"API","title":"Vulkan._SurfaceFormat2KHR","text":"_SurfaceFormat2KHR(surface_format::_SurfaceFormatKHR; next = C_NULL)\n\nExtension: VK_KHR_get_surface_capabilities2\n\nArguments:\n\nsurface_format::_SurfaceFormatKHR\nnext: defaults to C_NULL\n\nAPI documentation\n\n_SurfaceFormat2KHR(surface_format::_SurfaceFormatKHR; next) -> _SurfaceFormat2KHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SurfaceFormatKHR","page":"API","title":"Vulkan._SurfaceFormatKHR","text":"Intermediate wrapper for VkSurfaceFormatKHR.\n\nExtension: VKKHRsurface\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSurfaceFormatKHR.html\n\nstruct _SurfaceFormatKHR <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkSurfaceFormatKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SurfaceFormatKHR-Tuple{Format, ColorSpaceKHR}","page":"API","title":"Vulkan._SurfaceFormatKHR","text":"_SurfaceFormatKHR(format::Format, color_space::ColorSpaceKHR)\n\nExtension: VK_KHR_surface\n\nArguments:\n\nformat::Format\ncolor_space::ColorSpaceKHR\n\nAPI documentation\n\n_SurfaceFormatKHR(format::Format, color_space::ColorSpaceKHR) -> _SurfaceFormatKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SurfaceProtectedCapabilitiesKHR","page":"API","title":"Vulkan._SurfaceProtectedCapabilitiesKHR","text":"Intermediate wrapper for VkSurfaceProtectedCapabilitiesKHR.\n\nExtension: VKKHRsurfaceprotectedcapabilities\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSurfaceProtectedCapabilitiesKHR.html\n\nstruct _SurfaceProtectedCapabilitiesKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSurfaceProtectedCapabilitiesKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SurfaceProtectedCapabilitiesKHR-Tuple{Bool}","page":"API","title":"Vulkan._SurfaceProtectedCapabilitiesKHR","text":"_SurfaceProtectedCapabilitiesKHR(supports_protected::Bool; next = C_NULL)\n\nExtension: VK_KHR_surface_protected_capabilities\n\nArguments:\n\nsupports_protected::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_SurfaceProtectedCapabilitiesKHR(supports_protected::Bool; next) -> _SurfaceProtectedCapabilitiesKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SwapchainCounterCreateInfoEXT","page":"API","title":"Vulkan._SwapchainCounterCreateInfoEXT","text":"Intermediate wrapper for VkSwapchainCounterCreateInfoEXT.\n\nExtension: VKEXTdisplay_control\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSwapchainCounterCreateInfoEXT.html\n\nstruct _SwapchainCounterCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSwapchainCounterCreateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SwapchainCounterCreateInfoEXT-Tuple{}","page":"API","title":"Vulkan._SwapchainCounterCreateInfoEXT","text":"_SwapchainCounterCreateInfoEXT(; next = C_NULL, surface_counters = 0)\n\nExtension: VK_EXT_display_control\n\nArguments:\n\nnext: defaults to C_NULL\nsurface_counters: defaults to 0\n\nAPI documentation\n\n_SwapchainCounterCreateInfoEXT(; next, surface_counters) -> _SwapchainCounterCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SwapchainCreateInfoKHR","page":"API","title":"Vulkan._SwapchainCreateInfoKHR","text":"Intermediate wrapper for VkSwapchainCreateInfoKHR.\n\nExtension: VKKHRswapchain\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSwapchainCreateInfoKHR.html\n\nstruct _SwapchainCreateInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSwapchainCreateInfoKHR\ndeps::Vector{Any}\nsurface::SurfaceKHR\nold_swapchain::Union{Ptr{Nothing}, SwapchainKHR}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SwapchainCreateInfoKHR-Tuple{Any, Integer, Format, ColorSpaceKHR, _Extent2D, Integer, ImageUsageFlag, SharingMode, AbstractArray, SurfaceTransformFlagKHR, CompositeAlphaFlagKHR, PresentModeKHR, Bool}","page":"API","title":"Vulkan._SwapchainCreateInfoKHR","text":"_SwapchainCreateInfoKHR(surface, min_image_count::Integer, image_format::Format, image_color_space::ColorSpaceKHR, image_extent::_Extent2D, image_array_layers::Integer, image_usage::ImageUsageFlag, image_sharing_mode::SharingMode, queue_family_indices::AbstractArray{<:Integer}, pre_transform::SurfaceTransformFlagKHR, composite_alpha::CompositeAlphaFlagKHR, present_mode::PresentModeKHR, clipped::Bool; next = C_NULL, flags = 0, old_swapchain = C_NULL)\n\nExtension: VK_KHR_swapchain\n\nArguments:\n\nsurface\nmin_image_count::Integer\nimage_format::Format\nimage_color_space::ColorSpaceKHR\nimage_extent::_Extent2D\nimage_array_layers::Integer\nimage_usage::ImageUsageFlag\nimage_sharing_mode::SharingMode\nqueue_family_indices::AbstractArray{<:Integer}\npre_transform::SurfaceTransformFlagKHR\ncomposite_alpha::CompositeAlphaFlagKHR\npresent_mode::PresentModeKHR\nclipped::Bool\nnext: defaults to C_NULL\nflags: defaults to 0\nold_swapchain: defaults to C_NULL\n\nAPI documentation\n\n_SwapchainCreateInfoKHR(surface, min_image_count::Integer, image_format::Format, image_color_space::ColorSpaceKHR, image_extent::_Extent2D, image_array_layers::Integer, image_usage::ImageUsageFlag, image_sharing_mode::SharingMode, queue_family_indices::AbstractArray, pre_transform::SurfaceTransformFlagKHR, composite_alpha::CompositeAlphaFlagKHR, present_mode::PresentModeKHR, clipped::Bool; next, flags, old_swapchain) -> _SwapchainCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._SwapchainDisplayNativeHdrCreateInfoAMD","page":"API","title":"Vulkan._SwapchainDisplayNativeHdrCreateInfoAMD","text":"Intermediate wrapper for VkSwapchainDisplayNativeHdrCreateInfoAMD.\n\nExtension: VKAMDdisplaynativehdr\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkSwapchainDisplayNativeHdrCreateInfoAMD.html\n\nstruct _SwapchainDisplayNativeHdrCreateInfoAMD <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkSwapchainDisplayNativeHdrCreateInfoAMD\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SwapchainDisplayNativeHdrCreateInfoAMD-Tuple{Bool}","page":"API","title":"Vulkan._SwapchainDisplayNativeHdrCreateInfoAMD","text":"_SwapchainDisplayNativeHdrCreateInfoAMD(local_dimming_enable::Bool; next = C_NULL)\n\nExtension: VK_AMD_display_native_hdr\n\nArguments:\n\nlocal_dimming_enable::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_SwapchainDisplayNativeHdrCreateInfoAMD(local_dimming_enable::Bool; next) -> _SwapchainDisplayNativeHdrCreateInfoAMD\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._TextureLODGatherFormatPropertiesAMD","page":"API","title":"Vulkan._TextureLODGatherFormatPropertiesAMD","text":"Intermediate wrapper for VkTextureLODGatherFormatPropertiesAMD.\n\nExtension: VKAMDtexturegatherbias_lod\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkTextureLODGatherFormatPropertiesAMD.html\n\nstruct _TextureLODGatherFormatPropertiesAMD <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkTextureLODGatherFormatPropertiesAMD\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._TextureLODGatherFormatPropertiesAMD-Tuple{Bool}","page":"API","title":"Vulkan._TextureLODGatherFormatPropertiesAMD","text":"_TextureLODGatherFormatPropertiesAMD(supports_texture_gather_lod_bias_amd::Bool; next = C_NULL)\n\nExtension: VK_AMD_texture_gather_bias_lod\n\nArguments:\n\nsupports_texture_gather_lod_bias_amd::Bool\nnext: defaults to C_NULL\n\nAPI documentation\n\n_TextureLODGatherFormatPropertiesAMD(supports_texture_gather_lod_bias_amd::Bool; next) -> _TextureLODGatherFormatPropertiesAMD\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._TimelineSemaphoreSubmitInfo","page":"API","title":"Vulkan._TimelineSemaphoreSubmitInfo","text":"Intermediate wrapper for VkTimelineSemaphoreSubmitInfo.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkTimelineSemaphoreSubmitInfo.html\n\nstruct _TimelineSemaphoreSubmitInfo <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkTimelineSemaphoreSubmitInfo\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._TimelineSemaphoreSubmitInfo-Tuple{}","page":"API","title":"Vulkan._TimelineSemaphoreSubmitInfo","text":"_TimelineSemaphoreSubmitInfo(; next = C_NULL, wait_semaphore_values = C_NULL, signal_semaphore_values = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\nwait_semaphore_values: defaults to C_NULL\nsignal_semaphore_values: defaults to C_NULL\n\nAPI documentation\n\n_TimelineSemaphoreSubmitInfo(; next, wait_semaphore_values, signal_semaphore_values) -> _TimelineSemaphoreSubmitInfo\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._TraceRaysIndirectCommandKHR","page":"API","title":"Vulkan._TraceRaysIndirectCommandKHR","text":"Intermediate wrapper for VkTraceRaysIndirectCommandKHR.\n\nExtension: VKKHRraytracingpipeline\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkTraceRaysIndirectCommandKHR.html\n\nstruct _TraceRaysIndirectCommandKHR <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkTraceRaysIndirectCommandKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._TraceRaysIndirectCommandKHR-Tuple{Integer, Integer, Integer}","page":"API","title":"Vulkan._TraceRaysIndirectCommandKHR","text":"_TraceRaysIndirectCommandKHR(width::Integer, height::Integer, depth::Integer)\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\nwidth::Integer\nheight::Integer\ndepth::Integer\n\nAPI documentation\n\n_TraceRaysIndirectCommandKHR(width::Integer, height::Integer, depth::Integer) -> _TraceRaysIndirectCommandKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._TransformMatrixKHR","page":"API","title":"Vulkan._TransformMatrixKHR","text":"Intermediate wrapper for VkTransformMatrixKHR.\n\nExtension: VKKHRacceleration_structure\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkTransformMatrixKHR.html\n\nstruct _TransformMatrixKHR <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkTransformMatrixKHR\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._TransformMatrixKHR-Tuple{Tuple{NTuple{4, Float32}, NTuple{4, Float32}, NTuple{4, Float32}}}","page":"API","title":"Vulkan._TransformMatrixKHR","text":"_TransformMatrixKHR(matrix::NTuple{3, NTuple{4, Float32}})\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\nmatrix::NTuple{3, NTuple{4, Float32}}\n\nAPI documentation\n\n_TransformMatrixKHR(matrix::Tuple{NTuple{4, Float32}, NTuple{4, Float32}, NTuple{4, Float32}}) -> _TransformMatrixKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ValidationCacheCreateInfoEXT","page":"API","title":"Vulkan._ValidationCacheCreateInfoEXT","text":"Intermediate wrapper for VkValidationCacheCreateInfoEXT.\n\nExtension: VKEXTvalidation_cache\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkValidationCacheCreateInfoEXT.html\n\nstruct _ValidationCacheCreateInfoEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkValidationCacheCreateInfoEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ValidationCacheCreateInfoEXT-Tuple{Ptr{Nothing}}","page":"API","title":"Vulkan._ValidationCacheCreateInfoEXT","text":"_ValidationCacheCreateInfoEXT(initial_data::Ptr{Cvoid}; next = C_NULL, flags = 0, initial_data_size = 0)\n\nExtension: VK_EXT_validation_cache\n\nArguments:\n\ninitial_data::Ptr{Cvoid}\nnext: defaults to C_NULL\nflags: defaults to 0\ninitial_data_size: defaults to 0\n\nAPI documentation\n\n_ValidationCacheCreateInfoEXT(initial_data::Ptr{Nothing}; next, flags, initial_data_size) -> _ValidationCacheCreateInfoEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ValidationFeaturesEXT","page":"API","title":"Vulkan._ValidationFeaturesEXT","text":"Intermediate wrapper for VkValidationFeaturesEXT.\n\nExtension: VKEXTvalidation_features\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkValidationFeaturesEXT.html\n\nstruct _ValidationFeaturesEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkValidationFeaturesEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ValidationFeaturesEXT-Tuple{AbstractArray, AbstractArray}","page":"API","title":"Vulkan._ValidationFeaturesEXT","text":"_ValidationFeaturesEXT(enabled_validation_features::AbstractArray{ValidationFeatureEnableEXT}, disabled_validation_features::AbstractArray{ValidationFeatureDisableEXT}; next = C_NULL)\n\nExtension: VK_EXT_validation_features\n\nArguments:\n\nenabled_validation_features::AbstractArray{ValidationFeatureEnableEXT}\ndisabled_validation_features::AbstractArray{ValidationFeatureDisableEXT}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_ValidationFeaturesEXT(enabled_validation_features::AbstractArray, disabled_validation_features::AbstractArray; next) -> _ValidationFeaturesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._ValidationFlagsEXT","page":"API","title":"Vulkan._ValidationFlagsEXT","text":"Intermediate wrapper for VkValidationFlagsEXT.\n\nExtension: VKEXTvalidation_flags\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkValidationFlagsEXT.html\n\nstruct _ValidationFlagsEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkValidationFlagsEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ValidationFlagsEXT-Tuple{AbstractArray}","page":"API","title":"Vulkan._ValidationFlagsEXT","text":"_ValidationFlagsEXT(disabled_validation_checks::AbstractArray{ValidationCheckEXT}; next = C_NULL)\n\nExtension: VK_EXT_validation_flags\n\nArguments:\n\ndisabled_validation_checks::AbstractArray{ValidationCheckEXT}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_ValidationFlagsEXT(disabled_validation_checks::AbstractArray; next) -> _ValidationFlagsEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._VertexInputAttributeDescription","page":"API","title":"Vulkan._VertexInputAttributeDescription","text":"Intermediate wrapper for VkVertexInputAttributeDescription.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkVertexInputAttributeDescription.html\n\nstruct _VertexInputAttributeDescription <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkVertexInputAttributeDescription\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VertexInputAttributeDescription-Tuple{Integer, Integer, Format, Integer}","page":"API","title":"Vulkan._VertexInputAttributeDescription","text":"_VertexInputAttributeDescription(location::Integer, binding::Integer, format::Format, offset::Integer)\n\nArguments:\n\nlocation::Integer\nbinding::Integer\nformat::Format\noffset::Integer\n\nAPI documentation\n\n_VertexInputAttributeDescription(location::Integer, binding::Integer, format::Format, offset::Integer) -> _VertexInputAttributeDescription\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._VertexInputAttributeDescription2EXT","page":"API","title":"Vulkan._VertexInputAttributeDescription2EXT","text":"Intermediate wrapper for VkVertexInputAttributeDescription2EXT.\n\nExtension: VKEXTvertexinputdynamic_state\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkVertexInputAttributeDescription2EXT.html\n\nstruct _VertexInputAttributeDescription2EXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkVertexInputAttributeDescription2EXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VertexInputAttributeDescription2EXT-Tuple{Integer, Integer, Format, Integer}","page":"API","title":"Vulkan._VertexInputAttributeDescription2EXT","text":"_VertexInputAttributeDescription2EXT(location::Integer, binding::Integer, format::Format, offset::Integer; next = C_NULL)\n\nExtension: VK_EXT_vertex_input_dynamic_state\n\nArguments:\n\nlocation::Integer\nbinding::Integer\nformat::Format\noffset::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_VertexInputAttributeDescription2EXT(location::Integer, binding::Integer, format::Format, offset::Integer; next) -> _VertexInputAttributeDescription2EXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._VertexInputBindingDescription","page":"API","title":"Vulkan._VertexInputBindingDescription","text":"Intermediate wrapper for VkVertexInputBindingDescription.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkVertexInputBindingDescription.html\n\nstruct _VertexInputBindingDescription <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkVertexInputBindingDescription\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VertexInputBindingDescription-Tuple{Integer, Integer, VertexInputRate}","page":"API","title":"Vulkan._VertexInputBindingDescription","text":"_VertexInputBindingDescription(binding::Integer, stride::Integer, input_rate::VertexInputRate)\n\nArguments:\n\nbinding::Integer\nstride::Integer\ninput_rate::VertexInputRate\n\nAPI documentation\n\n_VertexInputBindingDescription(binding::Integer, stride::Integer, input_rate::VertexInputRate) -> _VertexInputBindingDescription\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._VertexInputBindingDescription2EXT","page":"API","title":"Vulkan._VertexInputBindingDescription2EXT","text":"Intermediate wrapper for VkVertexInputBindingDescription2EXT.\n\nExtension: VKEXTvertexinputdynamic_state\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkVertexInputBindingDescription2EXT.html\n\nstruct _VertexInputBindingDescription2EXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkVertexInputBindingDescription2EXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VertexInputBindingDescription2EXT-Tuple{Integer, Integer, VertexInputRate, Integer}","page":"API","title":"Vulkan._VertexInputBindingDescription2EXT","text":"_VertexInputBindingDescription2EXT(binding::Integer, stride::Integer, input_rate::VertexInputRate, divisor::Integer; next = C_NULL)\n\nExtension: VK_EXT_vertex_input_dynamic_state\n\nArguments:\n\nbinding::Integer\nstride::Integer\ninput_rate::VertexInputRate\ndivisor::Integer\nnext: defaults to C_NULL\n\nAPI documentation\n\n_VertexInputBindingDescription2EXT(binding::Integer, stride::Integer, input_rate::VertexInputRate, divisor::Integer; next) -> _VertexInputBindingDescription2EXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._VertexInputBindingDivisorDescriptionEXT","page":"API","title":"Vulkan._VertexInputBindingDivisorDescriptionEXT","text":"Intermediate wrapper for VkVertexInputBindingDivisorDescriptionEXT.\n\nExtension: VKEXTvertexattributedivisor\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkVertexInputBindingDivisorDescriptionEXT.html\n\nstruct _VertexInputBindingDivisorDescriptionEXT <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkVertexInputBindingDivisorDescriptionEXT\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VertexInputBindingDivisorDescriptionEXT-Tuple{Integer, Integer}","page":"API","title":"Vulkan._VertexInputBindingDivisorDescriptionEXT","text":"_VertexInputBindingDivisorDescriptionEXT(binding::Integer, divisor::Integer)\n\nExtension: VK_EXT_vertex_attribute_divisor\n\nArguments:\n\nbinding::Integer\ndivisor::Integer\n\nAPI documentation\n\n_VertexInputBindingDivisorDescriptionEXT(binding::Integer, divisor::Integer) -> _VertexInputBindingDivisorDescriptionEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._Viewport","page":"API","title":"Vulkan._Viewport","text":"Intermediate wrapper for VkViewport.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkViewport.html\n\nstruct _Viewport <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkViewport\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ViewportSwizzleNV","page":"API","title":"Vulkan._ViewportSwizzleNV","text":"Intermediate wrapper for VkViewportSwizzleNV.\n\nExtension: VKNVviewport_swizzle\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkViewportSwizzleNV.html\n\nstruct _ViewportSwizzleNV <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkViewportSwizzleNV\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ViewportWScalingNV","page":"API","title":"Vulkan._ViewportWScalingNV","text":"Intermediate wrapper for VkViewportWScalingNV.\n\nExtension: VKNVclipspacew_scaling\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkViewportWScalingNV.html\n\nstruct _ViewportWScalingNV <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkViewportWScalingNV\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ViewportWScalingNV-Tuple{Real, Real}","page":"API","title":"Vulkan._ViewportWScalingNV","text":"_ViewportWScalingNV(xcoeff::Real, ycoeff::Real)\n\nExtension: VK_NV_clip_space_w_scaling\n\nArguments:\n\nxcoeff::Real\nycoeff::Real\n\nAPI documentation\n\n_ViewportWScalingNV(xcoeff::Real, ycoeff::Real) -> _ViewportWScalingNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._WaylandSurfaceCreateInfoKHR","page":"API","title":"Vulkan._WaylandSurfaceCreateInfoKHR","text":"Intermediate wrapper for VkWaylandSurfaceCreateInfoKHR.\n\nExtension: VKKHRwayland_surface\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkWaylandSurfaceCreateInfoKHR.html\n\nstruct _WaylandSurfaceCreateInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkWaylandSurfaceCreateInfoKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._WaylandSurfaceCreateInfoKHR-Tuple{Ptr{Nothing}, Ptr{Nothing}}","page":"API","title":"Vulkan._WaylandSurfaceCreateInfoKHR","text":"_WaylandSurfaceCreateInfoKHR(display::Ptr{wl_display}, surface::Ptr{wl_surface}; next = C_NULL, flags = 0)\n\nExtension: VK_KHR_wayland_surface\n\nArguments:\n\ndisplay::Ptr{wl_display}\nsurface::Ptr{wl_surface}\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_WaylandSurfaceCreateInfoKHR(display::Ptr{Nothing}, surface::Ptr{Nothing}; next, flags) -> _WaylandSurfaceCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._WriteDescriptorSet","page":"API","title":"Vulkan._WriteDescriptorSet","text":"Intermediate wrapper for VkWriteDescriptorSet.\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkWriteDescriptorSet.html\n\nstruct _WriteDescriptorSet <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkWriteDescriptorSet\ndeps::Vector{Any}\ndst_set::DescriptorSet\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._WriteDescriptorSet-Tuple{Any, Integer, Integer, DescriptorType, AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan._WriteDescriptorSet","text":"_WriteDescriptorSet(dst_set, dst_binding::Integer, dst_array_element::Integer, descriptor_type::DescriptorType, image_info::AbstractArray{_DescriptorImageInfo}, buffer_info::AbstractArray{_DescriptorBufferInfo}, texel_buffer_view::AbstractArray{BufferView}; next = C_NULL, descriptor_count = max(pointer_length(image_info), pointer_length(buffer_info), pointer_length(texel_buffer_view)))\n\nArguments:\n\ndst_set\ndst_binding::Integer\ndst_array_element::Integer\ndescriptor_type::DescriptorType\nimage_info::AbstractArray{_DescriptorImageInfo}\nbuffer_info::AbstractArray{_DescriptorBufferInfo}\ntexel_buffer_view::AbstractArray{BufferView}\nnext: defaults to C_NULL\ndescriptor_count: defaults to max(pointer_length(image_info), pointer_length(buffer_info), pointer_length(texel_buffer_view))\n\nAPI documentation\n\n_WriteDescriptorSet(dst_set, dst_binding::Integer, dst_array_element::Integer, descriptor_type::DescriptorType, image_info::AbstractArray, buffer_info::AbstractArray, texel_buffer_view::AbstractArray; next, descriptor_count) -> _WriteDescriptorSet\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._WriteDescriptorSetAccelerationStructureKHR","page":"API","title":"Vulkan._WriteDescriptorSetAccelerationStructureKHR","text":"Intermediate wrapper for VkWriteDescriptorSetAccelerationStructureKHR.\n\nExtension: VKKHRacceleration_structure\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkWriteDescriptorSetAccelerationStructureKHR.html\n\nstruct _WriteDescriptorSetAccelerationStructureKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkWriteDescriptorSetAccelerationStructureKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._WriteDescriptorSetAccelerationStructureKHR-Tuple{AbstractArray}","page":"API","title":"Vulkan._WriteDescriptorSetAccelerationStructureKHR","text":"_WriteDescriptorSetAccelerationStructureKHR(acceleration_structures::AbstractArray{AccelerationStructureKHR}; next = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\nacceleration_structures::AbstractArray{AccelerationStructureKHR}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_WriteDescriptorSetAccelerationStructureKHR(acceleration_structures::AbstractArray; next) -> _WriteDescriptorSetAccelerationStructureKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._WriteDescriptorSetAccelerationStructureNV","page":"API","title":"Vulkan._WriteDescriptorSetAccelerationStructureNV","text":"Intermediate wrapper for VkWriteDescriptorSetAccelerationStructureNV.\n\nExtension: VKNVray_tracing\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkWriteDescriptorSetAccelerationStructureNV.html\n\nstruct _WriteDescriptorSetAccelerationStructureNV <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkWriteDescriptorSetAccelerationStructureNV\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._WriteDescriptorSetAccelerationStructureNV-Tuple{AbstractArray}","page":"API","title":"Vulkan._WriteDescriptorSetAccelerationStructureNV","text":"_WriteDescriptorSetAccelerationStructureNV(acceleration_structures::AbstractArray{AccelerationStructureNV}; next = C_NULL)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\nacceleration_structures::AbstractArray{AccelerationStructureNV}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_WriteDescriptorSetAccelerationStructureNV(acceleration_structures::AbstractArray; next) -> _WriteDescriptorSetAccelerationStructureNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._WriteDescriptorSetInlineUniformBlockEXT","page":"API","title":"Vulkan._WriteDescriptorSetInlineUniformBlockEXT","text":"Intermediate wrapper for VkWriteDescriptorSetInlineUniformBlockEXT.\n\nExtension: VKEXTinlineuniformblock\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkWriteDescriptorSetInlineUniformBlockEXT.html\n\nstruct _WriteDescriptorSetInlineUniformBlockEXT <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkWriteDescriptorSetInlineUniformBlockEXT\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._WriteDescriptorSetInlineUniformBlockEXT-Tuple{Integer, Ptr{Nothing}}","page":"API","title":"Vulkan._WriteDescriptorSetInlineUniformBlockEXT","text":"_WriteDescriptorSetInlineUniformBlockEXT(data_size::Integer, data::Ptr{Cvoid}; next = C_NULL)\n\nExtension: VK_EXT_inline_uniform_block\n\nArguments:\n\ndata_size::Integer\ndata::Ptr{Cvoid}\nnext: defaults to C_NULL\n\nAPI documentation\n\n_WriteDescriptorSetInlineUniformBlockEXT(data_size::Integer, data::Ptr{Nothing}; next) -> _WriteDescriptorSetInlineUniformBlockEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._XYColorEXT","page":"API","title":"Vulkan._XYColorEXT","text":"Intermediate wrapper for VkXYColorEXT.\n\nExtension: VKEXThdr_metadata\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkXYColorEXT.html\n\nstruct _XYColorEXT <: VulkanStruct{false}\n\nvks::VulkanCore.LibVulkan.VkXYColorEXT\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._XcbSurfaceCreateInfoKHR","page":"API","title":"Vulkan._XcbSurfaceCreateInfoKHR","text":"Intermediate wrapper for VkXcbSurfaceCreateInfoKHR.\n\nExtension: VKKHRxcb_surface\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkXcbSurfaceCreateInfoKHR.html\n\nstruct _XcbSurfaceCreateInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkXcbSurfaceCreateInfoKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._XcbSurfaceCreateInfoKHR-Tuple{Ptr{Nothing}, UInt32}","page":"API","title":"Vulkan._XcbSurfaceCreateInfoKHR","text":"_XcbSurfaceCreateInfoKHR(connection::Ptr{xcb_connection_t}, window::xcb_window_t; next = C_NULL, flags = 0)\n\nExtension: VK_KHR_xcb_surface\n\nArguments:\n\nconnection::Ptr{xcb_connection_t}\nwindow::xcb_window_t\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_XcbSurfaceCreateInfoKHR(connection::Ptr{Nothing}, window::UInt32; next, flags) -> _XcbSurfaceCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._XlibSurfaceCreateInfoKHR","page":"API","title":"Vulkan._XlibSurfaceCreateInfoKHR","text":"Intermediate wrapper for VkXlibSurfaceCreateInfoKHR.\n\nExtension: VKKHRxlib_surface\n\nAPI documentation: https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/VkXlibSurfaceCreateInfoKHR.html\n\nstruct _XlibSurfaceCreateInfoKHR <: VulkanStruct{true}\n\nvks::VulkanCore.LibVulkan.VkXlibSurfaceCreateInfoKHR\ndeps::Vector{Any}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._XlibSurfaceCreateInfoKHR-Tuple{Ptr{Nothing}, UInt64}","page":"API","title":"Vulkan._XlibSurfaceCreateInfoKHR","text":"_XlibSurfaceCreateInfoKHR(dpy::Ptr{Display}, window::Window; next = C_NULL, flags = 0)\n\nExtension: VK_KHR_xlib_surface\n\nArguments:\n\ndpy::Ptr{Display}\nwindow::Window\nnext: defaults to C_NULL\nflags: defaults to 0\n\nAPI documentation\n\n_XlibSurfaceCreateInfoKHR(dpy::Ptr{Nothing}, window::UInt64; next, flags) -> _XlibSurfaceCreateInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._acquire_next_image_2_khr-Tuple{Any, _AcquireNextImageInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._acquire_next_image_2_khr","text":"_acquire_next_image_2_khr(device, acquire_info::_AcquireNextImageInfoKHR, fptr::FunctionPtr)::ResultTypes.Result{Tuple{UInt32, Result}, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nSuccess:\nSUCCESS\nTIMEOUT\nNOT_READY\nSUBOPTIMAL_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\nERROR_SURFACE_LOST_KHR\nERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT\n\nArguments:\n\ndevice\nacquire_info::_AcquireNextImageInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_acquire_next_image_2_khr(device, acquire_info::_AcquireNextImageInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Tuple{UInt32, Result}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._acquire_next_image_2_khr-Tuple{Any, _AcquireNextImageInfoKHR}","page":"API","title":"Vulkan._acquire_next_image_2_khr","text":"_acquire_next_image_2_khr(device, acquire_info::_AcquireNextImageInfoKHR)::ResultTypes.Result{Tuple{UInt32, Result}, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nSuccess:\nSUCCESS\nTIMEOUT\nNOT_READY\nSUBOPTIMAL_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\nERROR_SURFACE_LOST_KHR\nERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT\n\nArguments:\n\ndevice\nacquire_info::_AcquireNextImageInfoKHR\n\nAPI documentation\n\n_acquire_next_image_2_khr(device, acquire_info::_AcquireNextImageInfoKHR) -> ResultTypes.Result{Tuple{UInt32, Result}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._acquire_next_image_khr-Tuple{Any, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._acquire_next_image_khr","text":"_acquire_next_image_khr(device, swapchain, timeout::Integer, fptr::FunctionPtr; semaphore = C_NULL, fence = C_NULL)::ResultTypes.Result{Tuple{UInt32, Result}, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nSuccess:\nSUCCESS\nTIMEOUT\nNOT_READY\nSUBOPTIMAL_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\nERROR_SURFACE_LOST_KHR\nERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT\n\nArguments:\n\ndevice\nswapchain (externsync)\ntimeout::Integer\nfptr::FunctionPtr\nsemaphore: defaults to C_NULL (externsync)\nfence: defaults to C_NULL (externsync)\n\nAPI documentation\n\n_acquire_next_image_khr(device, swapchain, timeout::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}; semaphore, fence) -> ResultTypes.Result{Tuple{UInt32, Result}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._acquire_next_image_khr-Tuple{Any, Any, Integer}","page":"API","title":"Vulkan._acquire_next_image_khr","text":"_acquire_next_image_khr(device, swapchain, timeout::Integer; semaphore = C_NULL, fence = C_NULL)::ResultTypes.Result{Tuple{UInt32, Result}, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nSuccess:\nSUCCESS\nTIMEOUT\nNOT_READY\nSUBOPTIMAL_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\nERROR_SURFACE_LOST_KHR\nERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT\n\nArguments:\n\ndevice\nswapchain (externsync)\ntimeout::Integer\nsemaphore: defaults to C_NULL (externsync)\nfence: defaults to C_NULL (externsync)\n\nAPI documentation\n\n_acquire_next_image_khr(device, swapchain, timeout::Integer; semaphore, fence) -> ResultTypes.Result{Tuple{UInt32, Result}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._acquire_performance_configuration_intel-Tuple{Any, _PerformanceConfigurationAcquireInfoINTEL, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._acquire_performance_configuration_intel","text":"_acquire_performance_configuration_intel(device, acquire_info::_PerformanceConfigurationAcquireInfoINTEL, fptr::FunctionPtr)::ResultTypes.Result{PerformanceConfigurationINTEL, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nacquire_info::_PerformanceConfigurationAcquireInfoINTEL\nfptr::FunctionPtr\n\nAPI documentation\n\n_acquire_performance_configuration_intel(device, acquire_info::_PerformanceConfigurationAcquireInfoINTEL, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{PerformanceConfigurationINTEL, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._acquire_performance_configuration_intel-Tuple{Any, _PerformanceConfigurationAcquireInfoINTEL}","page":"API","title":"Vulkan._acquire_performance_configuration_intel","text":"_acquire_performance_configuration_intel(device, acquire_info::_PerformanceConfigurationAcquireInfoINTEL)::ResultTypes.Result{PerformanceConfigurationINTEL, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nacquire_info::_PerformanceConfigurationAcquireInfoINTEL\n\nAPI documentation\n\n_acquire_performance_configuration_intel(device, acquire_info::_PerformanceConfigurationAcquireInfoINTEL) -> ResultTypes.Result{PerformanceConfigurationINTEL, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._acquire_profiling_lock_khr-Tuple{Any, _AcquireProfilingLockInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._acquire_profiling_lock_khr","text":"_acquire_profiling_lock_khr(device, info::_AcquireProfilingLockInfoKHR, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_performance_query\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nTIMEOUT\n\nArguments:\n\ndevice\ninfo::_AcquireProfilingLockInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_acquire_profiling_lock_khr(device, info::_AcquireProfilingLockInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._acquire_profiling_lock_khr-Tuple{Any, _AcquireProfilingLockInfoKHR}","page":"API","title":"Vulkan._acquire_profiling_lock_khr","text":"_acquire_profiling_lock_khr(device, info::_AcquireProfilingLockInfoKHR)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_performance_query\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nTIMEOUT\n\nArguments:\n\ndevice\ninfo::_AcquireProfilingLockInfoKHR\n\nAPI documentation\n\n_acquire_profiling_lock_khr(device, info::_AcquireProfilingLockInfoKHR) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._acquire_xlib_display_ext-Tuple{Any, Ptr{Nothing}, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._acquire_xlib_display_ext","text":"_acquire_xlib_display_ext(physical_device, dpy::Ptr{Display}, display, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_acquire_xlib_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\nphysical_device\ndpy::Ptr{Display}\ndisplay\nfptr::FunctionPtr\n\nAPI documentation\n\n_acquire_xlib_display_ext(physical_device, dpy::Ptr{Nothing}, display, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._acquire_xlib_display_ext-Tuple{Any, Ptr{Nothing}, Any}","page":"API","title":"Vulkan._acquire_xlib_display_ext","text":"_acquire_xlib_display_ext(physical_device, dpy::Ptr{Display}, display)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_acquire_xlib_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\nphysical_device\ndpy::Ptr{Display}\ndisplay\n\nAPI documentation\n\n_acquire_xlib_display_ext(physical_device, dpy::Ptr{Nothing}, display) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._allocate_command_buffers-Tuple{Any, _CommandBufferAllocateInfo, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._allocate_command_buffers","text":"_allocate_command_buffers(device, allocate_info::_CommandBufferAllocateInfo, fptr_create::FunctionPtr)::ResultTypes.Result{Vector{CommandBuffer}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nallocate_info::_CommandBufferAllocateInfo (externsync)\nfptr_create::FunctionPtr\n\nAPI documentation\n\n_allocate_command_buffers(device, allocate_info::_CommandBufferAllocateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{CommandBuffer}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._allocate_command_buffers-Tuple{Any, _CommandBufferAllocateInfo}","page":"API","title":"Vulkan._allocate_command_buffers","text":"_allocate_command_buffers(device, allocate_info::_CommandBufferAllocateInfo)::ResultTypes.Result{Vector{CommandBuffer}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nallocate_info::_CommandBufferAllocateInfo (externsync)\n\nAPI documentation\n\n_allocate_command_buffers(device, allocate_info::_CommandBufferAllocateInfo) -> ResultTypes.Result{Vector{CommandBuffer}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._allocate_descriptor_sets-Tuple{Any, _DescriptorSetAllocateInfo, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._allocate_descriptor_sets","text":"_allocate_descriptor_sets(device, allocate_info::_DescriptorSetAllocateInfo, fptr_create::FunctionPtr)::ResultTypes.Result{Vector{DescriptorSet}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_FRAGMENTED_POOL\nERROR_OUT_OF_POOL_MEMORY\n\nArguments:\n\ndevice\nallocate_info::_DescriptorSetAllocateInfo (externsync)\nfptr_create::FunctionPtr\n\nAPI documentation\n\n_allocate_descriptor_sets(device, allocate_info::_DescriptorSetAllocateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{DescriptorSet}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._allocate_descriptor_sets-Tuple{Any, _DescriptorSetAllocateInfo}","page":"API","title":"Vulkan._allocate_descriptor_sets","text":"_allocate_descriptor_sets(device, allocate_info::_DescriptorSetAllocateInfo)::ResultTypes.Result{Vector{DescriptorSet}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_FRAGMENTED_POOL\nERROR_OUT_OF_POOL_MEMORY\n\nArguments:\n\ndevice\nallocate_info::_DescriptorSetAllocateInfo (externsync)\n\nAPI documentation\n\n_allocate_descriptor_sets(device, allocate_info::_DescriptorSetAllocateInfo) -> ResultTypes.Result{Vector{DescriptorSet}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._allocate_memory-Tuple{Any, _MemoryAllocateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._allocate_memory","text":"_allocate_memory(device, allocate_info::_MemoryAllocateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{DeviceMemory, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR\n\nArguments:\n\ndevice\nallocate_info::_MemoryAllocateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_allocate_memory(device, allocate_info::_MemoryAllocateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{DeviceMemory, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._allocate_memory-Tuple{Any, _MemoryAllocateInfo}","page":"API","title":"Vulkan._allocate_memory","text":"_allocate_memory(device, allocate_info::_MemoryAllocateInfo; allocator = C_NULL)::ResultTypes.Result{DeviceMemory, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR\n\nArguments:\n\ndevice\nallocate_info::_MemoryAllocateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_allocate_memory(device, allocate_info::_MemoryAllocateInfo; allocator) -> ResultTypes.Result{DeviceMemory, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._begin_command_buffer-Tuple{Any, _CommandBufferBeginInfo, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._begin_command_buffer","text":"_begin_command_buffer(command_buffer, begin_info::_CommandBufferBeginInfo, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ncommand_buffer (externsync)\nbegin_info::_CommandBufferBeginInfo\nfptr::FunctionPtr\n\nAPI documentation\n\n_begin_command_buffer(command_buffer, begin_info::_CommandBufferBeginInfo, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._begin_command_buffer-Tuple{Any, _CommandBufferBeginInfo}","page":"API","title":"Vulkan._begin_command_buffer","text":"_begin_command_buffer(command_buffer, begin_info::_CommandBufferBeginInfo)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ncommand_buffer (externsync)\nbegin_info::_CommandBufferBeginInfo\n\nAPI documentation\n\n_begin_command_buffer(command_buffer, begin_info::_CommandBufferBeginInfo) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._bind_acceleration_structure_memory_nv-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._bind_acceleration_structure_memory_nv","text":"_bind_acceleration_structure_memory_nv(device, bind_infos::AbstractArray{_BindAccelerationStructureMemoryInfoNV}, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_NV_ray_tracing\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nbind_infos::AbstractArray{_BindAccelerationStructureMemoryInfoNV}\nfptr::FunctionPtr\n\nAPI documentation\n\n_bind_acceleration_structure_memory_nv(device, bind_infos::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._bind_acceleration_structure_memory_nv-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._bind_acceleration_structure_memory_nv","text":"_bind_acceleration_structure_memory_nv(device, bind_infos::AbstractArray{_BindAccelerationStructureMemoryInfoNV})::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_NV_ray_tracing\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nbind_infos::AbstractArray{_BindAccelerationStructureMemoryInfoNV}\n\nAPI documentation\n\n_bind_acceleration_structure_memory_nv(device, bind_infos::AbstractArray) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._bind_buffer_memory-Tuple{Any, Any, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._bind_buffer_memory","text":"_bind_buffer_memory(device, buffer, memory, memory_offset::Integer, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR\n\nArguments:\n\ndevice\nbuffer (externsync)\nmemory\nmemory_offset::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_bind_buffer_memory(device, buffer, memory, memory_offset::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._bind_buffer_memory-Tuple{Any, Any, Any, Integer}","page":"API","title":"Vulkan._bind_buffer_memory","text":"_bind_buffer_memory(device, buffer, memory, memory_offset::Integer)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR\n\nArguments:\n\ndevice\nbuffer (externsync)\nmemory\nmemory_offset::Integer\n\nAPI documentation\n\n_bind_buffer_memory(device, buffer, memory, memory_offset::Integer) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._bind_buffer_memory_2-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._bind_buffer_memory_2","text":"_bind_buffer_memory_2(device, bind_infos::AbstractArray{_BindBufferMemoryInfo}, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR\n\nArguments:\n\ndevice\nbind_infos::AbstractArray{_BindBufferMemoryInfo}\nfptr::FunctionPtr\n\nAPI documentation\n\n_bind_buffer_memory_2(device, bind_infos::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._bind_buffer_memory_2-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._bind_buffer_memory_2","text":"_bind_buffer_memory_2(device, bind_infos::AbstractArray{_BindBufferMemoryInfo})::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR\n\nArguments:\n\ndevice\nbind_infos::AbstractArray{_BindBufferMemoryInfo}\n\nAPI documentation\n\n_bind_buffer_memory_2(device, bind_infos::AbstractArray) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._bind_image_memory-Tuple{Any, Any, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._bind_image_memory","text":"_bind_image_memory(device, image, memory, memory_offset::Integer, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nimage (externsync)\nmemory\nmemory_offset::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_bind_image_memory(device, image, memory, memory_offset::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._bind_image_memory-Tuple{Any, Any, Any, Integer}","page":"API","title":"Vulkan._bind_image_memory","text":"_bind_image_memory(device, image, memory, memory_offset::Integer)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nimage (externsync)\nmemory\nmemory_offset::Integer\n\nAPI documentation\n\n_bind_image_memory(device, image, memory, memory_offset::Integer) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._bind_image_memory_2-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._bind_image_memory_2","text":"_bind_image_memory_2(device, bind_infos::AbstractArray{_BindImageMemoryInfo}, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nbind_infos::AbstractArray{_BindImageMemoryInfo}\nfptr::FunctionPtr\n\nAPI documentation\n\n_bind_image_memory_2(device, bind_infos::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._bind_image_memory_2-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._bind_image_memory_2","text":"_bind_image_memory_2(device, bind_infos::AbstractArray{_BindImageMemoryInfo})::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nbind_infos::AbstractArray{_BindImageMemoryInfo}\n\nAPI documentation\n\n_bind_image_memory_2(device, bind_infos::AbstractArray) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._build_acceleration_structures_khr-Tuple{Any, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._build_acceleration_structures_khr","text":"_build_acceleration_structures_khr(device, infos::AbstractArray{_AccelerationStructureBuildGeometryInfoKHR}, build_range_infos::AbstractArray{_AccelerationStructureBuildRangeInfoKHR}, fptr::FunctionPtr; deferred_operation = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_acceleration_structure\n\nReturn codes:\n\nSuccess:\nSUCCESS\nOPERATION_DEFERRED_KHR\nOPERATION_NOT_DEFERRED_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ninfos::AbstractArray{_AccelerationStructureBuildGeometryInfoKHR}\nbuild_range_infos::AbstractArray{_AccelerationStructureBuildRangeInfoKHR}\nfptr::FunctionPtr\ndeferred_operation: defaults to C_NULL\n\nAPI documentation\n\n_build_acceleration_structures_khr(device, infos::AbstractArray, build_range_infos::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}; deferred_operation) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._build_acceleration_structures_khr-Tuple{Any, AbstractArray, AbstractArray}","page":"API","title":"Vulkan._build_acceleration_structures_khr","text":"_build_acceleration_structures_khr(device, infos::AbstractArray{_AccelerationStructureBuildGeometryInfoKHR}, build_range_infos::AbstractArray{_AccelerationStructureBuildRangeInfoKHR}; deferred_operation = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_acceleration_structure\n\nReturn codes:\n\nSuccess:\nSUCCESS\nOPERATION_DEFERRED_KHR\nOPERATION_NOT_DEFERRED_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ninfos::AbstractArray{_AccelerationStructureBuildGeometryInfoKHR}\nbuild_range_infos::AbstractArray{_AccelerationStructureBuildRangeInfoKHR}\ndeferred_operation: defaults to C_NULL\n\nAPI documentation\n\n_build_acceleration_structures_khr(device, infos::AbstractArray, build_range_infos::AbstractArray; deferred_operation) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_begin_conditional_rendering_ext-Tuple{Any, _ConditionalRenderingBeginInfoEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_begin_conditional_rendering_ext","text":"_cmd_begin_conditional_rendering_ext(command_buffer, conditional_rendering_begin::_ConditionalRenderingBeginInfoEXT, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_conditional_rendering\n\nArguments:\n\ncommand_buffer (externsync)\nconditional_rendering_begin::_ConditionalRenderingBeginInfoEXT\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_begin_conditional_rendering_ext(command_buffer, conditional_rendering_begin::_ConditionalRenderingBeginInfoEXT, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_begin_conditional_rendering_ext-Tuple{Any, _ConditionalRenderingBeginInfoEXT}","page":"API","title":"Vulkan._cmd_begin_conditional_rendering_ext","text":"_cmd_begin_conditional_rendering_ext(command_buffer, conditional_rendering_begin::_ConditionalRenderingBeginInfoEXT)::Cvoid\n\nExtension: VK_EXT_conditional_rendering\n\nArguments:\n\ncommand_buffer (externsync)\nconditional_rendering_begin::_ConditionalRenderingBeginInfoEXT\n\nAPI documentation\n\n_cmd_begin_conditional_rendering_ext(command_buffer, conditional_rendering_begin::_ConditionalRenderingBeginInfoEXT)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_begin_debug_utils_label_ext-Tuple{Any, _DebugUtilsLabelEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_begin_debug_utils_label_ext","text":"_cmd_begin_debug_utils_label_ext(command_buffer, label_info::_DebugUtilsLabelEXT, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\ncommand_buffer (externsync)\nlabel_info::_DebugUtilsLabelEXT\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_begin_debug_utils_label_ext(command_buffer, label_info::_DebugUtilsLabelEXT, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_begin_debug_utils_label_ext-Tuple{Any, _DebugUtilsLabelEXT}","page":"API","title":"Vulkan._cmd_begin_debug_utils_label_ext","text":"_cmd_begin_debug_utils_label_ext(command_buffer, label_info::_DebugUtilsLabelEXT)::Cvoid\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\ncommand_buffer (externsync)\nlabel_info::_DebugUtilsLabelEXT\n\nAPI documentation\n\n_cmd_begin_debug_utils_label_ext(command_buffer, label_info::_DebugUtilsLabelEXT)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_begin_query-Tuple{Any, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_begin_query","text":"_cmd_begin_query(command_buffer, query_pool, query::Integer, fptr::FunctionPtr; flags = 0)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nquery_pool\nquery::Integer\nfptr::FunctionPtr\nflags: defaults to 0\n\nAPI documentation\n\n_cmd_begin_query(command_buffer, query_pool, query::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}; flags)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_begin_query-Tuple{Any, Any, Integer}","page":"API","title":"Vulkan._cmd_begin_query","text":"_cmd_begin_query(command_buffer, query_pool, query::Integer; flags = 0)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nquery_pool\nquery::Integer\nflags: defaults to 0\n\nAPI documentation\n\n_cmd_begin_query(command_buffer, query_pool, query::Integer; flags)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_begin_query_indexed_ext-Tuple{Any, Any, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_begin_query_indexed_ext","text":"_cmd_begin_query_indexed_ext(command_buffer, query_pool, query::Integer, index::Integer, fptr::FunctionPtr; flags = 0)::Cvoid\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\ncommand_buffer (externsync)\nquery_pool\nquery::Integer\nindex::Integer\nfptr::FunctionPtr\nflags: defaults to 0\n\nAPI documentation\n\n_cmd_begin_query_indexed_ext(command_buffer, query_pool, query::Integer, index::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}; flags)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_begin_query_indexed_ext-Tuple{Any, Any, Integer, Integer}","page":"API","title":"Vulkan._cmd_begin_query_indexed_ext","text":"_cmd_begin_query_indexed_ext(command_buffer, query_pool, query::Integer, index::Integer; flags = 0)::Cvoid\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\ncommand_buffer (externsync)\nquery_pool\nquery::Integer\nindex::Integer\nflags: defaults to 0\n\nAPI documentation\n\n_cmd_begin_query_indexed_ext(command_buffer, query_pool, query::Integer, index::Integer; flags)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_begin_render_pass-Tuple{Any, _RenderPassBeginInfo, SubpassContents, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_begin_render_pass","text":"_cmd_begin_render_pass(command_buffer, render_pass_begin::_RenderPassBeginInfo, contents::SubpassContents, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nrender_pass_begin::_RenderPassBeginInfo\ncontents::SubpassContents\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_begin_render_pass(command_buffer, render_pass_begin::_RenderPassBeginInfo, contents::SubpassContents, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_begin_render_pass-Tuple{Any, _RenderPassBeginInfo, SubpassContents}","page":"API","title":"Vulkan._cmd_begin_render_pass","text":"_cmd_begin_render_pass(command_buffer, render_pass_begin::_RenderPassBeginInfo, contents::SubpassContents)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nrender_pass_begin::_RenderPassBeginInfo\ncontents::SubpassContents\n\nAPI documentation\n\n_cmd_begin_render_pass(command_buffer, render_pass_begin::_RenderPassBeginInfo, contents::SubpassContents)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_begin_render_pass_2-Tuple{Any, _RenderPassBeginInfo, _SubpassBeginInfo, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_begin_render_pass_2","text":"_cmd_begin_render_pass_2(command_buffer, render_pass_begin::_RenderPassBeginInfo, subpass_begin_info::_SubpassBeginInfo, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nrender_pass_begin::_RenderPassBeginInfo\nsubpass_begin_info::_SubpassBeginInfo\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_begin_render_pass_2(command_buffer, render_pass_begin::_RenderPassBeginInfo, subpass_begin_info::_SubpassBeginInfo, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_begin_render_pass_2-Tuple{Any, _RenderPassBeginInfo, _SubpassBeginInfo}","page":"API","title":"Vulkan._cmd_begin_render_pass_2","text":"_cmd_begin_render_pass_2(command_buffer, render_pass_begin::_RenderPassBeginInfo, subpass_begin_info::_SubpassBeginInfo)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nrender_pass_begin::_RenderPassBeginInfo\nsubpass_begin_info::_SubpassBeginInfo\n\nAPI documentation\n\n_cmd_begin_render_pass_2(command_buffer, render_pass_begin::_RenderPassBeginInfo, subpass_begin_info::_SubpassBeginInfo)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_begin_transform_feedback_ext-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_begin_transform_feedback_ext","text":"_cmd_begin_transform_feedback_ext(command_buffer, counter_buffers::AbstractArray{Buffer}, fptr::FunctionPtr; counter_buffer_offsets = C_NULL)::Cvoid\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\ncommand_buffer (externsync)\ncounter_buffers::AbstractArray{Buffer}\nfptr::FunctionPtr\ncounter_buffer_offsets: defaults to C_NULL\n\nAPI documentation\n\n_cmd_begin_transform_feedback_ext(command_buffer, counter_buffers::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}; counter_buffer_offsets)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_begin_transform_feedback_ext-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._cmd_begin_transform_feedback_ext","text":"_cmd_begin_transform_feedback_ext(command_buffer, counter_buffers::AbstractArray{Buffer}; counter_buffer_offsets = C_NULL)::Cvoid\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\ncommand_buffer (externsync)\ncounter_buffers::AbstractArray{Buffer}\ncounter_buffer_offsets: defaults to C_NULL\n\nAPI documentation\n\n_cmd_begin_transform_feedback_ext(command_buffer, counter_buffers::AbstractArray; counter_buffer_offsets)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_bind_descriptor_sets-Tuple{Any, PipelineBindPoint, Any, Integer, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_bind_descriptor_sets","text":"_cmd_bind_descriptor_sets(command_buffer, pipeline_bind_point::PipelineBindPoint, layout, first_set::Integer, descriptor_sets::AbstractArray{DescriptorSet}, dynamic_offsets::AbstractArray{<:Integer}, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_bind_point::PipelineBindPoint\nlayout\nfirst_set::Integer\ndescriptor_sets::AbstractArray{DescriptorSet}\ndynamic_offsets::AbstractArray{<:Integer}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_bind_descriptor_sets(command_buffer, pipeline_bind_point::PipelineBindPoint, layout, first_set::Integer, descriptor_sets::AbstractArray, dynamic_offsets::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_bind_descriptor_sets-Tuple{Any, PipelineBindPoint, Any, Integer, AbstractArray, AbstractArray}","page":"API","title":"Vulkan._cmd_bind_descriptor_sets","text":"_cmd_bind_descriptor_sets(command_buffer, pipeline_bind_point::PipelineBindPoint, layout, first_set::Integer, descriptor_sets::AbstractArray{DescriptorSet}, dynamic_offsets::AbstractArray{<:Integer})::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_bind_point::PipelineBindPoint\nlayout\nfirst_set::Integer\ndescriptor_sets::AbstractArray{DescriptorSet}\ndynamic_offsets::AbstractArray{<:Integer}\n\nAPI documentation\n\n_cmd_bind_descriptor_sets(command_buffer, pipeline_bind_point::PipelineBindPoint, layout, first_set::Integer, descriptor_sets::AbstractArray, dynamic_offsets::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_bind_index_buffer-Tuple{Any, Any, Integer, IndexType, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_bind_index_buffer","text":"_cmd_bind_index_buffer(command_buffer, buffer, offset::Integer, index_type::IndexType, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\nindex_type::IndexType\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_bind_index_buffer(command_buffer, buffer, offset::Integer, index_type::IndexType, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_bind_index_buffer-Tuple{Any, Any, Integer, IndexType}","page":"API","title":"Vulkan._cmd_bind_index_buffer","text":"_cmd_bind_index_buffer(command_buffer, buffer, offset::Integer, index_type::IndexType)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\nindex_type::IndexType\n\nAPI documentation\n\n_cmd_bind_index_buffer(command_buffer, buffer, offset::Integer, index_type::IndexType)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_bind_pipeline-Tuple{Any, PipelineBindPoint, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_bind_pipeline","text":"_cmd_bind_pipeline(command_buffer, pipeline_bind_point::PipelineBindPoint, pipeline, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_bind_point::PipelineBindPoint\npipeline\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_bind_pipeline(command_buffer, pipeline_bind_point::PipelineBindPoint, pipeline, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_bind_pipeline-Tuple{Any, PipelineBindPoint, Any}","page":"API","title":"Vulkan._cmd_bind_pipeline","text":"_cmd_bind_pipeline(command_buffer, pipeline_bind_point::PipelineBindPoint, pipeline)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_bind_point::PipelineBindPoint\npipeline\n\nAPI documentation\n\n_cmd_bind_pipeline(command_buffer, pipeline_bind_point::PipelineBindPoint, pipeline)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_bind_pipeline_shader_group_nv-Tuple{Any, PipelineBindPoint, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_bind_pipeline_shader_group_nv","text":"_cmd_bind_pipeline_shader_group_nv(command_buffer, pipeline_bind_point::PipelineBindPoint, pipeline, group_index::Integer, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_bind_point::PipelineBindPoint\npipeline\ngroup_index::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_bind_pipeline_shader_group_nv(command_buffer, pipeline_bind_point::PipelineBindPoint, pipeline, group_index::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_bind_pipeline_shader_group_nv-Tuple{Any, PipelineBindPoint, Any, Integer}","page":"API","title":"Vulkan._cmd_bind_pipeline_shader_group_nv","text":"_cmd_bind_pipeline_shader_group_nv(command_buffer, pipeline_bind_point::PipelineBindPoint, pipeline, group_index::Integer)::Cvoid\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_bind_point::PipelineBindPoint\npipeline\ngroup_index::Integer\n\nAPI documentation\n\n_cmd_bind_pipeline_shader_group_nv(command_buffer, pipeline_bind_point::PipelineBindPoint, pipeline, group_index::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_bind_shading_rate_image_nv-Tuple{Any, ImageLayout, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_bind_shading_rate_image_nv","text":"_cmd_bind_shading_rate_image_nv(command_buffer, image_layout::ImageLayout, fptr::FunctionPtr; image_view = C_NULL)::Cvoid\n\nExtension: VK_NV_shading_rate_image\n\nArguments:\n\ncommand_buffer (externsync)\nimage_layout::ImageLayout\nfptr::FunctionPtr\nimage_view: defaults to C_NULL\n\nAPI documentation\n\n_cmd_bind_shading_rate_image_nv(command_buffer, image_layout::ImageLayout, fptr::Union{Ptr{Nothing}, Base.CFunction}; image_view)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_bind_shading_rate_image_nv-Tuple{Any, ImageLayout}","page":"API","title":"Vulkan._cmd_bind_shading_rate_image_nv","text":"_cmd_bind_shading_rate_image_nv(command_buffer, image_layout::ImageLayout; image_view = C_NULL)::Cvoid\n\nExtension: VK_NV_shading_rate_image\n\nArguments:\n\ncommand_buffer (externsync)\nimage_layout::ImageLayout\nimage_view: defaults to C_NULL\n\nAPI documentation\n\n_cmd_bind_shading_rate_image_nv(command_buffer, image_layout::ImageLayout; image_view)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_bind_transform_feedback_buffers_ext-Tuple{Any, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_bind_transform_feedback_buffers_ext","text":"_cmd_bind_transform_feedback_buffers_ext(command_buffer, buffers::AbstractArray{Buffer}, offsets::AbstractArray{<:Integer}, fptr::FunctionPtr; sizes = C_NULL)::Cvoid\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\ncommand_buffer (externsync)\nbuffers::AbstractArray{Buffer}\noffsets::AbstractArray{<:Integer}\nfptr::FunctionPtr\nsizes: defaults to C_NULL\n\nAPI documentation\n\n_cmd_bind_transform_feedback_buffers_ext(command_buffer, buffers::AbstractArray, offsets::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}; sizes)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_bind_transform_feedback_buffers_ext-Tuple{Any, AbstractArray, AbstractArray}","page":"API","title":"Vulkan._cmd_bind_transform_feedback_buffers_ext","text":"_cmd_bind_transform_feedback_buffers_ext(command_buffer, buffers::AbstractArray{Buffer}, offsets::AbstractArray{<:Integer}; sizes = C_NULL)::Cvoid\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\ncommand_buffer (externsync)\nbuffers::AbstractArray{Buffer}\noffsets::AbstractArray{<:Integer}\nsizes: defaults to C_NULL\n\nAPI documentation\n\n_cmd_bind_transform_feedback_buffers_ext(command_buffer, buffers::AbstractArray, offsets::AbstractArray; sizes)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_bind_vertex_buffers-Tuple{Any, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_bind_vertex_buffers","text":"_cmd_bind_vertex_buffers(command_buffer, buffers::AbstractArray{Buffer}, offsets::AbstractArray{<:Integer}, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nbuffers::AbstractArray{Buffer}\noffsets::AbstractArray{<:Integer}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_bind_vertex_buffers(command_buffer, buffers::AbstractArray, offsets::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_bind_vertex_buffers-Tuple{Any, AbstractArray, AbstractArray}","page":"API","title":"Vulkan._cmd_bind_vertex_buffers","text":"_cmd_bind_vertex_buffers(command_buffer, buffers::AbstractArray{Buffer}, offsets::AbstractArray{<:Integer})::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nbuffers::AbstractArray{Buffer}\noffsets::AbstractArray{<:Integer}\n\nAPI documentation\n\n_cmd_bind_vertex_buffers(command_buffer, buffers::AbstractArray, offsets::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_bind_vertex_buffers_2_ext-Tuple{Any, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_bind_vertex_buffers_2_ext","text":"_cmd_bind_vertex_buffers_2_ext(command_buffer, buffers::AbstractArray{Buffer}, offsets::AbstractArray{<:Integer}, fptr::FunctionPtr; sizes = C_NULL, strides = C_NULL)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nbuffers::AbstractArray{Buffer}\noffsets::AbstractArray{<:Integer}\nfptr::FunctionPtr\nsizes: defaults to C_NULL\nstrides: defaults to C_NULL\n\nAPI documentation\n\n_cmd_bind_vertex_buffers_2_ext(command_buffer, buffers::AbstractArray, offsets::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}; sizes, strides)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_bind_vertex_buffers_2_ext-Tuple{Any, AbstractArray, AbstractArray}","page":"API","title":"Vulkan._cmd_bind_vertex_buffers_2_ext","text":"_cmd_bind_vertex_buffers_2_ext(command_buffer, buffers::AbstractArray{Buffer}, offsets::AbstractArray{<:Integer}; sizes = C_NULL, strides = C_NULL)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nbuffers::AbstractArray{Buffer}\noffsets::AbstractArray{<:Integer}\nsizes: defaults to C_NULL\nstrides: defaults to C_NULL\n\nAPI documentation\n\n_cmd_bind_vertex_buffers_2_ext(command_buffer, buffers::AbstractArray, offsets::AbstractArray; sizes, strides)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_blit_image-Tuple{Any, Any, ImageLayout, Any, ImageLayout, AbstractArray, Filter, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_blit_image","text":"_cmd_blit_image(command_buffer, src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray{_ImageBlit}, filter::Filter, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_image\nsrc_image_layout::ImageLayout\ndst_image\ndst_image_layout::ImageLayout\nregions::AbstractArray{_ImageBlit}\nfilter::Filter\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_blit_image(command_buffer, src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray, filter::Filter, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_blit_image-Tuple{Any, Any, ImageLayout, Any, ImageLayout, AbstractArray, Filter}","page":"API","title":"Vulkan._cmd_blit_image","text":"_cmd_blit_image(command_buffer, src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray{_ImageBlit}, filter::Filter)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_image\nsrc_image_layout::ImageLayout\ndst_image\ndst_image_layout::ImageLayout\nregions::AbstractArray{_ImageBlit}\nfilter::Filter\n\nAPI documentation\n\n_cmd_blit_image(command_buffer, src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray, filter::Filter)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_blit_image_2_khr-Tuple{Any, _BlitImageInfo2KHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_blit_image_2_khr","text":"_cmd_blit_image_2_khr(command_buffer, blit_image_info::_BlitImageInfo2KHR, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\ncommand_buffer (externsync)\nblit_image_info::_BlitImageInfo2KHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_blit_image_2_khr(command_buffer, blit_image_info::_BlitImageInfo2KHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_blit_image_2_khr-Tuple{Any, _BlitImageInfo2KHR}","page":"API","title":"Vulkan._cmd_blit_image_2_khr","text":"_cmd_blit_image_2_khr(command_buffer, blit_image_info::_BlitImageInfo2KHR)::Cvoid\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\ncommand_buffer (externsync)\nblit_image_info::_BlitImageInfo2KHR\n\nAPI documentation\n\n_cmd_blit_image_2_khr(command_buffer, blit_image_info::_BlitImageInfo2KHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_build_acceleration_structure_nv-Tuple{Any, _AccelerationStructureInfoNV, Integer, Bool, Any, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_build_acceleration_structure_nv","text":"_cmd_build_acceleration_structure_nv(command_buffer, info::_AccelerationStructureInfoNV, instance_offset::Integer, update::Bool, dst, scratch, scratch_offset::Integer, fptr::FunctionPtr; instance_data = C_NULL, src = C_NULL)::Cvoid\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ncommand_buffer (externsync)\ninfo::_AccelerationStructureInfoNV\ninstance_offset::Integer\nupdate::Bool\ndst\nscratch\nscratch_offset::Integer\nfptr::FunctionPtr\ninstance_data: defaults to C_NULL\nsrc: defaults to C_NULL\n\nAPI documentation\n\n_cmd_build_acceleration_structure_nv(command_buffer, info::_AccelerationStructureInfoNV, instance_offset::Integer, update::Bool, dst, scratch, scratch_offset::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}; instance_data, src)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_build_acceleration_structure_nv-Tuple{Any, _AccelerationStructureInfoNV, Integer, Bool, Any, Any, Integer}","page":"API","title":"Vulkan._cmd_build_acceleration_structure_nv","text":"_cmd_build_acceleration_structure_nv(command_buffer, info::_AccelerationStructureInfoNV, instance_offset::Integer, update::Bool, dst, scratch, scratch_offset::Integer; instance_data = C_NULL, src = C_NULL)::Cvoid\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ncommand_buffer (externsync)\ninfo::_AccelerationStructureInfoNV\ninstance_offset::Integer\nupdate::Bool\ndst\nscratch\nscratch_offset::Integer\ninstance_data: defaults to C_NULL\nsrc: defaults to C_NULL\n\nAPI documentation\n\n_cmd_build_acceleration_structure_nv(command_buffer, info::_AccelerationStructureInfoNV, instance_offset::Integer, update::Bool, dst, scratch, scratch_offset::Integer; instance_data, src)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_build_acceleration_structures_indirect_khr-Tuple{Any, AbstractArray, AbstractArray, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_build_acceleration_structures_indirect_khr","text":"_cmd_build_acceleration_structures_indirect_khr(command_buffer, infos::AbstractArray{_AccelerationStructureBuildGeometryInfoKHR}, indirect_device_addresses::AbstractArray{<:Integer}, indirect_strides::AbstractArray{<:Integer}, max_primitive_counts::AbstractArray{<:Integer}, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ncommand_buffer (externsync)\ninfos::AbstractArray{_AccelerationStructureBuildGeometryInfoKHR}\nindirect_device_addresses::AbstractArray{<:Integer}\nindirect_strides::AbstractArray{<:Integer}\nmax_primitive_counts::AbstractArray{<:Integer}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_build_acceleration_structures_indirect_khr(command_buffer, infos::AbstractArray, indirect_device_addresses::AbstractArray, indirect_strides::AbstractArray, max_primitive_counts::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_build_acceleration_structures_indirect_khr-Tuple{Any, AbstractArray, AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan._cmd_build_acceleration_structures_indirect_khr","text":"_cmd_build_acceleration_structures_indirect_khr(command_buffer, infos::AbstractArray{_AccelerationStructureBuildGeometryInfoKHR}, indirect_device_addresses::AbstractArray{<:Integer}, indirect_strides::AbstractArray{<:Integer}, max_primitive_counts::AbstractArray{<:Integer})::Cvoid\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ncommand_buffer (externsync)\ninfos::AbstractArray{_AccelerationStructureBuildGeometryInfoKHR}\nindirect_device_addresses::AbstractArray{<:Integer}\nindirect_strides::AbstractArray{<:Integer}\nmax_primitive_counts::AbstractArray{<:Integer}\n\nAPI documentation\n\n_cmd_build_acceleration_structures_indirect_khr(command_buffer, infos::AbstractArray, indirect_device_addresses::AbstractArray, indirect_strides::AbstractArray, max_primitive_counts::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_build_acceleration_structures_khr-Tuple{Any, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_build_acceleration_structures_khr","text":"_cmd_build_acceleration_structures_khr(command_buffer, infos::AbstractArray{_AccelerationStructureBuildGeometryInfoKHR}, build_range_infos::AbstractArray{_AccelerationStructureBuildRangeInfoKHR}, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ncommand_buffer (externsync)\ninfos::AbstractArray{_AccelerationStructureBuildGeometryInfoKHR}\nbuild_range_infos::AbstractArray{_AccelerationStructureBuildRangeInfoKHR}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_build_acceleration_structures_khr(command_buffer, infos::AbstractArray, build_range_infos::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_build_acceleration_structures_khr-Tuple{Any, AbstractArray, AbstractArray}","page":"API","title":"Vulkan._cmd_build_acceleration_structures_khr","text":"_cmd_build_acceleration_structures_khr(command_buffer, infos::AbstractArray{_AccelerationStructureBuildGeometryInfoKHR}, build_range_infos::AbstractArray{_AccelerationStructureBuildRangeInfoKHR})::Cvoid\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ncommand_buffer (externsync)\ninfos::AbstractArray{_AccelerationStructureBuildGeometryInfoKHR}\nbuild_range_infos::AbstractArray{_AccelerationStructureBuildRangeInfoKHR}\n\nAPI documentation\n\n_cmd_build_acceleration_structures_khr(command_buffer, infos::AbstractArray, build_range_infos::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_clear_attachments-Tuple{Any, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_clear_attachments","text":"_cmd_clear_attachments(command_buffer, attachments::AbstractArray{_ClearAttachment}, rects::AbstractArray{_ClearRect}, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nattachments::AbstractArray{_ClearAttachment}\nrects::AbstractArray{_ClearRect}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_clear_attachments(command_buffer, attachments::AbstractArray, rects::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_clear_attachments-Tuple{Any, AbstractArray, AbstractArray}","page":"API","title":"Vulkan._cmd_clear_attachments","text":"_cmd_clear_attachments(command_buffer, attachments::AbstractArray{_ClearAttachment}, rects::AbstractArray{_ClearRect})::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nattachments::AbstractArray{_ClearAttachment}\nrects::AbstractArray{_ClearRect}\n\nAPI documentation\n\n_cmd_clear_attachments(command_buffer, attachments::AbstractArray, rects::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_clear_color_image-Tuple{Any, Any, ImageLayout, _ClearColorValue, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_clear_color_image","text":"_cmd_clear_color_image(command_buffer, image, image_layout::ImageLayout, color::_ClearColorValue, ranges::AbstractArray{_ImageSubresourceRange}, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nimage\nimage_layout::ImageLayout\ncolor::_ClearColorValue\nranges::AbstractArray{_ImageSubresourceRange}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_clear_color_image(command_buffer, image, image_layout::ImageLayout, color::_ClearColorValue, ranges::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_clear_color_image-Tuple{Any, Any, ImageLayout, _ClearColorValue, AbstractArray}","page":"API","title":"Vulkan._cmd_clear_color_image","text":"_cmd_clear_color_image(command_buffer, image, image_layout::ImageLayout, color::_ClearColorValue, ranges::AbstractArray{_ImageSubresourceRange})::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nimage\nimage_layout::ImageLayout\ncolor::_ClearColorValue\nranges::AbstractArray{_ImageSubresourceRange}\n\nAPI documentation\n\n_cmd_clear_color_image(command_buffer, image, image_layout::ImageLayout, color::_ClearColorValue, ranges::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_clear_depth_stencil_image-Tuple{Any, Any, ImageLayout, _ClearDepthStencilValue, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_clear_depth_stencil_image","text":"_cmd_clear_depth_stencil_image(command_buffer, image, image_layout::ImageLayout, depth_stencil::_ClearDepthStencilValue, ranges::AbstractArray{_ImageSubresourceRange}, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nimage\nimage_layout::ImageLayout\ndepth_stencil::_ClearDepthStencilValue\nranges::AbstractArray{_ImageSubresourceRange}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_clear_depth_stencil_image(command_buffer, image, image_layout::ImageLayout, depth_stencil::_ClearDepthStencilValue, ranges::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_clear_depth_stencil_image-Tuple{Any, Any, ImageLayout, _ClearDepthStencilValue, AbstractArray}","page":"API","title":"Vulkan._cmd_clear_depth_stencil_image","text":"_cmd_clear_depth_stencil_image(command_buffer, image, image_layout::ImageLayout, depth_stencil::_ClearDepthStencilValue, ranges::AbstractArray{_ImageSubresourceRange})::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nimage\nimage_layout::ImageLayout\ndepth_stencil::_ClearDepthStencilValue\nranges::AbstractArray{_ImageSubresourceRange}\n\nAPI documentation\n\n_cmd_clear_depth_stencil_image(command_buffer, image, image_layout::ImageLayout, depth_stencil::_ClearDepthStencilValue, ranges::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_copy_acceleration_structure_khr-Tuple{Any, _CopyAccelerationStructureInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_copy_acceleration_structure_khr","text":"_cmd_copy_acceleration_structure_khr(command_buffer, info::_CopyAccelerationStructureInfoKHR, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ncommand_buffer (externsync)\ninfo::_CopyAccelerationStructureInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_copy_acceleration_structure_khr(command_buffer, info::_CopyAccelerationStructureInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_copy_acceleration_structure_khr-Tuple{Any, _CopyAccelerationStructureInfoKHR}","page":"API","title":"Vulkan._cmd_copy_acceleration_structure_khr","text":"_cmd_copy_acceleration_structure_khr(command_buffer, info::_CopyAccelerationStructureInfoKHR)::Cvoid\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ncommand_buffer (externsync)\ninfo::_CopyAccelerationStructureInfoKHR\n\nAPI documentation\n\n_cmd_copy_acceleration_structure_khr(command_buffer, info::_CopyAccelerationStructureInfoKHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_copy_acceleration_structure_nv-Tuple{Any, Any, Any, CopyAccelerationStructureModeKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_copy_acceleration_structure_nv","text":"_cmd_copy_acceleration_structure_nv(command_buffer, dst, src, mode::CopyAccelerationStructureModeKHR, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ncommand_buffer (externsync)\ndst\nsrc\nmode::CopyAccelerationStructureModeKHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_copy_acceleration_structure_nv(command_buffer, dst, src, mode::CopyAccelerationStructureModeKHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_copy_acceleration_structure_nv-Tuple{Any, Any, Any, CopyAccelerationStructureModeKHR}","page":"API","title":"Vulkan._cmd_copy_acceleration_structure_nv","text":"_cmd_copy_acceleration_structure_nv(command_buffer, dst, src, mode::CopyAccelerationStructureModeKHR)::Cvoid\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ncommand_buffer (externsync)\ndst\nsrc\nmode::CopyAccelerationStructureModeKHR\n\nAPI documentation\n\n_cmd_copy_acceleration_structure_nv(command_buffer, dst, src, mode::CopyAccelerationStructureModeKHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_copy_acceleration_structure_to_memory_khr-Tuple{Any, _CopyAccelerationStructureToMemoryInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_copy_acceleration_structure_to_memory_khr","text":"_cmd_copy_acceleration_structure_to_memory_khr(command_buffer, info::_CopyAccelerationStructureToMemoryInfoKHR, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ncommand_buffer (externsync)\ninfo::_CopyAccelerationStructureToMemoryInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_copy_acceleration_structure_to_memory_khr(command_buffer, info::_CopyAccelerationStructureToMemoryInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_copy_acceleration_structure_to_memory_khr-Tuple{Any, _CopyAccelerationStructureToMemoryInfoKHR}","page":"API","title":"Vulkan._cmd_copy_acceleration_structure_to_memory_khr","text":"_cmd_copy_acceleration_structure_to_memory_khr(command_buffer, info::_CopyAccelerationStructureToMemoryInfoKHR)::Cvoid\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ncommand_buffer (externsync)\ninfo::_CopyAccelerationStructureToMemoryInfoKHR\n\nAPI documentation\n\n_cmd_copy_acceleration_structure_to_memory_khr(command_buffer, info::_CopyAccelerationStructureToMemoryInfoKHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_copy_buffer-Tuple{Any, Any, Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_copy_buffer","text":"_cmd_copy_buffer(command_buffer, src_buffer, dst_buffer, regions::AbstractArray{_BufferCopy}, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_buffer\ndst_buffer\nregions::AbstractArray{_BufferCopy}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_copy_buffer(command_buffer, src_buffer, dst_buffer, regions::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_copy_buffer-Tuple{Any, Any, Any, AbstractArray}","page":"API","title":"Vulkan._cmd_copy_buffer","text":"_cmd_copy_buffer(command_buffer, src_buffer, dst_buffer, regions::AbstractArray{_BufferCopy})::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_buffer\ndst_buffer\nregions::AbstractArray{_BufferCopy}\n\nAPI documentation\n\n_cmd_copy_buffer(command_buffer, src_buffer, dst_buffer, regions::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_copy_buffer_2_khr-Tuple{Any, _CopyBufferInfo2KHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_copy_buffer_2_khr","text":"_cmd_copy_buffer_2_khr(command_buffer, copy_buffer_info::_CopyBufferInfo2KHR, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\ncommand_buffer (externsync)\ncopy_buffer_info::_CopyBufferInfo2KHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_copy_buffer_2_khr(command_buffer, copy_buffer_info::_CopyBufferInfo2KHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_copy_buffer_2_khr-Tuple{Any, _CopyBufferInfo2KHR}","page":"API","title":"Vulkan._cmd_copy_buffer_2_khr","text":"_cmd_copy_buffer_2_khr(command_buffer, copy_buffer_info::_CopyBufferInfo2KHR)::Cvoid\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\ncommand_buffer (externsync)\ncopy_buffer_info::_CopyBufferInfo2KHR\n\nAPI documentation\n\n_cmd_copy_buffer_2_khr(command_buffer, copy_buffer_info::_CopyBufferInfo2KHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_copy_buffer_to_image-Tuple{Any, Any, Any, ImageLayout, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_copy_buffer_to_image","text":"_cmd_copy_buffer_to_image(command_buffer, src_buffer, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray{_BufferImageCopy}, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_buffer\ndst_image\ndst_image_layout::ImageLayout\nregions::AbstractArray{_BufferImageCopy}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_copy_buffer_to_image(command_buffer, src_buffer, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_copy_buffer_to_image-Tuple{Any, Any, Any, ImageLayout, AbstractArray}","page":"API","title":"Vulkan._cmd_copy_buffer_to_image","text":"_cmd_copy_buffer_to_image(command_buffer, src_buffer, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray{_BufferImageCopy})::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_buffer\ndst_image\ndst_image_layout::ImageLayout\nregions::AbstractArray{_BufferImageCopy}\n\nAPI documentation\n\n_cmd_copy_buffer_to_image(command_buffer, src_buffer, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_copy_buffer_to_image_2_khr-Tuple{Any, _CopyBufferToImageInfo2KHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_copy_buffer_to_image_2_khr","text":"_cmd_copy_buffer_to_image_2_khr(command_buffer, copy_buffer_to_image_info::_CopyBufferToImageInfo2KHR, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\ncommand_buffer (externsync)\ncopy_buffer_to_image_info::_CopyBufferToImageInfo2KHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_copy_buffer_to_image_2_khr(command_buffer, copy_buffer_to_image_info::_CopyBufferToImageInfo2KHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_copy_buffer_to_image_2_khr-Tuple{Any, _CopyBufferToImageInfo2KHR}","page":"API","title":"Vulkan._cmd_copy_buffer_to_image_2_khr","text":"_cmd_copy_buffer_to_image_2_khr(command_buffer, copy_buffer_to_image_info::_CopyBufferToImageInfo2KHR)::Cvoid\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\ncommand_buffer (externsync)\ncopy_buffer_to_image_info::_CopyBufferToImageInfo2KHR\n\nAPI documentation\n\n_cmd_copy_buffer_to_image_2_khr(command_buffer, copy_buffer_to_image_info::_CopyBufferToImageInfo2KHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_copy_image-Tuple{Any, Any, ImageLayout, Any, ImageLayout, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_copy_image","text":"_cmd_copy_image(command_buffer, src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray{_ImageCopy}, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_image\nsrc_image_layout::ImageLayout\ndst_image\ndst_image_layout::ImageLayout\nregions::AbstractArray{_ImageCopy}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_copy_image(command_buffer, src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_copy_image-Tuple{Any, Any, ImageLayout, Any, ImageLayout, AbstractArray}","page":"API","title":"Vulkan._cmd_copy_image","text":"_cmd_copy_image(command_buffer, src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray{_ImageCopy})::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_image\nsrc_image_layout::ImageLayout\ndst_image\ndst_image_layout::ImageLayout\nregions::AbstractArray{_ImageCopy}\n\nAPI documentation\n\n_cmd_copy_image(command_buffer, src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_copy_image_2_khr-Tuple{Any, _CopyImageInfo2KHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_copy_image_2_khr","text":"_cmd_copy_image_2_khr(command_buffer, copy_image_info::_CopyImageInfo2KHR, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\ncommand_buffer (externsync)\ncopy_image_info::_CopyImageInfo2KHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_copy_image_2_khr(command_buffer, copy_image_info::_CopyImageInfo2KHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_copy_image_2_khr-Tuple{Any, _CopyImageInfo2KHR}","page":"API","title":"Vulkan._cmd_copy_image_2_khr","text":"_cmd_copy_image_2_khr(command_buffer, copy_image_info::_CopyImageInfo2KHR)::Cvoid\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\ncommand_buffer (externsync)\ncopy_image_info::_CopyImageInfo2KHR\n\nAPI documentation\n\n_cmd_copy_image_2_khr(command_buffer, copy_image_info::_CopyImageInfo2KHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_copy_image_to_buffer-Tuple{Any, Any, ImageLayout, Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_copy_image_to_buffer","text":"_cmd_copy_image_to_buffer(command_buffer, src_image, src_image_layout::ImageLayout, dst_buffer, regions::AbstractArray{_BufferImageCopy}, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_image\nsrc_image_layout::ImageLayout\ndst_buffer\nregions::AbstractArray{_BufferImageCopy}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_copy_image_to_buffer(command_buffer, src_image, src_image_layout::ImageLayout, dst_buffer, regions::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_copy_image_to_buffer-Tuple{Any, Any, ImageLayout, Any, AbstractArray}","page":"API","title":"Vulkan._cmd_copy_image_to_buffer","text":"_cmd_copy_image_to_buffer(command_buffer, src_image, src_image_layout::ImageLayout, dst_buffer, regions::AbstractArray{_BufferImageCopy})::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_image\nsrc_image_layout::ImageLayout\ndst_buffer\nregions::AbstractArray{_BufferImageCopy}\n\nAPI documentation\n\n_cmd_copy_image_to_buffer(command_buffer, src_image, src_image_layout::ImageLayout, dst_buffer, regions::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_copy_image_to_buffer_2_khr-Tuple{Any, _CopyImageToBufferInfo2KHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_copy_image_to_buffer_2_khr","text":"_cmd_copy_image_to_buffer_2_khr(command_buffer, copy_image_to_buffer_info::_CopyImageToBufferInfo2KHR, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\ncommand_buffer (externsync)\ncopy_image_to_buffer_info::_CopyImageToBufferInfo2KHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_copy_image_to_buffer_2_khr(command_buffer, copy_image_to_buffer_info::_CopyImageToBufferInfo2KHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_copy_image_to_buffer_2_khr-Tuple{Any, _CopyImageToBufferInfo2KHR}","page":"API","title":"Vulkan._cmd_copy_image_to_buffer_2_khr","text":"_cmd_copy_image_to_buffer_2_khr(command_buffer, copy_image_to_buffer_info::_CopyImageToBufferInfo2KHR)::Cvoid\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\ncommand_buffer (externsync)\ncopy_image_to_buffer_info::_CopyImageToBufferInfo2KHR\n\nAPI documentation\n\n_cmd_copy_image_to_buffer_2_khr(command_buffer, copy_image_to_buffer_info::_CopyImageToBufferInfo2KHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_copy_memory_to_acceleration_structure_khr-Tuple{Any, _CopyMemoryToAccelerationStructureInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_copy_memory_to_acceleration_structure_khr","text":"_cmd_copy_memory_to_acceleration_structure_khr(command_buffer, info::_CopyMemoryToAccelerationStructureInfoKHR, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ncommand_buffer (externsync)\ninfo::_CopyMemoryToAccelerationStructureInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_copy_memory_to_acceleration_structure_khr(command_buffer, info::_CopyMemoryToAccelerationStructureInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_copy_memory_to_acceleration_structure_khr-Tuple{Any, _CopyMemoryToAccelerationStructureInfoKHR}","page":"API","title":"Vulkan._cmd_copy_memory_to_acceleration_structure_khr","text":"_cmd_copy_memory_to_acceleration_structure_khr(command_buffer, info::_CopyMemoryToAccelerationStructureInfoKHR)::Cvoid\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ncommand_buffer (externsync)\ninfo::_CopyMemoryToAccelerationStructureInfoKHR\n\nAPI documentation\n\n_cmd_copy_memory_to_acceleration_structure_khr(command_buffer, info::_CopyMemoryToAccelerationStructureInfoKHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_copy_query_pool_results-Tuple{Any, Any, Integer, Integer, Any, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_copy_query_pool_results","text":"_cmd_copy_query_pool_results(command_buffer, query_pool, first_query::Integer, query_count::Integer, dst_buffer, dst_offset::Integer, stride::Integer, fptr::FunctionPtr; flags = 0)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nquery_pool\nfirst_query::Integer\nquery_count::Integer\ndst_buffer\ndst_offset::Integer\nstride::Integer\nfptr::FunctionPtr\nflags: defaults to 0\n\nAPI documentation\n\n_cmd_copy_query_pool_results(command_buffer, query_pool, first_query::Integer, query_count::Integer, dst_buffer, dst_offset::Integer, stride::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}; flags)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_copy_query_pool_results-Tuple{Any, Any, Integer, Integer, Any, Integer, Integer}","page":"API","title":"Vulkan._cmd_copy_query_pool_results","text":"_cmd_copy_query_pool_results(command_buffer, query_pool, first_query::Integer, query_count::Integer, dst_buffer, dst_offset::Integer, stride::Integer; flags = 0)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nquery_pool\nfirst_query::Integer\nquery_count::Integer\ndst_buffer\ndst_offset::Integer\nstride::Integer\nflags: defaults to 0\n\nAPI documentation\n\n_cmd_copy_query_pool_results(command_buffer, query_pool, first_query::Integer, query_count::Integer, dst_buffer, dst_offset::Integer, stride::Integer; flags)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_debug_marker_begin_ext-Tuple{Any, _DebugMarkerMarkerInfoEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_debug_marker_begin_ext","text":"_cmd_debug_marker_begin_ext(command_buffer, marker_info::_DebugMarkerMarkerInfoEXT, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_debug_marker\n\nArguments:\n\ncommand_buffer (externsync)\nmarker_info::_DebugMarkerMarkerInfoEXT\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_debug_marker_begin_ext(command_buffer, marker_info::_DebugMarkerMarkerInfoEXT, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_debug_marker_begin_ext-Tuple{Any, _DebugMarkerMarkerInfoEXT}","page":"API","title":"Vulkan._cmd_debug_marker_begin_ext","text":"_cmd_debug_marker_begin_ext(command_buffer, marker_info::_DebugMarkerMarkerInfoEXT)::Cvoid\n\nExtension: VK_EXT_debug_marker\n\nArguments:\n\ncommand_buffer (externsync)\nmarker_info::_DebugMarkerMarkerInfoEXT\n\nAPI documentation\n\n_cmd_debug_marker_begin_ext(command_buffer, marker_info::_DebugMarkerMarkerInfoEXT)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_debug_marker_end_ext-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_debug_marker_end_ext","text":"_cmd_debug_marker_end_ext(command_buffer, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_debug_marker\n\nArguments:\n\ncommand_buffer (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_debug_marker_end_ext(command_buffer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_debug_marker_end_ext-Tuple{Any}","page":"API","title":"Vulkan._cmd_debug_marker_end_ext","text":"_cmd_debug_marker_end_ext(command_buffer)::Cvoid\n\nExtension: VK_EXT_debug_marker\n\nArguments:\n\ncommand_buffer (externsync)\n\nAPI documentation\n\n_cmd_debug_marker_end_ext(command_buffer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_debug_marker_insert_ext-Tuple{Any, _DebugMarkerMarkerInfoEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_debug_marker_insert_ext","text":"_cmd_debug_marker_insert_ext(command_buffer, marker_info::_DebugMarkerMarkerInfoEXT, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_debug_marker\n\nArguments:\n\ncommand_buffer (externsync)\nmarker_info::_DebugMarkerMarkerInfoEXT\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_debug_marker_insert_ext(command_buffer, marker_info::_DebugMarkerMarkerInfoEXT, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_debug_marker_insert_ext-Tuple{Any, _DebugMarkerMarkerInfoEXT}","page":"API","title":"Vulkan._cmd_debug_marker_insert_ext","text":"_cmd_debug_marker_insert_ext(command_buffer, marker_info::_DebugMarkerMarkerInfoEXT)::Cvoid\n\nExtension: VK_EXT_debug_marker\n\nArguments:\n\ncommand_buffer (externsync)\nmarker_info::_DebugMarkerMarkerInfoEXT\n\nAPI documentation\n\n_cmd_debug_marker_insert_ext(command_buffer, marker_info::_DebugMarkerMarkerInfoEXT)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_dispatch-Tuple{Any, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_dispatch","text":"_cmd_dispatch(command_buffer, group_count_x::Integer, group_count_y::Integer, group_count_z::Integer, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\ngroup_count_x::Integer\ngroup_count_y::Integer\ngroup_count_z::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_dispatch(command_buffer, group_count_x::Integer, group_count_y::Integer, group_count_z::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_dispatch-Tuple{Any, Integer, Integer, Integer}","page":"API","title":"Vulkan._cmd_dispatch","text":"_cmd_dispatch(command_buffer, group_count_x::Integer, group_count_y::Integer, group_count_z::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\ngroup_count_x::Integer\ngroup_count_y::Integer\ngroup_count_z::Integer\n\nAPI documentation\n\n_cmd_dispatch(command_buffer, group_count_x::Integer, group_count_y::Integer, group_count_z::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_dispatch_base-Tuple{Any, Integer, Integer, Integer, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_dispatch_base","text":"_cmd_dispatch_base(command_buffer, base_group_x::Integer, base_group_y::Integer, base_group_z::Integer, group_count_x::Integer, group_count_y::Integer, group_count_z::Integer, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nbase_group_x::Integer\nbase_group_y::Integer\nbase_group_z::Integer\ngroup_count_x::Integer\ngroup_count_y::Integer\ngroup_count_z::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_dispatch_base(command_buffer, base_group_x::Integer, base_group_y::Integer, base_group_z::Integer, group_count_x::Integer, group_count_y::Integer, group_count_z::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_dispatch_base-Tuple{Any, Integer, Integer, Integer, Integer, Integer, Integer}","page":"API","title":"Vulkan._cmd_dispatch_base","text":"_cmd_dispatch_base(command_buffer, base_group_x::Integer, base_group_y::Integer, base_group_z::Integer, group_count_x::Integer, group_count_y::Integer, group_count_z::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nbase_group_x::Integer\nbase_group_y::Integer\nbase_group_z::Integer\ngroup_count_x::Integer\ngroup_count_y::Integer\ngroup_count_z::Integer\n\nAPI documentation\n\n_cmd_dispatch_base(command_buffer, base_group_x::Integer, base_group_y::Integer, base_group_z::Integer, group_count_x::Integer, group_count_y::Integer, group_count_z::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_dispatch_indirect-Tuple{Any, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_dispatch_indirect","text":"_cmd_dispatch_indirect(command_buffer, buffer, offset::Integer, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_dispatch_indirect(command_buffer, buffer, offset::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_dispatch_indirect-Tuple{Any, Any, Integer}","page":"API","title":"Vulkan._cmd_dispatch_indirect","text":"_cmd_dispatch_indirect(command_buffer, buffer, offset::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\n\nAPI documentation\n\n_cmd_dispatch_indirect(command_buffer, buffer, offset::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_draw-Tuple{Any, Integer, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_draw","text":"_cmd_draw(command_buffer, vertex_count::Integer, instance_count::Integer, first_vertex::Integer, first_instance::Integer, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nvertex_count::Integer\ninstance_count::Integer\nfirst_vertex::Integer\nfirst_instance::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_draw(command_buffer, vertex_count::Integer, instance_count::Integer, first_vertex::Integer, first_instance::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_draw-Tuple{Any, Integer, Integer, Integer, Integer}","page":"API","title":"Vulkan._cmd_draw","text":"_cmd_draw(command_buffer, vertex_count::Integer, instance_count::Integer, first_vertex::Integer, first_instance::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nvertex_count::Integer\ninstance_count::Integer\nfirst_vertex::Integer\nfirst_instance::Integer\n\nAPI documentation\n\n_cmd_draw(command_buffer, vertex_count::Integer, instance_count::Integer, first_vertex::Integer, first_instance::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_draw_indexed-Tuple{Any, Integer, Integer, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_draw_indexed","text":"_cmd_draw_indexed(command_buffer, index_count::Integer, instance_count::Integer, first_index::Integer, vertex_offset::Integer, first_instance::Integer, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nindex_count::Integer\ninstance_count::Integer\nfirst_index::Integer\nvertex_offset::Integer\nfirst_instance::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_draw_indexed(command_buffer, index_count::Integer, instance_count::Integer, first_index::Integer, vertex_offset::Integer, first_instance::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_draw_indexed-Tuple{Any, Integer, Integer, Integer, Integer, Integer}","page":"API","title":"Vulkan._cmd_draw_indexed","text":"_cmd_draw_indexed(command_buffer, index_count::Integer, instance_count::Integer, first_index::Integer, vertex_offset::Integer, first_instance::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nindex_count::Integer\ninstance_count::Integer\nfirst_index::Integer\nvertex_offset::Integer\nfirst_instance::Integer\n\nAPI documentation\n\n_cmd_draw_indexed(command_buffer, index_count::Integer, instance_count::Integer, first_index::Integer, vertex_offset::Integer, first_instance::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_draw_indexed_indirect-Tuple{Any, Any, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_draw_indexed_indirect","text":"_cmd_draw_indexed_indirect(command_buffer, buffer, offset::Integer, draw_count::Integer, stride::Integer, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\ndraw_count::Integer\nstride::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_draw_indexed_indirect(command_buffer, buffer, offset::Integer, draw_count::Integer, stride::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_draw_indexed_indirect-Tuple{Any, Any, Integer, Integer, Integer}","page":"API","title":"Vulkan._cmd_draw_indexed_indirect","text":"_cmd_draw_indexed_indirect(command_buffer, buffer, offset::Integer, draw_count::Integer, stride::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\ndraw_count::Integer\nstride::Integer\n\nAPI documentation\n\n_cmd_draw_indexed_indirect(command_buffer, buffer, offset::Integer, draw_count::Integer, stride::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_draw_indexed_indirect_count-Tuple{Any, Any, Integer, Any, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_draw_indexed_indirect_count","text":"_cmd_draw_indexed_indirect_count(command_buffer, buffer, offset::Integer, count_buffer, count_buffer_offset::Integer, max_draw_count::Integer, stride::Integer, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\ncount_buffer\ncount_buffer_offset::Integer\nmax_draw_count::Integer\nstride::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_draw_indexed_indirect_count(command_buffer, buffer, offset::Integer, count_buffer, count_buffer_offset::Integer, max_draw_count::Integer, stride::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_draw_indexed_indirect_count-Tuple{Any, Any, Integer, Any, Integer, Integer, Integer}","page":"API","title":"Vulkan._cmd_draw_indexed_indirect_count","text":"_cmd_draw_indexed_indirect_count(command_buffer, buffer, offset::Integer, count_buffer, count_buffer_offset::Integer, max_draw_count::Integer, stride::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\ncount_buffer\ncount_buffer_offset::Integer\nmax_draw_count::Integer\nstride::Integer\n\nAPI documentation\n\n_cmd_draw_indexed_indirect_count(command_buffer, buffer, offset::Integer, count_buffer, count_buffer_offset::Integer, max_draw_count::Integer, stride::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_draw_indirect-Tuple{Any, Any, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_draw_indirect","text":"_cmd_draw_indirect(command_buffer, buffer, offset::Integer, draw_count::Integer, stride::Integer, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\ndraw_count::Integer\nstride::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_draw_indirect(command_buffer, buffer, offset::Integer, draw_count::Integer, stride::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_draw_indirect-Tuple{Any, Any, Integer, Integer, Integer}","page":"API","title":"Vulkan._cmd_draw_indirect","text":"_cmd_draw_indirect(command_buffer, buffer, offset::Integer, draw_count::Integer, stride::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\ndraw_count::Integer\nstride::Integer\n\nAPI documentation\n\n_cmd_draw_indirect(command_buffer, buffer, offset::Integer, draw_count::Integer, stride::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_draw_indirect_byte_count_ext-Tuple{Any, Integer, Integer, Any, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_draw_indirect_byte_count_ext","text":"_cmd_draw_indirect_byte_count_ext(command_buffer, instance_count::Integer, first_instance::Integer, counter_buffer, counter_buffer_offset::Integer, counter_offset::Integer, vertex_stride::Integer, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\ncommand_buffer (externsync)\ninstance_count::Integer\nfirst_instance::Integer\ncounter_buffer\ncounter_buffer_offset::Integer\ncounter_offset::Integer\nvertex_stride::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_draw_indirect_byte_count_ext(command_buffer, instance_count::Integer, first_instance::Integer, counter_buffer, counter_buffer_offset::Integer, counter_offset::Integer, vertex_stride::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_draw_indirect_byte_count_ext-Tuple{Any, Integer, Integer, Any, Integer, Integer, Integer}","page":"API","title":"Vulkan._cmd_draw_indirect_byte_count_ext","text":"_cmd_draw_indirect_byte_count_ext(command_buffer, instance_count::Integer, first_instance::Integer, counter_buffer, counter_buffer_offset::Integer, counter_offset::Integer, vertex_stride::Integer)::Cvoid\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\ncommand_buffer (externsync)\ninstance_count::Integer\nfirst_instance::Integer\ncounter_buffer\ncounter_buffer_offset::Integer\ncounter_offset::Integer\nvertex_stride::Integer\n\nAPI documentation\n\n_cmd_draw_indirect_byte_count_ext(command_buffer, instance_count::Integer, first_instance::Integer, counter_buffer, counter_buffer_offset::Integer, counter_offset::Integer, vertex_stride::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_draw_indirect_count-Tuple{Any, Any, Integer, Any, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_draw_indirect_count","text":"_cmd_draw_indirect_count(command_buffer, buffer, offset::Integer, count_buffer, count_buffer_offset::Integer, max_draw_count::Integer, stride::Integer, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\ncount_buffer\ncount_buffer_offset::Integer\nmax_draw_count::Integer\nstride::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_draw_indirect_count(command_buffer, buffer, offset::Integer, count_buffer, count_buffer_offset::Integer, max_draw_count::Integer, stride::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_draw_indirect_count-Tuple{Any, Any, Integer, Any, Integer, Integer, Integer}","page":"API","title":"Vulkan._cmd_draw_indirect_count","text":"_cmd_draw_indirect_count(command_buffer, buffer, offset::Integer, count_buffer, count_buffer_offset::Integer, max_draw_count::Integer, stride::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\ncount_buffer\ncount_buffer_offset::Integer\nmax_draw_count::Integer\nstride::Integer\n\nAPI documentation\n\n_cmd_draw_indirect_count(command_buffer, buffer, offset::Integer, count_buffer, count_buffer_offset::Integer, max_draw_count::Integer, stride::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_draw_mesh_tasks_indirect_count_nv-Tuple{Any, Any, Integer, Any, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_draw_mesh_tasks_indirect_count_nv","text":"_cmd_draw_mesh_tasks_indirect_count_nv(command_buffer, buffer, offset::Integer, count_buffer, count_buffer_offset::Integer, max_draw_count::Integer, stride::Integer, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_NV_mesh_shader\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\ncount_buffer\ncount_buffer_offset::Integer\nmax_draw_count::Integer\nstride::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_draw_mesh_tasks_indirect_count_nv(command_buffer, buffer, offset::Integer, count_buffer, count_buffer_offset::Integer, max_draw_count::Integer, stride::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_draw_mesh_tasks_indirect_count_nv-Tuple{Any, Any, Integer, Any, Integer, Integer, Integer}","page":"API","title":"Vulkan._cmd_draw_mesh_tasks_indirect_count_nv","text":"_cmd_draw_mesh_tasks_indirect_count_nv(command_buffer, buffer, offset::Integer, count_buffer, count_buffer_offset::Integer, max_draw_count::Integer, stride::Integer)::Cvoid\n\nExtension: VK_NV_mesh_shader\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\ncount_buffer\ncount_buffer_offset::Integer\nmax_draw_count::Integer\nstride::Integer\n\nAPI documentation\n\n_cmd_draw_mesh_tasks_indirect_count_nv(command_buffer, buffer, offset::Integer, count_buffer, count_buffer_offset::Integer, max_draw_count::Integer, stride::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_draw_mesh_tasks_indirect_nv-Tuple{Any, Any, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_draw_mesh_tasks_indirect_nv","text":"_cmd_draw_mesh_tasks_indirect_nv(command_buffer, buffer, offset::Integer, draw_count::Integer, stride::Integer, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_NV_mesh_shader\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\ndraw_count::Integer\nstride::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_draw_mesh_tasks_indirect_nv(command_buffer, buffer, offset::Integer, draw_count::Integer, stride::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_draw_mesh_tasks_indirect_nv-Tuple{Any, Any, Integer, Integer, Integer}","page":"API","title":"Vulkan._cmd_draw_mesh_tasks_indirect_nv","text":"_cmd_draw_mesh_tasks_indirect_nv(command_buffer, buffer, offset::Integer, draw_count::Integer, stride::Integer)::Cvoid\n\nExtension: VK_NV_mesh_shader\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\ndraw_count::Integer\nstride::Integer\n\nAPI documentation\n\n_cmd_draw_mesh_tasks_indirect_nv(command_buffer, buffer, offset::Integer, draw_count::Integer, stride::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_draw_mesh_tasks_nv-Tuple{Any, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_draw_mesh_tasks_nv","text":"_cmd_draw_mesh_tasks_nv(command_buffer, task_count::Integer, first_task::Integer, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_NV_mesh_shader\n\nArguments:\n\ncommand_buffer (externsync)\ntask_count::Integer\nfirst_task::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_draw_mesh_tasks_nv(command_buffer, task_count::Integer, first_task::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_draw_mesh_tasks_nv-Tuple{Any, Integer, Integer}","page":"API","title":"Vulkan._cmd_draw_mesh_tasks_nv","text":"_cmd_draw_mesh_tasks_nv(command_buffer, task_count::Integer, first_task::Integer)::Cvoid\n\nExtension: VK_NV_mesh_shader\n\nArguments:\n\ncommand_buffer (externsync)\ntask_count::Integer\nfirst_task::Integer\n\nAPI documentation\n\n_cmd_draw_mesh_tasks_nv(command_buffer, task_count::Integer, first_task::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_end_conditional_rendering_ext-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_end_conditional_rendering_ext","text":"_cmd_end_conditional_rendering_ext(command_buffer, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_conditional_rendering\n\nArguments:\n\ncommand_buffer (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_end_conditional_rendering_ext(command_buffer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_end_conditional_rendering_ext-Tuple{Any}","page":"API","title":"Vulkan._cmd_end_conditional_rendering_ext","text":"_cmd_end_conditional_rendering_ext(command_buffer)::Cvoid\n\nExtension: VK_EXT_conditional_rendering\n\nArguments:\n\ncommand_buffer (externsync)\n\nAPI documentation\n\n_cmd_end_conditional_rendering_ext(command_buffer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_end_debug_utils_label_ext-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_end_debug_utils_label_ext","text":"_cmd_end_debug_utils_label_ext(command_buffer, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\ncommand_buffer (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_end_debug_utils_label_ext(command_buffer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_end_debug_utils_label_ext-Tuple{Any}","page":"API","title":"Vulkan._cmd_end_debug_utils_label_ext","text":"_cmd_end_debug_utils_label_ext(command_buffer)::Cvoid\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\ncommand_buffer (externsync)\n\nAPI documentation\n\n_cmd_end_debug_utils_label_ext(command_buffer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_end_query-Tuple{Any, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_end_query","text":"_cmd_end_query(command_buffer, query_pool, query::Integer, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nquery_pool\nquery::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_end_query(command_buffer, query_pool, query::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_end_query-Tuple{Any, Any, Integer}","page":"API","title":"Vulkan._cmd_end_query","text":"_cmd_end_query(command_buffer, query_pool, query::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nquery_pool\nquery::Integer\n\nAPI documentation\n\n_cmd_end_query(command_buffer, query_pool, query::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_end_query_indexed_ext-Tuple{Any, Any, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_end_query_indexed_ext","text":"_cmd_end_query_indexed_ext(command_buffer, query_pool, query::Integer, index::Integer, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\ncommand_buffer (externsync)\nquery_pool\nquery::Integer\nindex::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_end_query_indexed_ext(command_buffer, query_pool, query::Integer, index::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_end_query_indexed_ext-Tuple{Any, Any, Integer, Integer}","page":"API","title":"Vulkan._cmd_end_query_indexed_ext","text":"_cmd_end_query_indexed_ext(command_buffer, query_pool, query::Integer, index::Integer)::Cvoid\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\ncommand_buffer (externsync)\nquery_pool\nquery::Integer\nindex::Integer\n\nAPI documentation\n\n_cmd_end_query_indexed_ext(command_buffer, query_pool, query::Integer, index::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_end_render_pass-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_end_render_pass","text":"_cmd_end_render_pass(command_buffer, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_end_render_pass(command_buffer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_end_render_pass-Tuple{Any}","page":"API","title":"Vulkan._cmd_end_render_pass","text":"_cmd_end_render_pass(command_buffer)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\n\nAPI documentation\n\n_cmd_end_render_pass(command_buffer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_end_render_pass_2-Tuple{Any, _SubpassEndInfo, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_end_render_pass_2","text":"_cmd_end_render_pass_2(command_buffer, subpass_end_info::_SubpassEndInfo, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nsubpass_end_info::_SubpassEndInfo\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_end_render_pass_2(command_buffer, subpass_end_info::_SubpassEndInfo, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_end_render_pass_2-Tuple{Any, _SubpassEndInfo}","page":"API","title":"Vulkan._cmd_end_render_pass_2","text":"_cmd_end_render_pass_2(command_buffer, subpass_end_info::_SubpassEndInfo)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nsubpass_end_info::_SubpassEndInfo\n\nAPI documentation\n\n_cmd_end_render_pass_2(command_buffer, subpass_end_info::_SubpassEndInfo)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_end_transform_feedback_ext-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_end_transform_feedback_ext","text":"_cmd_end_transform_feedback_ext(command_buffer, counter_buffers::AbstractArray{Buffer}, fptr::FunctionPtr; counter_buffer_offsets = C_NULL)::Cvoid\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\ncommand_buffer (externsync)\ncounter_buffers::AbstractArray{Buffer}\nfptr::FunctionPtr\ncounter_buffer_offsets: defaults to C_NULL\n\nAPI documentation\n\n_cmd_end_transform_feedback_ext(command_buffer, counter_buffers::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}; counter_buffer_offsets)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_end_transform_feedback_ext-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._cmd_end_transform_feedback_ext","text":"_cmd_end_transform_feedback_ext(command_buffer, counter_buffers::AbstractArray{Buffer}; counter_buffer_offsets = C_NULL)::Cvoid\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\ncommand_buffer (externsync)\ncounter_buffers::AbstractArray{Buffer}\ncounter_buffer_offsets: defaults to C_NULL\n\nAPI documentation\n\n_cmd_end_transform_feedback_ext(command_buffer, counter_buffers::AbstractArray; counter_buffer_offsets)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_execute_commands-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_execute_commands","text":"_cmd_execute_commands(command_buffer, command_buffers::AbstractArray{CommandBuffer}, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\ncommand_buffers::AbstractArray{CommandBuffer}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_execute_commands(command_buffer, command_buffers::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_execute_commands-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._cmd_execute_commands","text":"_cmd_execute_commands(command_buffer, command_buffers::AbstractArray{CommandBuffer})::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\ncommand_buffers::AbstractArray{CommandBuffer}\n\nAPI documentation\n\n_cmd_execute_commands(command_buffer, command_buffers::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_execute_generated_commands_nv-Tuple{Any, Bool, _GeneratedCommandsInfoNV, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_execute_generated_commands_nv","text":"_cmd_execute_generated_commands_nv(command_buffer, is_preprocessed::Bool, generated_commands_info::_GeneratedCommandsInfoNV, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ncommand_buffer (externsync)\nis_preprocessed::Bool\ngenerated_commands_info::_GeneratedCommandsInfoNV\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_execute_generated_commands_nv(command_buffer, is_preprocessed::Bool, generated_commands_info::_GeneratedCommandsInfoNV, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_execute_generated_commands_nv-Tuple{Any, Bool, _GeneratedCommandsInfoNV}","page":"API","title":"Vulkan._cmd_execute_generated_commands_nv","text":"_cmd_execute_generated_commands_nv(command_buffer, is_preprocessed::Bool, generated_commands_info::_GeneratedCommandsInfoNV)::Cvoid\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ncommand_buffer (externsync)\nis_preprocessed::Bool\ngenerated_commands_info::_GeneratedCommandsInfoNV\n\nAPI documentation\n\n_cmd_execute_generated_commands_nv(command_buffer, is_preprocessed::Bool, generated_commands_info::_GeneratedCommandsInfoNV)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_fill_buffer-Tuple{Any, Any, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_fill_buffer","text":"_cmd_fill_buffer(command_buffer, dst_buffer, dst_offset::Integer, size::Integer, data::Integer, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\ndst_buffer\ndst_offset::Integer\nsize::Integer\ndata::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_fill_buffer(command_buffer, dst_buffer, dst_offset::Integer, size::Integer, data::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_fill_buffer-Tuple{Any, Any, Integer, Integer, Integer}","page":"API","title":"Vulkan._cmd_fill_buffer","text":"_cmd_fill_buffer(command_buffer, dst_buffer, dst_offset::Integer, size::Integer, data::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\ndst_buffer\ndst_offset::Integer\nsize::Integer\ndata::Integer\n\nAPI documentation\n\n_cmd_fill_buffer(command_buffer, dst_buffer, dst_offset::Integer, size::Integer, data::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_insert_debug_utils_label_ext-Tuple{Any, _DebugUtilsLabelEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_insert_debug_utils_label_ext","text":"_cmd_insert_debug_utils_label_ext(command_buffer, label_info::_DebugUtilsLabelEXT, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\ncommand_buffer (externsync)\nlabel_info::_DebugUtilsLabelEXT\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_insert_debug_utils_label_ext(command_buffer, label_info::_DebugUtilsLabelEXT, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_insert_debug_utils_label_ext-Tuple{Any, _DebugUtilsLabelEXT}","page":"API","title":"Vulkan._cmd_insert_debug_utils_label_ext","text":"_cmd_insert_debug_utils_label_ext(command_buffer, label_info::_DebugUtilsLabelEXT)::Cvoid\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\ncommand_buffer (externsync)\nlabel_info::_DebugUtilsLabelEXT\n\nAPI documentation\n\n_cmd_insert_debug_utils_label_ext(command_buffer, label_info::_DebugUtilsLabelEXT)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_next_subpass-Tuple{Any, SubpassContents, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_next_subpass","text":"_cmd_next_subpass(command_buffer, contents::SubpassContents, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\ncontents::SubpassContents\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_next_subpass(command_buffer, contents::SubpassContents, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_next_subpass-Tuple{Any, SubpassContents}","page":"API","title":"Vulkan._cmd_next_subpass","text":"_cmd_next_subpass(command_buffer, contents::SubpassContents)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\ncontents::SubpassContents\n\nAPI documentation\n\n_cmd_next_subpass(command_buffer, contents::SubpassContents)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_next_subpass_2-Tuple{Any, _SubpassBeginInfo, _SubpassEndInfo, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_next_subpass_2","text":"_cmd_next_subpass_2(command_buffer, subpass_begin_info::_SubpassBeginInfo, subpass_end_info::_SubpassEndInfo, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nsubpass_begin_info::_SubpassBeginInfo\nsubpass_end_info::_SubpassEndInfo\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_next_subpass_2(command_buffer, subpass_begin_info::_SubpassBeginInfo, subpass_end_info::_SubpassEndInfo, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_next_subpass_2-Tuple{Any, _SubpassBeginInfo, _SubpassEndInfo}","page":"API","title":"Vulkan._cmd_next_subpass_2","text":"_cmd_next_subpass_2(command_buffer, subpass_begin_info::_SubpassBeginInfo, subpass_end_info::_SubpassEndInfo)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nsubpass_begin_info::_SubpassBeginInfo\nsubpass_end_info::_SubpassEndInfo\n\nAPI documentation\n\n_cmd_next_subpass_2(command_buffer, subpass_begin_info::_SubpassBeginInfo, subpass_end_info::_SubpassEndInfo)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_pipeline_barrier-Tuple{Any, PipelineStageFlag, PipelineStageFlag, AbstractArray, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_pipeline_barrier","text":"_cmd_pipeline_barrier(command_buffer, src_stage_mask::PipelineStageFlag, dst_stage_mask::PipelineStageFlag, memory_barriers::AbstractArray{_MemoryBarrier}, buffer_memory_barriers::AbstractArray{_BufferMemoryBarrier}, image_memory_barriers::AbstractArray{_ImageMemoryBarrier}, fptr::FunctionPtr; dependency_flags = 0)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_stage_mask::PipelineStageFlag\ndst_stage_mask::PipelineStageFlag\nmemory_barriers::AbstractArray{_MemoryBarrier}\nbuffer_memory_barriers::AbstractArray{_BufferMemoryBarrier}\nimage_memory_barriers::AbstractArray{_ImageMemoryBarrier}\nfptr::FunctionPtr\ndependency_flags: defaults to 0\n\nAPI documentation\n\n_cmd_pipeline_barrier(command_buffer, src_stage_mask::PipelineStageFlag, dst_stage_mask::PipelineStageFlag, memory_barriers::AbstractArray, buffer_memory_barriers::AbstractArray, image_memory_barriers::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}; dependency_flags)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_pipeline_barrier-Tuple{Any, PipelineStageFlag, PipelineStageFlag, AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan._cmd_pipeline_barrier","text":"_cmd_pipeline_barrier(command_buffer, src_stage_mask::PipelineStageFlag, dst_stage_mask::PipelineStageFlag, memory_barriers::AbstractArray{_MemoryBarrier}, buffer_memory_barriers::AbstractArray{_BufferMemoryBarrier}, image_memory_barriers::AbstractArray{_ImageMemoryBarrier}; dependency_flags = 0)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_stage_mask::PipelineStageFlag\ndst_stage_mask::PipelineStageFlag\nmemory_barriers::AbstractArray{_MemoryBarrier}\nbuffer_memory_barriers::AbstractArray{_BufferMemoryBarrier}\nimage_memory_barriers::AbstractArray{_ImageMemoryBarrier}\ndependency_flags: defaults to 0\n\nAPI documentation\n\n_cmd_pipeline_barrier(command_buffer, src_stage_mask::PipelineStageFlag, dst_stage_mask::PipelineStageFlag, memory_barriers::AbstractArray, buffer_memory_barriers::AbstractArray, image_memory_barriers::AbstractArray; dependency_flags)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_pipeline_barrier_2_khr-Tuple{Any, _DependencyInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_pipeline_barrier_2_khr","text":"_cmd_pipeline_barrier_2_khr(command_buffer, dependency_info::_DependencyInfoKHR, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncommand_buffer (externsync)\ndependency_info::_DependencyInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_pipeline_barrier_2_khr(command_buffer, dependency_info::_DependencyInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_pipeline_barrier_2_khr-Tuple{Any, _DependencyInfoKHR}","page":"API","title":"Vulkan._cmd_pipeline_barrier_2_khr","text":"_cmd_pipeline_barrier_2_khr(command_buffer, dependency_info::_DependencyInfoKHR)::Cvoid\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncommand_buffer (externsync)\ndependency_info::_DependencyInfoKHR\n\nAPI documentation\n\n_cmd_pipeline_barrier_2_khr(command_buffer, dependency_info::_DependencyInfoKHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_preprocess_generated_commands_nv-Tuple{Any, _GeneratedCommandsInfoNV, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_preprocess_generated_commands_nv","text":"_cmd_preprocess_generated_commands_nv(command_buffer, generated_commands_info::_GeneratedCommandsInfoNV, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ncommand_buffer (externsync)\ngenerated_commands_info::_GeneratedCommandsInfoNV\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_preprocess_generated_commands_nv(command_buffer, generated_commands_info::_GeneratedCommandsInfoNV, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_preprocess_generated_commands_nv-Tuple{Any, _GeneratedCommandsInfoNV}","page":"API","title":"Vulkan._cmd_preprocess_generated_commands_nv","text":"_cmd_preprocess_generated_commands_nv(command_buffer, generated_commands_info::_GeneratedCommandsInfoNV)::Cvoid\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ncommand_buffer (externsync)\ngenerated_commands_info::_GeneratedCommandsInfoNV\n\nAPI documentation\n\n_cmd_preprocess_generated_commands_nv(command_buffer, generated_commands_info::_GeneratedCommandsInfoNV)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_push_constants-Tuple{Any, Any, ShaderStageFlag, Integer, Integer, Ptr{Nothing}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_push_constants","text":"_cmd_push_constants(command_buffer, layout, stage_flags::ShaderStageFlag, offset::Integer, size::Integer, values::Ptr{Cvoid}, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nlayout\nstage_flags::ShaderStageFlag\noffset::Integer\nsize::Integer\nvalues::Ptr{Cvoid} (must be a valid pointer with size bytes)\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_push_constants(command_buffer, layout, stage_flags::ShaderStageFlag, offset::Integer, size::Integer, values::Ptr{Nothing}, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_push_constants-Tuple{Any, Any, ShaderStageFlag, Integer, Integer, Ptr{Nothing}}","page":"API","title":"Vulkan._cmd_push_constants","text":"_cmd_push_constants(command_buffer, layout, stage_flags::ShaderStageFlag, offset::Integer, size::Integer, values::Ptr{Cvoid})::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nlayout\nstage_flags::ShaderStageFlag\noffset::Integer\nsize::Integer\nvalues::Ptr{Cvoid} (must be a valid pointer with size bytes)\n\nAPI documentation\n\n_cmd_push_constants(command_buffer, layout, stage_flags::ShaderStageFlag, offset::Integer, size::Integer, values::Ptr{Nothing})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_push_descriptor_set_khr-Tuple{Any, PipelineBindPoint, Any, Integer, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_push_descriptor_set_khr","text":"_cmd_push_descriptor_set_khr(command_buffer, pipeline_bind_point::PipelineBindPoint, layout, set::Integer, descriptor_writes::AbstractArray{_WriteDescriptorSet}, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_KHR_push_descriptor\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_bind_point::PipelineBindPoint\nlayout\nset::Integer\ndescriptor_writes::AbstractArray{_WriteDescriptorSet}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_push_descriptor_set_khr(command_buffer, pipeline_bind_point::PipelineBindPoint, layout, set::Integer, descriptor_writes::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_push_descriptor_set_khr-Tuple{Any, PipelineBindPoint, Any, Integer, AbstractArray}","page":"API","title":"Vulkan._cmd_push_descriptor_set_khr","text":"_cmd_push_descriptor_set_khr(command_buffer, pipeline_bind_point::PipelineBindPoint, layout, set::Integer, descriptor_writes::AbstractArray{_WriteDescriptorSet})::Cvoid\n\nExtension: VK_KHR_push_descriptor\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_bind_point::PipelineBindPoint\nlayout\nset::Integer\ndescriptor_writes::AbstractArray{_WriteDescriptorSet}\n\nAPI documentation\n\n_cmd_push_descriptor_set_khr(command_buffer, pipeline_bind_point::PipelineBindPoint, layout, set::Integer, descriptor_writes::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_push_descriptor_set_with_template_khr-Tuple{Any, Any, Any, Integer, Ptr{Nothing}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_push_descriptor_set_with_template_khr","text":"_cmd_push_descriptor_set_with_template_khr(command_buffer, descriptor_update_template, layout, set::Integer, data::Ptr{Cvoid}, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_KHR_push_descriptor\n\nArguments:\n\ncommand_buffer (externsync)\ndescriptor_update_template\nlayout\nset::Integer\ndata::Ptr{Cvoid}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_push_descriptor_set_with_template_khr(command_buffer, descriptor_update_template, layout, set::Integer, data::Ptr{Nothing}, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_push_descriptor_set_with_template_khr-Tuple{Any, Any, Any, Integer, Ptr{Nothing}}","page":"API","title":"Vulkan._cmd_push_descriptor_set_with_template_khr","text":"_cmd_push_descriptor_set_with_template_khr(command_buffer, descriptor_update_template, layout, set::Integer, data::Ptr{Cvoid})::Cvoid\n\nExtension: VK_KHR_push_descriptor\n\nArguments:\n\ncommand_buffer (externsync)\ndescriptor_update_template\nlayout\nset::Integer\ndata::Ptr{Cvoid}\n\nAPI documentation\n\n_cmd_push_descriptor_set_with_template_khr(command_buffer, descriptor_update_template, layout, set::Integer, data::Ptr{Nothing})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_reset_event-Tuple{Any, Any, PipelineStageFlag, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_reset_event","text":"_cmd_reset_event(command_buffer, event, stage_mask::PipelineStageFlag, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nevent\nstage_mask::PipelineStageFlag\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_reset_event(command_buffer, event, stage_mask::PipelineStageFlag, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_reset_event-Tuple{Any, Any, PipelineStageFlag}","page":"API","title":"Vulkan._cmd_reset_event","text":"_cmd_reset_event(command_buffer, event, stage_mask::PipelineStageFlag)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nevent\nstage_mask::PipelineStageFlag\n\nAPI documentation\n\n_cmd_reset_event(command_buffer, event, stage_mask::PipelineStageFlag)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_reset_event_2_khr-Tuple{Any, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_reset_event_2_khr","text":"_cmd_reset_event_2_khr(command_buffer, event, stage_mask::Integer, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncommand_buffer (externsync)\nevent\nstage_mask::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_reset_event_2_khr(command_buffer, event, stage_mask::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_reset_event_2_khr-Tuple{Any, Any, Integer}","page":"API","title":"Vulkan._cmd_reset_event_2_khr","text":"_cmd_reset_event_2_khr(command_buffer, event, stage_mask::Integer)::Cvoid\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncommand_buffer (externsync)\nevent\nstage_mask::Integer\n\nAPI documentation\n\n_cmd_reset_event_2_khr(command_buffer, event, stage_mask::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_reset_query_pool-Tuple{Any, Any, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_reset_query_pool","text":"_cmd_reset_query_pool(command_buffer, query_pool, first_query::Integer, query_count::Integer, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nquery_pool\nfirst_query::Integer\nquery_count::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_reset_query_pool(command_buffer, query_pool, first_query::Integer, query_count::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_reset_query_pool-Tuple{Any, Any, Integer, Integer}","page":"API","title":"Vulkan._cmd_reset_query_pool","text":"_cmd_reset_query_pool(command_buffer, query_pool, first_query::Integer, query_count::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nquery_pool\nfirst_query::Integer\nquery_count::Integer\n\nAPI documentation\n\n_cmd_reset_query_pool(command_buffer, query_pool, first_query::Integer, query_count::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_resolve_image-Tuple{Any, Any, ImageLayout, Any, ImageLayout, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_resolve_image","text":"_cmd_resolve_image(command_buffer, src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray{_ImageResolve}, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_image\nsrc_image_layout::ImageLayout\ndst_image\ndst_image_layout::ImageLayout\nregions::AbstractArray{_ImageResolve}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_resolve_image(command_buffer, src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_resolve_image-Tuple{Any, Any, ImageLayout, Any, ImageLayout, AbstractArray}","page":"API","title":"Vulkan._cmd_resolve_image","text":"_cmd_resolve_image(command_buffer, src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray{_ImageResolve})::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_image\nsrc_image_layout::ImageLayout\ndst_image\ndst_image_layout::ImageLayout\nregions::AbstractArray{_ImageResolve}\n\nAPI documentation\n\n_cmd_resolve_image(command_buffer, src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_resolve_image_2_khr-Tuple{Any, _ResolveImageInfo2KHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_resolve_image_2_khr","text":"_cmd_resolve_image_2_khr(command_buffer, resolve_image_info::_ResolveImageInfo2KHR, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\ncommand_buffer (externsync)\nresolve_image_info::_ResolveImageInfo2KHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_resolve_image_2_khr(command_buffer, resolve_image_info::_ResolveImageInfo2KHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_resolve_image_2_khr-Tuple{Any, _ResolveImageInfo2KHR}","page":"API","title":"Vulkan._cmd_resolve_image_2_khr","text":"_cmd_resolve_image_2_khr(command_buffer, resolve_image_info::_ResolveImageInfo2KHR)::Cvoid\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\ncommand_buffer (externsync)\nresolve_image_info::_ResolveImageInfo2KHR\n\nAPI documentation\n\n_cmd_resolve_image_2_khr(command_buffer, resolve_image_info::_ResolveImageInfo2KHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_blend_constants-Tuple{Any, NTuple{4, Float32}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_blend_constants","text":"_cmd_set_blend_constants(command_buffer, blend_constants::NTuple{4, Float32}, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nblend_constants::NTuple{4, Float32}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_blend_constants(command_buffer, blend_constants::NTuple{4, Float32}, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_blend_constants-Tuple{Any, NTuple{4, Float32}}","page":"API","title":"Vulkan._cmd_set_blend_constants","text":"_cmd_set_blend_constants(command_buffer, blend_constants::NTuple{4, Float32})::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nblend_constants::NTuple{4, Float32}\n\nAPI documentation\n\n_cmd_set_blend_constants(command_buffer, blend_constants::NTuple{4, Float32})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_checkpoint_nv-Tuple{Any, Ptr{Nothing}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_checkpoint_nv","text":"_cmd_set_checkpoint_nv(command_buffer, checkpoint_marker::Ptr{Cvoid}, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_NV_device_diagnostic_checkpoints\n\nArguments:\n\ncommand_buffer (externsync)\ncheckpoint_marker::Ptr{Cvoid}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_checkpoint_nv(command_buffer, checkpoint_marker::Ptr{Nothing}, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_checkpoint_nv-Tuple{Any, Ptr{Nothing}}","page":"API","title":"Vulkan._cmd_set_checkpoint_nv","text":"_cmd_set_checkpoint_nv(command_buffer, checkpoint_marker::Ptr{Cvoid})::Cvoid\n\nExtension: VK_NV_device_diagnostic_checkpoints\n\nArguments:\n\ncommand_buffer (externsync)\ncheckpoint_marker::Ptr{Cvoid}\n\nAPI documentation\n\n_cmd_set_checkpoint_nv(command_buffer, checkpoint_marker::Ptr{Nothing})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_coarse_sample_order_nv-Tuple{Any, CoarseSampleOrderTypeNV, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_coarse_sample_order_nv","text":"_cmd_set_coarse_sample_order_nv(command_buffer, sample_order_type::CoarseSampleOrderTypeNV, custom_sample_orders::AbstractArray{_CoarseSampleOrderCustomNV}, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_NV_shading_rate_image\n\nArguments:\n\ncommand_buffer (externsync)\nsample_order_type::CoarseSampleOrderTypeNV\ncustom_sample_orders::AbstractArray{_CoarseSampleOrderCustomNV}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_coarse_sample_order_nv(command_buffer, sample_order_type::CoarseSampleOrderTypeNV, custom_sample_orders::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_coarse_sample_order_nv-Tuple{Any, CoarseSampleOrderTypeNV, AbstractArray}","page":"API","title":"Vulkan._cmd_set_coarse_sample_order_nv","text":"_cmd_set_coarse_sample_order_nv(command_buffer, sample_order_type::CoarseSampleOrderTypeNV, custom_sample_orders::AbstractArray{_CoarseSampleOrderCustomNV})::Cvoid\n\nExtension: VK_NV_shading_rate_image\n\nArguments:\n\ncommand_buffer (externsync)\nsample_order_type::CoarseSampleOrderTypeNV\ncustom_sample_orders::AbstractArray{_CoarseSampleOrderCustomNV}\n\nAPI documentation\n\n_cmd_set_coarse_sample_order_nv(command_buffer, sample_order_type::CoarseSampleOrderTypeNV, custom_sample_orders::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_color_write_enable_ext-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_color_write_enable_ext","text":"_cmd_set_color_write_enable_ext(command_buffer, color_write_enables::AbstractArray{Bool}, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_color_write_enable\n\nArguments:\n\ncommand_buffer (externsync)\ncolor_write_enables::AbstractArray{Bool}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_color_write_enable_ext(command_buffer, color_write_enables::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_color_write_enable_ext-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._cmd_set_color_write_enable_ext","text":"_cmd_set_color_write_enable_ext(command_buffer, color_write_enables::AbstractArray{Bool})::Cvoid\n\nExtension: VK_EXT_color_write_enable\n\nArguments:\n\ncommand_buffer (externsync)\ncolor_write_enables::AbstractArray{Bool}\n\nAPI documentation\n\n_cmd_set_color_write_enable_ext(command_buffer, color_write_enables::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_cull_mode_ext-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_cull_mode_ext","text":"_cmd_set_cull_mode_ext(command_buffer, fptr::FunctionPtr; cull_mode = 0)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nfptr::FunctionPtr\ncull_mode: defaults to 0\n\nAPI documentation\n\n_cmd_set_cull_mode_ext(command_buffer, fptr::Union{Ptr{Nothing}, Base.CFunction}; cull_mode)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_cull_mode_ext-Tuple{Any}","page":"API","title":"Vulkan._cmd_set_cull_mode_ext","text":"_cmd_set_cull_mode_ext(command_buffer; cull_mode = 0)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\ncull_mode: defaults to 0\n\nAPI documentation\n\n_cmd_set_cull_mode_ext(command_buffer; cull_mode)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_depth_bias-Tuple{Any, Real, Real, Real, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_depth_bias","text":"_cmd_set_depth_bias(command_buffer, depth_bias_constant_factor::Real, depth_bias_clamp::Real, depth_bias_slope_factor::Real, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\ndepth_bias_constant_factor::Real\ndepth_bias_clamp::Real\ndepth_bias_slope_factor::Real\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_depth_bias(command_buffer, depth_bias_constant_factor::Real, depth_bias_clamp::Real, depth_bias_slope_factor::Real, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_depth_bias-Tuple{Any, Real, Real, Real}","page":"API","title":"Vulkan._cmd_set_depth_bias","text":"_cmd_set_depth_bias(command_buffer, depth_bias_constant_factor::Real, depth_bias_clamp::Real, depth_bias_slope_factor::Real)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\ndepth_bias_constant_factor::Real\ndepth_bias_clamp::Real\ndepth_bias_slope_factor::Real\n\nAPI documentation\n\n_cmd_set_depth_bias(command_buffer, depth_bias_constant_factor::Real, depth_bias_clamp::Real, depth_bias_slope_factor::Real)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_depth_bias_enable_ext-Tuple{Any, Bool, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_depth_bias_enable_ext","text":"_cmd_set_depth_bias_enable_ext(command_buffer, depth_bias_enable::Bool, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state2\n\nArguments:\n\ncommand_buffer (externsync)\ndepth_bias_enable::Bool\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_depth_bias_enable_ext(command_buffer, depth_bias_enable::Bool, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_depth_bias_enable_ext-Tuple{Any, Bool}","page":"API","title":"Vulkan._cmd_set_depth_bias_enable_ext","text":"_cmd_set_depth_bias_enable_ext(command_buffer, depth_bias_enable::Bool)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state2\n\nArguments:\n\ncommand_buffer (externsync)\ndepth_bias_enable::Bool\n\nAPI documentation\n\n_cmd_set_depth_bias_enable_ext(command_buffer, depth_bias_enable::Bool)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_depth_bounds-Tuple{Any, Real, Real, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_depth_bounds","text":"_cmd_set_depth_bounds(command_buffer, min_depth_bounds::Real, max_depth_bounds::Real, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nmin_depth_bounds::Real\nmax_depth_bounds::Real\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_depth_bounds(command_buffer, min_depth_bounds::Real, max_depth_bounds::Real, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_depth_bounds-Tuple{Any, Real, Real}","page":"API","title":"Vulkan._cmd_set_depth_bounds","text":"_cmd_set_depth_bounds(command_buffer, min_depth_bounds::Real, max_depth_bounds::Real)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nmin_depth_bounds::Real\nmax_depth_bounds::Real\n\nAPI documentation\n\n_cmd_set_depth_bounds(command_buffer, min_depth_bounds::Real, max_depth_bounds::Real)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_depth_bounds_test_enable_ext-Tuple{Any, Bool, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_depth_bounds_test_enable_ext","text":"_cmd_set_depth_bounds_test_enable_ext(command_buffer, depth_bounds_test_enable::Bool, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\ndepth_bounds_test_enable::Bool\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_depth_bounds_test_enable_ext(command_buffer, depth_bounds_test_enable::Bool, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_depth_bounds_test_enable_ext-Tuple{Any, Bool}","page":"API","title":"Vulkan._cmd_set_depth_bounds_test_enable_ext","text":"_cmd_set_depth_bounds_test_enable_ext(command_buffer, depth_bounds_test_enable::Bool)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\ndepth_bounds_test_enable::Bool\n\nAPI documentation\n\n_cmd_set_depth_bounds_test_enable_ext(command_buffer, depth_bounds_test_enable::Bool)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_depth_compare_op_ext-Tuple{Any, CompareOp, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_depth_compare_op_ext","text":"_cmd_set_depth_compare_op_ext(command_buffer, depth_compare_op::CompareOp, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\ndepth_compare_op::CompareOp\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_depth_compare_op_ext(command_buffer, depth_compare_op::CompareOp, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_depth_compare_op_ext-Tuple{Any, CompareOp}","page":"API","title":"Vulkan._cmd_set_depth_compare_op_ext","text":"_cmd_set_depth_compare_op_ext(command_buffer, depth_compare_op::CompareOp)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\ndepth_compare_op::CompareOp\n\nAPI documentation\n\n_cmd_set_depth_compare_op_ext(command_buffer, depth_compare_op::CompareOp)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_depth_test_enable_ext-Tuple{Any, Bool, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_depth_test_enable_ext","text":"_cmd_set_depth_test_enable_ext(command_buffer, depth_test_enable::Bool, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\ndepth_test_enable::Bool\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_depth_test_enable_ext(command_buffer, depth_test_enable::Bool, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_depth_test_enable_ext-Tuple{Any, Bool}","page":"API","title":"Vulkan._cmd_set_depth_test_enable_ext","text":"_cmd_set_depth_test_enable_ext(command_buffer, depth_test_enable::Bool)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\ndepth_test_enable::Bool\n\nAPI documentation\n\n_cmd_set_depth_test_enable_ext(command_buffer, depth_test_enable::Bool)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_depth_write_enable_ext-Tuple{Any, Bool, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_depth_write_enable_ext","text":"_cmd_set_depth_write_enable_ext(command_buffer, depth_write_enable::Bool, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\ndepth_write_enable::Bool\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_depth_write_enable_ext(command_buffer, depth_write_enable::Bool, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_depth_write_enable_ext-Tuple{Any, Bool}","page":"API","title":"Vulkan._cmd_set_depth_write_enable_ext","text":"_cmd_set_depth_write_enable_ext(command_buffer, depth_write_enable::Bool)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\ndepth_write_enable::Bool\n\nAPI documentation\n\n_cmd_set_depth_write_enable_ext(command_buffer, depth_write_enable::Bool)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_device_mask-Tuple{Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_device_mask","text":"_cmd_set_device_mask(command_buffer, device_mask::Integer, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\ndevice_mask::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_device_mask(command_buffer, device_mask::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_device_mask-Tuple{Any, Integer}","page":"API","title":"Vulkan._cmd_set_device_mask","text":"_cmd_set_device_mask(command_buffer, device_mask::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\ndevice_mask::Integer\n\nAPI documentation\n\n_cmd_set_device_mask(command_buffer, device_mask::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_discard_rectangle_ext-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_discard_rectangle_ext","text":"_cmd_set_discard_rectangle_ext(command_buffer, discard_rectangles::AbstractArray{_Rect2D}, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_discard_rectangles\n\nArguments:\n\ncommand_buffer (externsync)\ndiscard_rectangles::AbstractArray{_Rect2D}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_discard_rectangle_ext(command_buffer, discard_rectangles::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_discard_rectangle_ext-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._cmd_set_discard_rectangle_ext","text":"_cmd_set_discard_rectangle_ext(command_buffer, discard_rectangles::AbstractArray{_Rect2D})::Cvoid\n\nExtension: VK_EXT_discard_rectangles\n\nArguments:\n\ncommand_buffer (externsync)\ndiscard_rectangles::AbstractArray{_Rect2D}\n\nAPI documentation\n\n_cmd_set_discard_rectangle_ext(command_buffer, discard_rectangles::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_event-Tuple{Any, Any, PipelineStageFlag, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_event","text":"_cmd_set_event(command_buffer, event, stage_mask::PipelineStageFlag, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nevent\nstage_mask::PipelineStageFlag\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_event(command_buffer, event, stage_mask::PipelineStageFlag, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_event-Tuple{Any, Any, PipelineStageFlag}","page":"API","title":"Vulkan._cmd_set_event","text":"_cmd_set_event(command_buffer, event, stage_mask::PipelineStageFlag)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nevent\nstage_mask::PipelineStageFlag\n\nAPI documentation\n\n_cmd_set_event(command_buffer, event, stage_mask::PipelineStageFlag)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_event_2_khr-Tuple{Any, Any, _DependencyInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_event_2_khr","text":"_cmd_set_event_2_khr(command_buffer, event, dependency_info::_DependencyInfoKHR, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncommand_buffer (externsync)\nevent\ndependency_info::_DependencyInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_event_2_khr(command_buffer, event, dependency_info::_DependencyInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_event_2_khr-Tuple{Any, Any, _DependencyInfoKHR}","page":"API","title":"Vulkan._cmd_set_event_2_khr","text":"_cmd_set_event_2_khr(command_buffer, event, dependency_info::_DependencyInfoKHR)::Cvoid\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncommand_buffer (externsync)\nevent\ndependency_info::_DependencyInfoKHR\n\nAPI documentation\n\n_cmd_set_event_2_khr(command_buffer, event, dependency_info::_DependencyInfoKHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_exclusive_scissor_nv-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_exclusive_scissor_nv","text":"_cmd_set_exclusive_scissor_nv(command_buffer, exclusive_scissors::AbstractArray{_Rect2D}, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_NV_scissor_exclusive\n\nArguments:\n\ncommand_buffer (externsync)\nexclusive_scissors::AbstractArray{_Rect2D}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_exclusive_scissor_nv(command_buffer, exclusive_scissors::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_exclusive_scissor_nv-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._cmd_set_exclusive_scissor_nv","text":"_cmd_set_exclusive_scissor_nv(command_buffer, exclusive_scissors::AbstractArray{_Rect2D})::Cvoid\n\nExtension: VK_NV_scissor_exclusive\n\nArguments:\n\ncommand_buffer (externsync)\nexclusive_scissors::AbstractArray{_Rect2D}\n\nAPI documentation\n\n_cmd_set_exclusive_scissor_nv(command_buffer, exclusive_scissors::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_fragment_shading_rate_enum_nv-Tuple{Any, FragmentShadingRateNV, Tuple{FragmentShadingRateCombinerOpKHR, FragmentShadingRateCombinerOpKHR}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_fragment_shading_rate_enum_nv","text":"_cmd_set_fragment_shading_rate_enum_nv(command_buffer, shading_rate::FragmentShadingRateNV, combiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR}, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_NV_fragment_shading_rate_enums\n\nArguments:\n\ncommand_buffer (externsync)\nshading_rate::FragmentShadingRateNV\ncombiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_fragment_shading_rate_enum_nv(command_buffer, shading_rate::FragmentShadingRateNV, combiner_ops::Tuple{FragmentShadingRateCombinerOpKHR, FragmentShadingRateCombinerOpKHR}, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_fragment_shading_rate_enum_nv-Tuple{Any, FragmentShadingRateNV, Tuple{FragmentShadingRateCombinerOpKHR, FragmentShadingRateCombinerOpKHR}}","page":"API","title":"Vulkan._cmd_set_fragment_shading_rate_enum_nv","text":"_cmd_set_fragment_shading_rate_enum_nv(command_buffer, shading_rate::FragmentShadingRateNV, combiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR})::Cvoid\n\nExtension: VK_NV_fragment_shading_rate_enums\n\nArguments:\n\ncommand_buffer (externsync)\nshading_rate::FragmentShadingRateNV\ncombiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR}\n\nAPI documentation\n\n_cmd_set_fragment_shading_rate_enum_nv(command_buffer, shading_rate::FragmentShadingRateNV, combiner_ops::Tuple{FragmentShadingRateCombinerOpKHR, FragmentShadingRateCombinerOpKHR})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_fragment_shading_rate_khr-Tuple{Any, _Extent2D, Tuple{FragmentShadingRateCombinerOpKHR, FragmentShadingRateCombinerOpKHR}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_fragment_shading_rate_khr","text":"_cmd_set_fragment_shading_rate_khr(command_buffer, fragment_size::_Extent2D, combiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR}, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_KHR_fragment_shading_rate\n\nArguments:\n\ncommand_buffer (externsync)\nfragment_size::_Extent2D\ncombiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_fragment_shading_rate_khr(command_buffer, fragment_size::_Extent2D, combiner_ops::Tuple{FragmentShadingRateCombinerOpKHR, FragmentShadingRateCombinerOpKHR}, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_fragment_shading_rate_khr-Tuple{Any, _Extent2D, Tuple{FragmentShadingRateCombinerOpKHR, FragmentShadingRateCombinerOpKHR}}","page":"API","title":"Vulkan._cmd_set_fragment_shading_rate_khr","text":"_cmd_set_fragment_shading_rate_khr(command_buffer, fragment_size::_Extent2D, combiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR})::Cvoid\n\nExtension: VK_KHR_fragment_shading_rate\n\nArguments:\n\ncommand_buffer (externsync)\nfragment_size::_Extent2D\ncombiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR}\n\nAPI documentation\n\n_cmd_set_fragment_shading_rate_khr(command_buffer, fragment_size::_Extent2D, combiner_ops::Tuple{FragmentShadingRateCombinerOpKHR, FragmentShadingRateCombinerOpKHR})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_front_face_ext-Tuple{Any, FrontFace, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_front_face_ext","text":"_cmd_set_front_face_ext(command_buffer, front_face::FrontFace, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nfront_face::FrontFace\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_front_face_ext(command_buffer, front_face::FrontFace, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_front_face_ext-Tuple{Any, FrontFace}","page":"API","title":"Vulkan._cmd_set_front_face_ext","text":"_cmd_set_front_face_ext(command_buffer, front_face::FrontFace)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nfront_face::FrontFace\n\nAPI documentation\n\n_cmd_set_front_face_ext(command_buffer, front_face::FrontFace)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_line_stipple_ext-Tuple{Any, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_line_stipple_ext","text":"_cmd_set_line_stipple_ext(command_buffer, line_stipple_factor::Integer, line_stipple_pattern::Integer, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_line_rasterization\n\nArguments:\n\ncommand_buffer (externsync)\nline_stipple_factor::Integer\nline_stipple_pattern::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_line_stipple_ext(command_buffer, line_stipple_factor::Integer, line_stipple_pattern::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_line_stipple_ext-Tuple{Any, Integer, Integer}","page":"API","title":"Vulkan._cmd_set_line_stipple_ext","text":"_cmd_set_line_stipple_ext(command_buffer, line_stipple_factor::Integer, line_stipple_pattern::Integer)::Cvoid\n\nExtension: VK_EXT_line_rasterization\n\nArguments:\n\ncommand_buffer (externsync)\nline_stipple_factor::Integer\nline_stipple_pattern::Integer\n\nAPI documentation\n\n_cmd_set_line_stipple_ext(command_buffer, line_stipple_factor::Integer, line_stipple_pattern::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_line_width-Tuple{Any, Real, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_line_width","text":"_cmd_set_line_width(command_buffer, line_width::Real, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nline_width::Real\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_line_width(command_buffer, line_width::Real, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_line_width-Tuple{Any, Real}","page":"API","title":"Vulkan._cmd_set_line_width","text":"_cmd_set_line_width(command_buffer, line_width::Real)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nline_width::Real\n\nAPI documentation\n\n_cmd_set_line_width(command_buffer, line_width::Real)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_logic_op_ext-Tuple{Any, LogicOp, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_logic_op_ext","text":"_cmd_set_logic_op_ext(command_buffer, logic_op::LogicOp, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state2\n\nArguments:\n\ncommand_buffer (externsync)\nlogic_op::LogicOp\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_logic_op_ext(command_buffer, logic_op::LogicOp, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_logic_op_ext-Tuple{Any, LogicOp}","page":"API","title":"Vulkan._cmd_set_logic_op_ext","text":"_cmd_set_logic_op_ext(command_buffer, logic_op::LogicOp)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state2\n\nArguments:\n\ncommand_buffer (externsync)\nlogic_op::LogicOp\n\nAPI documentation\n\n_cmd_set_logic_op_ext(command_buffer, logic_op::LogicOp)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_patch_control_points_ext-Tuple{Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_patch_control_points_ext","text":"_cmd_set_patch_control_points_ext(command_buffer, patch_control_points::Integer, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state2\n\nArguments:\n\ncommand_buffer (externsync)\npatch_control_points::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_patch_control_points_ext(command_buffer, patch_control_points::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_patch_control_points_ext-Tuple{Any, Integer}","page":"API","title":"Vulkan._cmd_set_patch_control_points_ext","text":"_cmd_set_patch_control_points_ext(command_buffer, patch_control_points::Integer)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state2\n\nArguments:\n\ncommand_buffer (externsync)\npatch_control_points::Integer\n\nAPI documentation\n\n_cmd_set_patch_control_points_ext(command_buffer, patch_control_points::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_performance_marker_intel-Tuple{Any, _PerformanceMarkerInfoINTEL, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_performance_marker_intel","text":"_cmd_set_performance_marker_intel(command_buffer, marker_info::_PerformanceMarkerInfoINTEL, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ncommand_buffer (externsync)\nmarker_info::_PerformanceMarkerInfoINTEL\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_performance_marker_intel(command_buffer, marker_info::_PerformanceMarkerInfoINTEL, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_performance_marker_intel-Tuple{Any, _PerformanceMarkerInfoINTEL}","page":"API","title":"Vulkan._cmd_set_performance_marker_intel","text":"_cmd_set_performance_marker_intel(command_buffer, marker_info::_PerformanceMarkerInfoINTEL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ncommand_buffer (externsync)\nmarker_info::_PerformanceMarkerInfoINTEL\n\nAPI documentation\n\n_cmd_set_performance_marker_intel(command_buffer, marker_info::_PerformanceMarkerInfoINTEL) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_performance_override_intel-Tuple{Any, _PerformanceOverrideInfoINTEL, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_performance_override_intel","text":"_cmd_set_performance_override_intel(command_buffer, override_info::_PerformanceOverrideInfoINTEL, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ncommand_buffer (externsync)\noverride_info::_PerformanceOverrideInfoINTEL\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_performance_override_intel(command_buffer, override_info::_PerformanceOverrideInfoINTEL, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_performance_override_intel-Tuple{Any, _PerformanceOverrideInfoINTEL}","page":"API","title":"Vulkan._cmd_set_performance_override_intel","text":"_cmd_set_performance_override_intel(command_buffer, override_info::_PerformanceOverrideInfoINTEL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ncommand_buffer (externsync)\noverride_info::_PerformanceOverrideInfoINTEL\n\nAPI documentation\n\n_cmd_set_performance_override_intel(command_buffer, override_info::_PerformanceOverrideInfoINTEL) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_performance_stream_marker_intel-Tuple{Any, _PerformanceStreamMarkerInfoINTEL, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_performance_stream_marker_intel","text":"_cmd_set_performance_stream_marker_intel(command_buffer, marker_info::_PerformanceStreamMarkerInfoINTEL, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ncommand_buffer (externsync)\nmarker_info::_PerformanceStreamMarkerInfoINTEL\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_performance_stream_marker_intel(command_buffer, marker_info::_PerformanceStreamMarkerInfoINTEL, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_performance_stream_marker_intel-Tuple{Any, _PerformanceStreamMarkerInfoINTEL}","page":"API","title":"Vulkan._cmd_set_performance_stream_marker_intel","text":"_cmd_set_performance_stream_marker_intel(command_buffer, marker_info::_PerformanceStreamMarkerInfoINTEL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ncommand_buffer (externsync)\nmarker_info::_PerformanceStreamMarkerInfoINTEL\n\nAPI documentation\n\n_cmd_set_performance_stream_marker_intel(command_buffer, marker_info::_PerformanceStreamMarkerInfoINTEL) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_primitive_restart_enable_ext-Tuple{Any, Bool, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_primitive_restart_enable_ext","text":"_cmd_set_primitive_restart_enable_ext(command_buffer, primitive_restart_enable::Bool, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state2\n\nArguments:\n\ncommand_buffer (externsync)\nprimitive_restart_enable::Bool\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_primitive_restart_enable_ext(command_buffer, primitive_restart_enable::Bool, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_primitive_restart_enable_ext-Tuple{Any, Bool}","page":"API","title":"Vulkan._cmd_set_primitive_restart_enable_ext","text":"_cmd_set_primitive_restart_enable_ext(command_buffer, primitive_restart_enable::Bool)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state2\n\nArguments:\n\ncommand_buffer (externsync)\nprimitive_restart_enable::Bool\n\nAPI documentation\n\n_cmd_set_primitive_restart_enable_ext(command_buffer, primitive_restart_enable::Bool)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_primitive_topology_ext-Tuple{Any, PrimitiveTopology, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_primitive_topology_ext","text":"_cmd_set_primitive_topology_ext(command_buffer, primitive_topology::PrimitiveTopology, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nprimitive_topology::PrimitiveTopology\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_primitive_topology_ext(command_buffer, primitive_topology::PrimitiveTopology, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_primitive_topology_ext-Tuple{Any, PrimitiveTopology}","page":"API","title":"Vulkan._cmd_set_primitive_topology_ext","text":"_cmd_set_primitive_topology_ext(command_buffer, primitive_topology::PrimitiveTopology)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nprimitive_topology::PrimitiveTopology\n\nAPI documentation\n\n_cmd_set_primitive_topology_ext(command_buffer, primitive_topology::PrimitiveTopology)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_rasterizer_discard_enable_ext-Tuple{Any, Bool, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_rasterizer_discard_enable_ext","text":"_cmd_set_rasterizer_discard_enable_ext(command_buffer, rasterizer_discard_enable::Bool, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state2\n\nArguments:\n\ncommand_buffer (externsync)\nrasterizer_discard_enable::Bool\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_rasterizer_discard_enable_ext(command_buffer, rasterizer_discard_enable::Bool, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_rasterizer_discard_enable_ext-Tuple{Any, Bool}","page":"API","title":"Vulkan._cmd_set_rasterizer_discard_enable_ext","text":"_cmd_set_rasterizer_discard_enable_ext(command_buffer, rasterizer_discard_enable::Bool)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state2\n\nArguments:\n\ncommand_buffer (externsync)\nrasterizer_discard_enable::Bool\n\nAPI documentation\n\n_cmd_set_rasterizer_discard_enable_ext(command_buffer, rasterizer_discard_enable::Bool)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_ray_tracing_pipeline_stack_size_khr-Tuple{Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_ray_tracing_pipeline_stack_size_khr","text":"_cmd_set_ray_tracing_pipeline_stack_size_khr(command_buffer, pipeline_stack_size::Integer, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_stack_size::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_ray_tracing_pipeline_stack_size_khr(command_buffer, pipeline_stack_size::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_ray_tracing_pipeline_stack_size_khr-Tuple{Any, Integer}","page":"API","title":"Vulkan._cmd_set_ray_tracing_pipeline_stack_size_khr","text":"_cmd_set_ray_tracing_pipeline_stack_size_khr(command_buffer, pipeline_stack_size::Integer)::Cvoid\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_stack_size::Integer\n\nAPI documentation\n\n_cmd_set_ray_tracing_pipeline_stack_size_khr(command_buffer, pipeline_stack_size::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_sample_locations_ext-Tuple{Any, _SampleLocationsInfoEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_sample_locations_ext","text":"_cmd_set_sample_locations_ext(command_buffer, sample_locations_info::_SampleLocationsInfoEXT, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_sample_locations\n\nArguments:\n\ncommand_buffer (externsync)\nsample_locations_info::_SampleLocationsInfoEXT\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_sample_locations_ext(command_buffer, sample_locations_info::_SampleLocationsInfoEXT, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_sample_locations_ext-Tuple{Any, _SampleLocationsInfoEXT}","page":"API","title":"Vulkan._cmd_set_sample_locations_ext","text":"_cmd_set_sample_locations_ext(command_buffer, sample_locations_info::_SampleLocationsInfoEXT)::Cvoid\n\nExtension: VK_EXT_sample_locations\n\nArguments:\n\ncommand_buffer (externsync)\nsample_locations_info::_SampleLocationsInfoEXT\n\nAPI documentation\n\n_cmd_set_sample_locations_ext(command_buffer, sample_locations_info::_SampleLocationsInfoEXT)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_scissor-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_scissor","text":"_cmd_set_scissor(command_buffer, scissors::AbstractArray{_Rect2D}, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nscissors::AbstractArray{_Rect2D}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_scissor(command_buffer, scissors::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_scissor-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._cmd_set_scissor","text":"_cmd_set_scissor(command_buffer, scissors::AbstractArray{_Rect2D})::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nscissors::AbstractArray{_Rect2D}\n\nAPI documentation\n\n_cmd_set_scissor(command_buffer, scissors::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_scissor_with_count_ext-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_scissor_with_count_ext","text":"_cmd_set_scissor_with_count_ext(command_buffer, scissors::AbstractArray{_Rect2D}, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nscissors::AbstractArray{_Rect2D}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_scissor_with_count_ext(command_buffer, scissors::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_scissor_with_count_ext-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._cmd_set_scissor_with_count_ext","text":"_cmd_set_scissor_with_count_ext(command_buffer, scissors::AbstractArray{_Rect2D})::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nscissors::AbstractArray{_Rect2D}\n\nAPI documentation\n\n_cmd_set_scissor_with_count_ext(command_buffer, scissors::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_stencil_compare_mask-Tuple{Any, StencilFaceFlag, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_stencil_compare_mask","text":"_cmd_set_stencil_compare_mask(command_buffer, face_mask::StencilFaceFlag, compare_mask::Integer, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nface_mask::StencilFaceFlag\ncompare_mask::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_stencil_compare_mask(command_buffer, face_mask::StencilFaceFlag, compare_mask::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_stencil_compare_mask-Tuple{Any, StencilFaceFlag, Integer}","page":"API","title":"Vulkan._cmd_set_stencil_compare_mask","text":"_cmd_set_stencil_compare_mask(command_buffer, face_mask::StencilFaceFlag, compare_mask::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nface_mask::StencilFaceFlag\ncompare_mask::Integer\n\nAPI documentation\n\n_cmd_set_stencil_compare_mask(command_buffer, face_mask::StencilFaceFlag, compare_mask::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_stencil_op_ext-Tuple{Any, StencilFaceFlag, StencilOp, StencilOp, StencilOp, CompareOp, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_stencil_op_ext","text":"_cmd_set_stencil_op_ext(command_buffer, face_mask::StencilFaceFlag, fail_op::StencilOp, pass_op::StencilOp, depth_fail_op::StencilOp, compare_op::CompareOp, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nface_mask::StencilFaceFlag\nfail_op::StencilOp\npass_op::StencilOp\ndepth_fail_op::StencilOp\ncompare_op::CompareOp\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_stencil_op_ext(command_buffer, face_mask::StencilFaceFlag, fail_op::StencilOp, pass_op::StencilOp, depth_fail_op::StencilOp, compare_op::CompareOp, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_stencil_op_ext-Tuple{Any, StencilFaceFlag, StencilOp, StencilOp, StencilOp, CompareOp}","page":"API","title":"Vulkan._cmd_set_stencil_op_ext","text":"_cmd_set_stencil_op_ext(command_buffer, face_mask::StencilFaceFlag, fail_op::StencilOp, pass_op::StencilOp, depth_fail_op::StencilOp, compare_op::CompareOp)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nface_mask::StencilFaceFlag\nfail_op::StencilOp\npass_op::StencilOp\ndepth_fail_op::StencilOp\ncompare_op::CompareOp\n\nAPI documentation\n\n_cmd_set_stencil_op_ext(command_buffer, face_mask::StencilFaceFlag, fail_op::StencilOp, pass_op::StencilOp, depth_fail_op::StencilOp, compare_op::CompareOp)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_stencil_reference-Tuple{Any, StencilFaceFlag, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_stencil_reference","text":"_cmd_set_stencil_reference(command_buffer, face_mask::StencilFaceFlag, reference::Integer, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nface_mask::StencilFaceFlag\nreference::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_stencil_reference(command_buffer, face_mask::StencilFaceFlag, reference::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_stencil_reference-Tuple{Any, StencilFaceFlag, Integer}","page":"API","title":"Vulkan._cmd_set_stencil_reference","text":"_cmd_set_stencil_reference(command_buffer, face_mask::StencilFaceFlag, reference::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nface_mask::StencilFaceFlag\nreference::Integer\n\nAPI documentation\n\n_cmd_set_stencil_reference(command_buffer, face_mask::StencilFaceFlag, reference::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_stencil_test_enable_ext-Tuple{Any, Bool, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_stencil_test_enable_ext","text":"_cmd_set_stencil_test_enable_ext(command_buffer, stencil_test_enable::Bool, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nstencil_test_enable::Bool\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_stencil_test_enable_ext(command_buffer, stencil_test_enable::Bool, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_stencil_test_enable_ext-Tuple{Any, Bool}","page":"API","title":"Vulkan._cmd_set_stencil_test_enable_ext","text":"_cmd_set_stencil_test_enable_ext(command_buffer, stencil_test_enable::Bool)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nstencil_test_enable::Bool\n\nAPI documentation\n\n_cmd_set_stencil_test_enable_ext(command_buffer, stencil_test_enable::Bool)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_stencil_write_mask-Tuple{Any, StencilFaceFlag, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_stencil_write_mask","text":"_cmd_set_stencil_write_mask(command_buffer, face_mask::StencilFaceFlag, write_mask::Integer, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nface_mask::StencilFaceFlag\nwrite_mask::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_stencil_write_mask(command_buffer, face_mask::StencilFaceFlag, write_mask::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_stencil_write_mask-Tuple{Any, StencilFaceFlag, Integer}","page":"API","title":"Vulkan._cmd_set_stencil_write_mask","text":"_cmd_set_stencil_write_mask(command_buffer, face_mask::StencilFaceFlag, write_mask::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nface_mask::StencilFaceFlag\nwrite_mask::Integer\n\nAPI documentation\n\n_cmd_set_stencil_write_mask(command_buffer, face_mask::StencilFaceFlag, write_mask::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_vertex_input_ext-Tuple{Any, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_vertex_input_ext","text":"_cmd_set_vertex_input_ext(command_buffer, vertex_binding_descriptions::AbstractArray{_VertexInputBindingDescription2EXT}, vertex_attribute_descriptions::AbstractArray{_VertexInputAttributeDescription2EXT}, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_vertex_input_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nvertex_binding_descriptions::AbstractArray{_VertexInputBindingDescription2EXT}\nvertex_attribute_descriptions::AbstractArray{_VertexInputAttributeDescription2EXT}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_vertex_input_ext(command_buffer, vertex_binding_descriptions::AbstractArray, vertex_attribute_descriptions::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_vertex_input_ext-Tuple{Any, AbstractArray, AbstractArray}","page":"API","title":"Vulkan._cmd_set_vertex_input_ext","text":"_cmd_set_vertex_input_ext(command_buffer, vertex_binding_descriptions::AbstractArray{_VertexInputBindingDescription2EXT}, vertex_attribute_descriptions::AbstractArray{_VertexInputAttributeDescription2EXT})::Cvoid\n\nExtension: VK_EXT_vertex_input_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nvertex_binding_descriptions::AbstractArray{_VertexInputBindingDescription2EXT}\nvertex_attribute_descriptions::AbstractArray{_VertexInputAttributeDescription2EXT}\n\nAPI documentation\n\n_cmd_set_vertex_input_ext(command_buffer, vertex_binding_descriptions::AbstractArray, vertex_attribute_descriptions::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_viewport-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_viewport","text":"_cmd_set_viewport(command_buffer, viewports::AbstractArray{_Viewport}, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nviewports::AbstractArray{_Viewport}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_viewport(command_buffer, viewports::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_viewport-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._cmd_set_viewport","text":"_cmd_set_viewport(command_buffer, viewports::AbstractArray{_Viewport})::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nviewports::AbstractArray{_Viewport}\n\nAPI documentation\n\n_cmd_set_viewport(command_buffer, viewports::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_viewport_shading_rate_palette_nv-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_viewport_shading_rate_palette_nv","text":"_cmd_set_viewport_shading_rate_palette_nv(command_buffer, shading_rate_palettes::AbstractArray{_ShadingRatePaletteNV}, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_NV_shading_rate_image\n\nArguments:\n\ncommand_buffer (externsync)\nshading_rate_palettes::AbstractArray{_ShadingRatePaletteNV}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_viewport_shading_rate_palette_nv(command_buffer, shading_rate_palettes::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_viewport_shading_rate_palette_nv-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._cmd_set_viewport_shading_rate_palette_nv","text":"_cmd_set_viewport_shading_rate_palette_nv(command_buffer, shading_rate_palettes::AbstractArray{_ShadingRatePaletteNV})::Cvoid\n\nExtension: VK_NV_shading_rate_image\n\nArguments:\n\ncommand_buffer (externsync)\nshading_rate_palettes::AbstractArray{_ShadingRatePaletteNV}\n\nAPI documentation\n\n_cmd_set_viewport_shading_rate_palette_nv(command_buffer, shading_rate_palettes::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_viewport_w_scaling_nv-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_viewport_w_scaling_nv","text":"_cmd_set_viewport_w_scaling_nv(command_buffer, viewport_w_scalings::AbstractArray{_ViewportWScalingNV}, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_NV_clip_space_w_scaling\n\nArguments:\n\ncommand_buffer (externsync)\nviewport_w_scalings::AbstractArray{_ViewportWScalingNV}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_viewport_w_scaling_nv(command_buffer, viewport_w_scalings::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_viewport_w_scaling_nv-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._cmd_set_viewport_w_scaling_nv","text":"_cmd_set_viewport_w_scaling_nv(command_buffer, viewport_w_scalings::AbstractArray{_ViewportWScalingNV})::Cvoid\n\nExtension: VK_NV_clip_space_w_scaling\n\nArguments:\n\ncommand_buffer (externsync)\nviewport_w_scalings::AbstractArray{_ViewportWScalingNV}\n\nAPI documentation\n\n_cmd_set_viewport_w_scaling_nv(command_buffer, viewport_w_scalings::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_viewport_with_count_ext-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_set_viewport_with_count_ext","text":"_cmd_set_viewport_with_count_ext(command_buffer, viewports::AbstractArray{_Viewport}, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nviewports::AbstractArray{_Viewport}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_set_viewport_with_count_ext(command_buffer, viewports::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_set_viewport_with_count_ext-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._cmd_set_viewport_with_count_ext","text":"_cmd_set_viewport_with_count_ext(command_buffer, viewports::AbstractArray{_Viewport})::Cvoid\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nviewports::AbstractArray{_Viewport}\n\nAPI documentation\n\n_cmd_set_viewport_with_count_ext(command_buffer, viewports::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_trace_rays_indirect_khr-Tuple{Any, _StridedDeviceAddressRegionKHR, _StridedDeviceAddressRegionKHR, _StridedDeviceAddressRegionKHR, _StridedDeviceAddressRegionKHR, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_trace_rays_indirect_khr","text":"_cmd_trace_rays_indirect_khr(command_buffer, raygen_shader_binding_table::_StridedDeviceAddressRegionKHR, miss_shader_binding_table::_StridedDeviceAddressRegionKHR, hit_shader_binding_table::_StridedDeviceAddressRegionKHR, callable_shader_binding_table::_StridedDeviceAddressRegionKHR, indirect_device_address::Integer, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\ncommand_buffer (externsync)\nraygen_shader_binding_table::_StridedDeviceAddressRegionKHR\nmiss_shader_binding_table::_StridedDeviceAddressRegionKHR\nhit_shader_binding_table::_StridedDeviceAddressRegionKHR\ncallable_shader_binding_table::_StridedDeviceAddressRegionKHR\nindirect_device_address::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_trace_rays_indirect_khr(command_buffer, raygen_shader_binding_table::_StridedDeviceAddressRegionKHR, miss_shader_binding_table::_StridedDeviceAddressRegionKHR, hit_shader_binding_table::_StridedDeviceAddressRegionKHR, callable_shader_binding_table::_StridedDeviceAddressRegionKHR, indirect_device_address::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_trace_rays_indirect_khr-Tuple{Any, _StridedDeviceAddressRegionKHR, _StridedDeviceAddressRegionKHR, _StridedDeviceAddressRegionKHR, _StridedDeviceAddressRegionKHR, Integer}","page":"API","title":"Vulkan._cmd_trace_rays_indirect_khr","text":"_cmd_trace_rays_indirect_khr(command_buffer, raygen_shader_binding_table::_StridedDeviceAddressRegionKHR, miss_shader_binding_table::_StridedDeviceAddressRegionKHR, hit_shader_binding_table::_StridedDeviceAddressRegionKHR, callable_shader_binding_table::_StridedDeviceAddressRegionKHR, indirect_device_address::Integer)::Cvoid\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\ncommand_buffer (externsync)\nraygen_shader_binding_table::_StridedDeviceAddressRegionKHR\nmiss_shader_binding_table::_StridedDeviceAddressRegionKHR\nhit_shader_binding_table::_StridedDeviceAddressRegionKHR\ncallable_shader_binding_table::_StridedDeviceAddressRegionKHR\nindirect_device_address::Integer\n\nAPI documentation\n\n_cmd_trace_rays_indirect_khr(command_buffer, raygen_shader_binding_table::_StridedDeviceAddressRegionKHR, miss_shader_binding_table::_StridedDeviceAddressRegionKHR, hit_shader_binding_table::_StridedDeviceAddressRegionKHR, callable_shader_binding_table::_StridedDeviceAddressRegionKHR, indirect_device_address::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_trace_rays_khr-Tuple{Any, _StridedDeviceAddressRegionKHR, _StridedDeviceAddressRegionKHR, _StridedDeviceAddressRegionKHR, _StridedDeviceAddressRegionKHR, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_trace_rays_khr","text":"_cmd_trace_rays_khr(command_buffer, raygen_shader_binding_table::_StridedDeviceAddressRegionKHR, miss_shader_binding_table::_StridedDeviceAddressRegionKHR, hit_shader_binding_table::_StridedDeviceAddressRegionKHR, callable_shader_binding_table::_StridedDeviceAddressRegionKHR, width::Integer, height::Integer, depth::Integer, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\ncommand_buffer (externsync)\nraygen_shader_binding_table::_StridedDeviceAddressRegionKHR\nmiss_shader_binding_table::_StridedDeviceAddressRegionKHR\nhit_shader_binding_table::_StridedDeviceAddressRegionKHR\ncallable_shader_binding_table::_StridedDeviceAddressRegionKHR\nwidth::Integer\nheight::Integer\ndepth::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_trace_rays_khr(command_buffer, raygen_shader_binding_table::_StridedDeviceAddressRegionKHR, miss_shader_binding_table::_StridedDeviceAddressRegionKHR, hit_shader_binding_table::_StridedDeviceAddressRegionKHR, callable_shader_binding_table::_StridedDeviceAddressRegionKHR, width::Integer, height::Integer, depth::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_trace_rays_khr-Tuple{Any, _StridedDeviceAddressRegionKHR, _StridedDeviceAddressRegionKHR, _StridedDeviceAddressRegionKHR, _StridedDeviceAddressRegionKHR, Integer, Integer, Integer}","page":"API","title":"Vulkan._cmd_trace_rays_khr","text":"_cmd_trace_rays_khr(command_buffer, raygen_shader_binding_table::_StridedDeviceAddressRegionKHR, miss_shader_binding_table::_StridedDeviceAddressRegionKHR, hit_shader_binding_table::_StridedDeviceAddressRegionKHR, callable_shader_binding_table::_StridedDeviceAddressRegionKHR, width::Integer, height::Integer, depth::Integer)::Cvoid\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\ncommand_buffer (externsync)\nraygen_shader_binding_table::_StridedDeviceAddressRegionKHR\nmiss_shader_binding_table::_StridedDeviceAddressRegionKHR\nhit_shader_binding_table::_StridedDeviceAddressRegionKHR\ncallable_shader_binding_table::_StridedDeviceAddressRegionKHR\nwidth::Integer\nheight::Integer\ndepth::Integer\n\nAPI documentation\n\n_cmd_trace_rays_khr(command_buffer, raygen_shader_binding_table::_StridedDeviceAddressRegionKHR, miss_shader_binding_table::_StridedDeviceAddressRegionKHR, hit_shader_binding_table::_StridedDeviceAddressRegionKHR, callable_shader_binding_table::_StridedDeviceAddressRegionKHR, width::Integer, height::Integer, depth::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_trace_rays_nv-Tuple{Any, Any, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_trace_rays_nv","text":"_cmd_trace_rays_nv(command_buffer, raygen_shader_binding_table_buffer, raygen_shader_binding_offset::Integer, miss_shader_binding_offset::Integer, miss_shader_binding_stride::Integer, hit_shader_binding_offset::Integer, hit_shader_binding_stride::Integer, callable_shader_binding_offset::Integer, callable_shader_binding_stride::Integer, width::Integer, height::Integer, depth::Integer, fptr::FunctionPtr; miss_shader_binding_table_buffer = C_NULL, hit_shader_binding_table_buffer = C_NULL, callable_shader_binding_table_buffer = C_NULL)::Cvoid\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ncommand_buffer (externsync)\nraygen_shader_binding_table_buffer\nraygen_shader_binding_offset::Integer\nmiss_shader_binding_offset::Integer\nmiss_shader_binding_stride::Integer\nhit_shader_binding_offset::Integer\nhit_shader_binding_stride::Integer\ncallable_shader_binding_offset::Integer\ncallable_shader_binding_stride::Integer\nwidth::Integer\nheight::Integer\ndepth::Integer\nfptr::FunctionPtr\nmiss_shader_binding_table_buffer: defaults to C_NULL\nhit_shader_binding_table_buffer: defaults to C_NULL\ncallable_shader_binding_table_buffer: defaults to C_NULL\n\nAPI documentation\n\n_cmd_trace_rays_nv(command_buffer, raygen_shader_binding_table_buffer, raygen_shader_binding_offset::Integer, miss_shader_binding_offset::Integer, miss_shader_binding_stride::Integer, hit_shader_binding_offset::Integer, hit_shader_binding_stride::Integer, callable_shader_binding_offset::Integer, callable_shader_binding_stride::Integer, width::Integer, height::Integer, depth::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}; miss_shader_binding_table_buffer, hit_shader_binding_table_buffer, callable_shader_binding_table_buffer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_trace_rays_nv-Tuple{Any, Any, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer}","page":"API","title":"Vulkan._cmd_trace_rays_nv","text":"_cmd_trace_rays_nv(command_buffer, raygen_shader_binding_table_buffer, raygen_shader_binding_offset::Integer, miss_shader_binding_offset::Integer, miss_shader_binding_stride::Integer, hit_shader_binding_offset::Integer, hit_shader_binding_stride::Integer, callable_shader_binding_offset::Integer, callable_shader_binding_stride::Integer, width::Integer, height::Integer, depth::Integer; miss_shader_binding_table_buffer = C_NULL, hit_shader_binding_table_buffer = C_NULL, callable_shader_binding_table_buffer = C_NULL)::Cvoid\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ncommand_buffer (externsync)\nraygen_shader_binding_table_buffer\nraygen_shader_binding_offset::Integer\nmiss_shader_binding_offset::Integer\nmiss_shader_binding_stride::Integer\nhit_shader_binding_offset::Integer\nhit_shader_binding_stride::Integer\ncallable_shader_binding_offset::Integer\ncallable_shader_binding_stride::Integer\nwidth::Integer\nheight::Integer\ndepth::Integer\nmiss_shader_binding_table_buffer: defaults to C_NULL\nhit_shader_binding_table_buffer: defaults to C_NULL\ncallable_shader_binding_table_buffer: defaults to C_NULL\n\nAPI documentation\n\n_cmd_trace_rays_nv(command_buffer, raygen_shader_binding_table_buffer, raygen_shader_binding_offset::Integer, miss_shader_binding_offset::Integer, miss_shader_binding_stride::Integer, hit_shader_binding_offset::Integer, hit_shader_binding_stride::Integer, callable_shader_binding_offset::Integer, callable_shader_binding_stride::Integer, width::Integer, height::Integer, depth::Integer; miss_shader_binding_table_buffer, hit_shader_binding_table_buffer, callable_shader_binding_table_buffer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_update_buffer-Tuple{Any, Any, Integer, Integer, Ptr{Nothing}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_update_buffer","text":"_cmd_update_buffer(command_buffer, dst_buffer, dst_offset::Integer, data_size::Integer, data::Ptr{Cvoid}, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\ndst_buffer\ndst_offset::Integer\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_update_buffer(command_buffer, dst_buffer, dst_offset::Integer, data_size::Integer, data::Ptr{Nothing}, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_update_buffer-Tuple{Any, Any, Integer, Integer, Ptr{Nothing}}","page":"API","title":"Vulkan._cmd_update_buffer","text":"_cmd_update_buffer(command_buffer, dst_buffer, dst_offset::Integer, data_size::Integer, data::Ptr{Cvoid})::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\ndst_buffer\ndst_offset::Integer\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\n\nAPI documentation\n\n_cmd_update_buffer(command_buffer, dst_buffer, dst_offset::Integer, data_size::Integer, data::Ptr{Nothing})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_wait_events-Tuple{Any, AbstractArray, AbstractArray, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_wait_events","text":"_cmd_wait_events(command_buffer, events::AbstractArray{Event}, memory_barriers::AbstractArray{_MemoryBarrier}, buffer_memory_barriers::AbstractArray{_BufferMemoryBarrier}, image_memory_barriers::AbstractArray{_ImageMemoryBarrier}, fptr::FunctionPtr; src_stage_mask = 0, dst_stage_mask = 0)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nevents::AbstractArray{Event}\nmemory_barriers::AbstractArray{_MemoryBarrier}\nbuffer_memory_barriers::AbstractArray{_BufferMemoryBarrier}\nimage_memory_barriers::AbstractArray{_ImageMemoryBarrier}\nfptr::FunctionPtr\nsrc_stage_mask: defaults to 0\ndst_stage_mask: defaults to 0\n\nAPI documentation\n\n_cmd_wait_events(command_buffer, events::AbstractArray, memory_barriers::AbstractArray, buffer_memory_barriers::AbstractArray, image_memory_barriers::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}; src_stage_mask, dst_stage_mask)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_wait_events-Tuple{Any, AbstractArray, AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan._cmd_wait_events","text":"_cmd_wait_events(command_buffer, events::AbstractArray{Event}, memory_barriers::AbstractArray{_MemoryBarrier}, buffer_memory_barriers::AbstractArray{_BufferMemoryBarrier}, image_memory_barriers::AbstractArray{_ImageMemoryBarrier}; src_stage_mask = 0, dst_stage_mask = 0)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\nevents::AbstractArray{Event}\nmemory_barriers::AbstractArray{_MemoryBarrier}\nbuffer_memory_barriers::AbstractArray{_BufferMemoryBarrier}\nimage_memory_barriers::AbstractArray{_ImageMemoryBarrier}\nsrc_stage_mask: defaults to 0\ndst_stage_mask: defaults to 0\n\nAPI documentation\n\n_cmd_wait_events(command_buffer, events::AbstractArray, memory_barriers::AbstractArray, buffer_memory_barriers::AbstractArray, image_memory_barriers::AbstractArray; src_stage_mask, dst_stage_mask)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_wait_events_2_khr-Tuple{Any, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_wait_events_2_khr","text":"_cmd_wait_events_2_khr(command_buffer, events::AbstractArray{Event}, dependency_infos::AbstractArray{_DependencyInfoKHR}, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncommand_buffer (externsync)\nevents::AbstractArray{Event}\ndependency_infos::AbstractArray{_DependencyInfoKHR}\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_wait_events_2_khr(command_buffer, events::AbstractArray, dependency_infos::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_wait_events_2_khr-Tuple{Any, AbstractArray, AbstractArray}","page":"API","title":"Vulkan._cmd_wait_events_2_khr","text":"_cmd_wait_events_2_khr(command_buffer, events::AbstractArray{Event}, dependency_infos::AbstractArray{_DependencyInfoKHR})::Cvoid\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncommand_buffer (externsync)\nevents::AbstractArray{Event}\ndependency_infos::AbstractArray{_DependencyInfoKHR}\n\nAPI documentation\n\n_cmd_wait_events_2_khr(command_buffer, events::AbstractArray, dependency_infos::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_write_acceleration_structures_properties_khr-Tuple{Any, AbstractArray, QueryType, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_write_acceleration_structures_properties_khr","text":"_cmd_write_acceleration_structures_properties_khr(command_buffer, acceleration_structures::AbstractArray{AccelerationStructureKHR}, query_type::QueryType, query_pool, first_query::Integer, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ncommand_buffer (externsync)\nacceleration_structures::AbstractArray{AccelerationStructureKHR}\nquery_type::QueryType\nquery_pool\nfirst_query::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_write_acceleration_structures_properties_khr(command_buffer, acceleration_structures::AbstractArray, query_type::QueryType, query_pool, first_query::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_write_acceleration_structures_properties_khr-Tuple{Any, AbstractArray, QueryType, Any, Integer}","page":"API","title":"Vulkan._cmd_write_acceleration_structures_properties_khr","text":"_cmd_write_acceleration_structures_properties_khr(command_buffer, acceleration_structures::AbstractArray{AccelerationStructureKHR}, query_type::QueryType, query_pool, first_query::Integer)::Cvoid\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ncommand_buffer (externsync)\nacceleration_structures::AbstractArray{AccelerationStructureKHR}\nquery_type::QueryType\nquery_pool\nfirst_query::Integer\n\nAPI documentation\n\n_cmd_write_acceleration_structures_properties_khr(command_buffer, acceleration_structures::AbstractArray, query_type::QueryType, query_pool, first_query::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_write_acceleration_structures_properties_nv-Tuple{Any, AbstractArray, QueryType, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_write_acceleration_structures_properties_nv","text":"_cmd_write_acceleration_structures_properties_nv(command_buffer, acceleration_structures::AbstractArray{AccelerationStructureNV}, query_type::QueryType, query_pool, first_query::Integer, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ncommand_buffer (externsync)\nacceleration_structures::AbstractArray{AccelerationStructureNV}\nquery_type::QueryType\nquery_pool\nfirst_query::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_write_acceleration_structures_properties_nv(command_buffer, acceleration_structures::AbstractArray, query_type::QueryType, query_pool, first_query::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_write_acceleration_structures_properties_nv-Tuple{Any, AbstractArray, QueryType, Any, Integer}","page":"API","title":"Vulkan._cmd_write_acceleration_structures_properties_nv","text":"_cmd_write_acceleration_structures_properties_nv(command_buffer, acceleration_structures::AbstractArray{AccelerationStructureNV}, query_type::QueryType, query_pool, first_query::Integer)::Cvoid\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ncommand_buffer (externsync)\nacceleration_structures::AbstractArray{AccelerationStructureNV}\nquery_type::QueryType\nquery_pool\nfirst_query::Integer\n\nAPI documentation\n\n_cmd_write_acceleration_structures_properties_nv(command_buffer, acceleration_structures::AbstractArray, query_type::QueryType, query_pool, first_query::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_write_buffer_marker_2_amd-Tuple{Any, Integer, Any, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_write_buffer_marker_2_amd","text":"_cmd_write_buffer_marker_2_amd(command_buffer, stage::Integer, dst_buffer, dst_offset::Integer, marker::Integer, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncommand_buffer (externsync)\nstage::Integer\ndst_buffer\ndst_offset::Integer\nmarker::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_write_buffer_marker_2_amd(command_buffer, stage::Integer, dst_buffer, dst_offset::Integer, marker::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_write_buffer_marker_2_amd-Tuple{Any, Integer, Any, Integer, Integer}","page":"API","title":"Vulkan._cmd_write_buffer_marker_2_amd","text":"_cmd_write_buffer_marker_2_amd(command_buffer, stage::Integer, dst_buffer, dst_offset::Integer, marker::Integer)::Cvoid\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncommand_buffer (externsync)\nstage::Integer\ndst_buffer\ndst_offset::Integer\nmarker::Integer\n\nAPI documentation\n\n_cmd_write_buffer_marker_2_amd(command_buffer, stage::Integer, dst_buffer, dst_offset::Integer, marker::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_write_buffer_marker_amd-Tuple{Any, PipelineStageFlag, Any, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_write_buffer_marker_amd","text":"_cmd_write_buffer_marker_amd(command_buffer, pipeline_stage::PipelineStageFlag, dst_buffer, dst_offset::Integer, marker::Integer, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_AMD_buffer_marker\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_stage::PipelineStageFlag\ndst_buffer\ndst_offset::Integer\nmarker::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_write_buffer_marker_amd(command_buffer, pipeline_stage::PipelineStageFlag, dst_buffer, dst_offset::Integer, marker::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_write_buffer_marker_amd-Tuple{Any, PipelineStageFlag, Any, Integer, Integer}","page":"API","title":"Vulkan._cmd_write_buffer_marker_amd","text":"_cmd_write_buffer_marker_amd(command_buffer, pipeline_stage::PipelineStageFlag, dst_buffer, dst_offset::Integer, marker::Integer)::Cvoid\n\nExtension: VK_AMD_buffer_marker\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_stage::PipelineStageFlag\ndst_buffer\ndst_offset::Integer\nmarker::Integer\n\nAPI documentation\n\n_cmd_write_buffer_marker_amd(command_buffer, pipeline_stage::PipelineStageFlag, dst_buffer, dst_offset::Integer, marker::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_write_timestamp-Tuple{Any, PipelineStageFlag, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_write_timestamp","text":"_cmd_write_timestamp(command_buffer, pipeline_stage::PipelineStageFlag, query_pool, query::Integer, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_stage::PipelineStageFlag\nquery_pool\nquery::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_write_timestamp(command_buffer, pipeline_stage::PipelineStageFlag, query_pool, query::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_write_timestamp-Tuple{Any, PipelineStageFlag, Any, Integer}","page":"API","title":"Vulkan._cmd_write_timestamp","text":"_cmd_write_timestamp(command_buffer, pipeline_stage::PipelineStageFlag, query_pool, query::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_stage::PipelineStageFlag\nquery_pool\nquery::Integer\n\nAPI documentation\n\n_cmd_write_timestamp(command_buffer, pipeline_stage::PipelineStageFlag, query_pool, query::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_write_timestamp_2_khr-Tuple{Any, Integer, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._cmd_write_timestamp_2_khr","text":"_cmd_write_timestamp_2_khr(command_buffer, stage::Integer, query_pool, query::Integer, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncommand_buffer (externsync)\nstage::Integer\nquery_pool\nquery::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_cmd_write_timestamp_2_khr(command_buffer, stage::Integer, query_pool, query::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._cmd_write_timestamp_2_khr-Tuple{Any, Integer, Any, Integer}","page":"API","title":"Vulkan._cmd_write_timestamp_2_khr","text":"_cmd_write_timestamp_2_khr(command_buffer, stage::Integer, query_pool, query::Integer)::Cvoid\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncommand_buffer (externsync)\nstage::Integer\nquery_pool\nquery::Integer\n\nAPI documentation\n\n_cmd_write_timestamp_2_khr(command_buffer, stage::Integer, query_pool, query::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._compile_deferred_nv-Tuple{Any, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._compile_deferred_nv","text":"_compile_deferred_nv(device, pipeline, shader::Integer, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_NV_ray_tracing\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\npipeline\nshader::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_compile_deferred_nv(device, pipeline, shader::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._compile_deferred_nv-Tuple{Any, Any, Integer}","page":"API","title":"Vulkan._compile_deferred_nv","text":"_compile_deferred_nv(device, pipeline, shader::Integer)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_NV_ray_tracing\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\npipeline\nshader::Integer\n\nAPI documentation\n\n_compile_deferred_nv(device, pipeline, shader::Integer) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._copy_acceleration_structure_khr-Tuple{Any, _CopyAccelerationStructureInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._copy_acceleration_structure_khr","text":"_copy_acceleration_structure_khr(device, info::_CopyAccelerationStructureInfoKHR, fptr::FunctionPtr; deferred_operation = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_acceleration_structure\n\nReturn codes:\n\nSuccess:\nSUCCESS\nOPERATION_DEFERRED_KHR\nOPERATION_NOT_DEFERRED_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ninfo::_CopyAccelerationStructureInfoKHR\nfptr::FunctionPtr\ndeferred_operation: defaults to C_NULL\n\nAPI documentation\n\n_copy_acceleration_structure_khr(device, info::_CopyAccelerationStructureInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}; deferred_operation) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._copy_acceleration_structure_khr-Tuple{Any, _CopyAccelerationStructureInfoKHR}","page":"API","title":"Vulkan._copy_acceleration_structure_khr","text":"_copy_acceleration_structure_khr(device, info::_CopyAccelerationStructureInfoKHR; deferred_operation = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_acceleration_structure\n\nReturn codes:\n\nSuccess:\nSUCCESS\nOPERATION_DEFERRED_KHR\nOPERATION_NOT_DEFERRED_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ninfo::_CopyAccelerationStructureInfoKHR\ndeferred_operation: defaults to C_NULL\n\nAPI documentation\n\n_copy_acceleration_structure_khr(device, info::_CopyAccelerationStructureInfoKHR; deferred_operation) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._copy_acceleration_structure_to_memory_khr-Tuple{Any, _CopyAccelerationStructureToMemoryInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._copy_acceleration_structure_to_memory_khr","text":"_copy_acceleration_structure_to_memory_khr(device, info::_CopyAccelerationStructureToMemoryInfoKHR, fptr::FunctionPtr; deferred_operation = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_acceleration_structure\n\nReturn codes:\n\nSuccess:\nSUCCESS\nOPERATION_DEFERRED_KHR\nOPERATION_NOT_DEFERRED_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ninfo::_CopyAccelerationStructureToMemoryInfoKHR\nfptr::FunctionPtr\ndeferred_operation: defaults to C_NULL\n\nAPI documentation\n\n_copy_acceleration_structure_to_memory_khr(device, info::_CopyAccelerationStructureToMemoryInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}; deferred_operation) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._copy_acceleration_structure_to_memory_khr-Tuple{Any, _CopyAccelerationStructureToMemoryInfoKHR}","page":"API","title":"Vulkan._copy_acceleration_structure_to_memory_khr","text":"_copy_acceleration_structure_to_memory_khr(device, info::_CopyAccelerationStructureToMemoryInfoKHR; deferred_operation = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_acceleration_structure\n\nReturn codes:\n\nSuccess:\nSUCCESS\nOPERATION_DEFERRED_KHR\nOPERATION_NOT_DEFERRED_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ninfo::_CopyAccelerationStructureToMemoryInfoKHR\ndeferred_operation: defaults to C_NULL\n\nAPI documentation\n\n_copy_acceleration_structure_to_memory_khr(device, info::_CopyAccelerationStructureToMemoryInfoKHR; deferred_operation) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._copy_memory_to_acceleration_structure_khr-Tuple{Any, _CopyMemoryToAccelerationStructureInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._copy_memory_to_acceleration_structure_khr","text":"_copy_memory_to_acceleration_structure_khr(device, info::_CopyMemoryToAccelerationStructureInfoKHR, fptr::FunctionPtr; deferred_operation = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_acceleration_structure\n\nReturn codes:\n\nSuccess:\nSUCCESS\nOPERATION_DEFERRED_KHR\nOPERATION_NOT_DEFERRED_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ninfo::_CopyMemoryToAccelerationStructureInfoKHR\nfptr::FunctionPtr\ndeferred_operation: defaults to C_NULL\n\nAPI documentation\n\n_copy_memory_to_acceleration_structure_khr(device, info::_CopyMemoryToAccelerationStructureInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}; deferred_operation) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._copy_memory_to_acceleration_structure_khr-Tuple{Any, _CopyMemoryToAccelerationStructureInfoKHR}","page":"API","title":"Vulkan._copy_memory_to_acceleration_structure_khr","text":"_copy_memory_to_acceleration_structure_khr(device, info::_CopyMemoryToAccelerationStructureInfoKHR; deferred_operation = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_acceleration_structure\n\nReturn codes:\n\nSuccess:\nSUCCESS\nOPERATION_DEFERRED_KHR\nOPERATION_NOT_DEFERRED_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ninfo::_CopyMemoryToAccelerationStructureInfoKHR\ndeferred_operation: defaults to C_NULL\n\nAPI documentation\n\n_copy_memory_to_acceleration_structure_khr(device, info::_CopyMemoryToAccelerationStructureInfoKHR; deferred_operation) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_acceleration_structure_khr-Tuple{Any, _AccelerationStructureCreateInfoKHR, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_acceleration_structure_khr","text":"_create_acceleration_structure_khr(device, create_info::_AccelerationStructureCreateInfoKHR, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{AccelerationStructureKHR, VulkanError}\n\nExtension: VK_KHR_acceleration_structure\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR\n\nArguments:\n\ndevice\ncreate_info::_AccelerationStructureCreateInfoKHR\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_acceleration_structure_khr(device, create_info::_AccelerationStructureCreateInfoKHR, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{AccelerationStructureKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_acceleration_structure_khr-Tuple{Any, _AccelerationStructureCreateInfoKHR}","page":"API","title":"Vulkan._create_acceleration_structure_khr","text":"_create_acceleration_structure_khr(device, create_info::_AccelerationStructureCreateInfoKHR; allocator = C_NULL)::ResultTypes.Result{AccelerationStructureKHR, VulkanError}\n\nExtension: VK_KHR_acceleration_structure\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR\n\nArguments:\n\ndevice\ncreate_info::_AccelerationStructureCreateInfoKHR\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_acceleration_structure_khr(device, create_info::_AccelerationStructureCreateInfoKHR; allocator) -> ResultTypes.Result{AccelerationStructureKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_acceleration_structure_nv-Tuple{Any, _AccelerationStructureCreateInfoNV, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_acceleration_structure_nv","text":"_create_acceleration_structure_nv(device, create_info::_AccelerationStructureCreateInfoNV, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{AccelerationStructureNV, VulkanError}\n\nExtension: VK_NV_ray_tracing\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_AccelerationStructureCreateInfoNV\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_acceleration_structure_nv(device, create_info::_AccelerationStructureCreateInfoNV, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{AccelerationStructureNV, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_acceleration_structure_nv-Tuple{Any, _AccelerationStructureCreateInfoNV}","page":"API","title":"Vulkan._create_acceleration_structure_nv","text":"_create_acceleration_structure_nv(device, create_info::_AccelerationStructureCreateInfoNV; allocator = C_NULL)::ResultTypes.Result{AccelerationStructureNV, VulkanError}\n\nExtension: VK_NV_ray_tracing\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_AccelerationStructureCreateInfoNV\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_acceleration_structure_nv(device, create_info::_AccelerationStructureCreateInfoNV; allocator) -> ResultTypes.Result{AccelerationStructureNV, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_buffer-Tuple{Any, _BufferCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_buffer","text":"_create_buffer(device, create_info::_BufferCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{Buffer, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR\n\nArguments:\n\ndevice\ncreate_info::_BufferCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_buffer(device, create_info::_BufferCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{Buffer, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_buffer-Tuple{Any, _BufferCreateInfo}","page":"API","title":"Vulkan._create_buffer","text":"_create_buffer(device, create_info::_BufferCreateInfo; allocator = C_NULL)::ResultTypes.Result{Buffer, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR\n\nArguments:\n\ndevice\ncreate_info::_BufferCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_buffer(device, create_info::_BufferCreateInfo; allocator) -> ResultTypes.Result{Buffer, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_buffer_view-Tuple{Any, _BufferViewCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_buffer_view","text":"_create_buffer_view(device, create_info::_BufferViewCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{BufferView, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_BufferViewCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_buffer_view(device, create_info::_BufferViewCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{BufferView, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_buffer_view-Tuple{Any, _BufferViewCreateInfo}","page":"API","title":"Vulkan._create_buffer_view","text":"_create_buffer_view(device, create_info::_BufferViewCreateInfo; allocator = C_NULL)::ResultTypes.Result{BufferView, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_BufferViewCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_buffer_view(device, create_info::_BufferViewCreateInfo; allocator) -> ResultTypes.Result{BufferView, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_command_pool-Tuple{Any, _CommandPoolCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_command_pool","text":"_create_command_pool(device, create_info::_CommandPoolCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{CommandPool, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_CommandPoolCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_command_pool(device, create_info::_CommandPoolCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{CommandPool, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_command_pool-Tuple{Any, _CommandPoolCreateInfo}","page":"API","title":"Vulkan._create_command_pool","text":"_create_command_pool(device, create_info::_CommandPoolCreateInfo; allocator = C_NULL)::ResultTypes.Result{CommandPool, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_CommandPoolCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_command_pool(device, create_info::_CommandPoolCreateInfo; allocator) -> ResultTypes.Result{CommandPool, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_compute_pipelines-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_compute_pipelines","text":"_create_compute_pipelines(device, create_infos::AbstractArray{_ComputePipelineCreateInfo}, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; pipeline_cache = C_NULL, allocator = C_NULL)::ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nPIPELINE_COMPILE_REQUIRED_EXT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_SHADER_NV\n\nArguments:\n\ndevice\ncreate_infos::AbstractArray{_ComputePipelineCreateInfo}\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\npipeline_cache: defaults to C_NULL\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_compute_pipelines(device, create_infos::AbstractArray, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; pipeline_cache, allocator) -> ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_compute_pipelines-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._create_compute_pipelines","text":"_create_compute_pipelines(device, create_infos::AbstractArray{_ComputePipelineCreateInfo}; pipeline_cache = C_NULL, allocator = C_NULL)::ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nPIPELINE_COMPILE_REQUIRED_EXT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_SHADER_NV\n\nArguments:\n\ndevice\ncreate_infos::AbstractArray{_ComputePipelineCreateInfo}\npipeline_cache: defaults to C_NULL\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_compute_pipelines(device, create_infos::AbstractArray; pipeline_cache, allocator) -> ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_debug_report_callback_ext-Tuple{Any, _DebugReportCallbackCreateInfoEXT, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_debug_report_callback_ext","text":"_create_debug_report_callback_ext(instance, create_info::_DebugReportCallbackCreateInfoEXT, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{DebugReportCallbackEXT, VulkanError}\n\nExtension: VK_EXT_debug_report\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ninstance\ncreate_info::_DebugReportCallbackCreateInfoEXT\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_debug_report_callback_ext(instance, create_info::_DebugReportCallbackCreateInfoEXT, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{DebugReportCallbackEXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_debug_report_callback_ext-Tuple{Any, _DebugReportCallbackCreateInfoEXT}","page":"API","title":"Vulkan._create_debug_report_callback_ext","text":"_create_debug_report_callback_ext(instance, create_info::_DebugReportCallbackCreateInfoEXT; allocator = C_NULL)::ResultTypes.Result{DebugReportCallbackEXT, VulkanError}\n\nExtension: VK_EXT_debug_report\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ninstance\ncreate_info::_DebugReportCallbackCreateInfoEXT\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_debug_report_callback_ext(instance, create_info::_DebugReportCallbackCreateInfoEXT; allocator) -> ResultTypes.Result{DebugReportCallbackEXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_debug_utils_messenger_ext-Tuple{Any, _DebugUtilsMessengerCreateInfoEXT, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_debug_utils_messenger_ext","text":"_create_debug_utils_messenger_ext(instance, create_info::_DebugUtilsMessengerCreateInfoEXT, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{DebugUtilsMessengerEXT, VulkanError}\n\nExtension: VK_EXT_debug_utils\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ninstance\ncreate_info::_DebugUtilsMessengerCreateInfoEXT\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_debug_utils_messenger_ext(instance, create_info::_DebugUtilsMessengerCreateInfoEXT, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{DebugUtilsMessengerEXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_debug_utils_messenger_ext-Tuple{Any, _DebugUtilsMessengerCreateInfoEXT}","page":"API","title":"Vulkan._create_debug_utils_messenger_ext","text":"_create_debug_utils_messenger_ext(instance, create_info::_DebugUtilsMessengerCreateInfoEXT; allocator = C_NULL)::ResultTypes.Result{DebugUtilsMessengerEXT, VulkanError}\n\nExtension: VK_EXT_debug_utils\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ninstance\ncreate_info::_DebugUtilsMessengerCreateInfoEXT\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_debug_utils_messenger_ext(instance, create_info::_DebugUtilsMessengerCreateInfoEXT; allocator) -> ResultTypes.Result{DebugUtilsMessengerEXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_deferred_operation_khr-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_deferred_operation_khr","text":"_create_deferred_operation_khr(device, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{DeferredOperationKHR, VulkanError}\n\nExtension: VK_KHR_deferred_host_operations\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_deferred_operation_khr(device, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{DeferredOperationKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_deferred_operation_khr-Tuple{Any}","page":"API","title":"Vulkan._create_deferred_operation_khr","text":"_create_deferred_operation_khr(device; allocator = C_NULL)::ResultTypes.Result{DeferredOperationKHR, VulkanError}\n\nExtension: VK_KHR_deferred_host_operations\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_deferred_operation_khr(device; allocator) -> ResultTypes.Result{DeferredOperationKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_descriptor_pool-Tuple{Any, _DescriptorPoolCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_descriptor_pool","text":"_create_descriptor_pool(device, create_info::_DescriptorPoolCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{DescriptorPool, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_FRAGMENTATION_EXT\n\nArguments:\n\ndevice\ncreate_info::_DescriptorPoolCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_descriptor_pool(device, create_info::_DescriptorPoolCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{DescriptorPool, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_descriptor_pool-Tuple{Any, _DescriptorPoolCreateInfo}","page":"API","title":"Vulkan._create_descriptor_pool","text":"_create_descriptor_pool(device, create_info::_DescriptorPoolCreateInfo; allocator = C_NULL)::ResultTypes.Result{DescriptorPool, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_FRAGMENTATION_EXT\n\nArguments:\n\ndevice\ncreate_info::_DescriptorPoolCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_descriptor_pool(device, create_info::_DescriptorPoolCreateInfo; allocator) -> ResultTypes.Result{DescriptorPool, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_descriptor_set_layout-Tuple{Any, _DescriptorSetLayoutCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_descriptor_set_layout","text":"_create_descriptor_set_layout(device, create_info::_DescriptorSetLayoutCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{DescriptorSetLayout, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_DescriptorSetLayoutCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_descriptor_set_layout(device, create_info::_DescriptorSetLayoutCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{DescriptorSetLayout, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_descriptor_set_layout-Tuple{Any, _DescriptorSetLayoutCreateInfo}","page":"API","title":"Vulkan._create_descriptor_set_layout","text":"_create_descriptor_set_layout(device, create_info::_DescriptorSetLayoutCreateInfo; allocator = C_NULL)::ResultTypes.Result{DescriptorSetLayout, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_DescriptorSetLayoutCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_descriptor_set_layout(device, create_info::_DescriptorSetLayoutCreateInfo; allocator) -> ResultTypes.Result{DescriptorSetLayout, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_descriptor_update_template-Tuple{Any, _DescriptorUpdateTemplateCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_descriptor_update_template","text":"_create_descriptor_update_template(device, create_info::_DescriptorUpdateTemplateCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{DescriptorUpdateTemplate, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_DescriptorUpdateTemplateCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_descriptor_update_template(device, create_info::_DescriptorUpdateTemplateCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{DescriptorUpdateTemplate, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_descriptor_update_template-Tuple{Any, _DescriptorUpdateTemplateCreateInfo}","page":"API","title":"Vulkan._create_descriptor_update_template","text":"_create_descriptor_update_template(device, create_info::_DescriptorUpdateTemplateCreateInfo; allocator = C_NULL)::ResultTypes.Result{DescriptorUpdateTemplate, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_DescriptorUpdateTemplateCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_descriptor_update_template(device, create_info::_DescriptorUpdateTemplateCreateInfo; allocator) -> ResultTypes.Result{DescriptorUpdateTemplate, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_device-Tuple{Any, _DeviceCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_device","text":"_create_device(physical_device, create_info::_DeviceCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{Device, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\nERROR_EXTENSION_NOT_PRESENT\nERROR_FEATURE_NOT_PRESENT\nERROR_TOO_MANY_OBJECTS\nERROR_DEVICE_LOST\n\nArguments:\n\nphysical_device\ncreate_info::_DeviceCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_device(physical_device, create_info::_DeviceCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{Device, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_device-Tuple{Any, _DeviceCreateInfo}","page":"API","title":"Vulkan._create_device","text":"_create_device(physical_device, create_info::_DeviceCreateInfo; allocator = C_NULL)::ResultTypes.Result{Device, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\nERROR_EXTENSION_NOT_PRESENT\nERROR_FEATURE_NOT_PRESENT\nERROR_TOO_MANY_OBJECTS\nERROR_DEVICE_LOST\n\nArguments:\n\nphysical_device\ncreate_info::_DeviceCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_device(physical_device, create_info::_DeviceCreateInfo; allocator) -> ResultTypes.Result{Device, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_display_mode_khr-Tuple{Any, Any, _DisplayModeCreateInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_display_mode_khr","text":"_create_display_mode_khr(physical_device, display, create_info::_DisplayModeCreateInfoKHR, fptr_create::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{DisplayModeKHR, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\nphysical_device\ndisplay (externsync)\ncreate_info::_DisplayModeCreateInfoKHR\nfptr_create::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_display_mode_khr(physical_device, display, create_info::_DisplayModeCreateInfoKHR, fptr_create::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{DisplayModeKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_display_mode_khr-Tuple{Any, Any, _DisplayModeCreateInfoKHR}","page":"API","title":"Vulkan._create_display_mode_khr","text":"_create_display_mode_khr(physical_device, display, create_info::_DisplayModeCreateInfoKHR; allocator = C_NULL)::ResultTypes.Result{DisplayModeKHR, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\nphysical_device\ndisplay (externsync)\ncreate_info::_DisplayModeCreateInfoKHR\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_display_mode_khr(physical_device, display, create_info::_DisplayModeCreateInfoKHR; allocator) -> ResultTypes.Result{DisplayModeKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_display_plane_surface_khr-Tuple{Any, _DisplaySurfaceCreateInfoKHR, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_display_plane_surface_khr","text":"_create_display_plane_surface_khr(instance, create_info::_DisplaySurfaceCreateInfoKHR, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance\ncreate_info::_DisplaySurfaceCreateInfoKHR\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_display_plane_surface_khr(instance, create_info::_DisplaySurfaceCreateInfoKHR, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{SurfaceKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_display_plane_surface_khr-Tuple{Any, _DisplaySurfaceCreateInfoKHR}","page":"API","title":"Vulkan._create_display_plane_surface_khr","text":"_create_display_plane_surface_khr(instance, create_info::_DisplaySurfaceCreateInfoKHR; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance\ncreate_info::_DisplaySurfaceCreateInfoKHR\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_display_plane_surface_khr(instance, create_info::_DisplaySurfaceCreateInfoKHR; allocator) -> ResultTypes.Result{SurfaceKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_event-Tuple{Any, _EventCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_event","text":"_create_event(device, create_info::_EventCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{Event, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_EventCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_event(device, create_info::_EventCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{Event, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_event-Tuple{Any, _EventCreateInfo}","page":"API","title":"Vulkan._create_event","text":"_create_event(device, create_info::_EventCreateInfo; allocator = C_NULL)::ResultTypes.Result{Event, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_EventCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_event(device, create_info::_EventCreateInfo; allocator) -> ResultTypes.Result{Event, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_fence-Tuple{Any, _FenceCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_fence","text":"_create_fence(device, create_info::_FenceCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{Fence, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_FenceCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_fence(device, create_info::_FenceCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{Fence, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_fence-Tuple{Any, _FenceCreateInfo}","page":"API","title":"Vulkan._create_fence","text":"_create_fence(device, create_info::_FenceCreateInfo; allocator = C_NULL)::ResultTypes.Result{Fence, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_FenceCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_fence(device, create_info::_FenceCreateInfo; allocator) -> ResultTypes.Result{Fence, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_framebuffer-Tuple{Any, _FramebufferCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_framebuffer","text":"_create_framebuffer(device, create_info::_FramebufferCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{Framebuffer, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_FramebufferCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_framebuffer(device, create_info::_FramebufferCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{Framebuffer, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_framebuffer-Tuple{Any, _FramebufferCreateInfo}","page":"API","title":"Vulkan._create_framebuffer","text":"_create_framebuffer(device, create_info::_FramebufferCreateInfo; allocator = C_NULL)::ResultTypes.Result{Framebuffer, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_FramebufferCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_framebuffer(device, create_info::_FramebufferCreateInfo; allocator) -> ResultTypes.Result{Framebuffer, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_graphics_pipelines-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_graphics_pipelines","text":"_create_graphics_pipelines(device, create_infos::AbstractArray{_GraphicsPipelineCreateInfo}, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; pipeline_cache = C_NULL, allocator = C_NULL)::ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nPIPELINE_COMPILE_REQUIRED_EXT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_SHADER_NV\n\nArguments:\n\ndevice\ncreate_infos::AbstractArray{_GraphicsPipelineCreateInfo}\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\npipeline_cache: defaults to C_NULL\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_graphics_pipelines(device, create_infos::AbstractArray, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; pipeline_cache, allocator) -> ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_graphics_pipelines-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._create_graphics_pipelines","text":"_create_graphics_pipelines(device, create_infos::AbstractArray{_GraphicsPipelineCreateInfo}; pipeline_cache = C_NULL, allocator = C_NULL)::ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nPIPELINE_COMPILE_REQUIRED_EXT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_SHADER_NV\n\nArguments:\n\ndevice\ncreate_infos::AbstractArray{_GraphicsPipelineCreateInfo}\npipeline_cache: defaults to C_NULL\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_graphics_pipelines(device, create_infos::AbstractArray; pipeline_cache, allocator) -> ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_headless_surface_ext-Tuple{Any, _HeadlessSurfaceCreateInfoEXT, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_headless_surface_ext","text":"_create_headless_surface_ext(instance, create_info::_HeadlessSurfaceCreateInfoEXT, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nExtension: VK_EXT_headless_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance\ncreate_info::_HeadlessSurfaceCreateInfoEXT\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_headless_surface_ext(instance, create_info::_HeadlessSurfaceCreateInfoEXT, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{SurfaceKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_headless_surface_ext-Tuple{Any, _HeadlessSurfaceCreateInfoEXT}","page":"API","title":"Vulkan._create_headless_surface_ext","text":"_create_headless_surface_ext(instance, create_info::_HeadlessSurfaceCreateInfoEXT; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nExtension: VK_EXT_headless_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance\ncreate_info::_HeadlessSurfaceCreateInfoEXT\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_headless_surface_ext(instance, create_info::_HeadlessSurfaceCreateInfoEXT; allocator) -> ResultTypes.Result{SurfaceKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_image-Tuple{Any, _ImageCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_image","text":"_create_image(device, create_info::_ImageCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{Image, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_ImageCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_image(device, create_info::_ImageCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{Image, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_image-Tuple{Any, _ImageCreateInfo}","page":"API","title":"Vulkan._create_image","text":"_create_image(device, create_info::_ImageCreateInfo; allocator = C_NULL)::ResultTypes.Result{Image, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_ImageCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_image(device, create_info::_ImageCreateInfo; allocator) -> ResultTypes.Result{Image, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_image_view-Tuple{Any, _ImageViewCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_image_view","text":"_create_image_view(device, create_info::_ImageViewCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{ImageView, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_ImageViewCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_image_view(device, create_info::_ImageViewCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{ImageView, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_image_view-Tuple{Any, _ImageViewCreateInfo}","page":"API","title":"Vulkan._create_image_view","text":"_create_image_view(device, create_info::_ImageViewCreateInfo; allocator = C_NULL)::ResultTypes.Result{ImageView, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_ImageViewCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_image_view(device, create_info::_ImageViewCreateInfo; allocator) -> ResultTypes.Result{ImageView, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_indirect_commands_layout_nv-Tuple{Any, _IndirectCommandsLayoutCreateInfoNV, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_indirect_commands_layout_nv","text":"_create_indirect_commands_layout_nv(device, create_info::_IndirectCommandsLayoutCreateInfoNV, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{IndirectCommandsLayoutNV, VulkanError}\n\nExtension: VK_NV_device_generated_commands\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_IndirectCommandsLayoutCreateInfoNV\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_indirect_commands_layout_nv(device, create_info::_IndirectCommandsLayoutCreateInfoNV, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{IndirectCommandsLayoutNV, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_indirect_commands_layout_nv-Tuple{Any, _IndirectCommandsLayoutCreateInfoNV}","page":"API","title":"Vulkan._create_indirect_commands_layout_nv","text":"_create_indirect_commands_layout_nv(device, create_info::_IndirectCommandsLayoutCreateInfoNV; allocator = C_NULL)::ResultTypes.Result{IndirectCommandsLayoutNV, VulkanError}\n\nExtension: VK_NV_device_generated_commands\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_IndirectCommandsLayoutCreateInfoNV\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_indirect_commands_layout_nv(device, create_info::_IndirectCommandsLayoutCreateInfoNV; allocator) -> ResultTypes.Result{IndirectCommandsLayoutNV, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_instance-Tuple{_InstanceCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_instance","text":"_create_instance(create_info::_InstanceCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{Instance, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\nERROR_LAYER_NOT_PRESENT\nERROR_EXTENSION_NOT_PRESENT\nERROR_INCOMPATIBLE_DRIVER\n\nArguments:\n\ncreate_info::_InstanceCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_instance(create_info::_InstanceCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{Instance, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_instance-Tuple{_InstanceCreateInfo}","page":"API","title":"Vulkan._create_instance","text":"_create_instance(create_info::_InstanceCreateInfo; allocator = C_NULL)::ResultTypes.Result{Instance, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\nERROR_LAYER_NOT_PRESENT\nERROR_EXTENSION_NOT_PRESENT\nERROR_INCOMPATIBLE_DRIVER\n\nArguments:\n\ncreate_info::_InstanceCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_instance(create_info::_InstanceCreateInfo; allocator) -> ResultTypes.Result{Instance, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_pipeline_cache-Tuple{Any, _PipelineCacheCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_pipeline_cache","text":"_create_pipeline_cache(device, create_info::_PipelineCacheCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{PipelineCache, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_PipelineCacheCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_pipeline_cache(device, create_info::_PipelineCacheCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{PipelineCache, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_pipeline_cache-Tuple{Any, _PipelineCacheCreateInfo}","page":"API","title":"Vulkan._create_pipeline_cache","text":"_create_pipeline_cache(device, create_info::_PipelineCacheCreateInfo; allocator = C_NULL)::ResultTypes.Result{PipelineCache, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_PipelineCacheCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_pipeline_cache(device, create_info::_PipelineCacheCreateInfo; allocator) -> ResultTypes.Result{PipelineCache, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_pipeline_layout-Tuple{Any, _PipelineLayoutCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_pipeline_layout","text":"_create_pipeline_layout(device, create_info::_PipelineLayoutCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{PipelineLayout, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_PipelineLayoutCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_pipeline_layout(device, create_info::_PipelineLayoutCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{PipelineLayout, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_pipeline_layout-Tuple{Any, _PipelineLayoutCreateInfo}","page":"API","title":"Vulkan._create_pipeline_layout","text":"_create_pipeline_layout(device, create_info::_PipelineLayoutCreateInfo; allocator = C_NULL)::ResultTypes.Result{PipelineLayout, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_PipelineLayoutCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_pipeline_layout(device, create_info::_PipelineLayoutCreateInfo; allocator) -> ResultTypes.Result{PipelineLayout, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_private_data_slot_ext-Tuple{Any, _PrivateDataSlotCreateInfoEXT, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_private_data_slot_ext","text":"_create_private_data_slot_ext(device, create_info::_PrivateDataSlotCreateInfoEXT, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{PrivateDataSlotEXT, VulkanError}\n\nExtension: VK_EXT_private_data\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_PrivateDataSlotCreateInfoEXT\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_private_data_slot_ext(device, create_info::_PrivateDataSlotCreateInfoEXT, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{PrivateDataSlotEXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_private_data_slot_ext-Tuple{Any, _PrivateDataSlotCreateInfoEXT}","page":"API","title":"Vulkan._create_private_data_slot_ext","text":"_create_private_data_slot_ext(device, create_info::_PrivateDataSlotCreateInfoEXT; allocator = C_NULL)::ResultTypes.Result{PrivateDataSlotEXT, VulkanError}\n\nExtension: VK_EXT_private_data\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_PrivateDataSlotCreateInfoEXT\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_private_data_slot_ext(device, create_info::_PrivateDataSlotCreateInfoEXT; allocator) -> ResultTypes.Result{PrivateDataSlotEXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_query_pool-Tuple{Any, _QueryPoolCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_query_pool","text":"_create_query_pool(device, create_info::_QueryPoolCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{QueryPool, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_QueryPoolCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_query_pool(device, create_info::_QueryPoolCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{QueryPool, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_query_pool-Tuple{Any, _QueryPoolCreateInfo}","page":"API","title":"Vulkan._create_query_pool","text":"_create_query_pool(device, create_info::_QueryPoolCreateInfo; allocator = C_NULL)::ResultTypes.Result{QueryPool, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_QueryPoolCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_query_pool(device, create_info::_QueryPoolCreateInfo; allocator) -> ResultTypes.Result{QueryPool, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_ray_tracing_pipelines_khr-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_ray_tracing_pipelines_khr","text":"_create_ray_tracing_pipelines_khr(device, create_infos::AbstractArray{_RayTracingPipelineCreateInfoKHR}, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; deferred_operation = C_NULL, pipeline_cache = C_NULL, allocator = C_NULL)::ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nReturn codes:\n\nSuccess:\nSUCCESS\nOPERATION_DEFERRED_KHR\nOPERATION_NOT_DEFERRED_KHR\nPIPELINE_COMPILE_REQUIRED_EXT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS\n\nArguments:\n\ndevice\ncreate_infos::AbstractArray{_RayTracingPipelineCreateInfoKHR}\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\ndeferred_operation: defaults to C_NULL\npipeline_cache: defaults to C_NULL\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_ray_tracing_pipelines_khr(device, create_infos::AbstractArray, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; deferred_operation, pipeline_cache, allocator) -> ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_ray_tracing_pipelines_khr-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._create_ray_tracing_pipelines_khr","text":"_create_ray_tracing_pipelines_khr(device, create_infos::AbstractArray{_RayTracingPipelineCreateInfoKHR}; deferred_operation = C_NULL, pipeline_cache = C_NULL, allocator = C_NULL)::ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nReturn codes:\n\nSuccess:\nSUCCESS\nOPERATION_DEFERRED_KHR\nOPERATION_NOT_DEFERRED_KHR\nPIPELINE_COMPILE_REQUIRED_EXT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS\n\nArguments:\n\ndevice\ncreate_infos::AbstractArray{_RayTracingPipelineCreateInfoKHR}\ndeferred_operation: defaults to C_NULL\npipeline_cache: defaults to C_NULL\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_ray_tracing_pipelines_khr(device, create_infos::AbstractArray; deferred_operation, pipeline_cache, allocator) -> ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_ray_tracing_pipelines_nv-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_ray_tracing_pipelines_nv","text":"_create_ray_tracing_pipelines_nv(device, create_infos::AbstractArray{_RayTracingPipelineCreateInfoNV}, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; pipeline_cache = C_NULL, allocator = C_NULL)::ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\nExtension: VK_NV_ray_tracing\n\nReturn codes:\n\nSuccess:\nSUCCESS\nPIPELINE_COMPILE_REQUIRED_EXT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_SHADER_NV\n\nArguments:\n\ndevice\ncreate_infos::AbstractArray{_RayTracingPipelineCreateInfoNV}\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\npipeline_cache: defaults to C_NULL\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_ray_tracing_pipelines_nv(device, create_infos::AbstractArray, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; pipeline_cache, allocator) -> ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_ray_tracing_pipelines_nv-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._create_ray_tracing_pipelines_nv","text":"_create_ray_tracing_pipelines_nv(device, create_infos::AbstractArray{_RayTracingPipelineCreateInfoNV}; pipeline_cache = C_NULL, allocator = C_NULL)::ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\nExtension: VK_NV_ray_tracing\n\nReturn codes:\n\nSuccess:\nSUCCESS\nPIPELINE_COMPILE_REQUIRED_EXT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_SHADER_NV\n\nArguments:\n\ndevice\ncreate_infos::AbstractArray{_RayTracingPipelineCreateInfoNV}\npipeline_cache: defaults to C_NULL\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_ray_tracing_pipelines_nv(device, create_infos::AbstractArray; pipeline_cache, allocator) -> ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_render_pass-Tuple{Any, _RenderPassCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_render_pass","text":"_create_render_pass(device, create_info::_RenderPassCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{RenderPass, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_RenderPassCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_render_pass(device, create_info::_RenderPassCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{RenderPass, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_render_pass-Tuple{Any, _RenderPassCreateInfo}","page":"API","title":"Vulkan._create_render_pass","text":"_create_render_pass(device, create_info::_RenderPassCreateInfo; allocator = C_NULL)::ResultTypes.Result{RenderPass, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_RenderPassCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_render_pass(device, create_info::_RenderPassCreateInfo; allocator) -> ResultTypes.Result{RenderPass, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_render_pass_2-Tuple{Any, _RenderPassCreateInfo2, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_render_pass_2","text":"_create_render_pass_2(device, create_info::_RenderPassCreateInfo2, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{RenderPass, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_RenderPassCreateInfo2\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_render_pass_2(device, create_info::_RenderPassCreateInfo2, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{RenderPass, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_render_pass_2-Tuple{Any, _RenderPassCreateInfo2}","page":"API","title":"Vulkan._create_render_pass_2","text":"_create_render_pass_2(device, create_info::_RenderPassCreateInfo2; allocator = C_NULL)::ResultTypes.Result{RenderPass, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_RenderPassCreateInfo2\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_render_pass_2(device, create_info::_RenderPassCreateInfo2; allocator) -> ResultTypes.Result{RenderPass, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_sampler-Tuple{Any, _SamplerCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_sampler","text":"_create_sampler(device, create_info::_SamplerCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{Sampler, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_SamplerCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_sampler(device, create_info::_SamplerCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{Sampler, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_sampler-Tuple{Any, _SamplerCreateInfo}","page":"API","title":"Vulkan._create_sampler","text":"_create_sampler(device, create_info::_SamplerCreateInfo; allocator = C_NULL)::ResultTypes.Result{Sampler, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_SamplerCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_sampler(device, create_info::_SamplerCreateInfo; allocator) -> ResultTypes.Result{Sampler, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_sampler_ycbcr_conversion-Tuple{Any, _SamplerYcbcrConversionCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_sampler_ycbcr_conversion","text":"_create_sampler_ycbcr_conversion(device, create_info::_SamplerYcbcrConversionCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{SamplerYcbcrConversion, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_SamplerYcbcrConversionCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_sampler_ycbcr_conversion(device, create_info::_SamplerYcbcrConversionCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{SamplerYcbcrConversion, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_sampler_ycbcr_conversion-Tuple{Any, _SamplerYcbcrConversionCreateInfo}","page":"API","title":"Vulkan._create_sampler_ycbcr_conversion","text":"_create_sampler_ycbcr_conversion(device, create_info::_SamplerYcbcrConversionCreateInfo; allocator = C_NULL)::ResultTypes.Result{SamplerYcbcrConversion, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_SamplerYcbcrConversionCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_sampler_ycbcr_conversion(device, create_info::_SamplerYcbcrConversionCreateInfo; allocator) -> ResultTypes.Result{SamplerYcbcrConversion, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_semaphore-Tuple{Any, _SemaphoreCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_semaphore","text":"_create_semaphore(device, create_info::_SemaphoreCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{Semaphore, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_SemaphoreCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_semaphore(device, create_info::_SemaphoreCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{Semaphore, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_semaphore-Tuple{Any, _SemaphoreCreateInfo}","page":"API","title":"Vulkan._create_semaphore","text":"_create_semaphore(device, create_info::_SemaphoreCreateInfo; allocator = C_NULL)::ResultTypes.Result{Semaphore, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_SemaphoreCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_semaphore(device, create_info::_SemaphoreCreateInfo; allocator) -> ResultTypes.Result{Semaphore, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_shader_module-Tuple{Any, _ShaderModuleCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_shader_module","text":"_create_shader_module(device, create_info::_ShaderModuleCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{ShaderModule, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_SHADER_NV\n\nArguments:\n\ndevice\ncreate_info::_ShaderModuleCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_shader_module(device, create_info::_ShaderModuleCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{ShaderModule, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_shader_module-Tuple{Any, _ShaderModuleCreateInfo}","page":"API","title":"Vulkan._create_shader_module","text":"_create_shader_module(device, create_info::_ShaderModuleCreateInfo; allocator = C_NULL)::ResultTypes.Result{ShaderModule, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_SHADER_NV\n\nArguments:\n\ndevice\ncreate_info::_ShaderModuleCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_shader_module(device, create_info::_ShaderModuleCreateInfo; allocator) -> ResultTypes.Result{ShaderModule, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_shared_swapchains_khr-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_shared_swapchains_khr","text":"_create_shared_swapchains_khr(device, create_infos::AbstractArray{_SwapchainCreateInfoKHR}, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{Vector{SwapchainKHR}, VulkanError}\n\nExtension: VK_KHR_display_swapchain\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INCOMPATIBLE_DISPLAY_KHR\nERROR_DEVICE_LOST\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\ndevice\ncreate_infos::AbstractArray{_SwapchainCreateInfoKHR} (externsync)\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_shared_swapchains_khr(device, create_infos::AbstractArray, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{Vector{SwapchainKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_shared_swapchains_khr-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._create_shared_swapchains_khr","text":"_create_shared_swapchains_khr(device, create_infos::AbstractArray{_SwapchainCreateInfoKHR}; allocator = C_NULL)::ResultTypes.Result{Vector{SwapchainKHR}, VulkanError}\n\nExtension: VK_KHR_display_swapchain\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INCOMPATIBLE_DISPLAY_KHR\nERROR_DEVICE_LOST\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\ndevice\ncreate_infos::AbstractArray{_SwapchainCreateInfoKHR} (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_shared_swapchains_khr(device, create_infos::AbstractArray; allocator) -> ResultTypes.Result{Vector{SwapchainKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_swapchain_khr-Tuple{Any, _SwapchainCreateInfoKHR, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_swapchain_khr","text":"_create_swapchain_khr(device, create_info::_SwapchainCreateInfoKHR, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{SwapchainKHR, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\nERROR_SURFACE_LOST_KHR\nERROR_NATIVE_WINDOW_IN_USE_KHR\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\ndevice\ncreate_info::_SwapchainCreateInfoKHR (externsync)\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_swapchain_khr(device, create_info::_SwapchainCreateInfoKHR, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{SwapchainKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_swapchain_khr-Tuple{Any, _SwapchainCreateInfoKHR}","page":"API","title":"Vulkan._create_swapchain_khr","text":"_create_swapchain_khr(device, create_info::_SwapchainCreateInfoKHR; allocator = C_NULL)::ResultTypes.Result{SwapchainKHR, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\nERROR_SURFACE_LOST_KHR\nERROR_NATIVE_WINDOW_IN_USE_KHR\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\ndevice\ncreate_info::_SwapchainCreateInfoKHR (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_swapchain_khr(device, create_info::_SwapchainCreateInfoKHR; allocator) -> ResultTypes.Result{SwapchainKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_validation_cache_ext-Tuple{Any, _ValidationCacheCreateInfoEXT, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_validation_cache_ext","text":"_create_validation_cache_ext(device, create_info::_ValidationCacheCreateInfoEXT, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{ValidationCacheEXT, VulkanError}\n\nExtension: VK_EXT_validation_cache\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_ValidationCacheCreateInfoEXT\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_validation_cache_ext(device, create_info::_ValidationCacheCreateInfoEXT, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{ValidationCacheEXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_validation_cache_ext-Tuple{Any, _ValidationCacheCreateInfoEXT}","page":"API","title":"Vulkan._create_validation_cache_ext","text":"_create_validation_cache_ext(device, create_info::_ValidationCacheCreateInfoEXT; allocator = C_NULL)::ResultTypes.Result{ValidationCacheEXT, VulkanError}\n\nExtension: VK_EXT_validation_cache\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ncreate_info::_ValidationCacheCreateInfoEXT\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_validation_cache_ext(device, create_info::_ValidationCacheCreateInfoEXT; allocator) -> ResultTypes.Result{ValidationCacheEXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_wayland_surface_khr-Tuple{Any, _WaylandSurfaceCreateInfoKHR, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_wayland_surface_khr","text":"_create_wayland_surface_khr(instance, create_info::_WaylandSurfaceCreateInfoKHR, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nExtension: VK_KHR_wayland_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance\ncreate_info::_WaylandSurfaceCreateInfoKHR\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_wayland_surface_khr(instance, create_info::_WaylandSurfaceCreateInfoKHR, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{SurfaceKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_wayland_surface_khr-Tuple{Any, _WaylandSurfaceCreateInfoKHR}","page":"API","title":"Vulkan._create_wayland_surface_khr","text":"_create_wayland_surface_khr(instance, create_info::_WaylandSurfaceCreateInfoKHR; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nExtension: VK_KHR_wayland_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance\ncreate_info::_WaylandSurfaceCreateInfoKHR\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_wayland_surface_khr(instance, create_info::_WaylandSurfaceCreateInfoKHR; allocator) -> ResultTypes.Result{SurfaceKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_xcb_surface_khr-Tuple{Any, _XcbSurfaceCreateInfoKHR, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_xcb_surface_khr","text":"_create_xcb_surface_khr(instance, create_info::_XcbSurfaceCreateInfoKHR, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nExtension: VK_KHR_xcb_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance\ncreate_info::_XcbSurfaceCreateInfoKHR\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_xcb_surface_khr(instance, create_info::_XcbSurfaceCreateInfoKHR, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{SurfaceKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_xcb_surface_khr-Tuple{Any, _XcbSurfaceCreateInfoKHR}","page":"API","title":"Vulkan._create_xcb_surface_khr","text":"_create_xcb_surface_khr(instance, create_info::_XcbSurfaceCreateInfoKHR; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nExtension: VK_KHR_xcb_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance\ncreate_info::_XcbSurfaceCreateInfoKHR\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_xcb_surface_khr(instance, create_info::_XcbSurfaceCreateInfoKHR; allocator) -> ResultTypes.Result{SurfaceKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_xlib_surface_khr-Tuple{Any, _XlibSurfaceCreateInfoKHR, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._create_xlib_surface_khr","text":"_create_xlib_surface_khr(instance, create_info::_XlibSurfaceCreateInfoKHR, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nExtension: VK_KHR_xlib_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance\ncreate_info::_XlibSurfaceCreateInfoKHR\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_xlib_surface_khr(instance, create_info::_XlibSurfaceCreateInfoKHR, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{SurfaceKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._create_xlib_surface_khr-Tuple{Any, _XlibSurfaceCreateInfoKHR}","page":"API","title":"Vulkan._create_xlib_surface_khr","text":"_create_xlib_surface_khr(instance, create_info::_XlibSurfaceCreateInfoKHR; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nExtension: VK_KHR_xlib_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance\ncreate_info::_XlibSurfaceCreateInfoKHR\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_create_xlib_surface_khr(instance, create_info::_XlibSurfaceCreateInfoKHR; allocator) -> ResultTypes.Result{SurfaceKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._debug_marker_set_object_name_ext-Tuple{Any, _DebugMarkerObjectNameInfoEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._debug_marker_set_object_name_ext","text":"_debug_marker_set_object_name_ext(device, name_info::_DebugMarkerObjectNameInfoEXT, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_debug_marker\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nname_info::_DebugMarkerObjectNameInfoEXT (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\n_debug_marker_set_object_name_ext(device, name_info::_DebugMarkerObjectNameInfoEXT, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._debug_marker_set_object_name_ext-Tuple{Any, _DebugMarkerObjectNameInfoEXT}","page":"API","title":"Vulkan._debug_marker_set_object_name_ext","text":"_debug_marker_set_object_name_ext(device, name_info::_DebugMarkerObjectNameInfoEXT)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_debug_marker\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nname_info::_DebugMarkerObjectNameInfoEXT (externsync)\n\nAPI documentation\n\n_debug_marker_set_object_name_ext(device, name_info::_DebugMarkerObjectNameInfoEXT) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._debug_marker_set_object_tag_ext-Tuple{Any, _DebugMarkerObjectTagInfoEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._debug_marker_set_object_tag_ext","text":"_debug_marker_set_object_tag_ext(device, tag_info::_DebugMarkerObjectTagInfoEXT, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_debug_marker\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ntag_info::_DebugMarkerObjectTagInfoEXT (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\n_debug_marker_set_object_tag_ext(device, tag_info::_DebugMarkerObjectTagInfoEXT, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._debug_marker_set_object_tag_ext-Tuple{Any, _DebugMarkerObjectTagInfoEXT}","page":"API","title":"Vulkan._debug_marker_set_object_tag_ext","text":"_debug_marker_set_object_tag_ext(device, tag_info::_DebugMarkerObjectTagInfoEXT)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_debug_marker\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ntag_info::_DebugMarkerObjectTagInfoEXT (externsync)\n\nAPI documentation\n\n_debug_marker_set_object_tag_ext(device, tag_info::_DebugMarkerObjectTagInfoEXT) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._debug_report_message_ext-Tuple{Any, DebugReportFlagEXT, DebugReportObjectTypeEXT, Integer, Integer, Integer, AbstractString, AbstractString, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._debug_report_message_ext","text":"_debug_report_message_ext(instance, flags::DebugReportFlagEXT, object_type::DebugReportObjectTypeEXT, object::Integer, location::Integer, message_code::Integer, layer_prefix::AbstractString, message::AbstractString, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_debug_report\n\nArguments:\n\ninstance\nflags::DebugReportFlagEXT\nobject_type::DebugReportObjectTypeEXT\nobject::Integer\nlocation::Integer\nmessage_code::Integer\nlayer_prefix::AbstractString\nmessage::AbstractString\nfptr::FunctionPtr\n\nAPI documentation\n\n_debug_report_message_ext(instance, flags::DebugReportFlagEXT, object_type::DebugReportObjectTypeEXT, object::Integer, location::Integer, message_code::Integer, layer_prefix::AbstractString, message::AbstractString, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._debug_report_message_ext-Tuple{Any, DebugReportFlagEXT, DebugReportObjectTypeEXT, Integer, Integer, Integer, AbstractString, AbstractString}","page":"API","title":"Vulkan._debug_report_message_ext","text":"_debug_report_message_ext(instance, flags::DebugReportFlagEXT, object_type::DebugReportObjectTypeEXT, object::Integer, location::Integer, message_code::Integer, layer_prefix::AbstractString, message::AbstractString)::Cvoid\n\nExtension: VK_EXT_debug_report\n\nArguments:\n\ninstance\nflags::DebugReportFlagEXT\nobject_type::DebugReportObjectTypeEXT\nobject::Integer\nlocation::Integer\nmessage_code::Integer\nlayer_prefix::AbstractString\nmessage::AbstractString\n\nAPI documentation\n\n_debug_report_message_ext(instance, flags::DebugReportFlagEXT, object_type::DebugReportObjectTypeEXT, object::Integer, location::Integer, message_code::Integer, layer_prefix::AbstractString, message::AbstractString)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._deferred_operation_join_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._deferred_operation_join_khr","text":"_deferred_operation_join_khr(device, operation, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_deferred_host_operations\n\nReturn codes:\n\nSuccess:\nSUCCESS\nTHREAD_DONE_KHR\nTHREAD_IDLE_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\noperation\nfptr::FunctionPtr\n\nAPI documentation\n\n_deferred_operation_join_khr(device, operation, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._deferred_operation_join_khr-Tuple{Any, Any}","page":"API","title":"Vulkan._deferred_operation_join_khr","text":"_deferred_operation_join_khr(device, operation)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_deferred_host_operations\n\nReturn codes:\n\nSuccess:\nSUCCESS\nTHREAD_DONE_KHR\nTHREAD_IDLE_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\noperation\n\nAPI documentation\n\n_deferred_operation_join_khr(device, operation) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_acceleration_structure_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_acceleration_structure_khr","text":"_destroy_acceleration_structure_khr(device, acceleration_structure, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ndevice\nacceleration_structure (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_acceleration_structure_khr(device, acceleration_structure, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_acceleration_structure_khr-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_acceleration_structure_khr","text":"_destroy_acceleration_structure_khr(device, acceleration_structure; allocator = C_NULL)::Cvoid\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ndevice\nacceleration_structure (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_acceleration_structure_khr(device, acceleration_structure; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_acceleration_structure_nv-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_acceleration_structure_nv","text":"_destroy_acceleration_structure_nv(device, acceleration_structure, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ndevice\nacceleration_structure (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_acceleration_structure_nv(device, acceleration_structure, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_acceleration_structure_nv-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_acceleration_structure_nv","text":"_destroy_acceleration_structure_nv(device, acceleration_structure; allocator = C_NULL)::Cvoid\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ndevice\nacceleration_structure (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_acceleration_structure_nv(device, acceleration_structure; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_buffer-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_buffer","text":"_destroy_buffer(device, buffer, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nbuffer (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_buffer(device, buffer, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_buffer-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_buffer","text":"_destroy_buffer(device, buffer; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nbuffer (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_buffer(device, buffer; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_buffer_view-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_buffer_view","text":"_destroy_buffer_view(device, buffer_view, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nbuffer_view (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_buffer_view(device, buffer_view, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_buffer_view-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_buffer_view","text":"_destroy_buffer_view(device, buffer_view; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nbuffer_view (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_buffer_view(device, buffer_view; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_command_pool-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_command_pool","text":"_destroy_command_pool(device, command_pool, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\ncommand_pool (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_command_pool(device, command_pool, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_command_pool-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_command_pool","text":"_destroy_command_pool(device, command_pool; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\ncommand_pool (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_command_pool(device, command_pool; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_debug_report_callback_ext-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_debug_report_callback_ext","text":"_destroy_debug_report_callback_ext(instance, callback, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nExtension: VK_EXT_debug_report\n\nArguments:\n\ninstance\ncallback (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_debug_report_callback_ext(instance, callback, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_debug_report_callback_ext-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_debug_report_callback_ext","text":"_destroy_debug_report_callback_ext(instance, callback; allocator = C_NULL)::Cvoid\n\nExtension: VK_EXT_debug_report\n\nArguments:\n\ninstance\ncallback (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_debug_report_callback_ext(instance, callback; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_debug_utils_messenger_ext-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_debug_utils_messenger_ext","text":"_destroy_debug_utils_messenger_ext(instance, messenger, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\ninstance\nmessenger (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_debug_utils_messenger_ext(instance, messenger, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_debug_utils_messenger_ext-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_debug_utils_messenger_ext","text":"_destroy_debug_utils_messenger_ext(instance, messenger; allocator = C_NULL)::Cvoid\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\ninstance\nmessenger (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_debug_utils_messenger_ext(instance, messenger; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_deferred_operation_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_deferred_operation_khr","text":"_destroy_deferred_operation_khr(device, operation, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nExtension: VK_KHR_deferred_host_operations\n\nArguments:\n\ndevice\noperation (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_deferred_operation_khr(device, operation, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_deferred_operation_khr-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_deferred_operation_khr","text":"_destroy_deferred_operation_khr(device, operation; allocator = C_NULL)::Cvoid\n\nExtension: VK_KHR_deferred_host_operations\n\nArguments:\n\ndevice\noperation (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_deferred_operation_khr(device, operation; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_descriptor_pool-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_descriptor_pool","text":"_destroy_descriptor_pool(device, descriptor_pool, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\ndescriptor_pool (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_descriptor_pool(device, descriptor_pool, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_descriptor_pool-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_descriptor_pool","text":"_destroy_descriptor_pool(device, descriptor_pool; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\ndescriptor_pool (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_descriptor_pool(device, descriptor_pool; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_descriptor_set_layout-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_descriptor_set_layout","text":"_destroy_descriptor_set_layout(device, descriptor_set_layout, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\ndescriptor_set_layout (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_descriptor_set_layout(device, descriptor_set_layout, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_descriptor_set_layout-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_descriptor_set_layout","text":"_destroy_descriptor_set_layout(device, descriptor_set_layout; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\ndescriptor_set_layout (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_descriptor_set_layout(device, descriptor_set_layout; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_descriptor_update_template-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_descriptor_update_template","text":"_destroy_descriptor_update_template(device, descriptor_update_template, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\ndescriptor_update_template (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_descriptor_update_template(device, descriptor_update_template, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_descriptor_update_template-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_descriptor_update_template","text":"_destroy_descriptor_update_template(device, descriptor_update_template; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\ndescriptor_update_template (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_descriptor_update_template(device, descriptor_update_template; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_device-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_device","text":"_destroy_device(device, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_device(device, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_device-Tuple{Any}","page":"API","title":"Vulkan._destroy_device","text":"_destroy_device(device; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_device(device; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_event-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_event","text":"_destroy_event(device, event, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nevent (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_event(device, event, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_event-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_event","text":"_destroy_event(device, event; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nevent (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_event(device, event; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_fence-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_fence","text":"_destroy_fence(device, fence, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nfence (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_fence(device, fence, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_fence-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_fence","text":"_destroy_fence(device, fence; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nfence (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_fence(device, fence; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_framebuffer-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_framebuffer","text":"_destroy_framebuffer(device, framebuffer, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nframebuffer (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_framebuffer(device, framebuffer, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_framebuffer-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_framebuffer","text":"_destroy_framebuffer(device, framebuffer; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nframebuffer (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_framebuffer(device, framebuffer; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_image-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_image","text":"_destroy_image(device, image, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nimage (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_image(device, image, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_image-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_image","text":"_destroy_image(device, image; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nimage (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_image(device, image; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_image_view-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_image_view","text":"_destroy_image_view(device, image_view, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nimage_view (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_image_view(device, image_view, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_image_view-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_image_view","text":"_destroy_image_view(device, image_view; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nimage_view (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_image_view(device, image_view; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_indirect_commands_layout_nv-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_indirect_commands_layout_nv","text":"_destroy_indirect_commands_layout_nv(device, indirect_commands_layout, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ndevice\nindirect_commands_layout (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_indirect_commands_layout_nv(device, indirect_commands_layout, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_indirect_commands_layout_nv-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_indirect_commands_layout_nv","text":"_destroy_indirect_commands_layout_nv(device, indirect_commands_layout; allocator = C_NULL)::Cvoid\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ndevice\nindirect_commands_layout (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_indirect_commands_layout_nv(device, indirect_commands_layout; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_instance-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_instance","text":"_destroy_instance(instance, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nArguments:\n\ninstance (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_instance(instance, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_instance-Tuple{Any}","page":"API","title":"Vulkan._destroy_instance","text":"_destroy_instance(instance; allocator = C_NULL)::Cvoid\n\nArguments:\n\ninstance (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_instance(instance; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_pipeline-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_pipeline","text":"_destroy_pipeline(device, pipeline, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\npipeline (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_pipeline(device, pipeline, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_pipeline-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_pipeline","text":"_destroy_pipeline(device, pipeline; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\npipeline (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_pipeline(device, pipeline; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_pipeline_cache-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_pipeline_cache","text":"_destroy_pipeline_cache(device, pipeline_cache, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\npipeline_cache (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_pipeline_cache(device, pipeline_cache, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_pipeline_cache-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_pipeline_cache","text":"_destroy_pipeline_cache(device, pipeline_cache; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\npipeline_cache (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_pipeline_cache(device, pipeline_cache; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_pipeline_layout-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_pipeline_layout","text":"_destroy_pipeline_layout(device, pipeline_layout, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\npipeline_layout (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_pipeline_layout(device, pipeline_layout, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_pipeline_layout-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_pipeline_layout","text":"_destroy_pipeline_layout(device, pipeline_layout; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\npipeline_layout (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_pipeline_layout(device, pipeline_layout; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_private_data_slot_ext-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_private_data_slot_ext","text":"_destroy_private_data_slot_ext(device, private_data_slot, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nExtension: VK_EXT_private_data\n\nArguments:\n\ndevice\nprivate_data_slot (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_private_data_slot_ext(device, private_data_slot, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_private_data_slot_ext-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_private_data_slot_ext","text":"_destroy_private_data_slot_ext(device, private_data_slot; allocator = C_NULL)::Cvoid\n\nExtension: VK_EXT_private_data\n\nArguments:\n\ndevice\nprivate_data_slot (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_private_data_slot_ext(device, private_data_slot; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_query_pool-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_query_pool","text":"_destroy_query_pool(device, query_pool, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nquery_pool (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_query_pool(device, query_pool, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_query_pool-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_query_pool","text":"_destroy_query_pool(device, query_pool; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nquery_pool (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_query_pool(device, query_pool; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_render_pass-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_render_pass","text":"_destroy_render_pass(device, render_pass, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nrender_pass (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_render_pass(device, render_pass, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_render_pass-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_render_pass","text":"_destroy_render_pass(device, render_pass; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nrender_pass (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_render_pass(device, render_pass; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_sampler-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_sampler","text":"_destroy_sampler(device, sampler, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nsampler (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_sampler(device, sampler, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_sampler-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_sampler","text":"_destroy_sampler(device, sampler; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nsampler (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_sampler(device, sampler; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_sampler_ycbcr_conversion-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_sampler_ycbcr_conversion","text":"_destroy_sampler_ycbcr_conversion(device, ycbcr_conversion, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nycbcr_conversion (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_sampler_ycbcr_conversion(device, ycbcr_conversion, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_sampler_ycbcr_conversion-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_sampler_ycbcr_conversion","text":"_destroy_sampler_ycbcr_conversion(device, ycbcr_conversion; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nycbcr_conversion (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_sampler_ycbcr_conversion(device, ycbcr_conversion; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_semaphore-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_semaphore","text":"_destroy_semaphore(device, semaphore, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nsemaphore (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_semaphore(device, semaphore, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_semaphore-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_semaphore","text":"_destroy_semaphore(device, semaphore; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nsemaphore (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_semaphore(device, semaphore; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_shader_module-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_shader_module","text":"_destroy_shader_module(device, shader_module, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nshader_module (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_shader_module(device, shader_module, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_shader_module-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_shader_module","text":"_destroy_shader_module(device, shader_module; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nshader_module (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_shader_module(device, shader_module; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_surface_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_surface_khr","text":"_destroy_surface_khr(instance, surface, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nExtension: VK_KHR_surface\n\nArguments:\n\ninstance\nsurface (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_surface_khr(instance, surface, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_surface_khr-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_surface_khr","text":"_destroy_surface_khr(instance, surface; allocator = C_NULL)::Cvoid\n\nExtension: VK_KHR_surface\n\nArguments:\n\ninstance\nsurface (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_surface_khr(instance, surface; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_swapchain_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_swapchain_khr","text":"_destroy_swapchain_khr(device, swapchain, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nExtension: VK_KHR_swapchain\n\nArguments:\n\ndevice\nswapchain (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_swapchain_khr(device, swapchain, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_swapchain_khr-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_swapchain_khr","text":"_destroy_swapchain_khr(device, swapchain; allocator = C_NULL)::Cvoid\n\nExtension: VK_KHR_swapchain\n\nArguments:\n\ndevice\nswapchain (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_swapchain_khr(device, swapchain; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_validation_cache_ext-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._destroy_validation_cache_ext","text":"_destroy_validation_cache_ext(device, validation_cache, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nExtension: VK_EXT_validation_cache\n\nArguments:\n\ndevice\nvalidation_cache (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_validation_cache_ext(device, validation_cache, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._destroy_validation_cache_ext-Tuple{Any, Any}","page":"API","title":"Vulkan._destroy_validation_cache_ext","text":"_destroy_validation_cache_ext(device, validation_cache; allocator = C_NULL)::Cvoid\n\nExtension: VK_EXT_validation_cache\n\nArguments:\n\ndevice\nvalidation_cache (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_destroy_validation_cache_ext(device, validation_cache; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._device_wait_idle-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._device_wait_idle","text":"_device_wait_idle(device, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\nfptr::FunctionPtr\n\nAPI documentation\n\n_device_wait_idle(device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._device_wait_idle-Tuple{Any}","page":"API","title":"Vulkan._device_wait_idle","text":"_device_wait_idle(device)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\n\nAPI documentation\n\n_device_wait_idle(device) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._display_power_control_ext-Tuple{Any, Any, _DisplayPowerInfoEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._display_power_control_ext","text":"_display_power_control_ext(device, display, display_power_info::_DisplayPowerInfoEXT, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_display_control\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ndisplay\ndisplay_power_info::_DisplayPowerInfoEXT\nfptr::FunctionPtr\n\nAPI documentation\n\n_display_power_control_ext(device, display, display_power_info::_DisplayPowerInfoEXT, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._display_power_control_ext-Tuple{Any, Any, _DisplayPowerInfoEXT}","page":"API","title":"Vulkan._display_power_control_ext","text":"_display_power_control_ext(device, display, display_power_info::_DisplayPowerInfoEXT)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_display_control\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ndisplay\ndisplay_power_info::_DisplayPowerInfoEXT\n\nAPI documentation\n\n_display_power_control_ext(device, display, display_power_info::_DisplayPowerInfoEXT) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._end_command_buffer-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._end_command_buffer","text":"_end_command_buffer(command_buffer, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ncommand_buffer (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\n_end_command_buffer(command_buffer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._end_command_buffer-Tuple{Any}","page":"API","title":"Vulkan._end_command_buffer","text":"_end_command_buffer(command_buffer)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ncommand_buffer (externsync)\n\nAPI documentation\n\n_end_command_buffer(command_buffer) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._enumerate_device_extension_properties-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._enumerate_device_extension_properties","text":"_enumerate_device_extension_properties(physical_device, fptr::FunctionPtr; layer_name = C_NULL)::ResultTypes.Result{Vector{_ExtensionProperties}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_LAYER_NOT_PRESENT\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\nlayer_name: defaults to C_NULL\n\nAPI documentation\n\n_enumerate_device_extension_properties(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}; layer_name) -> ResultTypes.Result{Vector{_ExtensionProperties}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._enumerate_device_extension_properties-Tuple{Any}","page":"API","title":"Vulkan._enumerate_device_extension_properties","text":"_enumerate_device_extension_properties(physical_device; layer_name = C_NULL)::ResultTypes.Result{Vector{_ExtensionProperties}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_LAYER_NOT_PRESENT\n\nArguments:\n\nphysical_device\nlayer_name: defaults to C_NULL\n\nAPI documentation\n\n_enumerate_device_extension_properties(physical_device; layer_name) -> ResultTypes.Result{Vector{_ExtensionProperties}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._enumerate_device_layer_properties-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._enumerate_device_layer_properties","text":"_enumerate_device_layer_properties(physical_device, fptr::FunctionPtr)::ResultTypes.Result{Vector{_LayerProperties}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\n_enumerate_device_layer_properties(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{_LayerProperties}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._enumerate_device_layer_properties-Tuple{Any}","page":"API","title":"Vulkan._enumerate_device_layer_properties","text":"_enumerate_device_layer_properties(physical_device)::ResultTypes.Result{Vector{_LayerProperties}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\n_enumerate_device_layer_properties(physical_device) -> ResultTypes.Result{Vector{_LayerProperties}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._enumerate_instance_extension_properties-Tuple{Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._enumerate_instance_extension_properties","text":"_enumerate_instance_extension_properties(fptr::FunctionPtr; layer_name = C_NULL)::ResultTypes.Result{Vector{_ExtensionProperties}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_LAYER_NOT_PRESENT\n\nArguments:\n\nfptr::FunctionPtr\nlayer_name: defaults to C_NULL\n\nAPI documentation\n\n_enumerate_instance_extension_properties(fptr::Union{Ptr{Nothing}, Base.CFunction}; layer_name) -> ResultTypes.Result{Vector{_ExtensionProperties}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._enumerate_instance_extension_properties-Tuple{}","page":"API","title":"Vulkan._enumerate_instance_extension_properties","text":"_enumerate_instance_extension_properties(; layer_name = C_NULL)::ResultTypes.Result{Vector{_ExtensionProperties}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_LAYER_NOT_PRESENT\n\nArguments:\n\nlayer_name: defaults to C_NULL\n\nAPI documentation\n\n_enumerate_instance_extension_properties(; layer_name) -> ResultTypes.Result{Vector{_ExtensionProperties}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._enumerate_instance_layer_properties-Tuple{Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._enumerate_instance_layer_properties","text":"_enumerate_instance_layer_properties(fptr::FunctionPtr)::ResultTypes.Result{Vector{_LayerProperties}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nfptr::FunctionPtr\n\nAPI documentation\n\n_enumerate_instance_layer_properties(fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{_LayerProperties}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._enumerate_instance_layer_properties-Tuple{}","page":"API","title":"Vulkan._enumerate_instance_layer_properties","text":"_enumerate_instance_layer_properties()::ResultTypes.Result{Vector{_LayerProperties}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nAPI documentation\n\n_enumerate_instance_layer_properties() -> ResultTypes.Result{Vector{_LayerProperties}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._enumerate_instance_version-Tuple{Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._enumerate_instance_version","text":"_enumerate_instance_version(fptr::FunctionPtr)::ResultTypes.Result{VersionNumber, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\nfptr::FunctionPtr\n\nAPI documentation\n\n_enumerate_instance_version(fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{VersionNumber, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._enumerate_instance_version-Tuple{}","page":"API","title":"Vulkan._enumerate_instance_version","text":"_enumerate_instance_version()::ResultTypes.Result{VersionNumber, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nAPI documentation\n\n_enumerate_instance_version() -> ResultTypes.Result{VersionNumber, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._enumerate_physical_device_groups-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._enumerate_physical_device_groups","text":"_enumerate_physical_device_groups(instance, fptr::FunctionPtr)::ResultTypes.Result{Vector{_PhysicalDeviceGroupProperties}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\ninstance\nfptr::FunctionPtr\n\nAPI documentation\n\n_enumerate_physical_device_groups(instance, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{_PhysicalDeviceGroupProperties}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._enumerate_physical_device_groups-Tuple{Any}","page":"API","title":"Vulkan._enumerate_physical_device_groups","text":"_enumerate_physical_device_groups(instance)::ResultTypes.Result{Vector{_PhysicalDeviceGroupProperties}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\ninstance\n\nAPI documentation\n\n_enumerate_physical_device_groups(instance) -> ResultTypes.Result{Vector{_PhysicalDeviceGroupProperties}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._enumerate_physical_device_queue_family_performance_query_counters_khr-Tuple{Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._enumerate_physical_device_queue_family_performance_query_counters_khr","text":"_enumerate_physical_device_queue_family_performance_query_counters_khr(physical_device, queue_family_index::Integer, fptr::FunctionPtr)::ResultTypes.Result{Tuple{Vector{_PerformanceCounterKHR}, Vector{_PerformanceCounterDescriptionKHR}}, VulkanError}\n\nExtension: VK_KHR_performance_query\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\nphysical_device\nqueue_family_index::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_enumerate_physical_device_queue_family_performance_query_counters_khr(physical_device, queue_family_index::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Tuple{Vector{_PerformanceCounterKHR}, Vector{_PerformanceCounterDescriptionKHR}}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._enumerate_physical_device_queue_family_performance_query_counters_khr-Tuple{Any, Integer}","page":"API","title":"Vulkan._enumerate_physical_device_queue_family_performance_query_counters_khr","text":"_enumerate_physical_device_queue_family_performance_query_counters_khr(physical_device, queue_family_index::Integer)::ResultTypes.Result{Tuple{Vector{_PerformanceCounterKHR}, Vector{_PerformanceCounterDescriptionKHR}}, VulkanError}\n\nExtension: VK_KHR_performance_query\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\nphysical_device\nqueue_family_index::Integer\n\nAPI documentation\n\n_enumerate_physical_device_queue_family_performance_query_counters_khr(physical_device, queue_family_index::Integer) -> ResultTypes.Result{Tuple{Vector{_PerformanceCounterKHR}, Vector{_PerformanceCounterDescriptionKHR}}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._enumerate_physical_devices-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._enumerate_physical_devices","text":"_enumerate_physical_devices(instance, fptr::FunctionPtr)::ResultTypes.Result{Vector{PhysicalDevice}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\ninstance\nfptr::FunctionPtr\n\nAPI documentation\n\n_enumerate_physical_devices(instance, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{PhysicalDevice}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._enumerate_physical_devices-Tuple{Any}","page":"API","title":"Vulkan._enumerate_physical_devices","text":"_enumerate_physical_devices(instance)::ResultTypes.Result{Vector{PhysicalDevice}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\ninstance\n\nAPI documentation\n\n_enumerate_physical_devices(instance) -> ResultTypes.Result{Vector{PhysicalDevice}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._flush_mapped_memory_ranges-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._flush_mapped_memory_ranges","text":"_flush_mapped_memory_ranges(device, memory_ranges::AbstractArray{_MappedMemoryRange}, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nmemory_ranges::AbstractArray{_MappedMemoryRange}\nfptr::FunctionPtr\n\nAPI documentation\n\n_flush_mapped_memory_ranges(device, memory_ranges::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._flush_mapped_memory_ranges-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._flush_mapped_memory_ranges","text":"_flush_mapped_memory_ranges(device, memory_ranges::AbstractArray{_MappedMemoryRange})::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nmemory_ranges::AbstractArray{_MappedMemoryRange}\n\nAPI documentation\n\n_flush_mapped_memory_ranges(device, memory_ranges::AbstractArray) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._free_command_buffers-Tuple{Any, Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._free_command_buffers","text":"_free_command_buffers(device, command_pool, command_buffers::AbstractArray{CommandBuffer}, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ndevice\ncommand_pool (externsync)\ncommand_buffers::AbstractArray{CommandBuffer} (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\n_free_command_buffers(device, command_pool, command_buffers::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._free_command_buffers-Tuple{Any, Any, AbstractArray}","page":"API","title":"Vulkan._free_command_buffers","text":"_free_command_buffers(device, command_pool, command_buffers::AbstractArray{CommandBuffer})::Cvoid\n\nArguments:\n\ndevice\ncommand_pool (externsync)\ncommand_buffers::AbstractArray{CommandBuffer} (externsync)\n\nAPI documentation\n\n_free_command_buffers(device, command_pool, command_buffers::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._free_descriptor_sets-Tuple{Any, Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._free_descriptor_sets","text":"_free_descriptor_sets(device, descriptor_pool, descriptor_sets::AbstractArray{DescriptorSet}, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nArguments:\n\ndevice\ndescriptor_pool (externsync)\ndescriptor_sets::AbstractArray{DescriptorSet} (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\n_free_descriptor_sets(device, descriptor_pool, descriptor_sets::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._free_descriptor_sets-Tuple{Any, Any, AbstractArray}","page":"API","title":"Vulkan._free_descriptor_sets","text":"_free_descriptor_sets(device, descriptor_pool, descriptor_sets::AbstractArray{DescriptorSet})::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nArguments:\n\ndevice\ndescriptor_pool (externsync)\ndescriptor_sets::AbstractArray{DescriptorSet} (externsync)\n\nAPI documentation\n\n_free_descriptor_sets(device, descriptor_pool, descriptor_sets::AbstractArray) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._free_memory-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._free_memory","text":"_free_memory(device, memory, fptr::FunctionPtr; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nmemory (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_free_memory(device, memory, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._free_memory-Tuple{Any, Any}","page":"API","title":"Vulkan._free_memory","text":"_free_memory(device, memory; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice\nmemory (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_free_memory(device, memory; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_acceleration_structure_build_sizes_khr-Tuple{Any, AccelerationStructureBuildTypeKHR, _AccelerationStructureBuildGeometryInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_acceleration_structure_build_sizes_khr","text":"_get_acceleration_structure_build_sizes_khr(device, build_type::AccelerationStructureBuildTypeKHR, build_info::_AccelerationStructureBuildGeometryInfoKHR, fptr::FunctionPtr; max_primitive_counts = C_NULL)::_AccelerationStructureBuildSizesInfoKHR\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ndevice\nbuild_type::AccelerationStructureBuildTypeKHR\nbuild_info::_AccelerationStructureBuildGeometryInfoKHR\nfptr::FunctionPtr\nmax_primitive_counts: defaults to C_NULL\n\nAPI documentation\n\n_get_acceleration_structure_build_sizes_khr(device, build_type::AccelerationStructureBuildTypeKHR, build_info::_AccelerationStructureBuildGeometryInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}; max_primitive_counts) -> _AccelerationStructureBuildSizesInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_acceleration_structure_build_sizes_khr-Tuple{Any, AccelerationStructureBuildTypeKHR, _AccelerationStructureBuildGeometryInfoKHR}","page":"API","title":"Vulkan._get_acceleration_structure_build_sizes_khr","text":"_get_acceleration_structure_build_sizes_khr(device, build_type::AccelerationStructureBuildTypeKHR, build_info::_AccelerationStructureBuildGeometryInfoKHR; max_primitive_counts = C_NULL)::_AccelerationStructureBuildSizesInfoKHR\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ndevice\nbuild_type::AccelerationStructureBuildTypeKHR\nbuild_info::_AccelerationStructureBuildGeometryInfoKHR\nmax_primitive_counts: defaults to C_NULL\n\nAPI documentation\n\n_get_acceleration_structure_build_sizes_khr(device, build_type::AccelerationStructureBuildTypeKHR, build_info::_AccelerationStructureBuildGeometryInfoKHR; max_primitive_counts) -> _AccelerationStructureBuildSizesInfoKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_acceleration_structure_device_address_khr-Tuple{Any, _AccelerationStructureDeviceAddressInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_acceleration_structure_device_address_khr","text":"_get_acceleration_structure_device_address_khr(device, info::_AccelerationStructureDeviceAddressInfoKHR, fptr::FunctionPtr)::UInt64\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ndevice\ninfo::_AccelerationStructureDeviceAddressInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_acceleration_structure_device_address_khr(device, info::_AccelerationStructureDeviceAddressInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_acceleration_structure_device_address_khr-Tuple{Any, _AccelerationStructureDeviceAddressInfoKHR}","page":"API","title":"Vulkan._get_acceleration_structure_device_address_khr","text":"_get_acceleration_structure_device_address_khr(device, info::_AccelerationStructureDeviceAddressInfoKHR)::UInt64\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ndevice\ninfo::_AccelerationStructureDeviceAddressInfoKHR\n\nAPI documentation\n\n_get_acceleration_structure_device_address_khr(device, info::_AccelerationStructureDeviceAddressInfoKHR) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_acceleration_structure_handle_nv-Tuple{Any, Any, Integer, Ptr{Nothing}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_acceleration_structure_handle_nv","text":"_get_acceleration_structure_handle_nv(device, acceleration_structure, data_size::Integer, data::Ptr{Cvoid}, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_NV_ray_tracing\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nacceleration_structure\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_acceleration_structure_handle_nv(device, acceleration_structure, data_size::Integer, data::Ptr{Nothing}, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_acceleration_structure_handle_nv-Tuple{Any, Any, Integer, Ptr{Nothing}}","page":"API","title":"Vulkan._get_acceleration_structure_handle_nv","text":"_get_acceleration_structure_handle_nv(device, acceleration_structure, data_size::Integer, data::Ptr{Cvoid})::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_NV_ray_tracing\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nacceleration_structure\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\n\nAPI documentation\n\n_get_acceleration_structure_handle_nv(device, acceleration_structure, data_size::Integer, data::Ptr{Nothing}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_acceleration_structure_memory_requirements_nv-Tuple{Any, _AccelerationStructureMemoryRequirementsInfoNV, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_acceleration_structure_memory_requirements_nv","text":"_get_acceleration_structure_memory_requirements_nv(device, info::_AccelerationStructureMemoryRequirementsInfoNV, fptr::FunctionPtr)::VkMemoryRequirements2KHR\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ndevice\ninfo::_AccelerationStructureMemoryRequirementsInfoNV\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_acceleration_structure_memory_requirements_nv(device, info::_AccelerationStructureMemoryRequirementsInfoNV, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> VulkanCore.LibVulkan.VkMemoryRequirements2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_acceleration_structure_memory_requirements_nv-Tuple{Any, _AccelerationStructureMemoryRequirementsInfoNV}","page":"API","title":"Vulkan._get_acceleration_structure_memory_requirements_nv","text":"_get_acceleration_structure_memory_requirements_nv(device, info::_AccelerationStructureMemoryRequirementsInfoNV)::VkMemoryRequirements2KHR\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ndevice\ninfo::_AccelerationStructureMemoryRequirementsInfoNV\n\nAPI documentation\n\n_get_acceleration_structure_memory_requirements_nv(device, info::_AccelerationStructureMemoryRequirementsInfoNV) -> VulkanCore.LibVulkan.VkMemoryRequirements2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_buffer_device_address-Tuple{Any, _BufferDeviceAddressInfo, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_buffer_device_address","text":"_get_buffer_device_address(device, info::_BufferDeviceAddressInfo, fptr::FunctionPtr)::UInt64\n\nArguments:\n\ndevice\ninfo::_BufferDeviceAddressInfo\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_buffer_device_address(device, info::_BufferDeviceAddressInfo, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_buffer_device_address-Tuple{Any, _BufferDeviceAddressInfo}","page":"API","title":"Vulkan._get_buffer_device_address","text":"_get_buffer_device_address(device, info::_BufferDeviceAddressInfo)::UInt64\n\nArguments:\n\ndevice\ninfo::_BufferDeviceAddressInfo\n\nAPI documentation\n\n_get_buffer_device_address(device, info::_BufferDeviceAddressInfo) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_buffer_memory_requirements-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_buffer_memory_requirements","text":"_get_buffer_memory_requirements(device, buffer, fptr::FunctionPtr)::_MemoryRequirements\n\nArguments:\n\ndevice\nbuffer\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_buffer_memory_requirements(device, buffer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> _MemoryRequirements\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_buffer_memory_requirements-Tuple{Any, Any}","page":"API","title":"Vulkan._get_buffer_memory_requirements","text":"_get_buffer_memory_requirements(device, buffer)::_MemoryRequirements\n\nArguments:\n\ndevice\nbuffer\n\nAPI documentation\n\n_get_buffer_memory_requirements(device, buffer) -> _MemoryRequirements\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_buffer_memory_requirements_2-Tuple{Any, _BufferMemoryRequirementsInfo2, Union{Ptr{Nothing}, Base.CFunction}, Vararg{Type}}","page":"API","title":"Vulkan._get_buffer_memory_requirements_2","text":"_get_buffer_memory_requirements_2(device, info::_BufferMemoryRequirementsInfo2, fptr::FunctionPtr, next_types::Type...)::_MemoryRequirements2\n\nArguments:\n\ndevice\ninfo::_BufferMemoryRequirementsInfo2\nfptr::FunctionPtr\nnext_types::Type...\n\nAPI documentation\n\n_get_buffer_memory_requirements_2(device, info::_BufferMemoryRequirementsInfo2, fptr::Union{Ptr{Nothing}, Base.CFunction}, next_types::Type...) -> _MemoryRequirements2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_buffer_memory_requirements_2-Tuple{Any, _BufferMemoryRequirementsInfo2, Vararg{Type}}","page":"API","title":"Vulkan._get_buffer_memory_requirements_2","text":"_get_buffer_memory_requirements_2(device, info::_BufferMemoryRequirementsInfo2, next_types::Type...)::_MemoryRequirements2\n\nArguments:\n\ndevice\ninfo::_BufferMemoryRequirementsInfo2\nnext_types::Type...\n\nAPI documentation\n\n_get_buffer_memory_requirements_2(device, info::_BufferMemoryRequirementsInfo2, next_types::Type...) -> _MemoryRequirements2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_buffer_opaque_capture_address-Tuple{Any, _BufferDeviceAddressInfo, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_buffer_opaque_capture_address","text":"_get_buffer_opaque_capture_address(device, info::_BufferDeviceAddressInfo, fptr::FunctionPtr)::UInt64\n\nArguments:\n\ndevice\ninfo::_BufferDeviceAddressInfo\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_buffer_opaque_capture_address(device, info::_BufferDeviceAddressInfo, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_buffer_opaque_capture_address-Tuple{Any, _BufferDeviceAddressInfo}","page":"API","title":"Vulkan._get_buffer_opaque_capture_address","text":"_get_buffer_opaque_capture_address(device, info::_BufferDeviceAddressInfo)::UInt64\n\nArguments:\n\ndevice\ninfo::_BufferDeviceAddressInfo\n\nAPI documentation\n\n_get_buffer_opaque_capture_address(device, info::_BufferDeviceAddressInfo) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_calibrated_timestamps_ext-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_calibrated_timestamps_ext","text":"_get_calibrated_timestamps_ext(device, timestamp_infos::AbstractArray{_CalibratedTimestampInfoEXT}, fptr::FunctionPtr)::ResultTypes.Result{Tuple{Vector{UInt64}, UInt64}, VulkanError}\n\nExtension: VK_EXT_calibrated_timestamps\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ntimestamp_infos::AbstractArray{_CalibratedTimestampInfoEXT}\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_calibrated_timestamps_ext(device, timestamp_infos::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Tuple{Vector{UInt64}, UInt64}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_calibrated_timestamps_ext-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._get_calibrated_timestamps_ext","text":"_get_calibrated_timestamps_ext(device, timestamp_infos::AbstractArray{_CalibratedTimestampInfoEXT})::ResultTypes.Result{Tuple{Vector{UInt64}, UInt64}, VulkanError}\n\nExtension: VK_EXT_calibrated_timestamps\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ntimestamp_infos::AbstractArray{_CalibratedTimestampInfoEXT}\n\nAPI documentation\n\n_get_calibrated_timestamps_ext(device, timestamp_infos::AbstractArray) -> ResultTypes.Result{Tuple{Vector{UInt64}, UInt64}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_deferred_operation_max_concurrency_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_deferred_operation_max_concurrency_khr","text":"_get_deferred_operation_max_concurrency_khr(device, operation, fptr::FunctionPtr)::UInt32\n\nExtension: VK_KHR_deferred_host_operations\n\nArguments:\n\ndevice\noperation\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_deferred_operation_max_concurrency_khr(device, operation, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> UInt32\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_deferred_operation_max_concurrency_khr-Tuple{Any, Any}","page":"API","title":"Vulkan._get_deferred_operation_max_concurrency_khr","text":"_get_deferred_operation_max_concurrency_khr(device, operation)::UInt32\n\nExtension: VK_KHR_deferred_host_operations\n\nArguments:\n\ndevice\noperation\n\nAPI documentation\n\n_get_deferred_operation_max_concurrency_khr(device, operation) -> UInt32\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_deferred_operation_result_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_deferred_operation_result_khr","text":"_get_deferred_operation_result_khr(device, operation, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_deferred_host_operations\n\nReturn codes:\n\nSuccess:\nSUCCESS\nNOT_READY\n\nArguments:\n\ndevice\noperation\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_deferred_operation_result_khr(device, operation, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_deferred_operation_result_khr-Tuple{Any, Any}","page":"API","title":"Vulkan._get_deferred_operation_result_khr","text":"_get_deferred_operation_result_khr(device, operation)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_deferred_host_operations\n\nReturn codes:\n\nSuccess:\nSUCCESS\nNOT_READY\n\nArguments:\n\ndevice\noperation\n\nAPI documentation\n\n_get_deferred_operation_result_khr(device, operation) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_descriptor_set_layout_support-Tuple{Any, _DescriptorSetLayoutCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Vararg{Type}}","page":"API","title":"Vulkan._get_descriptor_set_layout_support","text":"_get_descriptor_set_layout_support(device, create_info::_DescriptorSetLayoutCreateInfo, fptr::FunctionPtr, next_types::Type...)::_DescriptorSetLayoutSupport\n\nArguments:\n\ndevice\ncreate_info::_DescriptorSetLayoutCreateInfo\nfptr::FunctionPtr\nnext_types::Type...\n\nAPI documentation\n\n_get_descriptor_set_layout_support(device, create_info::_DescriptorSetLayoutCreateInfo, fptr::Union{Ptr{Nothing}, Base.CFunction}, next_types::Type...) -> _DescriptorSetLayoutSupport\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_descriptor_set_layout_support-Tuple{Any, _DescriptorSetLayoutCreateInfo, Vararg{Type}}","page":"API","title":"Vulkan._get_descriptor_set_layout_support","text":"_get_descriptor_set_layout_support(device, create_info::_DescriptorSetLayoutCreateInfo, next_types::Type...)::_DescriptorSetLayoutSupport\n\nArguments:\n\ndevice\ncreate_info::_DescriptorSetLayoutCreateInfo\nnext_types::Type...\n\nAPI documentation\n\n_get_descriptor_set_layout_support(device, create_info::_DescriptorSetLayoutCreateInfo, next_types::Type...) -> _DescriptorSetLayoutSupport\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_device_acceleration_structure_compatibility_khr-Tuple{Any, _AccelerationStructureVersionInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_device_acceleration_structure_compatibility_khr","text":"_get_device_acceleration_structure_compatibility_khr(device, version_info::_AccelerationStructureVersionInfoKHR, fptr::FunctionPtr)::AccelerationStructureCompatibilityKHR\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ndevice\nversion_info::_AccelerationStructureVersionInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_device_acceleration_structure_compatibility_khr(device, version_info::_AccelerationStructureVersionInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> AccelerationStructureCompatibilityKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_device_acceleration_structure_compatibility_khr-Tuple{Any, _AccelerationStructureVersionInfoKHR}","page":"API","title":"Vulkan._get_device_acceleration_structure_compatibility_khr","text":"_get_device_acceleration_structure_compatibility_khr(device, version_info::_AccelerationStructureVersionInfoKHR)::AccelerationStructureCompatibilityKHR\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ndevice\nversion_info::_AccelerationStructureVersionInfoKHR\n\nAPI documentation\n\n_get_device_acceleration_structure_compatibility_khr(device, version_info::_AccelerationStructureVersionInfoKHR) -> AccelerationStructureCompatibilityKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_device_group_peer_memory_features-Tuple{Any, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_device_group_peer_memory_features","text":"_get_device_group_peer_memory_features(device, heap_index::Integer, local_device_index::Integer, remote_device_index::Integer, fptr::FunctionPtr)::PeerMemoryFeatureFlag\n\nArguments:\n\ndevice\nheap_index::Integer\nlocal_device_index::Integer\nremote_device_index::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_device_group_peer_memory_features(device, heap_index::Integer, local_device_index::Integer, remote_device_index::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> PeerMemoryFeatureFlag\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_device_group_peer_memory_features-Tuple{Any, Integer, Integer, Integer}","page":"API","title":"Vulkan._get_device_group_peer_memory_features","text":"_get_device_group_peer_memory_features(device, heap_index::Integer, local_device_index::Integer, remote_device_index::Integer)::PeerMemoryFeatureFlag\n\nArguments:\n\ndevice\nheap_index::Integer\nlocal_device_index::Integer\nremote_device_index::Integer\n\nAPI documentation\n\n_get_device_group_peer_memory_features(device, heap_index::Integer, local_device_index::Integer, remote_device_index::Integer) -> PeerMemoryFeatureFlag\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_device_group_present_capabilities_khr-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_device_group_present_capabilities_khr","text":"_get_device_group_present_capabilities_khr(device, fptr::FunctionPtr)::ResultTypes.Result{_DeviceGroupPresentCapabilitiesKHR, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_device_group_present_capabilities_khr(device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{_DeviceGroupPresentCapabilitiesKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_device_group_present_capabilities_khr-Tuple{Any}","page":"API","title":"Vulkan._get_device_group_present_capabilities_khr","text":"_get_device_group_present_capabilities_khr(device)::ResultTypes.Result{_DeviceGroupPresentCapabilitiesKHR, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\n\nAPI documentation\n\n_get_device_group_present_capabilities_khr(device) -> ResultTypes.Result{_DeviceGroupPresentCapabilitiesKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_device_group_surface_present_modes_khr-Tuple{Any, Any, DeviceGroupPresentModeFlagKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_device_group_surface_present_modes_khr","text":"_get_device_group_surface_present_modes_khr(device, surface, modes::DeviceGroupPresentModeFlagKHR, fptr::FunctionPtr)::ResultTypes.Result{DeviceGroupPresentModeFlagKHR, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\ndevice\nsurface (externsync)\nmodes::DeviceGroupPresentModeFlagKHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_device_group_surface_present_modes_khr(device, surface, modes::DeviceGroupPresentModeFlagKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{DeviceGroupPresentModeFlagKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_device_group_surface_present_modes_khr-Tuple{Any, Any, DeviceGroupPresentModeFlagKHR}","page":"API","title":"Vulkan._get_device_group_surface_present_modes_khr","text":"_get_device_group_surface_present_modes_khr(device, surface, modes::DeviceGroupPresentModeFlagKHR)::ResultTypes.Result{DeviceGroupPresentModeFlagKHR, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\ndevice\nsurface (externsync)\nmodes::DeviceGroupPresentModeFlagKHR\n\nAPI documentation\n\n_get_device_group_surface_present_modes_khr(device, surface, modes::DeviceGroupPresentModeFlagKHR) -> ResultTypes.Result{DeviceGroupPresentModeFlagKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_device_memory_commitment-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_device_memory_commitment","text":"_get_device_memory_commitment(device, memory, fptr::FunctionPtr)::UInt64\n\nArguments:\n\ndevice\nmemory\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_device_memory_commitment(device, memory, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_device_memory_commitment-Tuple{Any, Any}","page":"API","title":"Vulkan._get_device_memory_commitment","text":"_get_device_memory_commitment(device, memory)::UInt64\n\nArguments:\n\ndevice\nmemory\n\nAPI documentation\n\n_get_device_memory_commitment(device, memory) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_device_memory_opaque_capture_address-Tuple{Any, _DeviceMemoryOpaqueCaptureAddressInfo, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_device_memory_opaque_capture_address","text":"_get_device_memory_opaque_capture_address(device, info::_DeviceMemoryOpaqueCaptureAddressInfo, fptr::FunctionPtr)::UInt64\n\nArguments:\n\ndevice\ninfo::_DeviceMemoryOpaqueCaptureAddressInfo\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_device_memory_opaque_capture_address(device, info::_DeviceMemoryOpaqueCaptureAddressInfo, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_device_memory_opaque_capture_address-Tuple{Any, _DeviceMemoryOpaqueCaptureAddressInfo}","page":"API","title":"Vulkan._get_device_memory_opaque_capture_address","text":"_get_device_memory_opaque_capture_address(device, info::_DeviceMemoryOpaqueCaptureAddressInfo)::UInt64\n\nArguments:\n\ndevice\ninfo::_DeviceMemoryOpaqueCaptureAddressInfo\n\nAPI documentation\n\n_get_device_memory_opaque_capture_address(device, info::_DeviceMemoryOpaqueCaptureAddressInfo) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_device_proc_addr-Tuple{Any, AbstractString, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_device_proc_addr","text":"_get_device_proc_addr(device, name::AbstractString, fptr::FunctionPtr)::FunctionPtr\n\nArguments:\n\ndevice\nname::AbstractString\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_device_proc_addr(device, name::AbstractString, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Ptr{Nothing}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_device_proc_addr-Tuple{Any, AbstractString}","page":"API","title":"Vulkan._get_device_proc_addr","text":"_get_device_proc_addr(device, name::AbstractString)::FunctionPtr\n\nArguments:\n\ndevice\nname::AbstractString\n\nAPI documentation\n\n_get_device_proc_addr(device, name::AbstractString) -> Ptr{Nothing}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_device_queue-Tuple{Any, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_device_queue","text":"_get_device_queue(device, queue_family_index::Integer, queue_index::Integer, fptr::FunctionPtr)::Queue\n\nArguments:\n\ndevice\nqueue_family_index::Integer\nqueue_index::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_device_queue(device, queue_family_index::Integer, queue_index::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Queue\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_device_queue-Tuple{Any, Integer, Integer}","page":"API","title":"Vulkan._get_device_queue","text":"_get_device_queue(device, queue_family_index::Integer, queue_index::Integer)::Queue\n\nArguments:\n\ndevice\nqueue_family_index::Integer\nqueue_index::Integer\n\nAPI documentation\n\n_get_device_queue(device, queue_family_index::Integer, queue_index::Integer) -> Queue\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_device_queue_2-Tuple{Any, _DeviceQueueInfo2, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_device_queue_2","text":"_get_device_queue_2(device, queue_info::_DeviceQueueInfo2, fptr::FunctionPtr)::Queue\n\nArguments:\n\ndevice\nqueue_info::_DeviceQueueInfo2\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_device_queue_2(device, queue_info::_DeviceQueueInfo2, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Queue\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_device_queue_2-Tuple{Any, _DeviceQueueInfo2}","page":"API","title":"Vulkan._get_device_queue_2","text":"_get_device_queue_2(device, queue_info::_DeviceQueueInfo2)::Queue\n\nArguments:\n\ndevice\nqueue_info::_DeviceQueueInfo2\n\nAPI documentation\n\n_get_device_queue_2(device, queue_info::_DeviceQueueInfo2) -> Queue\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_display_mode_properties_2_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_display_mode_properties_2_khr","text":"_get_display_mode_properties_2_khr(physical_device, display, fptr::FunctionPtr)::ResultTypes.Result{Vector{_DisplayModeProperties2KHR}, VulkanError}\n\nExtension: VK_KHR_get_display_properties2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\ndisplay\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_display_mode_properties_2_khr(physical_device, display, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{_DisplayModeProperties2KHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_display_mode_properties_2_khr-Tuple{Any, Any}","page":"API","title":"Vulkan._get_display_mode_properties_2_khr","text":"_get_display_mode_properties_2_khr(physical_device, display)::ResultTypes.Result{Vector{_DisplayModeProperties2KHR}, VulkanError}\n\nExtension: VK_KHR_get_display_properties2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\ndisplay\n\nAPI documentation\n\n_get_display_mode_properties_2_khr(physical_device, display) -> ResultTypes.Result{Vector{_DisplayModeProperties2KHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_display_mode_properties_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_display_mode_properties_khr","text":"_get_display_mode_properties_khr(physical_device, display, fptr::FunctionPtr)::ResultTypes.Result{Vector{_DisplayModePropertiesKHR}, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\ndisplay\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_display_mode_properties_khr(physical_device, display, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{_DisplayModePropertiesKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_display_mode_properties_khr-Tuple{Any, Any}","page":"API","title":"Vulkan._get_display_mode_properties_khr","text":"_get_display_mode_properties_khr(physical_device, display)::ResultTypes.Result{Vector{_DisplayModePropertiesKHR}, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\ndisplay\n\nAPI documentation\n\n_get_display_mode_properties_khr(physical_device, display) -> ResultTypes.Result{Vector{_DisplayModePropertiesKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_display_plane_capabilities_2_khr-Tuple{Any, _DisplayPlaneInfo2KHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_display_plane_capabilities_2_khr","text":"_get_display_plane_capabilities_2_khr(physical_device, display_plane_info::_DisplayPlaneInfo2KHR, fptr::FunctionPtr)::ResultTypes.Result{_DisplayPlaneCapabilities2KHR, VulkanError}\n\nExtension: VK_KHR_get_display_properties2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\ndisplay_plane_info::_DisplayPlaneInfo2KHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_display_plane_capabilities_2_khr(physical_device, display_plane_info::_DisplayPlaneInfo2KHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{_DisplayPlaneCapabilities2KHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_display_plane_capabilities_2_khr-Tuple{Any, _DisplayPlaneInfo2KHR}","page":"API","title":"Vulkan._get_display_plane_capabilities_2_khr","text":"_get_display_plane_capabilities_2_khr(physical_device, display_plane_info::_DisplayPlaneInfo2KHR)::ResultTypes.Result{_DisplayPlaneCapabilities2KHR, VulkanError}\n\nExtension: VK_KHR_get_display_properties2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\ndisplay_plane_info::_DisplayPlaneInfo2KHR\n\nAPI documentation\n\n_get_display_plane_capabilities_2_khr(physical_device, display_plane_info::_DisplayPlaneInfo2KHR) -> ResultTypes.Result{_DisplayPlaneCapabilities2KHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_display_plane_capabilities_khr-Tuple{Any, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_display_plane_capabilities_khr","text":"_get_display_plane_capabilities_khr(physical_device, mode, plane_index::Integer, fptr::FunctionPtr)::ResultTypes.Result{_DisplayPlaneCapabilitiesKHR, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nmode (externsync)\nplane_index::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_display_plane_capabilities_khr(physical_device, mode, plane_index::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{_DisplayPlaneCapabilitiesKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_display_plane_capabilities_khr-Tuple{Any, Any, Integer}","page":"API","title":"Vulkan._get_display_plane_capabilities_khr","text":"_get_display_plane_capabilities_khr(physical_device, mode, plane_index::Integer)::ResultTypes.Result{_DisplayPlaneCapabilitiesKHR, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nmode (externsync)\nplane_index::Integer\n\nAPI documentation\n\n_get_display_plane_capabilities_khr(physical_device, mode, plane_index::Integer) -> ResultTypes.Result{_DisplayPlaneCapabilitiesKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_display_plane_supported_displays_khr-Tuple{Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_display_plane_supported_displays_khr","text":"_get_display_plane_supported_displays_khr(physical_device, plane_index::Integer, fptr::FunctionPtr)::ResultTypes.Result{Vector{DisplayKHR}, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nplane_index::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_display_plane_supported_displays_khr(physical_device, plane_index::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{DisplayKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_display_plane_supported_displays_khr-Tuple{Any, Integer}","page":"API","title":"Vulkan._get_display_plane_supported_displays_khr","text":"_get_display_plane_supported_displays_khr(physical_device, plane_index::Integer)::ResultTypes.Result{Vector{DisplayKHR}, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nplane_index::Integer\n\nAPI documentation\n\n_get_display_plane_supported_displays_khr(physical_device, plane_index::Integer) -> ResultTypes.Result{Vector{DisplayKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_event_status-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_event_status","text":"_get_event_status(device, event, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nEVENT_SET\nEVENT_RESET\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\nevent\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_event_status(device, event, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_event_status-Tuple{Any, Any}","page":"API","title":"Vulkan._get_event_status","text":"_get_event_status(device, event)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nEVENT_SET\nEVENT_RESET\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\nevent\n\nAPI documentation\n\n_get_event_status(device, event) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_fence_fd_khr-Tuple{Any, _FenceGetFdInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_fence_fd_khr","text":"_get_fence_fd_khr(device, get_fd_info::_FenceGetFdInfoKHR, fptr::FunctionPtr)::ResultTypes.Result{Int, VulkanError}\n\nExtension: VK_KHR_external_fence_fd\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nget_fd_info::_FenceGetFdInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_fence_fd_khr(device, get_fd_info::_FenceGetFdInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_fence_fd_khr-Tuple{Any, _FenceGetFdInfoKHR}","page":"API","title":"Vulkan._get_fence_fd_khr","text":"_get_fence_fd_khr(device, get_fd_info::_FenceGetFdInfoKHR)::ResultTypes.Result{Int, VulkanError}\n\nExtension: VK_KHR_external_fence_fd\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nget_fd_info::_FenceGetFdInfoKHR\n\nAPI documentation\n\n_get_fence_fd_khr(device, get_fd_info::_FenceGetFdInfoKHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_fence_status-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_fence_status","text":"_get_fence_status(device, fence, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nNOT_READY\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\nfence\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_fence_status(device, fence, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_fence_status-Tuple{Any, Any}","page":"API","title":"Vulkan._get_fence_status","text":"_get_fence_status(device, fence)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nNOT_READY\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\nfence\n\nAPI documentation\n\n_get_fence_status(device, fence) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_generated_commands_memory_requirements_nv-Tuple{Any, _GeneratedCommandsMemoryRequirementsInfoNV, Union{Ptr{Nothing}, Base.CFunction}, Vararg{Type}}","page":"API","title":"Vulkan._get_generated_commands_memory_requirements_nv","text":"_get_generated_commands_memory_requirements_nv(device, info::_GeneratedCommandsMemoryRequirementsInfoNV, fptr::FunctionPtr, next_types::Type...)::_MemoryRequirements2\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ndevice\ninfo::_GeneratedCommandsMemoryRequirementsInfoNV\nfptr::FunctionPtr\nnext_types::Type...\n\nAPI documentation\n\n_get_generated_commands_memory_requirements_nv(device, info::_GeneratedCommandsMemoryRequirementsInfoNV, fptr::Union{Ptr{Nothing}, Base.CFunction}, next_types::Type...) -> _MemoryRequirements2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_generated_commands_memory_requirements_nv-Tuple{Any, _GeneratedCommandsMemoryRequirementsInfoNV, Vararg{Type}}","page":"API","title":"Vulkan._get_generated_commands_memory_requirements_nv","text":"_get_generated_commands_memory_requirements_nv(device, info::_GeneratedCommandsMemoryRequirementsInfoNV, next_types::Type...)::_MemoryRequirements2\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ndevice\ninfo::_GeneratedCommandsMemoryRequirementsInfoNV\nnext_types::Type...\n\nAPI documentation\n\n_get_generated_commands_memory_requirements_nv(device, info::_GeneratedCommandsMemoryRequirementsInfoNV, next_types::Type...) -> _MemoryRequirements2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_image_drm_format_modifier_properties_ext-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_image_drm_format_modifier_properties_ext","text":"_get_image_drm_format_modifier_properties_ext(device, image, fptr::FunctionPtr)::ResultTypes.Result{_ImageDrmFormatModifierPropertiesEXT, VulkanError}\n\nExtension: VK_EXT_image_drm_format_modifier\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nimage\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_image_drm_format_modifier_properties_ext(device, image, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{_ImageDrmFormatModifierPropertiesEXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_image_drm_format_modifier_properties_ext-Tuple{Any, Any}","page":"API","title":"Vulkan._get_image_drm_format_modifier_properties_ext","text":"_get_image_drm_format_modifier_properties_ext(device, image)::ResultTypes.Result{_ImageDrmFormatModifierPropertiesEXT, VulkanError}\n\nExtension: VK_EXT_image_drm_format_modifier\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nimage\n\nAPI documentation\n\n_get_image_drm_format_modifier_properties_ext(device, image) -> ResultTypes.Result{_ImageDrmFormatModifierPropertiesEXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_image_memory_requirements-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_image_memory_requirements","text":"_get_image_memory_requirements(device, image, fptr::FunctionPtr)::_MemoryRequirements\n\nArguments:\n\ndevice\nimage\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_image_memory_requirements(device, image, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> _MemoryRequirements\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_image_memory_requirements-Tuple{Any, Any}","page":"API","title":"Vulkan._get_image_memory_requirements","text":"_get_image_memory_requirements(device, image)::_MemoryRequirements\n\nArguments:\n\ndevice\nimage\n\nAPI documentation\n\n_get_image_memory_requirements(device, image) -> _MemoryRequirements\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_image_memory_requirements_2-Tuple{Any, _ImageMemoryRequirementsInfo2, Union{Ptr{Nothing}, Base.CFunction}, Vararg{Type}}","page":"API","title":"Vulkan._get_image_memory_requirements_2","text":"_get_image_memory_requirements_2(device, info::_ImageMemoryRequirementsInfo2, fptr::FunctionPtr, next_types::Type...)::_MemoryRequirements2\n\nArguments:\n\ndevice\ninfo::_ImageMemoryRequirementsInfo2\nfptr::FunctionPtr\nnext_types::Type...\n\nAPI documentation\n\n_get_image_memory_requirements_2(device, info::_ImageMemoryRequirementsInfo2, fptr::Union{Ptr{Nothing}, Base.CFunction}, next_types::Type...) -> _MemoryRequirements2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_image_memory_requirements_2-Tuple{Any, _ImageMemoryRequirementsInfo2, Vararg{Type}}","page":"API","title":"Vulkan._get_image_memory_requirements_2","text":"_get_image_memory_requirements_2(device, info::_ImageMemoryRequirementsInfo2, next_types::Type...)::_MemoryRequirements2\n\nArguments:\n\ndevice\ninfo::_ImageMemoryRequirementsInfo2\nnext_types::Type...\n\nAPI documentation\n\n_get_image_memory_requirements_2(device, info::_ImageMemoryRequirementsInfo2, next_types::Type...) -> _MemoryRequirements2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_image_sparse_memory_requirements-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_image_sparse_memory_requirements","text":"_get_image_sparse_memory_requirements(device, image, fptr::FunctionPtr)::Vector{_SparseImageMemoryRequirements}\n\nArguments:\n\ndevice\nimage\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_image_sparse_memory_requirements(device, image, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Vector{_SparseImageMemoryRequirements}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_image_sparse_memory_requirements-Tuple{Any, Any}","page":"API","title":"Vulkan._get_image_sparse_memory_requirements","text":"_get_image_sparse_memory_requirements(device, image)::Vector{_SparseImageMemoryRequirements}\n\nArguments:\n\ndevice\nimage\n\nAPI documentation\n\n_get_image_sparse_memory_requirements(device, image) -> Vector{_SparseImageMemoryRequirements}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_image_sparse_memory_requirements_2-Tuple{Any, _ImageSparseMemoryRequirementsInfo2, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_image_sparse_memory_requirements_2","text":"_get_image_sparse_memory_requirements_2(device, info::_ImageSparseMemoryRequirementsInfo2, fptr::FunctionPtr)::Vector{_SparseImageMemoryRequirements2}\n\nArguments:\n\ndevice\ninfo::_ImageSparseMemoryRequirementsInfo2\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_image_sparse_memory_requirements_2(device, info::_ImageSparseMemoryRequirementsInfo2, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Vector{_SparseImageMemoryRequirements2}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_image_sparse_memory_requirements_2-Tuple{Any, _ImageSparseMemoryRequirementsInfo2}","page":"API","title":"Vulkan._get_image_sparse_memory_requirements_2","text":"_get_image_sparse_memory_requirements_2(device, info::_ImageSparseMemoryRequirementsInfo2)::Vector{_SparseImageMemoryRequirements2}\n\nArguments:\n\ndevice\ninfo::_ImageSparseMemoryRequirementsInfo2\n\nAPI documentation\n\n_get_image_sparse_memory_requirements_2(device, info::_ImageSparseMemoryRequirementsInfo2) -> Vector{_SparseImageMemoryRequirements2}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_image_subresource_layout-Tuple{Any, Any, _ImageSubresource, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_image_subresource_layout","text":"_get_image_subresource_layout(device, image, subresource::_ImageSubresource, fptr::FunctionPtr)::_SubresourceLayout\n\nArguments:\n\ndevice\nimage\nsubresource::_ImageSubresource\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_image_subresource_layout(device, image, subresource::_ImageSubresource, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> _SubresourceLayout\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_image_subresource_layout-Tuple{Any, Any, _ImageSubresource}","page":"API","title":"Vulkan._get_image_subresource_layout","text":"_get_image_subresource_layout(device, image, subresource::_ImageSubresource)::_SubresourceLayout\n\nArguments:\n\ndevice\nimage\nsubresource::_ImageSubresource\n\nAPI documentation\n\n_get_image_subresource_layout(device, image, subresource::_ImageSubresource) -> _SubresourceLayout\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_image_view_address_nvx-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_image_view_address_nvx","text":"_get_image_view_address_nvx(device, image_view, fptr::FunctionPtr)::ResultTypes.Result{_ImageViewAddressPropertiesNVX, VulkanError}\n\nExtension: VK_NVX_image_view_handle\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_UNKNOWN\n\nArguments:\n\ndevice\nimage_view\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_image_view_address_nvx(device, image_view, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{_ImageViewAddressPropertiesNVX, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_image_view_address_nvx-Tuple{Any, Any}","page":"API","title":"Vulkan._get_image_view_address_nvx","text":"_get_image_view_address_nvx(device, image_view)::ResultTypes.Result{_ImageViewAddressPropertiesNVX, VulkanError}\n\nExtension: VK_NVX_image_view_handle\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_UNKNOWN\n\nArguments:\n\ndevice\nimage_view\n\nAPI documentation\n\n_get_image_view_address_nvx(device, image_view) -> ResultTypes.Result{_ImageViewAddressPropertiesNVX, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_image_view_handle_nvx-Tuple{Any, _ImageViewHandleInfoNVX, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_image_view_handle_nvx","text":"_get_image_view_handle_nvx(device, info::_ImageViewHandleInfoNVX, fptr::FunctionPtr)::UInt32\n\nExtension: VK_NVX_image_view_handle\n\nArguments:\n\ndevice\ninfo::_ImageViewHandleInfoNVX\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_image_view_handle_nvx(device, info::_ImageViewHandleInfoNVX, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> UInt32\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_image_view_handle_nvx-Tuple{Any, _ImageViewHandleInfoNVX}","page":"API","title":"Vulkan._get_image_view_handle_nvx","text":"_get_image_view_handle_nvx(device, info::_ImageViewHandleInfoNVX)::UInt32\n\nExtension: VK_NVX_image_view_handle\n\nArguments:\n\ndevice\ninfo::_ImageViewHandleInfoNVX\n\nAPI documentation\n\n_get_image_view_handle_nvx(device, info::_ImageViewHandleInfoNVX) -> UInt32\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_instance_proc_addr-Tuple{AbstractString, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_instance_proc_addr","text":"_get_instance_proc_addr(name::AbstractString, fptr::FunctionPtr; instance = C_NULL)::FunctionPtr\n\nArguments:\n\nname::AbstractString\nfptr::FunctionPtr\ninstance: defaults to C_NULL\n\nAPI documentation\n\n_get_instance_proc_addr(name::AbstractString, fptr::Union{Ptr{Nothing}, Base.CFunction}; instance) -> Ptr{Nothing}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_instance_proc_addr-Tuple{AbstractString}","page":"API","title":"Vulkan._get_instance_proc_addr","text":"_get_instance_proc_addr(name::AbstractString; instance = C_NULL)::FunctionPtr\n\nArguments:\n\nname::AbstractString\ninstance: defaults to C_NULL\n\nAPI documentation\n\n_get_instance_proc_addr(name::AbstractString; instance) -> Ptr{Nothing}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_memory_fd_khr-Tuple{Any, _MemoryGetFdInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_memory_fd_khr","text":"_get_memory_fd_khr(device, get_fd_info::_MemoryGetFdInfoKHR, fptr::FunctionPtr)::ResultTypes.Result{Int, VulkanError}\n\nExtension: VK_KHR_external_memory_fd\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nget_fd_info::_MemoryGetFdInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_memory_fd_khr(device, get_fd_info::_MemoryGetFdInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_memory_fd_khr-Tuple{Any, _MemoryGetFdInfoKHR}","page":"API","title":"Vulkan._get_memory_fd_khr","text":"_get_memory_fd_khr(device, get_fd_info::_MemoryGetFdInfoKHR)::ResultTypes.Result{Int, VulkanError}\n\nExtension: VK_KHR_external_memory_fd\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nget_fd_info::_MemoryGetFdInfoKHR\n\nAPI documentation\n\n_get_memory_fd_khr(device, get_fd_info::_MemoryGetFdInfoKHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_memory_fd_properties_khr-Tuple{Any, ExternalMemoryHandleTypeFlag, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_memory_fd_properties_khr","text":"_get_memory_fd_properties_khr(device, handle_type::ExternalMemoryHandleTypeFlag, fd::Integer, fptr::FunctionPtr)::ResultTypes.Result{_MemoryFdPropertiesKHR, VulkanError}\n\nExtension: VK_KHR_external_memory_fd\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\n\nArguments:\n\ndevice\nhandle_type::ExternalMemoryHandleTypeFlag\nfd::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_memory_fd_properties_khr(device, handle_type::ExternalMemoryHandleTypeFlag, fd::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{_MemoryFdPropertiesKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_memory_fd_properties_khr-Tuple{Any, ExternalMemoryHandleTypeFlag, Integer}","page":"API","title":"Vulkan._get_memory_fd_properties_khr","text":"_get_memory_fd_properties_khr(device, handle_type::ExternalMemoryHandleTypeFlag, fd::Integer)::ResultTypes.Result{_MemoryFdPropertiesKHR, VulkanError}\n\nExtension: VK_KHR_external_memory_fd\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\n\nArguments:\n\ndevice\nhandle_type::ExternalMemoryHandleTypeFlag\nfd::Integer\n\nAPI documentation\n\n_get_memory_fd_properties_khr(device, handle_type::ExternalMemoryHandleTypeFlag, fd::Integer) -> ResultTypes.Result{_MemoryFdPropertiesKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_memory_host_pointer_properties_ext-Tuple{Any, ExternalMemoryHandleTypeFlag, Ptr{Nothing}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_memory_host_pointer_properties_ext","text":"_get_memory_host_pointer_properties_ext(device, handle_type::ExternalMemoryHandleTypeFlag, host_pointer::Ptr{Cvoid}, fptr::FunctionPtr)::ResultTypes.Result{_MemoryHostPointerPropertiesEXT, VulkanError}\n\nExtension: VK_EXT_external_memory_host\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\n\nArguments:\n\ndevice\nhandle_type::ExternalMemoryHandleTypeFlag\nhost_pointer::Ptr{Cvoid}\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_memory_host_pointer_properties_ext(device, handle_type::ExternalMemoryHandleTypeFlag, host_pointer::Ptr{Nothing}, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{_MemoryHostPointerPropertiesEXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_memory_host_pointer_properties_ext-Tuple{Any, ExternalMemoryHandleTypeFlag, Ptr{Nothing}}","page":"API","title":"Vulkan._get_memory_host_pointer_properties_ext","text":"_get_memory_host_pointer_properties_ext(device, handle_type::ExternalMemoryHandleTypeFlag, host_pointer::Ptr{Cvoid})::ResultTypes.Result{_MemoryHostPointerPropertiesEXT, VulkanError}\n\nExtension: VK_EXT_external_memory_host\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\n\nArguments:\n\ndevice\nhandle_type::ExternalMemoryHandleTypeFlag\nhost_pointer::Ptr{Cvoid}\n\nAPI documentation\n\n_get_memory_host_pointer_properties_ext(device, handle_type::ExternalMemoryHandleTypeFlag, host_pointer::Ptr{Nothing}) -> ResultTypes.Result{_MemoryHostPointerPropertiesEXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_past_presentation_timing_google-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_past_presentation_timing_google","text":"_get_past_presentation_timing_google(device, swapchain, fptr::FunctionPtr)::ResultTypes.Result{Vector{_PastPresentationTimingGOOGLE}, VulkanError}\n\nExtension: VK_GOOGLE_display_timing\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\ndevice\nswapchain (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_past_presentation_timing_google(device, swapchain, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{_PastPresentationTimingGOOGLE}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_past_presentation_timing_google-Tuple{Any, Any}","page":"API","title":"Vulkan._get_past_presentation_timing_google","text":"_get_past_presentation_timing_google(device, swapchain)::ResultTypes.Result{Vector{_PastPresentationTimingGOOGLE}, VulkanError}\n\nExtension: VK_GOOGLE_display_timing\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\ndevice\nswapchain (externsync)\n\nAPI documentation\n\n_get_past_presentation_timing_google(device, swapchain) -> ResultTypes.Result{Vector{_PastPresentationTimingGOOGLE}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_performance_parameter_intel-Tuple{Any, PerformanceParameterTypeINTEL, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_performance_parameter_intel","text":"_get_performance_parameter_intel(device, parameter::PerformanceParameterTypeINTEL, fptr::FunctionPtr)::ResultTypes.Result{_PerformanceValueINTEL, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nparameter::PerformanceParameterTypeINTEL\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_performance_parameter_intel(device, parameter::PerformanceParameterTypeINTEL, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{_PerformanceValueINTEL, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_performance_parameter_intel-Tuple{Any, PerformanceParameterTypeINTEL}","page":"API","title":"Vulkan._get_performance_parameter_intel","text":"_get_performance_parameter_intel(device, parameter::PerformanceParameterTypeINTEL)::ResultTypes.Result{_PerformanceValueINTEL, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nparameter::PerformanceParameterTypeINTEL\n\nAPI documentation\n\n_get_performance_parameter_intel(device, parameter::PerformanceParameterTypeINTEL) -> ResultTypes.Result{_PerformanceValueINTEL, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_calibrateable_time_domains_ext-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_calibrateable_time_domains_ext","text":"_get_physical_device_calibrateable_time_domains_ext(physical_device, fptr::FunctionPtr)::ResultTypes.Result{Vector{TimeDomainEXT}, VulkanError}\n\nExtension: VK_EXT_calibrated_timestamps\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_calibrateable_time_domains_ext(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{TimeDomainEXT}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_calibrateable_time_domains_ext-Tuple{Any}","page":"API","title":"Vulkan._get_physical_device_calibrateable_time_domains_ext","text":"_get_physical_device_calibrateable_time_domains_ext(physical_device)::ResultTypes.Result{Vector{TimeDomainEXT}, VulkanError}\n\nExtension: VK_EXT_calibrated_timestamps\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\n_get_physical_device_calibrateable_time_domains_ext(physical_device) -> ResultTypes.Result{Vector{TimeDomainEXT}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_cooperative_matrix_properties_nv-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_cooperative_matrix_properties_nv","text":"_get_physical_device_cooperative_matrix_properties_nv(physical_device, fptr::FunctionPtr)::ResultTypes.Result{Vector{_CooperativeMatrixPropertiesNV}, VulkanError}\n\nExtension: VK_NV_cooperative_matrix\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_cooperative_matrix_properties_nv(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{_CooperativeMatrixPropertiesNV}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_cooperative_matrix_properties_nv-Tuple{Any}","page":"API","title":"Vulkan._get_physical_device_cooperative_matrix_properties_nv","text":"_get_physical_device_cooperative_matrix_properties_nv(physical_device)::ResultTypes.Result{Vector{_CooperativeMatrixPropertiesNV}, VulkanError}\n\nExtension: VK_NV_cooperative_matrix\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\n_get_physical_device_cooperative_matrix_properties_nv(physical_device) -> ResultTypes.Result{Vector{_CooperativeMatrixPropertiesNV}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_display_plane_properties_2_khr-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_display_plane_properties_2_khr","text":"_get_physical_device_display_plane_properties_2_khr(physical_device, fptr::FunctionPtr)::ResultTypes.Result{Vector{_DisplayPlaneProperties2KHR}, VulkanError}\n\nExtension: VK_KHR_get_display_properties2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_display_plane_properties_2_khr(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{_DisplayPlaneProperties2KHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_display_plane_properties_2_khr-Tuple{Any}","page":"API","title":"Vulkan._get_physical_device_display_plane_properties_2_khr","text":"_get_physical_device_display_plane_properties_2_khr(physical_device)::ResultTypes.Result{Vector{_DisplayPlaneProperties2KHR}, VulkanError}\n\nExtension: VK_KHR_get_display_properties2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\n_get_physical_device_display_plane_properties_2_khr(physical_device) -> ResultTypes.Result{Vector{_DisplayPlaneProperties2KHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_display_plane_properties_khr-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_display_plane_properties_khr","text":"_get_physical_device_display_plane_properties_khr(physical_device, fptr::FunctionPtr)::ResultTypes.Result{Vector{_DisplayPlanePropertiesKHR}, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_display_plane_properties_khr(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{_DisplayPlanePropertiesKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_display_plane_properties_khr-Tuple{Any}","page":"API","title":"Vulkan._get_physical_device_display_plane_properties_khr","text":"_get_physical_device_display_plane_properties_khr(physical_device)::ResultTypes.Result{Vector{_DisplayPlanePropertiesKHR}, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\n_get_physical_device_display_plane_properties_khr(physical_device) -> ResultTypes.Result{Vector{_DisplayPlanePropertiesKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_display_properties_2_khr-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_display_properties_2_khr","text":"_get_physical_device_display_properties_2_khr(physical_device, fptr::FunctionPtr)::ResultTypes.Result{Vector{_DisplayProperties2KHR}, VulkanError}\n\nExtension: VK_KHR_get_display_properties2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_display_properties_2_khr(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{_DisplayProperties2KHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_display_properties_2_khr-Tuple{Any}","page":"API","title":"Vulkan._get_physical_device_display_properties_2_khr","text":"_get_physical_device_display_properties_2_khr(physical_device)::ResultTypes.Result{Vector{_DisplayProperties2KHR}, VulkanError}\n\nExtension: VK_KHR_get_display_properties2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\n_get_physical_device_display_properties_2_khr(physical_device) -> ResultTypes.Result{Vector{_DisplayProperties2KHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_display_properties_khr-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_display_properties_khr","text":"_get_physical_device_display_properties_khr(physical_device, fptr::FunctionPtr)::ResultTypes.Result{Vector{_DisplayPropertiesKHR}, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_display_properties_khr(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{_DisplayPropertiesKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_display_properties_khr-Tuple{Any}","page":"API","title":"Vulkan._get_physical_device_display_properties_khr","text":"_get_physical_device_display_properties_khr(physical_device)::ResultTypes.Result{Vector{_DisplayPropertiesKHR}, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\n_get_physical_device_display_properties_khr(physical_device) -> ResultTypes.Result{Vector{_DisplayPropertiesKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_external_buffer_properties-Tuple{Any, _PhysicalDeviceExternalBufferInfo, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_external_buffer_properties","text":"_get_physical_device_external_buffer_properties(physical_device, external_buffer_info::_PhysicalDeviceExternalBufferInfo, fptr::FunctionPtr)::_ExternalBufferProperties\n\nArguments:\n\nphysical_device\nexternal_buffer_info::_PhysicalDeviceExternalBufferInfo\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_external_buffer_properties(physical_device, external_buffer_info::_PhysicalDeviceExternalBufferInfo, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> _ExternalBufferProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_external_buffer_properties-Tuple{Any, _PhysicalDeviceExternalBufferInfo}","page":"API","title":"Vulkan._get_physical_device_external_buffer_properties","text":"_get_physical_device_external_buffer_properties(physical_device, external_buffer_info::_PhysicalDeviceExternalBufferInfo)::_ExternalBufferProperties\n\nArguments:\n\nphysical_device\nexternal_buffer_info::_PhysicalDeviceExternalBufferInfo\n\nAPI documentation\n\n_get_physical_device_external_buffer_properties(physical_device, external_buffer_info::_PhysicalDeviceExternalBufferInfo) -> _ExternalBufferProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_external_fence_properties-Tuple{Any, _PhysicalDeviceExternalFenceInfo, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_external_fence_properties","text":"_get_physical_device_external_fence_properties(physical_device, external_fence_info::_PhysicalDeviceExternalFenceInfo, fptr::FunctionPtr)::_ExternalFenceProperties\n\nArguments:\n\nphysical_device\nexternal_fence_info::_PhysicalDeviceExternalFenceInfo\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_external_fence_properties(physical_device, external_fence_info::_PhysicalDeviceExternalFenceInfo, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> _ExternalFenceProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_external_fence_properties-Tuple{Any, _PhysicalDeviceExternalFenceInfo}","page":"API","title":"Vulkan._get_physical_device_external_fence_properties","text":"_get_physical_device_external_fence_properties(physical_device, external_fence_info::_PhysicalDeviceExternalFenceInfo)::_ExternalFenceProperties\n\nArguments:\n\nphysical_device\nexternal_fence_info::_PhysicalDeviceExternalFenceInfo\n\nAPI documentation\n\n_get_physical_device_external_fence_properties(physical_device, external_fence_info::_PhysicalDeviceExternalFenceInfo) -> _ExternalFenceProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_external_image_format_properties_nv-Tuple{Any, Format, ImageType, ImageTiling, ImageUsageFlag, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_external_image_format_properties_nv","text":"_get_physical_device_external_image_format_properties_nv(physical_device, format::Format, type::ImageType, tiling::ImageTiling, usage::ImageUsageFlag, fptr::FunctionPtr; flags = 0, external_handle_type = 0)::ResultTypes.Result{_ExternalImageFormatPropertiesNV, VulkanError}\n\nExtension: VK_NV_external_memory_capabilities\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_FORMAT_NOT_SUPPORTED\n\nArguments:\n\nphysical_device\nformat::Format\ntype::ImageType\ntiling::ImageTiling\nusage::ImageUsageFlag\nfptr::FunctionPtr\nflags: defaults to 0\nexternal_handle_type: defaults to 0\n\nAPI documentation\n\n_get_physical_device_external_image_format_properties_nv(physical_device, format::Format, type::ImageType, tiling::ImageTiling, usage::ImageUsageFlag, fptr::Union{Ptr{Nothing}, Base.CFunction}; flags, external_handle_type) -> ResultTypes.Result{_ExternalImageFormatPropertiesNV, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_external_image_format_properties_nv-Tuple{Any, Format, ImageType, ImageTiling, ImageUsageFlag}","page":"API","title":"Vulkan._get_physical_device_external_image_format_properties_nv","text":"_get_physical_device_external_image_format_properties_nv(physical_device, format::Format, type::ImageType, tiling::ImageTiling, usage::ImageUsageFlag; flags = 0, external_handle_type = 0)::ResultTypes.Result{_ExternalImageFormatPropertiesNV, VulkanError}\n\nExtension: VK_NV_external_memory_capabilities\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_FORMAT_NOT_SUPPORTED\n\nArguments:\n\nphysical_device\nformat::Format\ntype::ImageType\ntiling::ImageTiling\nusage::ImageUsageFlag\nflags: defaults to 0\nexternal_handle_type: defaults to 0\n\nAPI documentation\n\n_get_physical_device_external_image_format_properties_nv(physical_device, format::Format, type::ImageType, tiling::ImageTiling, usage::ImageUsageFlag; flags, external_handle_type) -> ResultTypes.Result{_ExternalImageFormatPropertiesNV, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_external_semaphore_properties-Tuple{Any, _PhysicalDeviceExternalSemaphoreInfo, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_external_semaphore_properties","text":"_get_physical_device_external_semaphore_properties(physical_device, external_semaphore_info::_PhysicalDeviceExternalSemaphoreInfo, fptr::FunctionPtr)::_ExternalSemaphoreProperties\n\nArguments:\n\nphysical_device\nexternal_semaphore_info::_PhysicalDeviceExternalSemaphoreInfo\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_external_semaphore_properties(physical_device, external_semaphore_info::_PhysicalDeviceExternalSemaphoreInfo, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> _ExternalSemaphoreProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_external_semaphore_properties-Tuple{Any, _PhysicalDeviceExternalSemaphoreInfo}","page":"API","title":"Vulkan._get_physical_device_external_semaphore_properties","text":"_get_physical_device_external_semaphore_properties(physical_device, external_semaphore_info::_PhysicalDeviceExternalSemaphoreInfo)::_ExternalSemaphoreProperties\n\nArguments:\n\nphysical_device\nexternal_semaphore_info::_PhysicalDeviceExternalSemaphoreInfo\n\nAPI documentation\n\n_get_physical_device_external_semaphore_properties(physical_device, external_semaphore_info::_PhysicalDeviceExternalSemaphoreInfo) -> _ExternalSemaphoreProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_features-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_features","text":"_get_physical_device_features(physical_device, fptr::FunctionPtr)::_PhysicalDeviceFeatures\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_features(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> _PhysicalDeviceFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_features-Tuple{Any}","page":"API","title":"Vulkan._get_physical_device_features","text":"_get_physical_device_features(physical_device)::_PhysicalDeviceFeatures\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\n_get_physical_device_features(physical_device) -> _PhysicalDeviceFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_features_2-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}, Vararg{Type}}","page":"API","title":"Vulkan._get_physical_device_features_2","text":"_get_physical_device_features_2(physical_device, fptr::FunctionPtr, next_types::Type...)::_PhysicalDeviceFeatures2\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\nnext_types::Type...\n\nAPI documentation\n\n_get_physical_device_features_2(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}, next_types::Type...) -> _PhysicalDeviceFeatures2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_features_2-Tuple{Any, Vararg{Type}}","page":"API","title":"Vulkan._get_physical_device_features_2","text":"_get_physical_device_features_2(physical_device, next_types::Type...)::_PhysicalDeviceFeatures2\n\nArguments:\n\nphysical_device\nnext_types::Type...\n\nAPI documentation\n\n_get_physical_device_features_2(physical_device, next_types::Type...) -> _PhysicalDeviceFeatures2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_format_properties-Tuple{Any, Format, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_format_properties","text":"_get_physical_device_format_properties(physical_device, format::Format, fptr::FunctionPtr)::_FormatProperties\n\nArguments:\n\nphysical_device\nformat::Format\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_format_properties(physical_device, format::Format, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> _FormatProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_format_properties-Tuple{Any, Format}","page":"API","title":"Vulkan._get_physical_device_format_properties","text":"_get_physical_device_format_properties(physical_device, format::Format)::_FormatProperties\n\nArguments:\n\nphysical_device\nformat::Format\n\nAPI documentation\n\n_get_physical_device_format_properties(physical_device, format::Format) -> _FormatProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_format_properties_2-Tuple{Any, Format, Union{Ptr{Nothing}, Base.CFunction}, Vararg{Type}}","page":"API","title":"Vulkan._get_physical_device_format_properties_2","text":"_get_physical_device_format_properties_2(physical_device, format::Format, fptr::FunctionPtr, next_types::Type...)::_FormatProperties2\n\nArguments:\n\nphysical_device\nformat::Format\nfptr::FunctionPtr\nnext_types::Type...\n\nAPI documentation\n\n_get_physical_device_format_properties_2(physical_device, format::Format, fptr::Union{Ptr{Nothing}, Base.CFunction}, next_types::Type...) -> _FormatProperties2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_format_properties_2-Tuple{Any, Format, Vararg{Type}}","page":"API","title":"Vulkan._get_physical_device_format_properties_2","text":"_get_physical_device_format_properties_2(physical_device, format::Format, next_types::Type...)::_FormatProperties2\n\nArguments:\n\nphysical_device\nformat::Format\nnext_types::Type...\n\nAPI documentation\n\n_get_physical_device_format_properties_2(physical_device, format::Format, next_types::Type...) -> _FormatProperties2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_fragment_shading_rates_khr-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_fragment_shading_rates_khr","text":"_get_physical_device_fragment_shading_rates_khr(physical_device, fptr::FunctionPtr)::ResultTypes.Result{Vector{_PhysicalDeviceFragmentShadingRateKHR}, VulkanError}\n\nExtension: VK_KHR_fragment_shading_rate\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_fragment_shading_rates_khr(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{_PhysicalDeviceFragmentShadingRateKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_fragment_shading_rates_khr-Tuple{Any}","page":"API","title":"Vulkan._get_physical_device_fragment_shading_rates_khr","text":"_get_physical_device_fragment_shading_rates_khr(physical_device)::ResultTypes.Result{Vector{_PhysicalDeviceFragmentShadingRateKHR}, VulkanError}\n\nExtension: VK_KHR_fragment_shading_rate\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\n_get_physical_device_fragment_shading_rates_khr(physical_device) -> ResultTypes.Result{Vector{_PhysicalDeviceFragmentShadingRateKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_image_format_properties-Tuple{Any, Format, ImageType, ImageTiling, ImageUsageFlag, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_image_format_properties","text":"_get_physical_device_image_format_properties(physical_device, format::Format, type::ImageType, tiling::ImageTiling, usage::ImageUsageFlag, fptr::FunctionPtr; flags = 0)::ResultTypes.Result{_ImageFormatProperties, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_FORMAT_NOT_SUPPORTED\n\nArguments:\n\nphysical_device\nformat::Format\ntype::ImageType\ntiling::ImageTiling\nusage::ImageUsageFlag\nfptr::FunctionPtr\nflags: defaults to 0\n\nAPI documentation\n\n_get_physical_device_image_format_properties(physical_device, format::Format, type::ImageType, tiling::ImageTiling, usage::ImageUsageFlag, fptr::Union{Ptr{Nothing}, Base.CFunction}; flags) -> ResultTypes.Result{_ImageFormatProperties, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_image_format_properties-Tuple{Any, Format, ImageType, ImageTiling, ImageUsageFlag}","page":"API","title":"Vulkan._get_physical_device_image_format_properties","text":"_get_physical_device_image_format_properties(physical_device, format::Format, type::ImageType, tiling::ImageTiling, usage::ImageUsageFlag; flags = 0)::ResultTypes.Result{_ImageFormatProperties, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_FORMAT_NOT_SUPPORTED\n\nArguments:\n\nphysical_device\nformat::Format\ntype::ImageType\ntiling::ImageTiling\nusage::ImageUsageFlag\nflags: defaults to 0\n\nAPI documentation\n\n_get_physical_device_image_format_properties(physical_device, format::Format, type::ImageType, tiling::ImageTiling, usage::ImageUsageFlag; flags) -> ResultTypes.Result{_ImageFormatProperties, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_image_format_properties_2-Tuple{Any, _PhysicalDeviceImageFormatInfo2, Union{Ptr{Nothing}, Base.CFunction}, Vararg{Type}}","page":"API","title":"Vulkan._get_physical_device_image_format_properties_2","text":"_get_physical_device_image_format_properties_2(physical_device, image_format_info::_PhysicalDeviceImageFormatInfo2, fptr::FunctionPtr, next_types::Type...)::ResultTypes.Result{_ImageFormatProperties2, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_FORMAT_NOT_SUPPORTED\n\nArguments:\n\nphysical_device\nimage_format_info::_PhysicalDeviceImageFormatInfo2\nfptr::FunctionPtr\nnext_types::Type...\n\nAPI documentation\n\n_get_physical_device_image_format_properties_2(physical_device, image_format_info::_PhysicalDeviceImageFormatInfo2, fptr::Union{Ptr{Nothing}, Base.CFunction}, next_types::Type...) -> ResultTypes.Result{_ImageFormatProperties2, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_image_format_properties_2-Tuple{Any, _PhysicalDeviceImageFormatInfo2, Vararg{Type}}","page":"API","title":"Vulkan._get_physical_device_image_format_properties_2","text":"_get_physical_device_image_format_properties_2(physical_device, image_format_info::_PhysicalDeviceImageFormatInfo2, next_types::Type...)::ResultTypes.Result{_ImageFormatProperties2, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_FORMAT_NOT_SUPPORTED\n\nArguments:\n\nphysical_device\nimage_format_info::_PhysicalDeviceImageFormatInfo2\nnext_types::Type...\n\nAPI documentation\n\n_get_physical_device_image_format_properties_2(physical_device, image_format_info::_PhysicalDeviceImageFormatInfo2, next_types::Type...) -> ResultTypes.Result{_ImageFormatProperties2, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_memory_properties-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_memory_properties","text":"_get_physical_device_memory_properties(physical_device, fptr::FunctionPtr)::_PhysicalDeviceMemoryProperties\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_memory_properties(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> _PhysicalDeviceMemoryProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_memory_properties-Tuple{Any}","page":"API","title":"Vulkan._get_physical_device_memory_properties","text":"_get_physical_device_memory_properties(physical_device)::_PhysicalDeviceMemoryProperties\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\n_get_physical_device_memory_properties(physical_device) -> _PhysicalDeviceMemoryProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_memory_properties_2-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}, Vararg{Type}}","page":"API","title":"Vulkan._get_physical_device_memory_properties_2","text":"_get_physical_device_memory_properties_2(physical_device, fptr::FunctionPtr, next_types::Type...)::_PhysicalDeviceMemoryProperties2\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\nnext_types::Type...\n\nAPI documentation\n\n_get_physical_device_memory_properties_2(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}, next_types::Type...) -> _PhysicalDeviceMemoryProperties2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_memory_properties_2-Tuple{Any, Vararg{Type}}","page":"API","title":"Vulkan._get_physical_device_memory_properties_2","text":"_get_physical_device_memory_properties_2(physical_device, next_types::Type...)::_PhysicalDeviceMemoryProperties2\n\nArguments:\n\nphysical_device\nnext_types::Type...\n\nAPI documentation\n\n_get_physical_device_memory_properties_2(physical_device, next_types::Type...) -> _PhysicalDeviceMemoryProperties2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_multisample_properties_ext-Tuple{Any, SampleCountFlag, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_multisample_properties_ext","text":"_get_physical_device_multisample_properties_ext(physical_device, samples::SampleCountFlag, fptr::FunctionPtr)::_MultisamplePropertiesEXT\n\nExtension: VK_EXT_sample_locations\n\nArguments:\n\nphysical_device\nsamples::SampleCountFlag\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_multisample_properties_ext(physical_device, samples::SampleCountFlag, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> _MultisamplePropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_multisample_properties_ext-Tuple{Any, SampleCountFlag}","page":"API","title":"Vulkan._get_physical_device_multisample_properties_ext","text":"_get_physical_device_multisample_properties_ext(physical_device, samples::SampleCountFlag)::_MultisamplePropertiesEXT\n\nExtension: VK_EXT_sample_locations\n\nArguments:\n\nphysical_device\nsamples::SampleCountFlag\n\nAPI documentation\n\n_get_physical_device_multisample_properties_ext(physical_device, samples::SampleCountFlag) -> _MultisamplePropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_present_rectangles_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_present_rectangles_khr","text":"_get_physical_device_present_rectangles_khr(physical_device, surface, fptr::FunctionPtr)::ResultTypes.Result{Vector{_Rect2D}, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nsurface (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_present_rectangles_khr(physical_device, surface, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{_Rect2D}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_present_rectangles_khr-Tuple{Any, Any}","page":"API","title":"Vulkan._get_physical_device_present_rectangles_khr","text":"_get_physical_device_present_rectangles_khr(physical_device, surface)::ResultTypes.Result{Vector{_Rect2D}, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nsurface (externsync)\n\nAPI documentation\n\n_get_physical_device_present_rectangles_khr(physical_device, surface) -> ResultTypes.Result{Vector{_Rect2D}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_properties-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_properties","text":"_get_physical_device_properties(physical_device, fptr::FunctionPtr)::_PhysicalDeviceProperties\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_properties(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> _PhysicalDeviceProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_properties-Tuple{Any}","page":"API","title":"Vulkan._get_physical_device_properties","text":"_get_physical_device_properties(physical_device)::_PhysicalDeviceProperties\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\n_get_physical_device_properties(physical_device) -> _PhysicalDeviceProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_properties_2-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}, Vararg{Type}}","page":"API","title":"Vulkan._get_physical_device_properties_2","text":"_get_physical_device_properties_2(physical_device, fptr::FunctionPtr, next_types::Type...)::_PhysicalDeviceProperties2\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\nnext_types::Type...\n\nAPI documentation\n\n_get_physical_device_properties_2(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}, next_types::Type...) -> _PhysicalDeviceProperties2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_properties_2-Tuple{Any, Vararg{Type}}","page":"API","title":"Vulkan._get_physical_device_properties_2","text":"_get_physical_device_properties_2(physical_device, next_types::Type...)::_PhysicalDeviceProperties2\n\nArguments:\n\nphysical_device\nnext_types::Type...\n\nAPI documentation\n\n_get_physical_device_properties_2(physical_device, next_types::Type...) -> _PhysicalDeviceProperties2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_queue_family_performance_query_passes_khr-Tuple{Any, _QueryPoolPerformanceCreateInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_queue_family_performance_query_passes_khr","text":"_get_physical_device_queue_family_performance_query_passes_khr(physical_device, performance_query_create_info::_QueryPoolPerformanceCreateInfoKHR, fptr::FunctionPtr)::UInt32\n\nExtension: VK_KHR_performance_query\n\nArguments:\n\nphysical_device\nperformance_query_create_info::_QueryPoolPerformanceCreateInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_queue_family_performance_query_passes_khr(physical_device, performance_query_create_info::_QueryPoolPerformanceCreateInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> UInt32\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_queue_family_performance_query_passes_khr-Tuple{Any, _QueryPoolPerformanceCreateInfoKHR}","page":"API","title":"Vulkan._get_physical_device_queue_family_performance_query_passes_khr","text":"_get_physical_device_queue_family_performance_query_passes_khr(physical_device, performance_query_create_info::_QueryPoolPerformanceCreateInfoKHR)::UInt32\n\nExtension: VK_KHR_performance_query\n\nArguments:\n\nphysical_device\nperformance_query_create_info::_QueryPoolPerformanceCreateInfoKHR\n\nAPI documentation\n\n_get_physical_device_queue_family_performance_query_passes_khr(physical_device, performance_query_create_info::_QueryPoolPerformanceCreateInfoKHR) -> UInt32\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_queue_family_properties-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_queue_family_properties","text":"_get_physical_device_queue_family_properties(physical_device, fptr::FunctionPtr)::Vector{_QueueFamilyProperties}\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_queue_family_properties(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Vector{_QueueFamilyProperties}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_queue_family_properties-Tuple{Any}","page":"API","title":"Vulkan._get_physical_device_queue_family_properties","text":"_get_physical_device_queue_family_properties(physical_device)::Vector{_QueueFamilyProperties}\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\n_get_physical_device_queue_family_properties(physical_device) -> Vector{_QueueFamilyProperties}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_queue_family_properties_2-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_queue_family_properties_2","text":"_get_physical_device_queue_family_properties_2(physical_device, fptr::FunctionPtr)::Vector{_QueueFamilyProperties2}\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_queue_family_properties_2(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Vector{_QueueFamilyProperties2}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_queue_family_properties_2-Tuple{Any}","page":"API","title":"Vulkan._get_physical_device_queue_family_properties_2","text":"_get_physical_device_queue_family_properties_2(physical_device)::Vector{_QueueFamilyProperties2}\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\n_get_physical_device_queue_family_properties_2(physical_device) -> Vector{_QueueFamilyProperties2}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_sparse_image_format_properties-Tuple{Any, Format, ImageType, SampleCountFlag, ImageUsageFlag, ImageTiling, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_sparse_image_format_properties","text":"_get_physical_device_sparse_image_format_properties(physical_device, format::Format, type::ImageType, samples::SampleCountFlag, usage::ImageUsageFlag, tiling::ImageTiling, fptr::FunctionPtr)::Vector{_SparseImageFormatProperties}\n\nArguments:\n\nphysical_device\nformat::Format\ntype::ImageType\nsamples::SampleCountFlag\nusage::ImageUsageFlag\ntiling::ImageTiling\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_sparse_image_format_properties(physical_device, format::Format, type::ImageType, samples::SampleCountFlag, usage::ImageUsageFlag, tiling::ImageTiling, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Vector{_SparseImageFormatProperties}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_sparse_image_format_properties-Tuple{Any, Format, ImageType, SampleCountFlag, ImageUsageFlag, ImageTiling}","page":"API","title":"Vulkan._get_physical_device_sparse_image_format_properties","text":"_get_physical_device_sparse_image_format_properties(physical_device, format::Format, type::ImageType, samples::SampleCountFlag, usage::ImageUsageFlag, tiling::ImageTiling)::Vector{_SparseImageFormatProperties}\n\nArguments:\n\nphysical_device\nformat::Format\ntype::ImageType\nsamples::SampleCountFlag\nusage::ImageUsageFlag\ntiling::ImageTiling\n\nAPI documentation\n\n_get_physical_device_sparse_image_format_properties(physical_device, format::Format, type::ImageType, samples::SampleCountFlag, usage::ImageUsageFlag, tiling::ImageTiling) -> Vector{_SparseImageFormatProperties}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_sparse_image_format_properties_2-Tuple{Any, _PhysicalDeviceSparseImageFormatInfo2, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_sparse_image_format_properties_2","text":"_get_physical_device_sparse_image_format_properties_2(physical_device, format_info::_PhysicalDeviceSparseImageFormatInfo2, fptr::FunctionPtr)::Vector{_SparseImageFormatProperties2}\n\nArguments:\n\nphysical_device\nformat_info::_PhysicalDeviceSparseImageFormatInfo2\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_sparse_image_format_properties_2(physical_device, format_info::_PhysicalDeviceSparseImageFormatInfo2, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Vector{_SparseImageFormatProperties2}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_sparse_image_format_properties_2-Tuple{Any, _PhysicalDeviceSparseImageFormatInfo2}","page":"API","title":"Vulkan._get_physical_device_sparse_image_format_properties_2","text":"_get_physical_device_sparse_image_format_properties_2(physical_device, format_info::_PhysicalDeviceSparseImageFormatInfo2)::Vector{_SparseImageFormatProperties2}\n\nArguments:\n\nphysical_device\nformat_info::_PhysicalDeviceSparseImageFormatInfo2\n\nAPI documentation\n\n_get_physical_device_sparse_image_format_properties_2(physical_device, format_info::_PhysicalDeviceSparseImageFormatInfo2) -> Vector{_SparseImageFormatProperties2}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_supported_framebuffer_mixed_samples_combinations_nv-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_supported_framebuffer_mixed_samples_combinations_nv","text":"_get_physical_device_supported_framebuffer_mixed_samples_combinations_nv(physical_device, fptr::FunctionPtr)::ResultTypes.Result{Vector{_FramebufferMixedSamplesCombinationNV}, VulkanError}\n\nExtension: VK_NV_coverage_reduction_mode\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_supported_framebuffer_mixed_samples_combinations_nv(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{_FramebufferMixedSamplesCombinationNV}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_supported_framebuffer_mixed_samples_combinations_nv-Tuple{Any}","page":"API","title":"Vulkan._get_physical_device_supported_framebuffer_mixed_samples_combinations_nv","text":"_get_physical_device_supported_framebuffer_mixed_samples_combinations_nv(physical_device)::ResultTypes.Result{Vector{_FramebufferMixedSamplesCombinationNV}, VulkanError}\n\nExtension: VK_NV_coverage_reduction_mode\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\n_get_physical_device_supported_framebuffer_mixed_samples_combinations_nv(physical_device) -> ResultTypes.Result{Vector{_FramebufferMixedSamplesCombinationNV}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_surface_capabilities_2_ext-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_surface_capabilities_2_ext","text":"_get_physical_device_surface_capabilities_2_ext(physical_device, surface, fptr::FunctionPtr)::ResultTypes.Result{_SurfaceCapabilities2EXT, VulkanError}\n\nExtension: VK_EXT_display_surface_counter\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nsurface\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_surface_capabilities_2_ext(physical_device, surface, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{_SurfaceCapabilities2EXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_surface_capabilities_2_ext-Tuple{Any, Any}","page":"API","title":"Vulkan._get_physical_device_surface_capabilities_2_ext","text":"_get_physical_device_surface_capabilities_2_ext(physical_device, surface)::ResultTypes.Result{_SurfaceCapabilities2EXT, VulkanError}\n\nExtension: VK_EXT_display_surface_counter\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nsurface\n\nAPI documentation\n\n_get_physical_device_surface_capabilities_2_ext(physical_device, surface) -> ResultTypes.Result{_SurfaceCapabilities2EXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_surface_capabilities_2_khr-Tuple{Any, _PhysicalDeviceSurfaceInfo2KHR, Union{Ptr{Nothing}, Base.CFunction}, Vararg{Type}}","page":"API","title":"Vulkan._get_physical_device_surface_capabilities_2_khr","text":"_get_physical_device_surface_capabilities_2_khr(physical_device, surface_info::_PhysicalDeviceSurfaceInfo2KHR, fptr::FunctionPtr, next_types::Type...)::ResultTypes.Result{_SurfaceCapabilities2KHR, VulkanError}\n\nExtension: VK_KHR_get_surface_capabilities2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nsurface_info::_PhysicalDeviceSurfaceInfo2KHR\nfptr::FunctionPtr\nnext_types::Type...\n\nAPI documentation\n\n_get_physical_device_surface_capabilities_2_khr(physical_device, surface_info::_PhysicalDeviceSurfaceInfo2KHR, fptr::Union{Ptr{Nothing}, Base.CFunction}, next_types::Type...) -> ResultTypes.Result{_SurfaceCapabilities2KHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_surface_capabilities_2_khr-Tuple{Any, _PhysicalDeviceSurfaceInfo2KHR, Vararg{Type}}","page":"API","title":"Vulkan._get_physical_device_surface_capabilities_2_khr","text":"_get_physical_device_surface_capabilities_2_khr(physical_device, surface_info::_PhysicalDeviceSurfaceInfo2KHR, next_types::Type...)::ResultTypes.Result{_SurfaceCapabilities2KHR, VulkanError}\n\nExtension: VK_KHR_get_surface_capabilities2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nsurface_info::_PhysicalDeviceSurfaceInfo2KHR\nnext_types::Type...\n\nAPI documentation\n\n_get_physical_device_surface_capabilities_2_khr(physical_device, surface_info::_PhysicalDeviceSurfaceInfo2KHR, next_types::Type...) -> ResultTypes.Result{_SurfaceCapabilities2KHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_surface_capabilities_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_surface_capabilities_khr","text":"_get_physical_device_surface_capabilities_khr(physical_device, surface, fptr::FunctionPtr)::ResultTypes.Result{_SurfaceCapabilitiesKHR, VulkanError}\n\nExtension: VK_KHR_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nsurface\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_surface_capabilities_khr(physical_device, surface, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{_SurfaceCapabilitiesKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_surface_capabilities_khr-Tuple{Any, Any}","page":"API","title":"Vulkan._get_physical_device_surface_capabilities_khr","text":"_get_physical_device_surface_capabilities_khr(physical_device, surface)::ResultTypes.Result{_SurfaceCapabilitiesKHR, VulkanError}\n\nExtension: VK_KHR_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nsurface\n\nAPI documentation\n\n_get_physical_device_surface_capabilities_khr(physical_device, surface) -> ResultTypes.Result{_SurfaceCapabilitiesKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_surface_formats_2_khr-Tuple{Any, _PhysicalDeviceSurfaceInfo2KHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_surface_formats_2_khr","text":"_get_physical_device_surface_formats_2_khr(physical_device, surface_info::_PhysicalDeviceSurfaceInfo2KHR, fptr::FunctionPtr)::ResultTypes.Result{Vector{_SurfaceFormat2KHR}, VulkanError}\n\nExtension: VK_KHR_get_surface_capabilities2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nsurface_info::_PhysicalDeviceSurfaceInfo2KHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_surface_formats_2_khr(physical_device, surface_info::_PhysicalDeviceSurfaceInfo2KHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{_SurfaceFormat2KHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_surface_formats_2_khr-Tuple{Any, _PhysicalDeviceSurfaceInfo2KHR}","page":"API","title":"Vulkan._get_physical_device_surface_formats_2_khr","text":"_get_physical_device_surface_formats_2_khr(physical_device, surface_info::_PhysicalDeviceSurfaceInfo2KHR)::ResultTypes.Result{Vector{_SurfaceFormat2KHR}, VulkanError}\n\nExtension: VK_KHR_get_surface_capabilities2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nsurface_info::_PhysicalDeviceSurfaceInfo2KHR\n\nAPI documentation\n\n_get_physical_device_surface_formats_2_khr(physical_device, surface_info::_PhysicalDeviceSurfaceInfo2KHR) -> ResultTypes.Result{Vector{_SurfaceFormat2KHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_surface_formats_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_surface_formats_khr","text":"_get_physical_device_surface_formats_khr(physical_device, surface, fptr::FunctionPtr)::ResultTypes.Result{Vector{_SurfaceFormatKHR}, VulkanError}\n\nExtension: VK_KHR_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nsurface\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_surface_formats_khr(physical_device, surface, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{_SurfaceFormatKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_surface_formats_khr-Tuple{Any, Any}","page":"API","title":"Vulkan._get_physical_device_surface_formats_khr","text":"_get_physical_device_surface_formats_khr(physical_device, surface)::ResultTypes.Result{Vector{_SurfaceFormatKHR}, VulkanError}\n\nExtension: VK_KHR_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nsurface\n\nAPI documentation\n\n_get_physical_device_surface_formats_khr(physical_device, surface) -> ResultTypes.Result{Vector{_SurfaceFormatKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_surface_present_modes_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_surface_present_modes_khr","text":"_get_physical_device_surface_present_modes_khr(physical_device, surface, fptr::FunctionPtr)::ResultTypes.Result{Vector{PresentModeKHR}, VulkanError}\n\nExtension: VK_KHR_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nsurface\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_surface_present_modes_khr(physical_device, surface, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{PresentModeKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_surface_present_modes_khr-Tuple{Any, Any}","page":"API","title":"Vulkan._get_physical_device_surface_present_modes_khr","text":"_get_physical_device_surface_present_modes_khr(physical_device, surface)::ResultTypes.Result{Vector{PresentModeKHR}, VulkanError}\n\nExtension: VK_KHR_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nsurface\n\nAPI documentation\n\n_get_physical_device_surface_present_modes_khr(physical_device, surface) -> ResultTypes.Result{Vector{PresentModeKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_surface_support_khr-Tuple{Any, Integer, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_surface_support_khr","text":"_get_physical_device_surface_support_khr(physical_device, queue_family_index::Integer, surface, fptr::FunctionPtr)::ResultTypes.Result{Bool, VulkanError}\n\nExtension: VK_KHR_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nqueue_family_index::Integer\nsurface\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_surface_support_khr(physical_device, queue_family_index::Integer, surface, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Bool, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_surface_support_khr-Tuple{Any, Integer, Any}","page":"API","title":"Vulkan._get_physical_device_surface_support_khr","text":"_get_physical_device_surface_support_khr(physical_device, queue_family_index::Integer, surface)::ResultTypes.Result{Bool, VulkanError}\n\nExtension: VK_KHR_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nqueue_family_index::Integer\nsurface\n\nAPI documentation\n\n_get_physical_device_surface_support_khr(physical_device, queue_family_index::Integer, surface) -> ResultTypes.Result{Bool, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_tool_properties_ext-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_tool_properties_ext","text":"_get_physical_device_tool_properties_ext(physical_device, fptr::FunctionPtr)::ResultTypes.Result{Vector{_PhysicalDeviceToolPropertiesEXT}, VulkanError}\n\nExtension: VK_EXT_tooling_info\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_tool_properties_ext(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{_PhysicalDeviceToolPropertiesEXT}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_tool_properties_ext-Tuple{Any}","page":"API","title":"Vulkan._get_physical_device_tool_properties_ext","text":"_get_physical_device_tool_properties_ext(physical_device)::ResultTypes.Result{Vector{_PhysicalDeviceToolPropertiesEXT}, VulkanError}\n\nExtension: VK_EXT_tooling_info\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\n_get_physical_device_tool_properties_ext(physical_device) -> ResultTypes.Result{Vector{_PhysicalDeviceToolPropertiesEXT}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_wayland_presentation_support_khr-Tuple{Any, Integer, Ptr{Nothing}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_wayland_presentation_support_khr","text":"_get_physical_device_wayland_presentation_support_khr(physical_device, queue_family_index::Integer, display::Ptr{wl_display}, fptr::FunctionPtr)::Bool\n\nExtension: VK_KHR_wayland_surface\n\nArguments:\n\nphysical_device\nqueue_family_index::Integer\ndisplay::Ptr{wl_display}\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_wayland_presentation_support_khr(physical_device, queue_family_index::Integer, display::Ptr{Nothing}, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Bool\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_wayland_presentation_support_khr-Tuple{Any, Integer, Ptr{Nothing}}","page":"API","title":"Vulkan._get_physical_device_wayland_presentation_support_khr","text":"_get_physical_device_wayland_presentation_support_khr(physical_device, queue_family_index::Integer, display::Ptr{wl_display})::Bool\n\nExtension: VK_KHR_wayland_surface\n\nArguments:\n\nphysical_device\nqueue_family_index::Integer\ndisplay::Ptr{wl_display}\n\nAPI documentation\n\n_get_physical_device_wayland_presentation_support_khr(physical_device, queue_family_index::Integer, display::Ptr{Nothing}) -> Bool\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_xcb_presentation_support_khr-Tuple{Any, Integer, Ptr{Nothing}, UInt32, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_xcb_presentation_support_khr","text":"_get_physical_device_xcb_presentation_support_khr(physical_device, queue_family_index::Integer, connection::Ptr{xcb_connection_t}, visual_id::xcb_visualid_t, fptr::FunctionPtr)::Bool\n\nExtension: VK_KHR_xcb_surface\n\nArguments:\n\nphysical_device\nqueue_family_index::Integer\nconnection::Ptr{xcb_connection_t}\nvisual_id::xcb_visualid_t\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_xcb_presentation_support_khr(physical_device, queue_family_index::Integer, connection::Ptr{Nothing}, visual_id::UInt32, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Bool\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_xcb_presentation_support_khr-Tuple{Any, Integer, Ptr{Nothing}, UInt32}","page":"API","title":"Vulkan._get_physical_device_xcb_presentation_support_khr","text":"_get_physical_device_xcb_presentation_support_khr(physical_device, queue_family_index::Integer, connection::Ptr{xcb_connection_t}, visual_id::xcb_visualid_t)::Bool\n\nExtension: VK_KHR_xcb_surface\n\nArguments:\n\nphysical_device\nqueue_family_index::Integer\nconnection::Ptr{xcb_connection_t}\nvisual_id::xcb_visualid_t\n\nAPI documentation\n\n_get_physical_device_xcb_presentation_support_khr(physical_device, queue_family_index::Integer, connection::Ptr{Nothing}, visual_id::UInt32) -> Bool\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_xlib_presentation_support_khr-Tuple{Any, Integer, Ptr{Nothing}, UInt64, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_physical_device_xlib_presentation_support_khr","text":"_get_physical_device_xlib_presentation_support_khr(physical_device, queue_family_index::Integer, dpy::Ptr{Display}, visual_id::VisualID, fptr::FunctionPtr)::Bool\n\nExtension: VK_KHR_xlib_surface\n\nArguments:\n\nphysical_device\nqueue_family_index::Integer\ndpy::Ptr{Display}\nvisual_id::VisualID\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_physical_device_xlib_presentation_support_khr(physical_device, queue_family_index::Integer, dpy::Ptr{Nothing}, visual_id::UInt64, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Bool\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_physical_device_xlib_presentation_support_khr-Tuple{Any, Integer, Ptr{Nothing}, UInt64}","page":"API","title":"Vulkan._get_physical_device_xlib_presentation_support_khr","text":"_get_physical_device_xlib_presentation_support_khr(physical_device, queue_family_index::Integer, dpy::Ptr{Display}, visual_id::VisualID)::Bool\n\nExtension: VK_KHR_xlib_surface\n\nArguments:\n\nphysical_device\nqueue_family_index::Integer\ndpy::Ptr{Display}\nvisual_id::VisualID\n\nAPI documentation\n\n_get_physical_device_xlib_presentation_support_khr(physical_device, queue_family_index::Integer, dpy::Ptr{Nothing}, visual_id::UInt64) -> Bool\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_pipeline_cache_data-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_pipeline_cache_data","text":"_get_pipeline_cache_data(device, pipeline_cache, fptr::FunctionPtr)::ResultTypes.Result{Tuple{UInt, Ptr{Cvoid}}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\npipeline_cache\nfptr::FunctionPtr\n\nwarning: Warning\nThe pointer returned by this function holds memory owned by Julia. It is therefore your responsibility to free it after use (e.g. with Libc.free).\n\nAPI documentation\n\n_get_pipeline_cache_data(device, pipeline_cache, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Tuple{UInt64, Ptr{Nothing}}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_pipeline_cache_data-Tuple{Any, Any}","page":"API","title":"Vulkan._get_pipeline_cache_data","text":"_get_pipeline_cache_data(device, pipeline_cache)::ResultTypes.Result{Tuple{UInt, Ptr{Cvoid}}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\npipeline_cache\n\nwarning: Warning\nThe pointer returned by this function holds memory owned by Julia. It is therefore your responsibility to free it after use (e.g. with Libc.free).\n\nAPI documentation\n\n_get_pipeline_cache_data(device, pipeline_cache) -> ResultTypes.Result{Tuple{UInt64, Ptr{Nothing}}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_pipeline_executable_internal_representations_khr-Tuple{Any, _PipelineExecutableInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_pipeline_executable_internal_representations_khr","text":"_get_pipeline_executable_internal_representations_khr(device, executable_info::_PipelineExecutableInfoKHR, fptr::FunctionPtr)::ResultTypes.Result{Vector{_PipelineExecutableInternalRepresentationKHR}, VulkanError}\n\nExtension: VK_KHR_pipeline_executable_properties\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nexecutable_info::_PipelineExecutableInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_pipeline_executable_internal_representations_khr(device, executable_info::_PipelineExecutableInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{_PipelineExecutableInternalRepresentationKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_pipeline_executable_internal_representations_khr-Tuple{Any, _PipelineExecutableInfoKHR}","page":"API","title":"Vulkan._get_pipeline_executable_internal_representations_khr","text":"_get_pipeline_executable_internal_representations_khr(device, executable_info::_PipelineExecutableInfoKHR)::ResultTypes.Result{Vector{_PipelineExecutableInternalRepresentationKHR}, VulkanError}\n\nExtension: VK_KHR_pipeline_executable_properties\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nexecutable_info::_PipelineExecutableInfoKHR\n\nAPI documentation\n\n_get_pipeline_executable_internal_representations_khr(device, executable_info::_PipelineExecutableInfoKHR) -> ResultTypes.Result{Vector{_PipelineExecutableInternalRepresentationKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_pipeline_executable_properties_khr-Tuple{Any, _PipelineInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_pipeline_executable_properties_khr","text":"_get_pipeline_executable_properties_khr(device, pipeline_info::_PipelineInfoKHR, fptr::FunctionPtr)::ResultTypes.Result{Vector{_PipelineExecutablePropertiesKHR}, VulkanError}\n\nExtension: VK_KHR_pipeline_executable_properties\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\npipeline_info::_PipelineInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_pipeline_executable_properties_khr(device, pipeline_info::_PipelineInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{_PipelineExecutablePropertiesKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_pipeline_executable_properties_khr-Tuple{Any, _PipelineInfoKHR}","page":"API","title":"Vulkan._get_pipeline_executable_properties_khr","text":"_get_pipeline_executable_properties_khr(device, pipeline_info::_PipelineInfoKHR)::ResultTypes.Result{Vector{_PipelineExecutablePropertiesKHR}, VulkanError}\n\nExtension: VK_KHR_pipeline_executable_properties\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\npipeline_info::_PipelineInfoKHR\n\nAPI documentation\n\n_get_pipeline_executable_properties_khr(device, pipeline_info::_PipelineInfoKHR) -> ResultTypes.Result{Vector{_PipelineExecutablePropertiesKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_pipeline_executable_statistics_khr-Tuple{Any, _PipelineExecutableInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_pipeline_executable_statistics_khr","text":"_get_pipeline_executable_statistics_khr(device, executable_info::_PipelineExecutableInfoKHR, fptr::FunctionPtr)::ResultTypes.Result{Vector{_PipelineExecutableStatisticKHR}, VulkanError}\n\nExtension: VK_KHR_pipeline_executable_properties\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nexecutable_info::_PipelineExecutableInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_pipeline_executable_statistics_khr(device, executable_info::_PipelineExecutableInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{_PipelineExecutableStatisticKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_pipeline_executable_statistics_khr-Tuple{Any, _PipelineExecutableInfoKHR}","page":"API","title":"Vulkan._get_pipeline_executable_statistics_khr","text":"_get_pipeline_executable_statistics_khr(device, executable_info::_PipelineExecutableInfoKHR)::ResultTypes.Result{Vector{_PipelineExecutableStatisticKHR}, VulkanError}\n\nExtension: VK_KHR_pipeline_executable_properties\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nexecutable_info::_PipelineExecutableInfoKHR\n\nAPI documentation\n\n_get_pipeline_executable_statistics_khr(device, executable_info::_PipelineExecutableInfoKHR) -> ResultTypes.Result{Vector{_PipelineExecutableStatisticKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_private_data_ext-Tuple{Any, ObjectType, Integer, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_private_data_ext","text":"_get_private_data_ext(device, object_type::ObjectType, object_handle::Integer, private_data_slot, fptr::FunctionPtr)::UInt64\n\nExtension: VK_EXT_private_data\n\nArguments:\n\ndevice\nobject_type::ObjectType\nobject_handle::Integer\nprivate_data_slot\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_private_data_ext(device, object_type::ObjectType, object_handle::Integer, private_data_slot, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_private_data_ext-Tuple{Any, ObjectType, Integer, Any}","page":"API","title":"Vulkan._get_private_data_ext","text":"_get_private_data_ext(device, object_type::ObjectType, object_handle::Integer, private_data_slot)::UInt64\n\nExtension: VK_EXT_private_data\n\nArguments:\n\ndevice\nobject_type::ObjectType\nobject_handle::Integer\nprivate_data_slot\n\nAPI documentation\n\n_get_private_data_ext(device, object_type::ObjectType, object_handle::Integer, private_data_slot) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_query_pool_results-Tuple{Any, Any, Integer, Integer, Integer, Ptr{Nothing}, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_query_pool_results","text":"_get_query_pool_results(device, query_pool, first_query::Integer, query_count::Integer, data_size::Integer, data::Ptr{Cvoid}, stride::Integer, fptr::FunctionPtr; flags = 0)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nNOT_READY\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\nquery_pool\nfirst_query::Integer\nquery_count::Integer\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\nstride::Integer\nfptr::FunctionPtr\nflags: defaults to 0\n\nAPI documentation\n\n_get_query_pool_results(device, query_pool, first_query::Integer, query_count::Integer, data_size::Integer, data::Ptr{Nothing}, stride::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}; flags) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_query_pool_results-Tuple{Any, Any, Integer, Integer, Integer, Ptr{Nothing}, Integer}","page":"API","title":"Vulkan._get_query_pool_results","text":"_get_query_pool_results(device, query_pool, first_query::Integer, query_count::Integer, data_size::Integer, data::Ptr{Cvoid}, stride::Integer; flags = 0)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nNOT_READY\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\nquery_pool\nfirst_query::Integer\nquery_count::Integer\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\nstride::Integer\nflags: defaults to 0\n\nAPI documentation\n\n_get_query_pool_results(device, query_pool, first_query::Integer, query_count::Integer, data_size::Integer, data::Ptr{Nothing}, stride::Integer; flags) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_queue_checkpoint_data_2_nv-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_queue_checkpoint_data_2_nv","text":"_get_queue_checkpoint_data_2_nv(queue, fptr::FunctionPtr)::Vector{_CheckpointData2NV}\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\nqueue\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_queue_checkpoint_data_2_nv(queue, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Vector{_CheckpointData2NV}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_queue_checkpoint_data_2_nv-Tuple{Any}","page":"API","title":"Vulkan._get_queue_checkpoint_data_2_nv","text":"_get_queue_checkpoint_data_2_nv(queue)::Vector{_CheckpointData2NV}\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\nqueue\n\nAPI documentation\n\n_get_queue_checkpoint_data_2_nv(queue) -> Vector{_CheckpointData2NV}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_queue_checkpoint_data_nv-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_queue_checkpoint_data_nv","text":"_get_queue_checkpoint_data_nv(queue, fptr::FunctionPtr)::Vector{_CheckpointDataNV}\n\nExtension: VK_NV_device_diagnostic_checkpoints\n\nArguments:\n\nqueue\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_queue_checkpoint_data_nv(queue, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Vector{_CheckpointDataNV}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_queue_checkpoint_data_nv-Tuple{Any}","page":"API","title":"Vulkan._get_queue_checkpoint_data_nv","text":"_get_queue_checkpoint_data_nv(queue)::Vector{_CheckpointDataNV}\n\nExtension: VK_NV_device_diagnostic_checkpoints\n\nArguments:\n\nqueue\n\nAPI documentation\n\n_get_queue_checkpoint_data_nv(queue) -> Vector{_CheckpointDataNV}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_rand_r_output_display_ext-Tuple{Any, Ptr{Nothing}, UInt64, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_rand_r_output_display_ext","text":"_get_rand_r_output_display_ext(physical_device, dpy::Ptr{Display}, rr_output::RROutput, fptr::FunctionPtr)::ResultTypes.Result{DisplayKHR, VulkanError}\n\nExtension: VK_EXT_acquire_xlib_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\nphysical_device\ndpy::Ptr{Display}\nrr_output::RROutput\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_rand_r_output_display_ext(physical_device, dpy::Ptr{Nothing}, rr_output::UInt64, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{DisplayKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_rand_r_output_display_ext-Tuple{Any, Ptr{Nothing}, UInt64}","page":"API","title":"Vulkan._get_rand_r_output_display_ext","text":"_get_rand_r_output_display_ext(physical_device, dpy::Ptr{Display}, rr_output::RROutput)::ResultTypes.Result{DisplayKHR, VulkanError}\n\nExtension: VK_EXT_acquire_xlib_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\nphysical_device\ndpy::Ptr{Display}\nrr_output::RROutput\n\nAPI documentation\n\n_get_rand_r_output_display_ext(physical_device, dpy::Ptr{Nothing}, rr_output::UInt64) -> ResultTypes.Result{DisplayKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_ray_tracing_capture_replay_shader_group_handles_khr-Tuple{Any, Any, Integer, Integer, Integer, Ptr{Nothing}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_ray_tracing_capture_replay_shader_group_handles_khr","text":"_get_ray_tracing_capture_replay_shader_group_handles_khr(device, pipeline, first_group::Integer, group_count::Integer, data_size::Integer, data::Ptr{Cvoid}, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\npipeline\nfirst_group::Integer\ngroup_count::Integer\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_ray_tracing_capture_replay_shader_group_handles_khr(device, pipeline, first_group::Integer, group_count::Integer, data_size::Integer, data::Ptr{Nothing}, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_ray_tracing_capture_replay_shader_group_handles_khr-Tuple{Any, Any, Integer, Integer, Integer, Ptr{Nothing}}","page":"API","title":"Vulkan._get_ray_tracing_capture_replay_shader_group_handles_khr","text":"_get_ray_tracing_capture_replay_shader_group_handles_khr(device, pipeline, first_group::Integer, group_count::Integer, data_size::Integer, data::Ptr{Cvoid})::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\npipeline\nfirst_group::Integer\ngroup_count::Integer\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\n\nAPI documentation\n\n_get_ray_tracing_capture_replay_shader_group_handles_khr(device, pipeline, first_group::Integer, group_count::Integer, data_size::Integer, data::Ptr{Nothing}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_ray_tracing_shader_group_handles_khr-Tuple{Any, Any, Integer, Integer, Integer, Ptr{Nothing}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_ray_tracing_shader_group_handles_khr","text":"_get_ray_tracing_shader_group_handles_khr(device, pipeline, first_group::Integer, group_count::Integer, data_size::Integer, data::Ptr{Cvoid}, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\npipeline\nfirst_group::Integer\ngroup_count::Integer\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_ray_tracing_shader_group_handles_khr(device, pipeline, first_group::Integer, group_count::Integer, data_size::Integer, data::Ptr{Nothing}, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_ray_tracing_shader_group_handles_khr-Tuple{Any, Any, Integer, Integer, Integer, Ptr{Nothing}}","page":"API","title":"Vulkan._get_ray_tracing_shader_group_handles_khr","text":"_get_ray_tracing_shader_group_handles_khr(device, pipeline, first_group::Integer, group_count::Integer, data_size::Integer, data::Ptr{Cvoid})::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\npipeline\nfirst_group::Integer\ngroup_count::Integer\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\n\nAPI documentation\n\n_get_ray_tracing_shader_group_handles_khr(device, pipeline, first_group::Integer, group_count::Integer, data_size::Integer, data::Ptr{Nothing}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_ray_tracing_shader_group_stack_size_khr-Tuple{Any, Any, Integer, ShaderGroupShaderKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_ray_tracing_shader_group_stack_size_khr","text":"_get_ray_tracing_shader_group_stack_size_khr(device, pipeline, group::Integer, group_shader::ShaderGroupShaderKHR, fptr::FunctionPtr)::UInt64\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\ndevice\npipeline\ngroup::Integer\ngroup_shader::ShaderGroupShaderKHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_ray_tracing_shader_group_stack_size_khr(device, pipeline, group::Integer, group_shader::ShaderGroupShaderKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_ray_tracing_shader_group_stack_size_khr-Tuple{Any, Any, Integer, ShaderGroupShaderKHR}","page":"API","title":"Vulkan._get_ray_tracing_shader_group_stack_size_khr","text":"_get_ray_tracing_shader_group_stack_size_khr(device, pipeline, group::Integer, group_shader::ShaderGroupShaderKHR)::UInt64\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\ndevice\npipeline\ngroup::Integer\ngroup_shader::ShaderGroupShaderKHR\n\nAPI documentation\n\n_get_ray_tracing_shader_group_stack_size_khr(device, pipeline, group::Integer, group_shader::ShaderGroupShaderKHR) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_refresh_cycle_duration_google-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_refresh_cycle_duration_google","text":"_get_refresh_cycle_duration_google(device, swapchain, fptr::FunctionPtr)::ResultTypes.Result{_RefreshCycleDurationGOOGLE, VulkanError}\n\nExtension: VK_GOOGLE_display_timing\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_DEVICE_LOST\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\ndevice\nswapchain (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_refresh_cycle_duration_google(device, swapchain, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{_RefreshCycleDurationGOOGLE, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_refresh_cycle_duration_google-Tuple{Any, Any}","page":"API","title":"Vulkan._get_refresh_cycle_duration_google","text":"_get_refresh_cycle_duration_google(device, swapchain)::ResultTypes.Result{_RefreshCycleDurationGOOGLE, VulkanError}\n\nExtension: VK_GOOGLE_display_timing\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_DEVICE_LOST\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\ndevice\nswapchain (externsync)\n\nAPI documentation\n\n_get_refresh_cycle_duration_google(device, swapchain) -> ResultTypes.Result{_RefreshCycleDurationGOOGLE, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_render_area_granularity-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_render_area_granularity","text":"_get_render_area_granularity(device, render_pass, fptr::FunctionPtr)::_Extent2D\n\nArguments:\n\ndevice\nrender_pass\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_render_area_granularity(device, render_pass, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> _Extent2D\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_render_area_granularity-Tuple{Any, Any}","page":"API","title":"Vulkan._get_render_area_granularity","text":"_get_render_area_granularity(device, render_pass)::_Extent2D\n\nArguments:\n\ndevice\nrender_pass\n\nAPI documentation\n\n_get_render_area_granularity(device, render_pass) -> _Extent2D\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_semaphore_counter_value-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_semaphore_counter_value","text":"_get_semaphore_counter_value(device, semaphore, fptr::FunctionPtr)::ResultTypes.Result{UInt64, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\nsemaphore\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_semaphore_counter_value(device, semaphore, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{UInt64, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_semaphore_counter_value-Tuple{Any, Any}","page":"API","title":"Vulkan._get_semaphore_counter_value","text":"_get_semaphore_counter_value(device, semaphore)::ResultTypes.Result{UInt64, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\nsemaphore\n\nAPI documentation\n\n_get_semaphore_counter_value(device, semaphore) -> ResultTypes.Result{UInt64, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_semaphore_fd_khr-Tuple{Any, _SemaphoreGetFdInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_semaphore_fd_khr","text":"_get_semaphore_fd_khr(device, get_fd_info::_SemaphoreGetFdInfoKHR, fptr::FunctionPtr)::ResultTypes.Result{Int, VulkanError}\n\nExtension: VK_KHR_external_semaphore_fd\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nget_fd_info::_SemaphoreGetFdInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_semaphore_fd_khr(device, get_fd_info::_SemaphoreGetFdInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_semaphore_fd_khr-Tuple{Any, _SemaphoreGetFdInfoKHR}","page":"API","title":"Vulkan._get_semaphore_fd_khr","text":"_get_semaphore_fd_khr(device, get_fd_info::_SemaphoreGetFdInfoKHR)::ResultTypes.Result{Int, VulkanError}\n\nExtension: VK_KHR_external_semaphore_fd\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nget_fd_info::_SemaphoreGetFdInfoKHR\n\nAPI documentation\n\n_get_semaphore_fd_khr(device, get_fd_info::_SemaphoreGetFdInfoKHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_shader_info_amd-Tuple{Any, Any, ShaderStageFlag, ShaderInfoTypeAMD, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_shader_info_amd","text":"_get_shader_info_amd(device, pipeline, shader_stage::ShaderStageFlag, info_type::ShaderInfoTypeAMD, fptr::FunctionPtr)::ResultTypes.Result{Tuple{UInt, Ptr{Cvoid}}, VulkanError}\n\nExtension: VK_AMD_shader_info\n\nReturn codes:\n\nError:\nERROR_FEATURE_NOT_PRESENT\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\npipeline\nshader_stage::ShaderStageFlag\ninfo_type::ShaderInfoTypeAMD\nfptr::FunctionPtr\n\nwarning: Warning\nThe pointer returned by this function holds memory owned by Julia. It is therefore your responsibility to free it after use (e.g. with Libc.free).\n\nAPI documentation\n\n_get_shader_info_amd(device, pipeline, shader_stage::ShaderStageFlag, info_type::ShaderInfoTypeAMD, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Tuple{UInt64, Ptr{Nothing}}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_shader_info_amd-Tuple{Any, Any, ShaderStageFlag, ShaderInfoTypeAMD}","page":"API","title":"Vulkan._get_shader_info_amd","text":"_get_shader_info_amd(device, pipeline, shader_stage::ShaderStageFlag, info_type::ShaderInfoTypeAMD)::ResultTypes.Result{Tuple{UInt, Ptr{Cvoid}}, VulkanError}\n\nExtension: VK_AMD_shader_info\n\nReturn codes:\n\nError:\nERROR_FEATURE_NOT_PRESENT\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\npipeline\nshader_stage::ShaderStageFlag\ninfo_type::ShaderInfoTypeAMD\n\nwarning: Warning\nThe pointer returned by this function holds memory owned by Julia. It is therefore your responsibility to free it after use (e.g. with Libc.free).\n\nAPI documentation\n\n_get_shader_info_amd(device, pipeline, shader_stage::ShaderStageFlag, info_type::ShaderInfoTypeAMD) -> ResultTypes.Result{Tuple{UInt64, Ptr{Nothing}}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_swapchain_counter_ext-Tuple{Any, Any, SurfaceCounterFlagEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_swapchain_counter_ext","text":"_get_swapchain_counter_ext(device, swapchain, counter::SurfaceCounterFlagEXT, fptr::FunctionPtr)::ResultTypes.Result{UInt64, VulkanError}\n\nExtension: VK_EXT_display_control\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\n\nArguments:\n\ndevice\nswapchain\ncounter::SurfaceCounterFlagEXT\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_swapchain_counter_ext(device, swapchain, counter::SurfaceCounterFlagEXT, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{UInt64, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_swapchain_counter_ext-Tuple{Any, Any, SurfaceCounterFlagEXT}","page":"API","title":"Vulkan._get_swapchain_counter_ext","text":"_get_swapchain_counter_ext(device, swapchain, counter::SurfaceCounterFlagEXT)::ResultTypes.Result{UInt64, VulkanError}\n\nExtension: VK_EXT_display_control\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\n\nArguments:\n\ndevice\nswapchain\ncounter::SurfaceCounterFlagEXT\n\nAPI documentation\n\n_get_swapchain_counter_ext(device, swapchain, counter::SurfaceCounterFlagEXT) -> ResultTypes.Result{UInt64, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_swapchain_images_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_swapchain_images_khr","text":"_get_swapchain_images_khr(device, swapchain, fptr::FunctionPtr)::ResultTypes.Result{Vector{Image}, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nswapchain\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_swapchain_images_khr(device, swapchain, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{Image}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_swapchain_images_khr-Tuple{Any, Any}","page":"API","title":"Vulkan._get_swapchain_images_khr","text":"_get_swapchain_images_khr(device, swapchain)::ResultTypes.Result{Vector{Image}, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nswapchain\n\nAPI documentation\n\n_get_swapchain_images_khr(device, swapchain) -> ResultTypes.Result{Vector{Image}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_swapchain_status_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_swapchain_status_khr","text":"_get_swapchain_status_khr(device, swapchain, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_shared_presentable_image\n\nReturn codes:\n\nSuccess:\nSUCCESS\nSUBOPTIMAL_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\nERROR_SURFACE_LOST_KHR\nERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT\n\nArguments:\n\ndevice\nswapchain (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\n_get_swapchain_status_khr(device, swapchain, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_swapchain_status_khr-Tuple{Any, Any}","page":"API","title":"Vulkan._get_swapchain_status_khr","text":"_get_swapchain_status_khr(device, swapchain)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_shared_presentable_image\n\nReturn codes:\n\nSuccess:\nSUCCESS\nSUBOPTIMAL_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\nERROR_SURFACE_LOST_KHR\nERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT\n\nArguments:\n\ndevice\nswapchain (externsync)\n\nAPI documentation\n\n_get_swapchain_status_khr(device, swapchain) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_validation_cache_data_ext-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._get_validation_cache_data_ext","text":"_get_validation_cache_data_ext(device, validation_cache, fptr::FunctionPtr)::ResultTypes.Result{Tuple{UInt, Ptr{Cvoid}}, VulkanError}\n\nExtension: VK_EXT_validation_cache\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nvalidation_cache\nfptr::FunctionPtr\n\nwarning: Warning\nThe pointer returned by this function holds memory owned by Julia. It is therefore your responsibility to free it after use (e.g. with Libc.free).\n\nAPI documentation\n\n_get_validation_cache_data_ext(device, validation_cache, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Tuple{UInt64, Ptr{Nothing}}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._get_validation_cache_data_ext-Tuple{Any, Any}","page":"API","title":"Vulkan._get_validation_cache_data_ext","text":"_get_validation_cache_data_ext(device, validation_cache)::ResultTypes.Result{Tuple{UInt, Ptr{Cvoid}}, VulkanError}\n\nExtension: VK_EXT_validation_cache\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nvalidation_cache\n\nwarning: Warning\nThe pointer returned by this function holds memory owned by Julia. It is therefore your responsibility to free it after use (e.g. with Libc.free).\n\nAPI documentation\n\n_get_validation_cache_data_ext(device, validation_cache) -> ResultTypes.Result{Tuple{UInt64, Ptr{Nothing}}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._import_fence_fd_khr-Tuple{Any, _ImportFenceFdInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._import_fence_fd_khr","text":"_import_fence_fd_khr(device, import_fence_fd_info::_ImportFenceFdInfoKHR, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_external_fence_fd\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\n\nArguments:\n\ndevice\nimport_fence_fd_info::_ImportFenceFdInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_import_fence_fd_khr(device, import_fence_fd_info::_ImportFenceFdInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._import_fence_fd_khr-Tuple{Any, _ImportFenceFdInfoKHR}","page":"API","title":"Vulkan._import_fence_fd_khr","text":"_import_fence_fd_khr(device, import_fence_fd_info::_ImportFenceFdInfoKHR)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_external_fence_fd\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\n\nArguments:\n\ndevice\nimport_fence_fd_info::_ImportFenceFdInfoKHR\n\nAPI documentation\n\n_import_fence_fd_khr(device, import_fence_fd_info::_ImportFenceFdInfoKHR) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._import_semaphore_fd_khr-Tuple{Any, _ImportSemaphoreFdInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._import_semaphore_fd_khr","text":"_import_semaphore_fd_khr(device, import_semaphore_fd_info::_ImportSemaphoreFdInfoKHR, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_external_semaphore_fd\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\n\nArguments:\n\ndevice\nimport_semaphore_fd_info::_ImportSemaphoreFdInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\n_import_semaphore_fd_khr(device, import_semaphore_fd_info::_ImportSemaphoreFdInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._import_semaphore_fd_khr-Tuple{Any, _ImportSemaphoreFdInfoKHR}","page":"API","title":"Vulkan._import_semaphore_fd_khr","text":"_import_semaphore_fd_khr(device, import_semaphore_fd_info::_ImportSemaphoreFdInfoKHR)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_external_semaphore_fd\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\n\nArguments:\n\ndevice\nimport_semaphore_fd_info::_ImportSemaphoreFdInfoKHR\n\nAPI documentation\n\n_import_semaphore_fd_khr(device, import_semaphore_fd_info::_ImportSemaphoreFdInfoKHR) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._initialize_performance_api_intel-Tuple{Any, _InitializePerformanceApiInfoINTEL, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._initialize_performance_api_intel","text":"_initialize_performance_api_intel(device, initialize_info::_InitializePerformanceApiInfoINTEL, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ninitialize_info::_InitializePerformanceApiInfoINTEL\nfptr::FunctionPtr\n\nAPI documentation\n\n_initialize_performance_api_intel(device, initialize_info::_InitializePerformanceApiInfoINTEL, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._initialize_performance_api_intel-Tuple{Any, _InitializePerformanceApiInfoINTEL}","page":"API","title":"Vulkan._initialize_performance_api_intel","text":"_initialize_performance_api_intel(device, initialize_info::_InitializePerformanceApiInfoINTEL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ninitialize_info::_InitializePerformanceApiInfoINTEL\n\nAPI documentation\n\n_initialize_performance_api_intel(device, initialize_info::_InitializePerformanceApiInfoINTEL) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._invalidate_mapped_memory_ranges-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._invalidate_mapped_memory_ranges","text":"_invalidate_mapped_memory_ranges(device, memory_ranges::AbstractArray{_MappedMemoryRange}, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nmemory_ranges::AbstractArray{_MappedMemoryRange}\nfptr::FunctionPtr\n\nAPI documentation\n\n_invalidate_mapped_memory_ranges(device, memory_ranges::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._invalidate_mapped_memory_ranges-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._invalidate_mapped_memory_ranges","text":"_invalidate_mapped_memory_ranges(device, memory_ranges::AbstractArray{_MappedMemoryRange})::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nmemory_ranges::AbstractArray{_MappedMemoryRange}\n\nAPI documentation\n\n_invalidate_mapped_memory_ranges(device, memory_ranges::AbstractArray) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._map_memory-Tuple{Any, Any, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._map_memory","text":"_map_memory(device, memory, offset::Integer, size::Integer, fptr::FunctionPtr; flags = 0)::ResultTypes.Result{Ptr{Cvoid}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_MEMORY_MAP_FAILED\n\nArguments:\n\ndevice\nmemory (externsync)\noffset::Integer\nsize::Integer\nfptr::FunctionPtr\nflags: defaults to 0\n\nAPI documentation\n\n_map_memory(device, memory, offset::Integer, size::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}; flags) -> ResultTypes.Result{Ptr{Nothing}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._map_memory-Tuple{Any, Any, Integer, Integer}","page":"API","title":"Vulkan._map_memory","text":"_map_memory(device, memory, offset::Integer, size::Integer; flags = 0)::ResultTypes.Result{Ptr{Cvoid}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_MEMORY_MAP_FAILED\n\nArguments:\n\ndevice\nmemory (externsync)\noffset::Integer\nsize::Integer\nflags: defaults to 0\n\nAPI documentation\n\n_map_memory(device, memory, offset::Integer, size::Integer; flags) -> ResultTypes.Result{Ptr{Nothing}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._merge_pipeline_caches-Tuple{Any, Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._merge_pipeline_caches","text":"_merge_pipeline_caches(device, dst_cache, src_caches::AbstractArray{PipelineCache}, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ndst_cache (externsync)\nsrc_caches::AbstractArray{PipelineCache}\nfptr::FunctionPtr\n\nAPI documentation\n\n_merge_pipeline_caches(device, dst_cache, src_caches::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._merge_pipeline_caches-Tuple{Any, Any, AbstractArray}","page":"API","title":"Vulkan._merge_pipeline_caches","text":"_merge_pipeline_caches(device, dst_cache, src_caches::AbstractArray{PipelineCache})::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ndst_cache (externsync)\nsrc_caches::AbstractArray{PipelineCache}\n\nAPI documentation\n\n_merge_pipeline_caches(device, dst_cache, src_caches::AbstractArray) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._merge_validation_caches_ext-Tuple{Any, Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._merge_validation_caches_ext","text":"_merge_validation_caches_ext(device, dst_cache, src_caches::AbstractArray{ValidationCacheEXT}, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_validation_cache\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ndst_cache (externsync)\nsrc_caches::AbstractArray{ValidationCacheEXT}\nfptr::FunctionPtr\n\nAPI documentation\n\n_merge_validation_caches_ext(device, dst_cache, src_caches::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._merge_validation_caches_ext-Tuple{Any, Any, AbstractArray}","page":"API","title":"Vulkan._merge_validation_caches_ext","text":"_merge_validation_caches_ext(device, dst_cache, src_caches::AbstractArray{ValidationCacheEXT})::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_validation_cache\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ndst_cache (externsync)\nsrc_caches::AbstractArray{ValidationCacheEXT}\n\nAPI documentation\n\n_merge_validation_caches_ext(device, dst_cache, src_caches::AbstractArray) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._queue_begin_debug_utils_label_ext-Tuple{Any, _DebugUtilsLabelEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._queue_begin_debug_utils_label_ext","text":"_queue_begin_debug_utils_label_ext(queue, label_info::_DebugUtilsLabelEXT, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\nqueue\nlabel_info::_DebugUtilsLabelEXT\nfptr::FunctionPtr\n\nAPI documentation\n\n_queue_begin_debug_utils_label_ext(queue, label_info::_DebugUtilsLabelEXT, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._queue_begin_debug_utils_label_ext-Tuple{Any, _DebugUtilsLabelEXT}","page":"API","title":"Vulkan._queue_begin_debug_utils_label_ext","text":"_queue_begin_debug_utils_label_ext(queue, label_info::_DebugUtilsLabelEXT)::Cvoid\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\nqueue\nlabel_info::_DebugUtilsLabelEXT\n\nAPI documentation\n\n_queue_begin_debug_utils_label_ext(queue, label_info::_DebugUtilsLabelEXT)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._queue_bind_sparse-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._queue_bind_sparse","text":"_queue_bind_sparse(queue, bind_info::AbstractArray{_BindSparseInfo}, fptr::FunctionPtr; fence = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\nqueue (externsync)\nbind_info::AbstractArray{_BindSparseInfo} (externsync)\nfptr::FunctionPtr\nfence: defaults to C_NULL (externsync)\n\nAPI documentation\n\n_queue_bind_sparse(queue, bind_info::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}; fence) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._queue_bind_sparse-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._queue_bind_sparse","text":"_queue_bind_sparse(queue, bind_info::AbstractArray{_BindSparseInfo}; fence = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\nqueue (externsync)\nbind_info::AbstractArray{_BindSparseInfo} (externsync)\nfence: defaults to C_NULL (externsync)\n\nAPI documentation\n\n_queue_bind_sparse(queue, bind_info::AbstractArray; fence) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._queue_end_debug_utils_label_ext-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._queue_end_debug_utils_label_ext","text":"_queue_end_debug_utils_label_ext(queue, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\nqueue\nfptr::FunctionPtr\n\nAPI documentation\n\n_queue_end_debug_utils_label_ext(queue, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._queue_end_debug_utils_label_ext-Tuple{Any}","page":"API","title":"Vulkan._queue_end_debug_utils_label_ext","text":"_queue_end_debug_utils_label_ext(queue)::Cvoid\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\nqueue\n\nAPI documentation\n\n_queue_end_debug_utils_label_ext(queue)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._queue_insert_debug_utils_label_ext-Tuple{Any, _DebugUtilsLabelEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._queue_insert_debug_utils_label_ext","text":"_queue_insert_debug_utils_label_ext(queue, label_info::_DebugUtilsLabelEXT, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\nqueue\nlabel_info::_DebugUtilsLabelEXT\nfptr::FunctionPtr\n\nAPI documentation\n\n_queue_insert_debug_utils_label_ext(queue, label_info::_DebugUtilsLabelEXT, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._queue_insert_debug_utils_label_ext-Tuple{Any, _DebugUtilsLabelEXT}","page":"API","title":"Vulkan._queue_insert_debug_utils_label_ext","text":"_queue_insert_debug_utils_label_ext(queue, label_info::_DebugUtilsLabelEXT)::Cvoid\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\nqueue\nlabel_info::_DebugUtilsLabelEXT\n\nAPI documentation\n\n_queue_insert_debug_utils_label_ext(queue, label_info::_DebugUtilsLabelEXT)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._queue_present_khr-Tuple{Any, _PresentInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._queue_present_khr","text":"_queue_present_khr(queue, present_info::_PresentInfoKHR, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nSuccess:\nSUCCESS\nSUBOPTIMAL_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\nERROR_SURFACE_LOST_KHR\nERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT\n\nArguments:\n\nqueue (externsync)\npresent_info::_PresentInfoKHR (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\n_queue_present_khr(queue, present_info::_PresentInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._queue_present_khr-Tuple{Any, _PresentInfoKHR}","page":"API","title":"Vulkan._queue_present_khr","text":"_queue_present_khr(queue, present_info::_PresentInfoKHR)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nSuccess:\nSUCCESS\nSUBOPTIMAL_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\nERROR_SURFACE_LOST_KHR\nERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT\n\nArguments:\n\nqueue (externsync)\npresent_info::_PresentInfoKHR (externsync)\n\nAPI documentation\n\n_queue_present_khr(queue, present_info::_PresentInfoKHR) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._queue_set_performance_configuration_intel-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._queue_set_performance_configuration_intel","text":"_queue_set_performance_configuration_intel(queue, configuration, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\nqueue\nconfiguration\nfptr::FunctionPtr\n\nAPI documentation\n\n_queue_set_performance_configuration_intel(queue, configuration, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._queue_set_performance_configuration_intel-Tuple{Any, Any}","page":"API","title":"Vulkan._queue_set_performance_configuration_intel","text":"_queue_set_performance_configuration_intel(queue, configuration)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\nqueue\nconfiguration\n\nAPI documentation\n\n_queue_set_performance_configuration_intel(queue, configuration) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._queue_submit-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._queue_submit","text":"_queue_submit(queue, submits::AbstractArray{_SubmitInfo}, fptr::FunctionPtr; fence = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\nqueue (externsync)\nsubmits::AbstractArray{_SubmitInfo}\nfptr::FunctionPtr\nfence: defaults to C_NULL (externsync)\n\nAPI documentation\n\n_queue_submit(queue, submits::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}; fence) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._queue_submit-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._queue_submit","text":"_queue_submit(queue, submits::AbstractArray{_SubmitInfo}; fence = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\nqueue (externsync)\nsubmits::AbstractArray{_SubmitInfo}\nfence: defaults to C_NULL (externsync)\n\nAPI documentation\n\n_queue_submit(queue, submits::AbstractArray; fence) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._queue_submit_2_khr-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._queue_submit_2_khr","text":"_queue_submit_2_khr(queue, submits::AbstractArray{_SubmitInfo2KHR}, fptr::FunctionPtr; fence = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_synchronization2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\nqueue (externsync)\nsubmits::AbstractArray{_SubmitInfo2KHR}\nfptr::FunctionPtr\nfence: defaults to C_NULL (externsync)\n\nAPI documentation\n\n_queue_submit_2_khr(queue, submits::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}; fence) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._queue_submit_2_khr-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._queue_submit_2_khr","text":"_queue_submit_2_khr(queue, submits::AbstractArray{_SubmitInfo2KHR}; fence = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_synchronization2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\nqueue (externsync)\nsubmits::AbstractArray{_SubmitInfo2KHR}\nfence: defaults to C_NULL (externsync)\n\nAPI documentation\n\n_queue_submit_2_khr(queue, submits::AbstractArray; fence) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._queue_wait_idle-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._queue_wait_idle","text":"_queue_wait_idle(queue, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\nqueue (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\n_queue_wait_idle(queue, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._queue_wait_idle-Tuple{Any}","page":"API","title":"Vulkan._queue_wait_idle","text":"_queue_wait_idle(queue)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\nqueue (externsync)\n\nAPI documentation\n\n_queue_wait_idle(queue) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._register_device_event_ext-Tuple{Any, _DeviceEventInfoEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._register_device_event_ext","text":"_register_device_event_ext(device, device_event_info::_DeviceEventInfoEXT, fptr::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{Fence, VulkanError}\n\nExtension: VK_EXT_display_control\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ndevice_event_info::_DeviceEventInfoEXT\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_register_device_event_ext(device, device_event_info::_DeviceEventInfoEXT, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{Fence, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._register_device_event_ext-Tuple{Any, _DeviceEventInfoEXT}","page":"API","title":"Vulkan._register_device_event_ext","text":"_register_device_event_ext(device, device_event_info::_DeviceEventInfoEXT; allocator = C_NULL)::ResultTypes.Result{Fence, VulkanError}\n\nExtension: VK_EXT_display_control\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ndevice_event_info::_DeviceEventInfoEXT\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_register_device_event_ext(device, device_event_info::_DeviceEventInfoEXT; allocator) -> ResultTypes.Result{Fence, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._register_display_event_ext-Tuple{Any, Any, _DisplayEventInfoEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._register_display_event_ext","text":"_register_display_event_ext(device, display, display_event_info::_DisplayEventInfoEXT, fptr::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{Fence, VulkanError}\n\nExtension: VK_EXT_display_control\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ndisplay\ndisplay_event_info::_DisplayEventInfoEXT\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_register_display_event_ext(device, display, display_event_info::_DisplayEventInfoEXT, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{Fence, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._register_display_event_ext-Tuple{Any, Any, _DisplayEventInfoEXT}","page":"API","title":"Vulkan._register_display_event_ext","text":"_register_display_event_ext(device, display, display_event_info::_DisplayEventInfoEXT; allocator = C_NULL)::ResultTypes.Result{Fence, VulkanError}\n\nExtension: VK_EXT_display_control\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ndisplay\ndisplay_event_info::_DisplayEventInfoEXT\nallocator: defaults to C_NULL\n\nAPI documentation\n\n_register_display_event_ext(device, display, display_event_info::_DisplayEventInfoEXT; allocator) -> ResultTypes.Result{Fence, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._release_display_ext-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._release_display_ext","text":"_release_display_ext(physical_device, display, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_direct_mode_display\n\nReturn codes:\n\nArguments:\n\nphysical_device\ndisplay\nfptr::FunctionPtr\n\nAPI documentation\n\n_release_display_ext(physical_device, display, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._release_display_ext-Tuple{Any, Any}","page":"API","title":"Vulkan._release_display_ext","text":"_release_display_ext(physical_device, display)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_direct_mode_display\n\nReturn codes:\n\nArguments:\n\nphysical_device\ndisplay\n\nAPI documentation\n\n_release_display_ext(physical_device, display) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._release_performance_configuration_intel-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._release_performance_configuration_intel","text":"_release_performance_configuration_intel(device, fptr::FunctionPtr; configuration = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nfptr::FunctionPtr\nconfiguration: defaults to C_NULL (externsync)\n\nAPI documentation\n\n_release_performance_configuration_intel(device, fptr::Union{Ptr{Nothing}, Base.CFunction}; configuration) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._release_performance_configuration_intel-Tuple{Any}","page":"API","title":"Vulkan._release_performance_configuration_intel","text":"_release_performance_configuration_intel(device; configuration = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nconfiguration: defaults to C_NULL (externsync)\n\nAPI documentation\n\n_release_performance_configuration_intel(device; configuration) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._release_profiling_lock_khr-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._release_profiling_lock_khr","text":"_release_profiling_lock_khr(device, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_KHR_performance_query\n\nArguments:\n\ndevice\nfptr::FunctionPtr\n\nAPI documentation\n\n_release_profiling_lock_khr(device, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._release_profiling_lock_khr-Tuple{Any}","page":"API","title":"Vulkan._release_profiling_lock_khr","text":"_release_profiling_lock_khr(device)::Cvoid\n\nExtension: VK_KHR_performance_query\n\nArguments:\n\ndevice\n\nAPI documentation\n\n_release_profiling_lock_khr(device)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._reset_command_buffer-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._reset_command_buffer","text":"_reset_command_buffer(command_buffer, fptr::FunctionPtr; flags = 0)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ncommand_buffer (externsync)\nfptr::FunctionPtr\nflags: defaults to 0\n\nAPI documentation\n\n_reset_command_buffer(command_buffer, fptr::Union{Ptr{Nothing}, Base.CFunction}; flags) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._reset_command_buffer-Tuple{Any}","page":"API","title":"Vulkan._reset_command_buffer","text":"_reset_command_buffer(command_buffer; flags = 0)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ncommand_buffer (externsync)\nflags: defaults to 0\n\nAPI documentation\n\n_reset_command_buffer(command_buffer; flags) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._reset_command_pool-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._reset_command_pool","text":"_reset_command_pool(device, command_pool, fptr::FunctionPtr; flags = 0)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncommand_pool (externsync)\nfptr::FunctionPtr\nflags: defaults to 0\n\nAPI documentation\n\n_reset_command_pool(device, command_pool, fptr::Union{Ptr{Nothing}, Base.CFunction}; flags) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._reset_command_pool-Tuple{Any, Any}","page":"API","title":"Vulkan._reset_command_pool","text":"_reset_command_pool(device, command_pool; flags = 0)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncommand_pool (externsync)\nflags: defaults to 0\n\nAPI documentation\n\n_reset_command_pool(device, command_pool; flags) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._reset_descriptor_pool-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._reset_descriptor_pool","text":"_reset_descriptor_pool(device, descriptor_pool, fptr::FunctionPtr; flags = 0)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nArguments:\n\ndevice\ndescriptor_pool (externsync)\nfptr::FunctionPtr\nflags: defaults to 0\n\nAPI documentation\n\n_reset_descriptor_pool(device, descriptor_pool, fptr::Union{Ptr{Nothing}, Base.CFunction}; flags) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._reset_descriptor_pool-Tuple{Any, Any}","page":"API","title":"Vulkan._reset_descriptor_pool","text":"_reset_descriptor_pool(device, descriptor_pool; flags = 0)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nArguments:\n\ndevice\ndescriptor_pool (externsync)\nflags: defaults to 0\n\nAPI documentation\n\n_reset_descriptor_pool(device, descriptor_pool; flags) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._reset_event-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._reset_event","text":"_reset_event(device, event, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nevent (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\n_reset_event(device, event, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._reset_event-Tuple{Any, Any}","page":"API","title":"Vulkan._reset_event","text":"_reset_event(device, event)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nevent (externsync)\n\nAPI documentation\n\n_reset_event(device, event) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._reset_fences-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._reset_fences","text":"_reset_fences(device, fences::AbstractArray{Fence}, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nfences::AbstractArray{Fence} (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\n_reset_fences(device, fences::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._reset_fences-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan._reset_fences","text":"_reset_fences(device, fences::AbstractArray{Fence})::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nfences::AbstractArray{Fence} (externsync)\n\nAPI documentation\n\n_reset_fences(device, fences::AbstractArray) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._reset_query_pool-Tuple{Any, Any, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._reset_query_pool","text":"_reset_query_pool(device, query_pool, first_query::Integer, query_count::Integer, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ndevice\nquery_pool\nfirst_query::Integer\nquery_count::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_reset_query_pool(device, query_pool, first_query::Integer, query_count::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._reset_query_pool-Tuple{Any, Any, Integer, Integer}","page":"API","title":"Vulkan._reset_query_pool","text":"_reset_query_pool(device, query_pool, first_query::Integer, query_count::Integer)::Cvoid\n\nArguments:\n\ndevice\nquery_pool\nfirst_query::Integer\nquery_count::Integer\n\nAPI documentation\n\n_reset_query_pool(device, query_pool, first_query::Integer, query_count::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._set_debug_utils_object_name_ext-Tuple{Any, _DebugUtilsObjectNameInfoEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._set_debug_utils_object_name_ext","text":"_set_debug_utils_object_name_ext(device, name_info::_DebugUtilsObjectNameInfoEXT, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_debug_utils\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nname_info::_DebugUtilsObjectNameInfoEXT (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\n_set_debug_utils_object_name_ext(device, name_info::_DebugUtilsObjectNameInfoEXT, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._set_debug_utils_object_name_ext-Tuple{Any, _DebugUtilsObjectNameInfoEXT}","page":"API","title":"Vulkan._set_debug_utils_object_name_ext","text":"_set_debug_utils_object_name_ext(device, name_info::_DebugUtilsObjectNameInfoEXT)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_debug_utils\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nname_info::_DebugUtilsObjectNameInfoEXT (externsync)\n\nAPI documentation\n\n_set_debug_utils_object_name_ext(device, name_info::_DebugUtilsObjectNameInfoEXT) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._set_debug_utils_object_tag_ext-Tuple{Any, _DebugUtilsObjectTagInfoEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._set_debug_utils_object_tag_ext","text":"_set_debug_utils_object_tag_ext(device, tag_info::_DebugUtilsObjectTagInfoEXT, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_debug_utils\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ntag_info::_DebugUtilsObjectTagInfoEXT (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\n_set_debug_utils_object_tag_ext(device, tag_info::_DebugUtilsObjectTagInfoEXT, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._set_debug_utils_object_tag_ext-Tuple{Any, _DebugUtilsObjectTagInfoEXT}","page":"API","title":"Vulkan._set_debug_utils_object_tag_ext","text":"_set_debug_utils_object_tag_ext(device, tag_info::_DebugUtilsObjectTagInfoEXT)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_debug_utils\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ntag_info::_DebugUtilsObjectTagInfoEXT (externsync)\n\nAPI documentation\n\n_set_debug_utils_object_tag_ext(device, tag_info::_DebugUtilsObjectTagInfoEXT) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._set_event-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._set_event","text":"_set_event(device, event, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nevent (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\n_set_event(device, event, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._set_event-Tuple{Any, Any}","page":"API","title":"Vulkan._set_event","text":"_set_event(device, event)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nevent (externsync)\n\nAPI documentation\n\n_set_event(device, event) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._set_hdr_metadata_ext-Tuple{Any, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._set_hdr_metadata_ext","text":"_set_hdr_metadata_ext(device, swapchains::AbstractArray{SwapchainKHR}, metadata::AbstractArray{_HdrMetadataEXT}, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_hdr_metadata\n\nArguments:\n\ndevice\nswapchains::AbstractArray{SwapchainKHR}\nmetadata::AbstractArray{_HdrMetadataEXT}\nfptr::FunctionPtr\n\nAPI documentation\n\n_set_hdr_metadata_ext(device, swapchains::AbstractArray, metadata::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._set_hdr_metadata_ext-Tuple{Any, AbstractArray, AbstractArray}","page":"API","title":"Vulkan._set_hdr_metadata_ext","text":"_set_hdr_metadata_ext(device, swapchains::AbstractArray{SwapchainKHR}, metadata::AbstractArray{_HdrMetadataEXT})::Cvoid\n\nExtension: VK_EXT_hdr_metadata\n\nArguments:\n\ndevice\nswapchains::AbstractArray{SwapchainKHR}\nmetadata::AbstractArray{_HdrMetadataEXT}\n\nAPI documentation\n\n_set_hdr_metadata_ext(device, swapchains::AbstractArray, metadata::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._set_local_dimming_amd-Tuple{Any, Any, Bool, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._set_local_dimming_amd","text":"_set_local_dimming_amd(device, swap_chain, local_dimming_enable::Bool, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_AMD_display_native_hdr\n\nArguments:\n\ndevice\nswap_chain\nlocal_dimming_enable::Bool\nfptr::FunctionPtr\n\nAPI documentation\n\n_set_local_dimming_amd(device, swap_chain, local_dimming_enable::Bool, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._set_local_dimming_amd-Tuple{Any, Any, Bool}","page":"API","title":"Vulkan._set_local_dimming_amd","text":"_set_local_dimming_amd(device, swap_chain, local_dimming_enable::Bool)::Cvoid\n\nExtension: VK_AMD_display_native_hdr\n\nArguments:\n\ndevice\nswap_chain\nlocal_dimming_enable::Bool\n\nAPI documentation\n\n_set_local_dimming_amd(device, swap_chain, local_dimming_enable::Bool)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._set_private_data_ext-Tuple{Any, ObjectType, Integer, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._set_private_data_ext","text":"_set_private_data_ext(device, object_type::ObjectType, object_handle::Integer, private_data_slot, data::Integer, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_private_data\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nobject_type::ObjectType\nobject_handle::Integer\nprivate_data_slot\ndata::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_set_private_data_ext(device, object_type::ObjectType, object_handle::Integer, private_data_slot, data::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._set_private_data_ext-Tuple{Any, ObjectType, Integer, Any, Integer}","page":"API","title":"Vulkan._set_private_data_ext","text":"_set_private_data_ext(device, object_type::ObjectType, object_handle::Integer, private_data_slot, data::Integer)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_private_data\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nobject_type::ObjectType\nobject_handle::Integer\nprivate_data_slot\ndata::Integer\n\nAPI documentation\n\n_set_private_data_ext(device, object_type::ObjectType, object_handle::Integer, private_data_slot, data::Integer) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._signal_semaphore-Tuple{Any, _SemaphoreSignalInfo, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._signal_semaphore","text":"_signal_semaphore(device, signal_info::_SemaphoreSignalInfo, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nsignal_info::_SemaphoreSignalInfo\nfptr::FunctionPtr\n\nAPI documentation\n\n_signal_semaphore(device, signal_info::_SemaphoreSignalInfo, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._signal_semaphore-Tuple{Any, _SemaphoreSignalInfo}","page":"API","title":"Vulkan._signal_semaphore","text":"_signal_semaphore(device, signal_info::_SemaphoreSignalInfo)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nsignal_info::_SemaphoreSignalInfo\n\nAPI documentation\n\n_signal_semaphore(device, signal_info::_SemaphoreSignalInfo) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._submit_debug_utils_message_ext-Tuple{Any, DebugUtilsMessageSeverityFlagEXT, DebugUtilsMessageTypeFlagEXT, _DebugUtilsMessengerCallbackDataEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._submit_debug_utils_message_ext","text":"_submit_debug_utils_message_ext(instance, message_severity::DebugUtilsMessageSeverityFlagEXT, message_types::DebugUtilsMessageTypeFlagEXT, callback_data::_DebugUtilsMessengerCallbackDataEXT, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\ninstance\nmessage_severity::DebugUtilsMessageSeverityFlagEXT\nmessage_types::DebugUtilsMessageTypeFlagEXT\ncallback_data::_DebugUtilsMessengerCallbackDataEXT\nfptr::FunctionPtr\n\nAPI documentation\n\n_submit_debug_utils_message_ext(instance, message_severity::DebugUtilsMessageSeverityFlagEXT, message_types::DebugUtilsMessageTypeFlagEXT, callback_data::_DebugUtilsMessengerCallbackDataEXT, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._submit_debug_utils_message_ext-Tuple{Any, DebugUtilsMessageSeverityFlagEXT, DebugUtilsMessageTypeFlagEXT, _DebugUtilsMessengerCallbackDataEXT}","page":"API","title":"Vulkan._submit_debug_utils_message_ext","text":"_submit_debug_utils_message_ext(instance, message_severity::DebugUtilsMessageSeverityFlagEXT, message_types::DebugUtilsMessageTypeFlagEXT, callback_data::_DebugUtilsMessengerCallbackDataEXT)::Cvoid\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\ninstance\nmessage_severity::DebugUtilsMessageSeverityFlagEXT\nmessage_types::DebugUtilsMessageTypeFlagEXT\ncallback_data::_DebugUtilsMessengerCallbackDataEXT\n\nAPI documentation\n\n_submit_debug_utils_message_ext(instance, message_severity::DebugUtilsMessageSeverityFlagEXT, message_types::DebugUtilsMessageTypeFlagEXT, callback_data::_DebugUtilsMessengerCallbackDataEXT)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._trim_command_pool-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._trim_command_pool","text":"_trim_command_pool(device, command_pool, fptr::FunctionPtr; flags = 0)::Cvoid\n\nArguments:\n\ndevice\ncommand_pool (externsync)\nfptr::FunctionPtr\nflags: defaults to 0\n\nAPI documentation\n\n_trim_command_pool(device, command_pool, fptr::Union{Ptr{Nothing}, Base.CFunction}; flags)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._trim_command_pool-Tuple{Any, Any}","page":"API","title":"Vulkan._trim_command_pool","text":"_trim_command_pool(device, command_pool; flags = 0)::Cvoid\n\nArguments:\n\ndevice\ncommand_pool (externsync)\nflags: defaults to 0\n\nAPI documentation\n\n_trim_command_pool(device, command_pool; flags)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._uninitialize_performance_api_intel-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._uninitialize_performance_api_intel","text":"_uninitialize_performance_api_intel(device, fptr::FunctionPtr)::Cvoid\n\nExtension: VK_INTEL_performance_query\n\nArguments:\n\ndevice\nfptr::FunctionPtr\n\nAPI documentation\n\n_uninitialize_performance_api_intel(device, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._uninitialize_performance_api_intel-Tuple{Any}","page":"API","title":"Vulkan._uninitialize_performance_api_intel","text":"_uninitialize_performance_api_intel(device)::Cvoid\n\nExtension: VK_INTEL_performance_query\n\nArguments:\n\ndevice\n\nAPI documentation\n\n_uninitialize_performance_api_intel(device)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._unmap_memory-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._unmap_memory","text":"_unmap_memory(device, memory, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ndevice\nmemory (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\n_unmap_memory(device, memory, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._unmap_memory-Tuple{Any, Any}","page":"API","title":"Vulkan._unmap_memory","text":"_unmap_memory(device, memory)::Cvoid\n\nArguments:\n\ndevice\nmemory (externsync)\n\nAPI documentation\n\n_unmap_memory(device, memory)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._update_descriptor_set_with_template-Tuple{Any, Any, Any, Ptr{Nothing}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._update_descriptor_set_with_template","text":"_update_descriptor_set_with_template(device, descriptor_set, descriptor_update_template, data::Ptr{Cvoid}, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ndevice\ndescriptor_set (externsync)\ndescriptor_update_template\ndata::Ptr{Cvoid}\nfptr::FunctionPtr\n\nAPI documentation\n\n_update_descriptor_set_with_template(device, descriptor_set, descriptor_update_template, data::Ptr{Nothing}, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._update_descriptor_set_with_template-Tuple{Any, Any, Any, Ptr{Nothing}}","page":"API","title":"Vulkan._update_descriptor_set_with_template","text":"_update_descriptor_set_with_template(device, descriptor_set, descriptor_update_template, data::Ptr{Cvoid})::Cvoid\n\nArguments:\n\ndevice\ndescriptor_set (externsync)\ndescriptor_update_template\ndata::Ptr{Cvoid}\n\nAPI documentation\n\n_update_descriptor_set_with_template(device, descriptor_set, descriptor_update_template, data::Ptr{Nothing})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._update_descriptor_sets-Tuple{Any, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._update_descriptor_sets","text":"_update_descriptor_sets(device, descriptor_writes::AbstractArray{_WriteDescriptorSet}, descriptor_copies::AbstractArray{_CopyDescriptorSet}, fptr::FunctionPtr)::Cvoid\n\nArguments:\n\ndevice\ndescriptor_writes::AbstractArray{_WriteDescriptorSet} (externsync)\ndescriptor_copies::AbstractArray{_CopyDescriptorSet} (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\n_update_descriptor_sets(device, descriptor_writes::AbstractArray, descriptor_copies::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._update_descriptor_sets-Tuple{Any, AbstractArray, AbstractArray}","page":"API","title":"Vulkan._update_descriptor_sets","text":"_update_descriptor_sets(device, descriptor_writes::AbstractArray{_WriteDescriptorSet}, descriptor_copies::AbstractArray{_CopyDescriptorSet})::Cvoid\n\nArguments:\n\ndevice\ndescriptor_writes::AbstractArray{_WriteDescriptorSet} (externsync)\ndescriptor_copies::AbstractArray{_CopyDescriptorSet} (externsync)\n\nAPI documentation\n\n_update_descriptor_sets(device, descriptor_writes::AbstractArray, descriptor_copies::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._wait_for_fences-Tuple{Any, AbstractArray, Bool, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._wait_for_fences","text":"_wait_for_fences(device, fences::AbstractArray{Fence}, wait_all::Bool, timeout::Integer, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nTIMEOUT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\nfences::AbstractArray{Fence}\nwait_all::Bool\ntimeout::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_wait_for_fences(device, fences::AbstractArray, wait_all::Bool, timeout::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._wait_for_fences-Tuple{Any, AbstractArray, Bool, Integer}","page":"API","title":"Vulkan._wait_for_fences","text":"_wait_for_fences(device, fences::AbstractArray{Fence}, wait_all::Bool, timeout::Integer)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nTIMEOUT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\nfences::AbstractArray{Fence}\nwait_all::Bool\ntimeout::Integer\n\nAPI documentation\n\n_wait_for_fences(device, fences::AbstractArray, wait_all::Bool, timeout::Integer) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._wait_semaphores-Tuple{Any, _SemaphoreWaitInfo, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._wait_semaphores","text":"_wait_semaphores(device, wait_info::_SemaphoreWaitInfo, timeout::Integer, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nTIMEOUT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\nwait_info::_SemaphoreWaitInfo\ntimeout::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_wait_semaphores(device, wait_info::_SemaphoreWaitInfo, timeout::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._wait_semaphores-Tuple{Any, _SemaphoreWaitInfo, Integer}","page":"API","title":"Vulkan._wait_semaphores","text":"_wait_semaphores(device, wait_info::_SemaphoreWaitInfo, timeout::Integer)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nTIMEOUT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\nwait_info::_SemaphoreWaitInfo\ntimeout::Integer\n\nAPI documentation\n\n_wait_semaphores(device, wait_info::_SemaphoreWaitInfo, timeout::Integer) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._write_acceleration_structures_properties_khr-Tuple{Any, AbstractArray, QueryType, Integer, Ptr{Nothing}, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan._write_acceleration_structures_properties_khr","text":"_write_acceleration_structures_properties_khr(device, acceleration_structures::AbstractArray{AccelerationStructureKHR}, query_type::QueryType, data_size::Integer, data::Ptr{Cvoid}, stride::Integer, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_acceleration_structure\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nacceleration_structures::AbstractArray{AccelerationStructureKHR}\nquery_type::QueryType\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\nstride::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\n_write_acceleration_structures_properties_khr(device, acceleration_structures::AbstractArray, query_type::QueryType, data_size::Integer, data::Ptr{Nothing}, stride::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan._write_acceleration_structures_properties_khr-Tuple{Any, AbstractArray, QueryType, Integer, Ptr{Nothing}, Integer}","page":"API","title":"Vulkan._write_acceleration_structures_properties_khr","text":"_write_acceleration_structures_properties_khr(device, acceleration_structures::AbstractArray{AccelerationStructureKHR}, query_type::QueryType, data_size::Integer, data::Ptr{Cvoid}, stride::Integer)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_acceleration_structure\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nacceleration_structures::AbstractArray{AccelerationStructureKHR}\nquery_type::QueryType\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\nstride::Integer\n\nAPI documentation\n\n_write_acceleration_structures_properties_khr(device, acceleration_structures::AbstractArray, query_type::QueryType, data_size::Integer, data::Ptr{Nothing}, stride::Integer) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.acquire_next_image_2_khr-Tuple{Any, AcquireNextImageInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.acquire_next_image_2_khr","text":"acquire_next_image_2_khr(device, acquire_info::AcquireNextImageInfoKHR, fptr::FunctionPtr)::ResultTypes.Result{Tuple{UInt32, Result}, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nSuccess:\nSUCCESS\nTIMEOUT\nNOT_READY\nSUBOPTIMAL_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\nERROR_SURFACE_LOST_KHR\nERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT\n\nArguments:\n\ndevice\nacquire_info::AcquireNextImageInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\nacquire_next_image_2_khr(device, acquire_info::AcquireNextImageInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Tuple{UInt32, Result}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.acquire_next_image_2_khr-Tuple{Any, AcquireNextImageInfoKHR}","page":"API","title":"Vulkan.acquire_next_image_2_khr","text":"acquire_next_image_2_khr(device, acquire_info::AcquireNextImageInfoKHR)::ResultTypes.Result{Tuple{UInt32, Result}, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nSuccess:\nSUCCESS\nTIMEOUT\nNOT_READY\nSUBOPTIMAL_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\nERROR_SURFACE_LOST_KHR\nERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT\n\nArguments:\n\ndevice\nacquire_info::AcquireNextImageInfoKHR\n\nAPI documentation\n\nacquire_next_image_2_khr(device, acquire_info::AcquireNextImageInfoKHR) -> ResultTypes.Result{Tuple{UInt32, Result}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.acquire_next_image_khr-Tuple{Any, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.acquire_next_image_khr","text":"acquire_next_image_khr(device, swapchain, timeout::Integer, fptr::FunctionPtr; semaphore = C_NULL, fence = C_NULL)::ResultTypes.Result{Tuple{UInt32, Result}, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nSuccess:\nSUCCESS\nTIMEOUT\nNOT_READY\nSUBOPTIMAL_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\nERROR_SURFACE_LOST_KHR\nERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT\n\nArguments:\n\ndevice\nswapchain (externsync)\ntimeout::Integer\nfptr::FunctionPtr\nsemaphore: defaults to C_NULL (externsync)\nfence: defaults to C_NULL (externsync)\n\nAPI documentation\n\nacquire_next_image_khr(device, swapchain, timeout::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}; semaphore, fence) -> ResultTypes.Result{Tuple{UInt32, Result}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.acquire_next_image_khr-Tuple{Any, Any, Integer}","page":"API","title":"Vulkan.acquire_next_image_khr","text":"acquire_next_image_khr(device, swapchain, timeout::Integer; semaphore = C_NULL, fence = C_NULL)::ResultTypes.Result{Tuple{UInt32, Result}, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nSuccess:\nSUCCESS\nTIMEOUT\nNOT_READY\nSUBOPTIMAL_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\nERROR_SURFACE_LOST_KHR\nERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT\n\nArguments:\n\ndevice\nswapchain (externsync)\ntimeout::Integer\nsemaphore: defaults to C_NULL (externsync)\nfence: defaults to C_NULL (externsync)\n\nAPI documentation\n\nacquire_next_image_khr(device, swapchain, timeout::Integer; semaphore, fence) -> ResultTypes.Result{Tuple{UInt32, Result}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.acquire_performance_configuration_intel-Tuple{Any, PerformanceConfigurationAcquireInfoINTEL, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.acquire_performance_configuration_intel","text":"acquire_performance_configuration_intel(device, acquire_info::PerformanceConfigurationAcquireInfoINTEL, fptr::FunctionPtr)::ResultTypes.Result{PerformanceConfigurationINTEL, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nacquire_info::PerformanceConfigurationAcquireInfoINTEL\nfptr::FunctionPtr\n\nAPI documentation\n\nacquire_performance_configuration_intel(device, acquire_info::PerformanceConfigurationAcquireInfoINTEL, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{PerformanceConfigurationINTEL, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.acquire_performance_configuration_intel-Tuple{Any, PerformanceConfigurationAcquireInfoINTEL}","page":"API","title":"Vulkan.acquire_performance_configuration_intel","text":"acquire_performance_configuration_intel(device, acquire_info::PerformanceConfigurationAcquireInfoINTEL)::ResultTypes.Result{PerformanceConfigurationINTEL, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nacquire_info::PerformanceConfigurationAcquireInfoINTEL\n\nAPI documentation\n\nacquire_performance_configuration_intel(device, acquire_info::PerformanceConfigurationAcquireInfoINTEL) -> ResultTypes.Result{PerformanceConfigurationINTEL, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.acquire_profiling_lock_khr-Tuple{Any, AcquireProfilingLockInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.acquire_profiling_lock_khr","text":"acquire_profiling_lock_khr(device, info::AcquireProfilingLockInfoKHR, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_performance_query\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nTIMEOUT\n\nArguments:\n\ndevice\ninfo::AcquireProfilingLockInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\nacquire_profiling_lock_khr(device, info::AcquireProfilingLockInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.acquire_profiling_lock_khr-Tuple{Any, AcquireProfilingLockInfoKHR}","page":"API","title":"Vulkan.acquire_profiling_lock_khr","text":"acquire_profiling_lock_khr(device, info::AcquireProfilingLockInfoKHR)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_performance_query\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nTIMEOUT\n\nArguments:\n\ndevice\ninfo::AcquireProfilingLockInfoKHR\n\nAPI documentation\n\nacquire_profiling_lock_khr(device, info::AcquireProfilingLockInfoKHR) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.acquire_xlib_display_ext-Tuple{Any, Ptr{Nothing}, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.acquire_xlib_display_ext","text":"acquire_xlib_display_ext(physical_device, dpy::Ptr{Display}, display, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_acquire_xlib_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\nphysical_device\ndpy::Ptr{Display}\ndisplay\nfptr::FunctionPtr\n\nAPI documentation\n\nacquire_xlib_display_ext(physical_device, dpy::Ptr{Nothing}, display, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.acquire_xlib_display_ext-Tuple{Any, Ptr{Nothing}, Any}","page":"API","title":"Vulkan.acquire_xlib_display_ext","text":"acquire_xlib_display_ext(physical_device, dpy::Ptr{Display}, display)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_acquire_xlib_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\nphysical_device\ndpy::Ptr{Display}\ndisplay\n\nAPI documentation\n\nacquire_xlib_display_ext(physical_device, dpy::Ptr{Nothing}, display) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.allocate_command_buffers-Tuple{Any, CommandBufferAllocateInfo, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.allocate_command_buffers","text":"allocate_command_buffers(device, allocate_info::CommandBufferAllocateInfo, fptr_create::FunctionPtr)::ResultTypes.Result{Vector{CommandBuffer}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nallocate_info::CommandBufferAllocateInfo (externsync)\nfptr_create::FunctionPtr\n\nAPI documentation\n\nallocate_command_buffers(device, allocate_info::CommandBufferAllocateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{CommandBuffer}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.allocate_command_buffers-Tuple{Any, CommandBufferAllocateInfo}","page":"API","title":"Vulkan.allocate_command_buffers","text":"allocate_command_buffers(device, allocate_info::CommandBufferAllocateInfo)::ResultTypes.Result{Vector{CommandBuffer}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nallocate_info::CommandBufferAllocateInfo (externsync)\n\nAPI documentation\n\nallocate_command_buffers(device, allocate_info::CommandBufferAllocateInfo) -> ResultTypes.Result{Vector{CommandBuffer}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.allocate_descriptor_sets-Tuple{Any, DescriptorSetAllocateInfo, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.allocate_descriptor_sets","text":"allocate_descriptor_sets(device, allocate_info::DescriptorSetAllocateInfo, fptr_create::FunctionPtr)::ResultTypes.Result{Vector{DescriptorSet}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_FRAGMENTED_POOL\nERROR_OUT_OF_POOL_MEMORY\n\nArguments:\n\ndevice\nallocate_info::DescriptorSetAllocateInfo (externsync)\nfptr_create::FunctionPtr\n\nAPI documentation\n\nallocate_descriptor_sets(device, allocate_info::DescriptorSetAllocateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{DescriptorSet}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.allocate_descriptor_sets-Tuple{Any, DescriptorSetAllocateInfo}","page":"API","title":"Vulkan.allocate_descriptor_sets","text":"allocate_descriptor_sets(device, allocate_info::DescriptorSetAllocateInfo)::ResultTypes.Result{Vector{DescriptorSet}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_FRAGMENTED_POOL\nERROR_OUT_OF_POOL_MEMORY\n\nArguments:\n\ndevice\nallocate_info::DescriptorSetAllocateInfo (externsync)\n\nAPI documentation\n\nallocate_descriptor_sets(device, allocate_info::DescriptorSetAllocateInfo) -> ResultTypes.Result{Vector{DescriptorSet}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.allocate_memory-Tuple{Any, MemoryAllocateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.allocate_memory","text":"allocate_memory(device, allocate_info::MemoryAllocateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{DeviceMemory, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR\n\nArguments:\n\ndevice\nallocate_info::MemoryAllocateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\nallocate_memory(device, allocate_info::MemoryAllocateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{DeviceMemory, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.allocate_memory-Tuple{Any, MemoryAllocateInfo}","page":"API","title":"Vulkan.allocate_memory","text":"allocate_memory(device, allocate_info::MemoryAllocateInfo; allocator = C_NULL)::ResultTypes.Result{DeviceMemory, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR\n\nArguments:\n\ndevice\nallocate_info::MemoryAllocateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\nallocate_memory(device, allocate_info::MemoryAllocateInfo; allocator) -> ResultTypes.Result{DeviceMemory, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.begin_command_buffer-Tuple{Any, CommandBufferBeginInfo, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.begin_command_buffer","text":"begin_command_buffer(command_buffer, begin_info::CommandBufferBeginInfo, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ncommand_buffer (externsync)\nbegin_info::CommandBufferBeginInfo\nfptr::FunctionPtr\n\nAPI documentation\n\nbegin_command_buffer(command_buffer, begin_info::CommandBufferBeginInfo, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.begin_command_buffer-Tuple{Any, CommandBufferBeginInfo}","page":"API","title":"Vulkan.begin_command_buffer","text":"begin_command_buffer(command_buffer, begin_info::CommandBufferBeginInfo)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ncommand_buffer (externsync)\nbegin_info::CommandBufferBeginInfo\n\nAPI documentation\n\nbegin_command_buffer(command_buffer, begin_info::CommandBufferBeginInfo) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.bind_acceleration_structure_memory_nv-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.bind_acceleration_structure_memory_nv","text":"bind_acceleration_structure_memory_nv(device, bind_infos::AbstractArray{BindAccelerationStructureMemoryInfoNV}, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_NV_ray_tracing\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nbind_infos::AbstractArray{BindAccelerationStructureMemoryInfoNV}\nfptr::FunctionPtr\n\nAPI documentation\n\nbind_acceleration_structure_memory_nv(device, bind_infos::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.bind_acceleration_structure_memory_nv-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan.bind_acceleration_structure_memory_nv","text":"bind_acceleration_structure_memory_nv(device, bind_infos::AbstractArray{BindAccelerationStructureMemoryInfoNV})::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_NV_ray_tracing\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nbind_infos::AbstractArray{BindAccelerationStructureMemoryInfoNV}\n\nAPI documentation\n\nbind_acceleration_structure_memory_nv(device, bind_infos::AbstractArray) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.bind_buffer_memory-Tuple{Any, Any, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.bind_buffer_memory","text":"bind_buffer_memory(device, buffer, memory, memory_offset::Integer, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR\n\nArguments:\n\ndevice\nbuffer (externsync)\nmemory\nmemory_offset::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\nbind_buffer_memory(device, buffer, memory, memory_offset::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.bind_buffer_memory-Tuple{Any, Any, Any, Integer}","page":"API","title":"Vulkan.bind_buffer_memory","text":"bind_buffer_memory(device, buffer, memory, memory_offset::Integer)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR\n\nArguments:\n\ndevice\nbuffer (externsync)\nmemory\nmemory_offset::Integer\n\nAPI documentation\n\nbind_buffer_memory(device, buffer, memory, memory_offset::Integer) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.bind_buffer_memory_2-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.bind_buffer_memory_2","text":"bind_buffer_memory_2(device, bind_infos::AbstractArray{BindBufferMemoryInfo}, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR\n\nArguments:\n\ndevice\nbind_infos::AbstractArray{BindBufferMemoryInfo}\nfptr::FunctionPtr\n\nAPI documentation\n\nbind_buffer_memory_2(device, bind_infos::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.bind_buffer_memory_2-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan.bind_buffer_memory_2","text":"bind_buffer_memory_2(device, bind_infos::AbstractArray{BindBufferMemoryInfo})::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR\n\nArguments:\n\ndevice\nbind_infos::AbstractArray{BindBufferMemoryInfo}\n\nAPI documentation\n\nbind_buffer_memory_2(device, bind_infos::AbstractArray) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.bind_image_memory-Tuple{Any, Any, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.bind_image_memory","text":"bind_image_memory(device, image, memory, memory_offset::Integer, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nimage (externsync)\nmemory\nmemory_offset::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\nbind_image_memory(device, image, memory, memory_offset::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.bind_image_memory-Tuple{Any, Any, Any, Integer}","page":"API","title":"Vulkan.bind_image_memory","text":"bind_image_memory(device, image, memory, memory_offset::Integer)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nimage (externsync)\nmemory\nmemory_offset::Integer\n\nAPI documentation\n\nbind_image_memory(device, image, memory, memory_offset::Integer) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.bind_image_memory_2-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.bind_image_memory_2","text":"bind_image_memory_2(device, bind_infos::AbstractArray{BindImageMemoryInfo}, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nbind_infos::AbstractArray{BindImageMemoryInfo}\nfptr::FunctionPtr\n\nAPI documentation\n\nbind_image_memory_2(device, bind_infos::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.bind_image_memory_2-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan.bind_image_memory_2","text":"bind_image_memory_2(device, bind_infos::AbstractArray{BindImageMemoryInfo})::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nbind_infos::AbstractArray{BindImageMemoryInfo}\n\nAPI documentation\n\nbind_image_memory_2(device, bind_infos::AbstractArray) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.build_acceleration_structures_khr-Tuple{Any, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.build_acceleration_structures_khr","text":"build_acceleration_structures_khr(device, infos::AbstractArray{AccelerationStructureBuildGeometryInfoKHR}, build_range_infos::AbstractArray{AccelerationStructureBuildRangeInfoKHR}, fptr::FunctionPtr; deferred_operation = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_acceleration_structure\n\nReturn codes:\n\nSuccess:\nSUCCESS\nOPERATION_DEFERRED_KHR\nOPERATION_NOT_DEFERRED_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ninfos::AbstractArray{AccelerationStructureBuildGeometryInfoKHR}\nbuild_range_infos::AbstractArray{AccelerationStructureBuildRangeInfoKHR}\nfptr::FunctionPtr\ndeferred_operation: defaults to C_NULL\n\nAPI documentation\n\nbuild_acceleration_structures_khr(device, infos::AbstractArray, build_range_infos::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}; deferred_operation) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.build_acceleration_structures_khr-Tuple{Any, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.build_acceleration_structures_khr","text":"build_acceleration_structures_khr(device, infos::AbstractArray{AccelerationStructureBuildGeometryInfoKHR}, build_range_infos::AbstractArray{AccelerationStructureBuildRangeInfoKHR}; deferred_operation = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_acceleration_structure\n\nReturn codes:\n\nSuccess:\nSUCCESS\nOPERATION_DEFERRED_KHR\nOPERATION_NOT_DEFERRED_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ninfos::AbstractArray{AccelerationStructureBuildGeometryInfoKHR}\nbuild_range_infos::AbstractArray{AccelerationStructureBuildRangeInfoKHR}\ndeferred_operation: defaults to C_NULL\n\nAPI documentation\n\nbuild_acceleration_structures_khr(device, infos::AbstractArray, build_range_infos::AbstractArray; deferred_operation) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.chain-Tuple{Vararg{Vulkan.HighLevelStruct}}","page":"API","title":"Vulkan.chain","text":"Chain all arguments together in a next chain. to form a new structure next chain.\n\nIf nexts is empty, C_NULL is returned.\n\nchain(nexts::Vulkan.HighLevelStruct...) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_begin_conditional_rendering_ext-Tuple{Any, ConditionalRenderingBeginInfoEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_begin_conditional_rendering_ext","text":"cmd_begin_conditional_rendering_ext(command_buffer, conditional_rendering_begin::ConditionalRenderingBeginInfoEXT, fptr::FunctionPtr)\n\nExtension: VK_EXT_conditional_rendering\n\nArguments:\n\ncommand_buffer (externsync)\nconditional_rendering_begin::ConditionalRenderingBeginInfoEXT\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_begin_conditional_rendering_ext(command_buffer, conditional_rendering_begin::ConditionalRenderingBeginInfoEXT, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_begin_conditional_rendering_ext-Tuple{Any, ConditionalRenderingBeginInfoEXT}","page":"API","title":"Vulkan.cmd_begin_conditional_rendering_ext","text":"cmd_begin_conditional_rendering_ext(command_buffer, conditional_rendering_begin::ConditionalRenderingBeginInfoEXT)\n\nExtension: VK_EXT_conditional_rendering\n\nArguments:\n\ncommand_buffer (externsync)\nconditional_rendering_begin::ConditionalRenderingBeginInfoEXT\n\nAPI documentation\n\ncmd_begin_conditional_rendering_ext(command_buffer, conditional_rendering_begin::ConditionalRenderingBeginInfoEXT)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_begin_debug_utils_label_ext-Tuple{Any, DebugUtilsLabelEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_begin_debug_utils_label_ext","text":"cmd_begin_debug_utils_label_ext(command_buffer, label_info::DebugUtilsLabelEXT, fptr::FunctionPtr)\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\ncommand_buffer (externsync)\nlabel_info::DebugUtilsLabelEXT\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_begin_debug_utils_label_ext(command_buffer, label_info::DebugUtilsLabelEXT, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_begin_debug_utils_label_ext-Tuple{Any, DebugUtilsLabelEXT}","page":"API","title":"Vulkan.cmd_begin_debug_utils_label_ext","text":"cmd_begin_debug_utils_label_ext(command_buffer, label_info::DebugUtilsLabelEXT)\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\ncommand_buffer (externsync)\nlabel_info::DebugUtilsLabelEXT\n\nAPI documentation\n\ncmd_begin_debug_utils_label_ext(command_buffer, label_info::DebugUtilsLabelEXT)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_begin_query-Tuple{Any, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_begin_query","text":"cmd_begin_query(command_buffer, query_pool, query::Integer, fptr::FunctionPtr; flags = 0)\n\nArguments:\n\ncommand_buffer (externsync)\nquery_pool\nquery::Integer\nfptr::FunctionPtr\nflags: defaults to 0\n\nAPI documentation\n\ncmd_begin_query(command_buffer, query_pool, query::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}; flags)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_begin_query-Tuple{Any, Any, Integer}","page":"API","title":"Vulkan.cmd_begin_query","text":"cmd_begin_query(command_buffer, query_pool, query::Integer; flags = 0)\n\nArguments:\n\ncommand_buffer (externsync)\nquery_pool\nquery::Integer\nflags: defaults to 0\n\nAPI documentation\n\ncmd_begin_query(command_buffer, query_pool, query::Integer; flags)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_begin_query_indexed_ext-Tuple{Any, Any, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_begin_query_indexed_ext","text":"cmd_begin_query_indexed_ext(command_buffer, query_pool, query::Integer, index::Integer, fptr::FunctionPtr; flags = 0)\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\ncommand_buffer (externsync)\nquery_pool\nquery::Integer\nindex::Integer\nfptr::FunctionPtr\nflags: defaults to 0\n\nAPI documentation\n\ncmd_begin_query_indexed_ext(command_buffer, query_pool, query::Integer, index::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}; flags)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_begin_query_indexed_ext-Tuple{Any, Any, Integer, Integer}","page":"API","title":"Vulkan.cmd_begin_query_indexed_ext","text":"cmd_begin_query_indexed_ext(command_buffer, query_pool, query::Integer, index::Integer; flags = 0)\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\ncommand_buffer (externsync)\nquery_pool\nquery::Integer\nindex::Integer\nflags: defaults to 0\n\nAPI documentation\n\ncmd_begin_query_indexed_ext(command_buffer, query_pool, query::Integer, index::Integer; flags)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_begin_render_pass-Tuple{Any, RenderPassBeginInfo, SubpassContents, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_begin_render_pass","text":"cmd_begin_render_pass(command_buffer, render_pass_begin::RenderPassBeginInfo, contents::SubpassContents, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nrender_pass_begin::RenderPassBeginInfo\ncontents::SubpassContents\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_begin_render_pass(command_buffer, render_pass_begin::RenderPassBeginInfo, contents::SubpassContents, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_begin_render_pass-Tuple{Any, RenderPassBeginInfo, SubpassContents}","page":"API","title":"Vulkan.cmd_begin_render_pass","text":"cmd_begin_render_pass(command_buffer, render_pass_begin::RenderPassBeginInfo, contents::SubpassContents)\n\nArguments:\n\ncommand_buffer (externsync)\nrender_pass_begin::RenderPassBeginInfo\ncontents::SubpassContents\n\nAPI documentation\n\ncmd_begin_render_pass(command_buffer, render_pass_begin::RenderPassBeginInfo, contents::SubpassContents)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_begin_render_pass_2-Tuple{Any, RenderPassBeginInfo, SubpassBeginInfo, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_begin_render_pass_2","text":"cmd_begin_render_pass_2(command_buffer, render_pass_begin::RenderPassBeginInfo, subpass_begin_info::SubpassBeginInfo, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nrender_pass_begin::RenderPassBeginInfo\nsubpass_begin_info::SubpassBeginInfo\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_begin_render_pass_2(command_buffer, render_pass_begin::RenderPassBeginInfo, subpass_begin_info::SubpassBeginInfo, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_begin_render_pass_2-Tuple{Any, RenderPassBeginInfo, SubpassBeginInfo}","page":"API","title":"Vulkan.cmd_begin_render_pass_2","text":"cmd_begin_render_pass_2(command_buffer, render_pass_begin::RenderPassBeginInfo, subpass_begin_info::SubpassBeginInfo)\n\nArguments:\n\ncommand_buffer (externsync)\nrender_pass_begin::RenderPassBeginInfo\nsubpass_begin_info::SubpassBeginInfo\n\nAPI documentation\n\ncmd_begin_render_pass_2(command_buffer, render_pass_begin::RenderPassBeginInfo, subpass_begin_info::SubpassBeginInfo)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_begin_transform_feedback_ext-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_begin_transform_feedback_ext","text":"cmd_begin_transform_feedback_ext(command_buffer, counter_buffers::AbstractArray{Buffer}, fptr::FunctionPtr; counter_buffer_offsets = C_NULL)\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\ncommand_buffer (externsync)\ncounter_buffers::AbstractArray{Buffer}\nfptr::FunctionPtr\ncounter_buffer_offsets: defaults to C_NULL\n\nAPI documentation\n\ncmd_begin_transform_feedback_ext(command_buffer, counter_buffers::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}; counter_buffer_offsets)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_begin_transform_feedback_ext-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan.cmd_begin_transform_feedback_ext","text":"cmd_begin_transform_feedback_ext(command_buffer, counter_buffers::AbstractArray{Buffer}; counter_buffer_offsets = C_NULL)\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\ncommand_buffer (externsync)\ncounter_buffers::AbstractArray{Buffer}\ncounter_buffer_offsets: defaults to C_NULL\n\nAPI documentation\n\ncmd_begin_transform_feedback_ext(command_buffer, counter_buffers::AbstractArray; counter_buffer_offsets)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_bind_descriptor_sets-Tuple{Any, PipelineBindPoint, Any, Integer, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_bind_descriptor_sets","text":"cmd_bind_descriptor_sets(command_buffer, pipeline_bind_point::PipelineBindPoint, layout, first_set::Integer, descriptor_sets::AbstractArray{DescriptorSet}, dynamic_offsets::AbstractArray{<:Integer}, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_bind_point::PipelineBindPoint\nlayout\nfirst_set::Integer\ndescriptor_sets::AbstractArray{DescriptorSet}\ndynamic_offsets::AbstractArray{<:Integer}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_bind_descriptor_sets(command_buffer, pipeline_bind_point::PipelineBindPoint, layout, first_set::Integer, descriptor_sets::AbstractArray, dynamic_offsets::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_bind_descriptor_sets-Tuple{Any, PipelineBindPoint, Any, Integer, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.cmd_bind_descriptor_sets","text":"cmd_bind_descriptor_sets(command_buffer, pipeline_bind_point::PipelineBindPoint, layout, first_set::Integer, descriptor_sets::AbstractArray{DescriptorSet}, dynamic_offsets::AbstractArray{<:Integer})\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_bind_point::PipelineBindPoint\nlayout\nfirst_set::Integer\ndescriptor_sets::AbstractArray{DescriptorSet}\ndynamic_offsets::AbstractArray{<:Integer}\n\nAPI documentation\n\ncmd_bind_descriptor_sets(command_buffer, pipeline_bind_point::PipelineBindPoint, layout, first_set::Integer, descriptor_sets::AbstractArray, dynamic_offsets::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_bind_index_buffer-Tuple{Any, Any, Integer, IndexType, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_bind_index_buffer","text":"cmd_bind_index_buffer(command_buffer, buffer, offset::Integer, index_type::IndexType, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\nindex_type::IndexType\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_bind_index_buffer(command_buffer, buffer, offset::Integer, index_type::IndexType, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_bind_index_buffer-Tuple{Any, Any, Integer, IndexType}","page":"API","title":"Vulkan.cmd_bind_index_buffer","text":"cmd_bind_index_buffer(command_buffer, buffer, offset::Integer, index_type::IndexType)\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\nindex_type::IndexType\n\nAPI documentation\n\ncmd_bind_index_buffer(command_buffer, buffer, offset::Integer, index_type::IndexType)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_bind_pipeline-Tuple{Any, PipelineBindPoint, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_bind_pipeline","text":"cmd_bind_pipeline(command_buffer, pipeline_bind_point::PipelineBindPoint, pipeline, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_bind_point::PipelineBindPoint\npipeline\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_bind_pipeline(command_buffer, pipeline_bind_point::PipelineBindPoint, pipeline, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_bind_pipeline-Tuple{Any, PipelineBindPoint, Any}","page":"API","title":"Vulkan.cmd_bind_pipeline","text":"cmd_bind_pipeline(command_buffer, pipeline_bind_point::PipelineBindPoint, pipeline)\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_bind_point::PipelineBindPoint\npipeline\n\nAPI documentation\n\ncmd_bind_pipeline(command_buffer, pipeline_bind_point::PipelineBindPoint, pipeline)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_bind_pipeline_shader_group_nv-Tuple{Any, PipelineBindPoint, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_bind_pipeline_shader_group_nv","text":"cmd_bind_pipeline_shader_group_nv(command_buffer, pipeline_bind_point::PipelineBindPoint, pipeline, group_index::Integer, fptr::FunctionPtr)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_bind_point::PipelineBindPoint\npipeline\ngroup_index::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_bind_pipeline_shader_group_nv(command_buffer, pipeline_bind_point::PipelineBindPoint, pipeline, group_index::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_bind_pipeline_shader_group_nv-Tuple{Any, PipelineBindPoint, Any, Integer}","page":"API","title":"Vulkan.cmd_bind_pipeline_shader_group_nv","text":"cmd_bind_pipeline_shader_group_nv(command_buffer, pipeline_bind_point::PipelineBindPoint, pipeline, group_index::Integer)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_bind_point::PipelineBindPoint\npipeline\ngroup_index::Integer\n\nAPI documentation\n\ncmd_bind_pipeline_shader_group_nv(command_buffer, pipeline_bind_point::PipelineBindPoint, pipeline, group_index::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_bind_shading_rate_image_nv-Tuple{Any, ImageLayout, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_bind_shading_rate_image_nv","text":"cmd_bind_shading_rate_image_nv(command_buffer, image_layout::ImageLayout, fptr::FunctionPtr; image_view = C_NULL)\n\nExtension: VK_NV_shading_rate_image\n\nArguments:\n\ncommand_buffer (externsync)\nimage_layout::ImageLayout\nfptr::FunctionPtr\nimage_view: defaults to C_NULL\n\nAPI documentation\n\ncmd_bind_shading_rate_image_nv(command_buffer, image_layout::ImageLayout, fptr::Union{Ptr{Nothing}, Base.CFunction}; image_view)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_bind_shading_rate_image_nv-Tuple{Any, ImageLayout}","page":"API","title":"Vulkan.cmd_bind_shading_rate_image_nv","text":"cmd_bind_shading_rate_image_nv(command_buffer, image_layout::ImageLayout; image_view = C_NULL)\n\nExtension: VK_NV_shading_rate_image\n\nArguments:\n\ncommand_buffer (externsync)\nimage_layout::ImageLayout\nimage_view: defaults to C_NULL\n\nAPI documentation\n\ncmd_bind_shading_rate_image_nv(command_buffer, image_layout::ImageLayout; image_view)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_bind_transform_feedback_buffers_ext-Tuple{Any, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_bind_transform_feedback_buffers_ext","text":"cmd_bind_transform_feedback_buffers_ext(command_buffer, buffers::AbstractArray{Buffer}, offsets::AbstractArray{<:Integer}, fptr::FunctionPtr; sizes = C_NULL)\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\ncommand_buffer (externsync)\nbuffers::AbstractArray{Buffer}\noffsets::AbstractArray{<:Integer}\nfptr::FunctionPtr\nsizes: defaults to C_NULL\n\nAPI documentation\n\ncmd_bind_transform_feedback_buffers_ext(command_buffer, buffers::AbstractArray, offsets::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}; sizes)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_bind_transform_feedback_buffers_ext-Tuple{Any, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.cmd_bind_transform_feedback_buffers_ext","text":"cmd_bind_transform_feedback_buffers_ext(command_buffer, buffers::AbstractArray{Buffer}, offsets::AbstractArray{<:Integer}; sizes = C_NULL)\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\ncommand_buffer (externsync)\nbuffers::AbstractArray{Buffer}\noffsets::AbstractArray{<:Integer}\nsizes: defaults to C_NULL\n\nAPI documentation\n\ncmd_bind_transform_feedback_buffers_ext(command_buffer, buffers::AbstractArray, offsets::AbstractArray; sizes)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_bind_vertex_buffers-Tuple{Any, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_bind_vertex_buffers","text":"cmd_bind_vertex_buffers(command_buffer, buffers::AbstractArray{Buffer}, offsets::AbstractArray{<:Integer}, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nbuffers::AbstractArray{Buffer}\noffsets::AbstractArray{<:Integer}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_bind_vertex_buffers(command_buffer, buffers::AbstractArray, offsets::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_bind_vertex_buffers-Tuple{Any, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.cmd_bind_vertex_buffers","text":"cmd_bind_vertex_buffers(command_buffer, buffers::AbstractArray{Buffer}, offsets::AbstractArray{<:Integer})\n\nArguments:\n\ncommand_buffer (externsync)\nbuffers::AbstractArray{Buffer}\noffsets::AbstractArray{<:Integer}\n\nAPI documentation\n\ncmd_bind_vertex_buffers(command_buffer, buffers::AbstractArray, offsets::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_bind_vertex_buffers_2_ext-Tuple{Any, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_bind_vertex_buffers_2_ext","text":"cmd_bind_vertex_buffers_2_ext(command_buffer, buffers::AbstractArray{Buffer}, offsets::AbstractArray{<:Integer}, fptr::FunctionPtr; sizes = C_NULL, strides = C_NULL)\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nbuffers::AbstractArray{Buffer}\noffsets::AbstractArray{<:Integer}\nfptr::FunctionPtr\nsizes: defaults to C_NULL\nstrides: defaults to C_NULL\n\nAPI documentation\n\ncmd_bind_vertex_buffers_2_ext(command_buffer, buffers::AbstractArray, offsets::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}; sizes, strides)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_bind_vertex_buffers_2_ext-Tuple{Any, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.cmd_bind_vertex_buffers_2_ext","text":"cmd_bind_vertex_buffers_2_ext(command_buffer, buffers::AbstractArray{Buffer}, offsets::AbstractArray{<:Integer}; sizes = C_NULL, strides = C_NULL)\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nbuffers::AbstractArray{Buffer}\noffsets::AbstractArray{<:Integer}\nsizes: defaults to C_NULL\nstrides: defaults to C_NULL\n\nAPI documentation\n\ncmd_bind_vertex_buffers_2_ext(command_buffer, buffers::AbstractArray, offsets::AbstractArray; sizes, strides)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_blit_image-Tuple{Any, Any, ImageLayout, Any, ImageLayout, AbstractArray, Filter, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_blit_image","text":"cmd_blit_image(command_buffer, src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray{ImageBlit}, filter::Filter, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_image\nsrc_image_layout::ImageLayout\ndst_image\ndst_image_layout::ImageLayout\nregions::AbstractArray{ImageBlit}\nfilter::Filter\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_blit_image(command_buffer, src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray, filter::Filter, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_blit_image-Tuple{Any, Any, ImageLayout, Any, ImageLayout, AbstractArray, Filter}","page":"API","title":"Vulkan.cmd_blit_image","text":"cmd_blit_image(command_buffer, src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray{ImageBlit}, filter::Filter)\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_image\nsrc_image_layout::ImageLayout\ndst_image\ndst_image_layout::ImageLayout\nregions::AbstractArray{ImageBlit}\nfilter::Filter\n\nAPI documentation\n\ncmd_blit_image(command_buffer, src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray, filter::Filter)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_blit_image_2_khr-Tuple{Any, BlitImageInfo2KHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_blit_image_2_khr","text":"cmd_blit_image_2_khr(command_buffer, blit_image_info::BlitImageInfo2KHR, fptr::FunctionPtr)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\ncommand_buffer (externsync)\nblit_image_info::BlitImageInfo2KHR\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_blit_image_2_khr(command_buffer, blit_image_info::BlitImageInfo2KHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_blit_image_2_khr-Tuple{Any, BlitImageInfo2KHR}","page":"API","title":"Vulkan.cmd_blit_image_2_khr","text":"cmd_blit_image_2_khr(command_buffer, blit_image_info::BlitImageInfo2KHR)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\ncommand_buffer (externsync)\nblit_image_info::BlitImageInfo2KHR\n\nAPI documentation\n\ncmd_blit_image_2_khr(command_buffer, blit_image_info::BlitImageInfo2KHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_build_acceleration_structure_nv-Tuple{Any, AccelerationStructureInfoNV, Integer, Bool, Any, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_build_acceleration_structure_nv","text":"cmd_build_acceleration_structure_nv(command_buffer, info::AccelerationStructureInfoNV, instance_offset::Integer, update::Bool, dst, scratch, scratch_offset::Integer, fptr::FunctionPtr; instance_data = C_NULL, src = C_NULL)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ncommand_buffer (externsync)\ninfo::AccelerationStructureInfoNV\ninstance_offset::Integer\nupdate::Bool\ndst\nscratch\nscratch_offset::Integer\nfptr::FunctionPtr\ninstance_data: defaults to C_NULL\nsrc: defaults to C_NULL\n\nAPI documentation\n\ncmd_build_acceleration_structure_nv(command_buffer, info::AccelerationStructureInfoNV, instance_offset::Integer, update::Bool, dst, scratch, scratch_offset::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}; instance_data, src)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_build_acceleration_structure_nv-Tuple{Any, AccelerationStructureInfoNV, Integer, Bool, Any, Any, Integer}","page":"API","title":"Vulkan.cmd_build_acceleration_structure_nv","text":"cmd_build_acceleration_structure_nv(command_buffer, info::AccelerationStructureInfoNV, instance_offset::Integer, update::Bool, dst, scratch, scratch_offset::Integer; instance_data = C_NULL, src = C_NULL)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ncommand_buffer (externsync)\ninfo::AccelerationStructureInfoNV\ninstance_offset::Integer\nupdate::Bool\ndst\nscratch\nscratch_offset::Integer\ninstance_data: defaults to C_NULL\nsrc: defaults to C_NULL\n\nAPI documentation\n\ncmd_build_acceleration_structure_nv(command_buffer, info::AccelerationStructureInfoNV, instance_offset::Integer, update::Bool, dst, scratch, scratch_offset::Integer; instance_data, src)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_build_acceleration_structures_indirect_khr-Tuple{Any, AbstractArray, AbstractArray, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_build_acceleration_structures_indirect_khr","text":"cmd_build_acceleration_structures_indirect_khr(command_buffer, infos::AbstractArray{AccelerationStructureBuildGeometryInfoKHR}, indirect_device_addresses::AbstractArray{<:Integer}, indirect_strides::AbstractArray{<:Integer}, max_primitive_counts::AbstractArray{<:Integer}, fptr::FunctionPtr)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ncommand_buffer (externsync)\ninfos::AbstractArray{AccelerationStructureBuildGeometryInfoKHR}\nindirect_device_addresses::AbstractArray{<:Integer}\nindirect_strides::AbstractArray{<:Integer}\nmax_primitive_counts::AbstractArray{<:Integer}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_build_acceleration_structures_indirect_khr(command_buffer, infos::AbstractArray, indirect_device_addresses::AbstractArray, indirect_strides::AbstractArray, max_primitive_counts::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_build_acceleration_structures_indirect_khr-Tuple{Any, AbstractArray, AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.cmd_build_acceleration_structures_indirect_khr","text":"cmd_build_acceleration_structures_indirect_khr(command_buffer, infos::AbstractArray{AccelerationStructureBuildGeometryInfoKHR}, indirect_device_addresses::AbstractArray{<:Integer}, indirect_strides::AbstractArray{<:Integer}, max_primitive_counts::AbstractArray{<:Integer})\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ncommand_buffer (externsync)\ninfos::AbstractArray{AccelerationStructureBuildGeometryInfoKHR}\nindirect_device_addresses::AbstractArray{<:Integer}\nindirect_strides::AbstractArray{<:Integer}\nmax_primitive_counts::AbstractArray{<:Integer}\n\nAPI documentation\n\ncmd_build_acceleration_structures_indirect_khr(command_buffer, infos::AbstractArray, indirect_device_addresses::AbstractArray, indirect_strides::AbstractArray, max_primitive_counts::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_build_acceleration_structures_khr-Tuple{Any, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_build_acceleration_structures_khr","text":"cmd_build_acceleration_structures_khr(command_buffer, infos::AbstractArray{AccelerationStructureBuildGeometryInfoKHR}, build_range_infos::AbstractArray{AccelerationStructureBuildRangeInfoKHR}, fptr::FunctionPtr)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ncommand_buffer (externsync)\ninfos::AbstractArray{AccelerationStructureBuildGeometryInfoKHR}\nbuild_range_infos::AbstractArray{AccelerationStructureBuildRangeInfoKHR}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_build_acceleration_structures_khr(command_buffer, infos::AbstractArray, build_range_infos::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_build_acceleration_structures_khr-Tuple{Any, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.cmd_build_acceleration_structures_khr","text":"cmd_build_acceleration_structures_khr(command_buffer, infos::AbstractArray{AccelerationStructureBuildGeometryInfoKHR}, build_range_infos::AbstractArray{AccelerationStructureBuildRangeInfoKHR})\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ncommand_buffer (externsync)\ninfos::AbstractArray{AccelerationStructureBuildGeometryInfoKHR}\nbuild_range_infos::AbstractArray{AccelerationStructureBuildRangeInfoKHR}\n\nAPI documentation\n\ncmd_build_acceleration_structures_khr(command_buffer, infos::AbstractArray, build_range_infos::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_clear_attachments-Tuple{Any, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_clear_attachments","text":"cmd_clear_attachments(command_buffer, attachments::AbstractArray{ClearAttachment}, rects::AbstractArray{ClearRect}, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nattachments::AbstractArray{ClearAttachment}\nrects::AbstractArray{ClearRect}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_clear_attachments(command_buffer, attachments::AbstractArray, rects::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_clear_attachments-Tuple{Any, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.cmd_clear_attachments","text":"cmd_clear_attachments(command_buffer, attachments::AbstractArray{ClearAttachment}, rects::AbstractArray{ClearRect})\n\nArguments:\n\ncommand_buffer (externsync)\nattachments::AbstractArray{ClearAttachment}\nrects::AbstractArray{ClearRect}\n\nAPI documentation\n\ncmd_clear_attachments(command_buffer, attachments::AbstractArray, rects::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_clear_color_image-Tuple{Any, Any, ImageLayout, ClearColorValue, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_clear_color_image","text":"cmd_clear_color_image(command_buffer, image, image_layout::ImageLayout, color::ClearColorValue, ranges::AbstractArray{ImageSubresourceRange}, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nimage\nimage_layout::ImageLayout\ncolor::ClearColorValue\nranges::AbstractArray{ImageSubresourceRange}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_clear_color_image(command_buffer, image, image_layout::ImageLayout, color::ClearColorValue, ranges::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_clear_color_image-Tuple{Any, Any, ImageLayout, ClearColorValue, AbstractArray}","page":"API","title":"Vulkan.cmd_clear_color_image","text":"cmd_clear_color_image(command_buffer, image, image_layout::ImageLayout, color::ClearColorValue, ranges::AbstractArray{ImageSubresourceRange})\n\nArguments:\n\ncommand_buffer (externsync)\nimage\nimage_layout::ImageLayout\ncolor::ClearColorValue\nranges::AbstractArray{ImageSubresourceRange}\n\nAPI documentation\n\ncmd_clear_color_image(command_buffer, image, image_layout::ImageLayout, color::ClearColorValue, ranges::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_clear_depth_stencil_image-Tuple{Any, Any, ImageLayout, ClearDepthStencilValue, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_clear_depth_stencil_image","text":"cmd_clear_depth_stencil_image(command_buffer, image, image_layout::ImageLayout, depth_stencil::ClearDepthStencilValue, ranges::AbstractArray{ImageSubresourceRange}, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nimage\nimage_layout::ImageLayout\ndepth_stencil::ClearDepthStencilValue\nranges::AbstractArray{ImageSubresourceRange}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_clear_depth_stencil_image(command_buffer, image, image_layout::ImageLayout, depth_stencil::ClearDepthStencilValue, ranges::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_clear_depth_stencil_image-Tuple{Any, Any, ImageLayout, ClearDepthStencilValue, AbstractArray}","page":"API","title":"Vulkan.cmd_clear_depth_stencil_image","text":"cmd_clear_depth_stencil_image(command_buffer, image, image_layout::ImageLayout, depth_stencil::ClearDepthStencilValue, ranges::AbstractArray{ImageSubresourceRange})\n\nArguments:\n\ncommand_buffer (externsync)\nimage\nimage_layout::ImageLayout\ndepth_stencil::ClearDepthStencilValue\nranges::AbstractArray{ImageSubresourceRange}\n\nAPI documentation\n\ncmd_clear_depth_stencil_image(command_buffer, image, image_layout::ImageLayout, depth_stencil::ClearDepthStencilValue, ranges::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_copy_acceleration_structure_khr-Tuple{Any, CopyAccelerationStructureInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_copy_acceleration_structure_khr","text":"cmd_copy_acceleration_structure_khr(command_buffer, info::CopyAccelerationStructureInfoKHR, fptr::FunctionPtr)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ncommand_buffer (externsync)\ninfo::CopyAccelerationStructureInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_copy_acceleration_structure_khr(command_buffer, info::CopyAccelerationStructureInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_copy_acceleration_structure_khr-Tuple{Any, CopyAccelerationStructureInfoKHR}","page":"API","title":"Vulkan.cmd_copy_acceleration_structure_khr","text":"cmd_copy_acceleration_structure_khr(command_buffer, info::CopyAccelerationStructureInfoKHR)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ncommand_buffer (externsync)\ninfo::CopyAccelerationStructureInfoKHR\n\nAPI documentation\n\ncmd_copy_acceleration_structure_khr(command_buffer, info::CopyAccelerationStructureInfoKHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_copy_acceleration_structure_nv-Tuple{Any, Any, Any, CopyAccelerationStructureModeKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_copy_acceleration_structure_nv","text":"cmd_copy_acceleration_structure_nv(command_buffer, dst, src, mode::CopyAccelerationStructureModeKHR, fptr::FunctionPtr)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ncommand_buffer (externsync)\ndst\nsrc\nmode::CopyAccelerationStructureModeKHR\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_copy_acceleration_structure_nv(command_buffer, dst, src, mode::CopyAccelerationStructureModeKHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_copy_acceleration_structure_nv-Tuple{Any, Any, Any, CopyAccelerationStructureModeKHR}","page":"API","title":"Vulkan.cmd_copy_acceleration_structure_nv","text":"cmd_copy_acceleration_structure_nv(command_buffer, dst, src, mode::CopyAccelerationStructureModeKHR)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ncommand_buffer (externsync)\ndst\nsrc\nmode::CopyAccelerationStructureModeKHR\n\nAPI documentation\n\ncmd_copy_acceleration_structure_nv(command_buffer, dst, src, mode::CopyAccelerationStructureModeKHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_copy_acceleration_structure_to_memory_khr-Tuple{Any, CopyAccelerationStructureToMemoryInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_copy_acceleration_structure_to_memory_khr","text":"cmd_copy_acceleration_structure_to_memory_khr(command_buffer, info::CopyAccelerationStructureToMemoryInfoKHR, fptr::FunctionPtr)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ncommand_buffer (externsync)\ninfo::CopyAccelerationStructureToMemoryInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_copy_acceleration_structure_to_memory_khr(command_buffer, info::CopyAccelerationStructureToMemoryInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_copy_acceleration_structure_to_memory_khr-Tuple{Any, CopyAccelerationStructureToMemoryInfoKHR}","page":"API","title":"Vulkan.cmd_copy_acceleration_structure_to_memory_khr","text":"cmd_copy_acceleration_structure_to_memory_khr(command_buffer, info::CopyAccelerationStructureToMemoryInfoKHR)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ncommand_buffer (externsync)\ninfo::CopyAccelerationStructureToMemoryInfoKHR\n\nAPI documentation\n\ncmd_copy_acceleration_structure_to_memory_khr(command_buffer, info::CopyAccelerationStructureToMemoryInfoKHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_copy_buffer-Tuple{Any, Any, Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_copy_buffer","text":"cmd_copy_buffer(command_buffer, src_buffer, dst_buffer, regions::AbstractArray{BufferCopy}, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_buffer\ndst_buffer\nregions::AbstractArray{BufferCopy}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_copy_buffer(command_buffer, src_buffer, dst_buffer, regions::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_copy_buffer-Tuple{Any, Any, Any, AbstractArray}","page":"API","title":"Vulkan.cmd_copy_buffer","text":"cmd_copy_buffer(command_buffer, src_buffer, dst_buffer, regions::AbstractArray{BufferCopy})\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_buffer\ndst_buffer\nregions::AbstractArray{BufferCopy}\n\nAPI documentation\n\ncmd_copy_buffer(command_buffer, src_buffer, dst_buffer, regions::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_copy_buffer_2_khr-Tuple{Any, CopyBufferInfo2KHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_copy_buffer_2_khr","text":"cmd_copy_buffer_2_khr(command_buffer, copy_buffer_info::CopyBufferInfo2KHR, fptr::FunctionPtr)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\ncommand_buffer (externsync)\ncopy_buffer_info::CopyBufferInfo2KHR\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_copy_buffer_2_khr(command_buffer, copy_buffer_info::CopyBufferInfo2KHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_copy_buffer_2_khr-Tuple{Any, CopyBufferInfo2KHR}","page":"API","title":"Vulkan.cmd_copy_buffer_2_khr","text":"cmd_copy_buffer_2_khr(command_buffer, copy_buffer_info::CopyBufferInfo2KHR)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\ncommand_buffer (externsync)\ncopy_buffer_info::CopyBufferInfo2KHR\n\nAPI documentation\n\ncmd_copy_buffer_2_khr(command_buffer, copy_buffer_info::CopyBufferInfo2KHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_copy_buffer_to_image-Tuple{Any, Any, Any, ImageLayout, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_copy_buffer_to_image","text":"cmd_copy_buffer_to_image(command_buffer, src_buffer, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray{BufferImageCopy}, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_buffer\ndst_image\ndst_image_layout::ImageLayout\nregions::AbstractArray{BufferImageCopy}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_copy_buffer_to_image(command_buffer, src_buffer, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_copy_buffer_to_image-Tuple{Any, Any, Any, ImageLayout, AbstractArray}","page":"API","title":"Vulkan.cmd_copy_buffer_to_image","text":"cmd_copy_buffer_to_image(command_buffer, src_buffer, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray{BufferImageCopy})\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_buffer\ndst_image\ndst_image_layout::ImageLayout\nregions::AbstractArray{BufferImageCopy}\n\nAPI documentation\n\ncmd_copy_buffer_to_image(command_buffer, src_buffer, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_copy_buffer_to_image_2_khr-Tuple{Any, CopyBufferToImageInfo2KHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_copy_buffer_to_image_2_khr","text":"cmd_copy_buffer_to_image_2_khr(command_buffer, copy_buffer_to_image_info::CopyBufferToImageInfo2KHR, fptr::FunctionPtr)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\ncommand_buffer (externsync)\ncopy_buffer_to_image_info::CopyBufferToImageInfo2KHR\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_copy_buffer_to_image_2_khr(command_buffer, copy_buffer_to_image_info::CopyBufferToImageInfo2KHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_copy_buffer_to_image_2_khr-Tuple{Any, CopyBufferToImageInfo2KHR}","page":"API","title":"Vulkan.cmd_copy_buffer_to_image_2_khr","text":"cmd_copy_buffer_to_image_2_khr(command_buffer, copy_buffer_to_image_info::CopyBufferToImageInfo2KHR)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\ncommand_buffer (externsync)\ncopy_buffer_to_image_info::CopyBufferToImageInfo2KHR\n\nAPI documentation\n\ncmd_copy_buffer_to_image_2_khr(command_buffer, copy_buffer_to_image_info::CopyBufferToImageInfo2KHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_copy_image-Tuple{Any, Any, ImageLayout, Any, ImageLayout, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_copy_image","text":"cmd_copy_image(command_buffer, src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray{ImageCopy}, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_image\nsrc_image_layout::ImageLayout\ndst_image\ndst_image_layout::ImageLayout\nregions::AbstractArray{ImageCopy}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_copy_image(command_buffer, src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_copy_image-Tuple{Any, Any, ImageLayout, Any, ImageLayout, AbstractArray}","page":"API","title":"Vulkan.cmd_copy_image","text":"cmd_copy_image(command_buffer, src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray{ImageCopy})\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_image\nsrc_image_layout::ImageLayout\ndst_image\ndst_image_layout::ImageLayout\nregions::AbstractArray{ImageCopy}\n\nAPI documentation\n\ncmd_copy_image(command_buffer, src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_copy_image_2_khr-Tuple{Any, CopyImageInfo2KHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_copy_image_2_khr","text":"cmd_copy_image_2_khr(command_buffer, copy_image_info::CopyImageInfo2KHR, fptr::FunctionPtr)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\ncommand_buffer (externsync)\ncopy_image_info::CopyImageInfo2KHR\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_copy_image_2_khr(command_buffer, copy_image_info::CopyImageInfo2KHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_copy_image_2_khr-Tuple{Any, CopyImageInfo2KHR}","page":"API","title":"Vulkan.cmd_copy_image_2_khr","text":"cmd_copy_image_2_khr(command_buffer, copy_image_info::CopyImageInfo2KHR)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\ncommand_buffer (externsync)\ncopy_image_info::CopyImageInfo2KHR\n\nAPI documentation\n\ncmd_copy_image_2_khr(command_buffer, copy_image_info::CopyImageInfo2KHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_copy_image_to_buffer-Tuple{Any, Any, ImageLayout, Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_copy_image_to_buffer","text":"cmd_copy_image_to_buffer(command_buffer, src_image, src_image_layout::ImageLayout, dst_buffer, regions::AbstractArray{BufferImageCopy}, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_image\nsrc_image_layout::ImageLayout\ndst_buffer\nregions::AbstractArray{BufferImageCopy}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_copy_image_to_buffer(command_buffer, src_image, src_image_layout::ImageLayout, dst_buffer, regions::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_copy_image_to_buffer-Tuple{Any, Any, ImageLayout, Any, AbstractArray}","page":"API","title":"Vulkan.cmd_copy_image_to_buffer","text":"cmd_copy_image_to_buffer(command_buffer, src_image, src_image_layout::ImageLayout, dst_buffer, regions::AbstractArray{BufferImageCopy})\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_image\nsrc_image_layout::ImageLayout\ndst_buffer\nregions::AbstractArray{BufferImageCopy}\n\nAPI documentation\n\ncmd_copy_image_to_buffer(command_buffer, src_image, src_image_layout::ImageLayout, dst_buffer, regions::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_copy_image_to_buffer_2_khr-Tuple{Any, CopyImageToBufferInfo2KHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_copy_image_to_buffer_2_khr","text":"cmd_copy_image_to_buffer_2_khr(command_buffer, copy_image_to_buffer_info::CopyImageToBufferInfo2KHR, fptr::FunctionPtr)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\ncommand_buffer (externsync)\ncopy_image_to_buffer_info::CopyImageToBufferInfo2KHR\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_copy_image_to_buffer_2_khr(command_buffer, copy_image_to_buffer_info::CopyImageToBufferInfo2KHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_copy_image_to_buffer_2_khr-Tuple{Any, CopyImageToBufferInfo2KHR}","page":"API","title":"Vulkan.cmd_copy_image_to_buffer_2_khr","text":"cmd_copy_image_to_buffer_2_khr(command_buffer, copy_image_to_buffer_info::CopyImageToBufferInfo2KHR)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\ncommand_buffer (externsync)\ncopy_image_to_buffer_info::CopyImageToBufferInfo2KHR\n\nAPI documentation\n\ncmd_copy_image_to_buffer_2_khr(command_buffer, copy_image_to_buffer_info::CopyImageToBufferInfo2KHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_copy_memory_to_acceleration_structure_khr-Tuple{Any, CopyMemoryToAccelerationStructureInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_copy_memory_to_acceleration_structure_khr","text":"cmd_copy_memory_to_acceleration_structure_khr(command_buffer, info::CopyMemoryToAccelerationStructureInfoKHR, fptr::FunctionPtr)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ncommand_buffer (externsync)\ninfo::CopyMemoryToAccelerationStructureInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_copy_memory_to_acceleration_structure_khr(command_buffer, info::CopyMemoryToAccelerationStructureInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_copy_memory_to_acceleration_structure_khr-Tuple{Any, CopyMemoryToAccelerationStructureInfoKHR}","page":"API","title":"Vulkan.cmd_copy_memory_to_acceleration_structure_khr","text":"cmd_copy_memory_to_acceleration_structure_khr(command_buffer, info::CopyMemoryToAccelerationStructureInfoKHR)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ncommand_buffer (externsync)\ninfo::CopyMemoryToAccelerationStructureInfoKHR\n\nAPI documentation\n\ncmd_copy_memory_to_acceleration_structure_khr(command_buffer, info::CopyMemoryToAccelerationStructureInfoKHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_copy_query_pool_results-Tuple{Any, Any, Integer, Integer, Any, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_copy_query_pool_results","text":"cmd_copy_query_pool_results(command_buffer, query_pool, first_query::Integer, query_count::Integer, dst_buffer, dst_offset::Integer, stride::Integer, fptr::FunctionPtr; flags = 0)\n\nArguments:\n\ncommand_buffer (externsync)\nquery_pool\nfirst_query::Integer\nquery_count::Integer\ndst_buffer\ndst_offset::Integer\nstride::Integer\nfptr::FunctionPtr\nflags: defaults to 0\n\nAPI documentation\n\ncmd_copy_query_pool_results(command_buffer, query_pool, first_query::Integer, query_count::Integer, dst_buffer, dst_offset::Integer, stride::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}; flags)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_copy_query_pool_results-Tuple{Any, Any, Integer, Integer, Any, Integer, Integer}","page":"API","title":"Vulkan.cmd_copy_query_pool_results","text":"cmd_copy_query_pool_results(command_buffer, query_pool, first_query::Integer, query_count::Integer, dst_buffer, dst_offset::Integer, stride::Integer; flags = 0)\n\nArguments:\n\ncommand_buffer (externsync)\nquery_pool\nfirst_query::Integer\nquery_count::Integer\ndst_buffer\ndst_offset::Integer\nstride::Integer\nflags: defaults to 0\n\nAPI documentation\n\ncmd_copy_query_pool_results(command_buffer, query_pool, first_query::Integer, query_count::Integer, dst_buffer, dst_offset::Integer, stride::Integer; flags)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_debug_marker_begin_ext-Tuple{Any, DebugMarkerMarkerInfoEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_debug_marker_begin_ext","text":"cmd_debug_marker_begin_ext(command_buffer, marker_info::DebugMarkerMarkerInfoEXT, fptr::FunctionPtr)\n\nExtension: VK_EXT_debug_marker\n\nArguments:\n\ncommand_buffer (externsync)\nmarker_info::DebugMarkerMarkerInfoEXT\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_debug_marker_begin_ext(command_buffer, marker_info::DebugMarkerMarkerInfoEXT, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_debug_marker_begin_ext-Tuple{Any, DebugMarkerMarkerInfoEXT}","page":"API","title":"Vulkan.cmd_debug_marker_begin_ext","text":"cmd_debug_marker_begin_ext(command_buffer, marker_info::DebugMarkerMarkerInfoEXT)\n\nExtension: VK_EXT_debug_marker\n\nArguments:\n\ncommand_buffer (externsync)\nmarker_info::DebugMarkerMarkerInfoEXT\n\nAPI documentation\n\ncmd_debug_marker_begin_ext(command_buffer, marker_info::DebugMarkerMarkerInfoEXT)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_debug_marker_end_ext-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_debug_marker_end_ext","text":"cmd_debug_marker_end_ext(command_buffer, fptr::FunctionPtr)\n\nExtension: VK_EXT_debug_marker\n\nArguments:\n\ncommand_buffer (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_debug_marker_end_ext(command_buffer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_debug_marker_end_ext-Tuple{Any}","page":"API","title":"Vulkan.cmd_debug_marker_end_ext","text":"cmd_debug_marker_end_ext(command_buffer)\n\nExtension: VK_EXT_debug_marker\n\nArguments:\n\ncommand_buffer (externsync)\n\nAPI documentation\n\ncmd_debug_marker_end_ext(command_buffer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_debug_marker_insert_ext-Tuple{Any, DebugMarkerMarkerInfoEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_debug_marker_insert_ext","text":"cmd_debug_marker_insert_ext(command_buffer, marker_info::DebugMarkerMarkerInfoEXT, fptr::FunctionPtr)\n\nExtension: VK_EXT_debug_marker\n\nArguments:\n\ncommand_buffer (externsync)\nmarker_info::DebugMarkerMarkerInfoEXT\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_debug_marker_insert_ext(command_buffer, marker_info::DebugMarkerMarkerInfoEXT, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_debug_marker_insert_ext-Tuple{Any, DebugMarkerMarkerInfoEXT}","page":"API","title":"Vulkan.cmd_debug_marker_insert_ext","text":"cmd_debug_marker_insert_ext(command_buffer, marker_info::DebugMarkerMarkerInfoEXT)\n\nExtension: VK_EXT_debug_marker\n\nArguments:\n\ncommand_buffer (externsync)\nmarker_info::DebugMarkerMarkerInfoEXT\n\nAPI documentation\n\ncmd_debug_marker_insert_ext(command_buffer, marker_info::DebugMarkerMarkerInfoEXT)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_dispatch-Tuple{Any, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_dispatch","text":"cmd_dispatch(command_buffer, group_count_x::Integer, group_count_y::Integer, group_count_z::Integer, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\ngroup_count_x::Integer\ngroup_count_y::Integer\ngroup_count_z::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_dispatch(command_buffer, group_count_x::Integer, group_count_y::Integer, group_count_z::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_dispatch-Tuple{Any, Integer, Integer, Integer}","page":"API","title":"Vulkan.cmd_dispatch","text":"cmd_dispatch(command_buffer, group_count_x::Integer, group_count_y::Integer, group_count_z::Integer)\n\nArguments:\n\ncommand_buffer (externsync)\ngroup_count_x::Integer\ngroup_count_y::Integer\ngroup_count_z::Integer\n\nAPI documentation\n\ncmd_dispatch(command_buffer, group_count_x::Integer, group_count_y::Integer, group_count_z::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_dispatch_base-Tuple{Any, Integer, Integer, Integer, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_dispatch_base","text":"cmd_dispatch_base(command_buffer, base_group_x::Integer, base_group_y::Integer, base_group_z::Integer, group_count_x::Integer, group_count_y::Integer, group_count_z::Integer, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nbase_group_x::Integer\nbase_group_y::Integer\nbase_group_z::Integer\ngroup_count_x::Integer\ngroup_count_y::Integer\ngroup_count_z::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_dispatch_base(command_buffer, base_group_x::Integer, base_group_y::Integer, base_group_z::Integer, group_count_x::Integer, group_count_y::Integer, group_count_z::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_dispatch_base-Tuple{Any, Integer, Integer, Integer, Integer, Integer, Integer}","page":"API","title":"Vulkan.cmd_dispatch_base","text":"cmd_dispatch_base(command_buffer, base_group_x::Integer, base_group_y::Integer, base_group_z::Integer, group_count_x::Integer, group_count_y::Integer, group_count_z::Integer)\n\nArguments:\n\ncommand_buffer (externsync)\nbase_group_x::Integer\nbase_group_y::Integer\nbase_group_z::Integer\ngroup_count_x::Integer\ngroup_count_y::Integer\ngroup_count_z::Integer\n\nAPI documentation\n\ncmd_dispatch_base(command_buffer, base_group_x::Integer, base_group_y::Integer, base_group_z::Integer, group_count_x::Integer, group_count_y::Integer, group_count_z::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_dispatch_indirect-Tuple{Any, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_dispatch_indirect","text":"cmd_dispatch_indirect(command_buffer, buffer, offset::Integer, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_dispatch_indirect(command_buffer, buffer, offset::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_dispatch_indirect-Tuple{Any, Any, Integer}","page":"API","title":"Vulkan.cmd_dispatch_indirect","text":"cmd_dispatch_indirect(command_buffer, buffer, offset::Integer)\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\n\nAPI documentation\n\ncmd_dispatch_indirect(command_buffer, buffer, offset::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_draw-Tuple{Any, Integer, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_draw","text":"cmd_draw(command_buffer, vertex_count::Integer, instance_count::Integer, first_vertex::Integer, first_instance::Integer, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nvertex_count::Integer\ninstance_count::Integer\nfirst_vertex::Integer\nfirst_instance::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_draw(command_buffer, vertex_count::Integer, instance_count::Integer, first_vertex::Integer, first_instance::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_draw-Tuple{Any, Integer, Integer, Integer, Integer}","page":"API","title":"Vulkan.cmd_draw","text":"cmd_draw(command_buffer, vertex_count::Integer, instance_count::Integer, first_vertex::Integer, first_instance::Integer)\n\nArguments:\n\ncommand_buffer (externsync)\nvertex_count::Integer\ninstance_count::Integer\nfirst_vertex::Integer\nfirst_instance::Integer\n\nAPI documentation\n\ncmd_draw(command_buffer, vertex_count::Integer, instance_count::Integer, first_vertex::Integer, first_instance::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_draw_indexed-Tuple{Any, Integer, Integer, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_draw_indexed","text":"cmd_draw_indexed(command_buffer, index_count::Integer, instance_count::Integer, first_index::Integer, vertex_offset::Integer, first_instance::Integer, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nindex_count::Integer\ninstance_count::Integer\nfirst_index::Integer\nvertex_offset::Integer\nfirst_instance::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_draw_indexed(command_buffer, index_count::Integer, instance_count::Integer, first_index::Integer, vertex_offset::Integer, first_instance::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_draw_indexed-Tuple{Any, Integer, Integer, Integer, Integer, Integer}","page":"API","title":"Vulkan.cmd_draw_indexed","text":"cmd_draw_indexed(command_buffer, index_count::Integer, instance_count::Integer, first_index::Integer, vertex_offset::Integer, first_instance::Integer)\n\nArguments:\n\ncommand_buffer (externsync)\nindex_count::Integer\ninstance_count::Integer\nfirst_index::Integer\nvertex_offset::Integer\nfirst_instance::Integer\n\nAPI documentation\n\ncmd_draw_indexed(command_buffer, index_count::Integer, instance_count::Integer, first_index::Integer, vertex_offset::Integer, first_instance::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_draw_indexed_indirect-Tuple{Any, Any, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_draw_indexed_indirect","text":"cmd_draw_indexed_indirect(command_buffer, buffer, offset::Integer, draw_count::Integer, stride::Integer, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\ndraw_count::Integer\nstride::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_draw_indexed_indirect(command_buffer, buffer, offset::Integer, draw_count::Integer, stride::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_draw_indexed_indirect-Tuple{Any, Any, Integer, Integer, Integer}","page":"API","title":"Vulkan.cmd_draw_indexed_indirect","text":"cmd_draw_indexed_indirect(command_buffer, buffer, offset::Integer, draw_count::Integer, stride::Integer)\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\ndraw_count::Integer\nstride::Integer\n\nAPI documentation\n\ncmd_draw_indexed_indirect(command_buffer, buffer, offset::Integer, draw_count::Integer, stride::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_draw_indexed_indirect_count-Tuple{Any, Any, Integer, Any, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_draw_indexed_indirect_count","text":"cmd_draw_indexed_indirect_count(command_buffer, buffer, offset::Integer, count_buffer, count_buffer_offset::Integer, max_draw_count::Integer, stride::Integer, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\ncount_buffer\ncount_buffer_offset::Integer\nmax_draw_count::Integer\nstride::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_draw_indexed_indirect_count(command_buffer, buffer, offset::Integer, count_buffer, count_buffer_offset::Integer, max_draw_count::Integer, stride::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_draw_indexed_indirect_count-Tuple{Any, Any, Integer, Any, Integer, Integer, Integer}","page":"API","title":"Vulkan.cmd_draw_indexed_indirect_count","text":"cmd_draw_indexed_indirect_count(command_buffer, buffer, offset::Integer, count_buffer, count_buffer_offset::Integer, max_draw_count::Integer, stride::Integer)\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\ncount_buffer\ncount_buffer_offset::Integer\nmax_draw_count::Integer\nstride::Integer\n\nAPI documentation\n\ncmd_draw_indexed_indirect_count(command_buffer, buffer, offset::Integer, count_buffer, count_buffer_offset::Integer, max_draw_count::Integer, stride::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_draw_indirect-Tuple{Any, Any, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_draw_indirect","text":"cmd_draw_indirect(command_buffer, buffer, offset::Integer, draw_count::Integer, stride::Integer, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\ndraw_count::Integer\nstride::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_draw_indirect(command_buffer, buffer, offset::Integer, draw_count::Integer, stride::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_draw_indirect-Tuple{Any, Any, Integer, Integer, Integer}","page":"API","title":"Vulkan.cmd_draw_indirect","text":"cmd_draw_indirect(command_buffer, buffer, offset::Integer, draw_count::Integer, stride::Integer)\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\ndraw_count::Integer\nstride::Integer\n\nAPI documentation\n\ncmd_draw_indirect(command_buffer, buffer, offset::Integer, draw_count::Integer, stride::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_draw_indirect_byte_count_ext-Tuple{Any, Integer, Integer, Any, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_draw_indirect_byte_count_ext","text":"cmd_draw_indirect_byte_count_ext(command_buffer, instance_count::Integer, first_instance::Integer, counter_buffer, counter_buffer_offset::Integer, counter_offset::Integer, vertex_stride::Integer, fptr::FunctionPtr)\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\ncommand_buffer (externsync)\ninstance_count::Integer\nfirst_instance::Integer\ncounter_buffer\ncounter_buffer_offset::Integer\ncounter_offset::Integer\nvertex_stride::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_draw_indirect_byte_count_ext(command_buffer, instance_count::Integer, first_instance::Integer, counter_buffer, counter_buffer_offset::Integer, counter_offset::Integer, vertex_stride::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_draw_indirect_byte_count_ext-Tuple{Any, Integer, Integer, Any, Integer, Integer, Integer}","page":"API","title":"Vulkan.cmd_draw_indirect_byte_count_ext","text":"cmd_draw_indirect_byte_count_ext(command_buffer, instance_count::Integer, first_instance::Integer, counter_buffer, counter_buffer_offset::Integer, counter_offset::Integer, vertex_stride::Integer)\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\ncommand_buffer (externsync)\ninstance_count::Integer\nfirst_instance::Integer\ncounter_buffer\ncounter_buffer_offset::Integer\ncounter_offset::Integer\nvertex_stride::Integer\n\nAPI documentation\n\ncmd_draw_indirect_byte_count_ext(command_buffer, instance_count::Integer, first_instance::Integer, counter_buffer, counter_buffer_offset::Integer, counter_offset::Integer, vertex_stride::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_draw_indirect_count-Tuple{Any, Any, Integer, Any, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_draw_indirect_count","text":"cmd_draw_indirect_count(command_buffer, buffer, offset::Integer, count_buffer, count_buffer_offset::Integer, max_draw_count::Integer, stride::Integer, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\ncount_buffer\ncount_buffer_offset::Integer\nmax_draw_count::Integer\nstride::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_draw_indirect_count(command_buffer, buffer, offset::Integer, count_buffer, count_buffer_offset::Integer, max_draw_count::Integer, stride::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_draw_indirect_count-Tuple{Any, Any, Integer, Any, Integer, Integer, Integer}","page":"API","title":"Vulkan.cmd_draw_indirect_count","text":"cmd_draw_indirect_count(command_buffer, buffer, offset::Integer, count_buffer, count_buffer_offset::Integer, max_draw_count::Integer, stride::Integer)\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\ncount_buffer\ncount_buffer_offset::Integer\nmax_draw_count::Integer\nstride::Integer\n\nAPI documentation\n\ncmd_draw_indirect_count(command_buffer, buffer, offset::Integer, count_buffer, count_buffer_offset::Integer, max_draw_count::Integer, stride::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_draw_mesh_tasks_indirect_count_nv-Tuple{Any, Any, Integer, Any, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_draw_mesh_tasks_indirect_count_nv","text":"cmd_draw_mesh_tasks_indirect_count_nv(command_buffer, buffer, offset::Integer, count_buffer, count_buffer_offset::Integer, max_draw_count::Integer, stride::Integer, fptr::FunctionPtr)\n\nExtension: VK_NV_mesh_shader\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\ncount_buffer\ncount_buffer_offset::Integer\nmax_draw_count::Integer\nstride::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_draw_mesh_tasks_indirect_count_nv(command_buffer, buffer, offset::Integer, count_buffer, count_buffer_offset::Integer, max_draw_count::Integer, stride::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_draw_mesh_tasks_indirect_count_nv-Tuple{Any, Any, Integer, Any, Integer, Integer, Integer}","page":"API","title":"Vulkan.cmd_draw_mesh_tasks_indirect_count_nv","text":"cmd_draw_mesh_tasks_indirect_count_nv(command_buffer, buffer, offset::Integer, count_buffer, count_buffer_offset::Integer, max_draw_count::Integer, stride::Integer)\n\nExtension: VK_NV_mesh_shader\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\ncount_buffer\ncount_buffer_offset::Integer\nmax_draw_count::Integer\nstride::Integer\n\nAPI documentation\n\ncmd_draw_mesh_tasks_indirect_count_nv(command_buffer, buffer, offset::Integer, count_buffer, count_buffer_offset::Integer, max_draw_count::Integer, stride::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_draw_mesh_tasks_indirect_nv-Tuple{Any, Any, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_draw_mesh_tasks_indirect_nv","text":"cmd_draw_mesh_tasks_indirect_nv(command_buffer, buffer, offset::Integer, draw_count::Integer, stride::Integer, fptr::FunctionPtr)\n\nExtension: VK_NV_mesh_shader\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\ndraw_count::Integer\nstride::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_draw_mesh_tasks_indirect_nv(command_buffer, buffer, offset::Integer, draw_count::Integer, stride::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_draw_mesh_tasks_indirect_nv-Tuple{Any, Any, Integer, Integer, Integer}","page":"API","title":"Vulkan.cmd_draw_mesh_tasks_indirect_nv","text":"cmd_draw_mesh_tasks_indirect_nv(command_buffer, buffer, offset::Integer, draw_count::Integer, stride::Integer)\n\nExtension: VK_NV_mesh_shader\n\nArguments:\n\ncommand_buffer (externsync)\nbuffer\noffset::Integer\ndraw_count::Integer\nstride::Integer\n\nAPI documentation\n\ncmd_draw_mesh_tasks_indirect_nv(command_buffer, buffer, offset::Integer, draw_count::Integer, stride::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_draw_mesh_tasks_nv-Tuple{Any, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_draw_mesh_tasks_nv","text":"cmd_draw_mesh_tasks_nv(command_buffer, task_count::Integer, first_task::Integer, fptr::FunctionPtr)\n\nExtension: VK_NV_mesh_shader\n\nArguments:\n\ncommand_buffer (externsync)\ntask_count::Integer\nfirst_task::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_draw_mesh_tasks_nv(command_buffer, task_count::Integer, first_task::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_draw_mesh_tasks_nv-Tuple{Any, Integer, Integer}","page":"API","title":"Vulkan.cmd_draw_mesh_tasks_nv","text":"cmd_draw_mesh_tasks_nv(command_buffer, task_count::Integer, first_task::Integer)\n\nExtension: VK_NV_mesh_shader\n\nArguments:\n\ncommand_buffer (externsync)\ntask_count::Integer\nfirst_task::Integer\n\nAPI documentation\n\ncmd_draw_mesh_tasks_nv(command_buffer, task_count::Integer, first_task::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_end_conditional_rendering_ext-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_end_conditional_rendering_ext","text":"cmd_end_conditional_rendering_ext(command_buffer, fptr::FunctionPtr)\n\nExtension: VK_EXT_conditional_rendering\n\nArguments:\n\ncommand_buffer (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_end_conditional_rendering_ext(command_buffer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_end_conditional_rendering_ext-Tuple{Any}","page":"API","title":"Vulkan.cmd_end_conditional_rendering_ext","text":"cmd_end_conditional_rendering_ext(command_buffer)\n\nExtension: VK_EXT_conditional_rendering\n\nArguments:\n\ncommand_buffer (externsync)\n\nAPI documentation\n\ncmd_end_conditional_rendering_ext(command_buffer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_end_debug_utils_label_ext-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_end_debug_utils_label_ext","text":"cmd_end_debug_utils_label_ext(command_buffer, fptr::FunctionPtr)\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\ncommand_buffer (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_end_debug_utils_label_ext(command_buffer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_end_debug_utils_label_ext-Tuple{Any}","page":"API","title":"Vulkan.cmd_end_debug_utils_label_ext","text":"cmd_end_debug_utils_label_ext(command_buffer)\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\ncommand_buffer (externsync)\n\nAPI documentation\n\ncmd_end_debug_utils_label_ext(command_buffer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_end_query-Tuple{Any, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_end_query","text":"cmd_end_query(command_buffer, query_pool, query::Integer, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nquery_pool\nquery::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_end_query(command_buffer, query_pool, query::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_end_query-Tuple{Any, Any, Integer}","page":"API","title":"Vulkan.cmd_end_query","text":"cmd_end_query(command_buffer, query_pool, query::Integer)\n\nArguments:\n\ncommand_buffer (externsync)\nquery_pool\nquery::Integer\n\nAPI documentation\n\ncmd_end_query(command_buffer, query_pool, query::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_end_query_indexed_ext-Tuple{Any, Any, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_end_query_indexed_ext","text":"cmd_end_query_indexed_ext(command_buffer, query_pool, query::Integer, index::Integer, fptr::FunctionPtr)\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\ncommand_buffer (externsync)\nquery_pool\nquery::Integer\nindex::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_end_query_indexed_ext(command_buffer, query_pool, query::Integer, index::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_end_query_indexed_ext-Tuple{Any, Any, Integer, Integer}","page":"API","title":"Vulkan.cmd_end_query_indexed_ext","text":"cmd_end_query_indexed_ext(command_buffer, query_pool, query::Integer, index::Integer)\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\ncommand_buffer (externsync)\nquery_pool\nquery::Integer\nindex::Integer\n\nAPI documentation\n\ncmd_end_query_indexed_ext(command_buffer, query_pool, query::Integer, index::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_end_render_pass-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_end_render_pass","text":"cmd_end_render_pass(command_buffer, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_end_render_pass(command_buffer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_end_render_pass-Tuple{Any}","page":"API","title":"Vulkan.cmd_end_render_pass","text":"cmd_end_render_pass(command_buffer)\n\nArguments:\n\ncommand_buffer (externsync)\n\nAPI documentation\n\ncmd_end_render_pass(command_buffer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_end_render_pass_2-Tuple{Any, SubpassEndInfo, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_end_render_pass_2","text":"cmd_end_render_pass_2(command_buffer, subpass_end_info::SubpassEndInfo, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nsubpass_end_info::SubpassEndInfo\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_end_render_pass_2(command_buffer, subpass_end_info::SubpassEndInfo, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_end_render_pass_2-Tuple{Any, SubpassEndInfo}","page":"API","title":"Vulkan.cmd_end_render_pass_2","text":"cmd_end_render_pass_2(command_buffer, subpass_end_info::SubpassEndInfo)\n\nArguments:\n\ncommand_buffer (externsync)\nsubpass_end_info::SubpassEndInfo\n\nAPI documentation\n\ncmd_end_render_pass_2(command_buffer, subpass_end_info::SubpassEndInfo)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_end_transform_feedback_ext-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_end_transform_feedback_ext","text":"cmd_end_transform_feedback_ext(command_buffer, counter_buffers::AbstractArray{Buffer}, fptr::FunctionPtr; counter_buffer_offsets = C_NULL)\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\ncommand_buffer (externsync)\ncounter_buffers::AbstractArray{Buffer}\nfptr::FunctionPtr\ncounter_buffer_offsets: defaults to C_NULL\n\nAPI documentation\n\ncmd_end_transform_feedback_ext(command_buffer, counter_buffers::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}; counter_buffer_offsets)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_end_transform_feedback_ext-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan.cmd_end_transform_feedback_ext","text":"cmd_end_transform_feedback_ext(command_buffer, counter_buffers::AbstractArray{Buffer}; counter_buffer_offsets = C_NULL)\n\nExtension: VK_EXT_transform_feedback\n\nArguments:\n\ncommand_buffer (externsync)\ncounter_buffers::AbstractArray{Buffer}\ncounter_buffer_offsets: defaults to C_NULL\n\nAPI documentation\n\ncmd_end_transform_feedback_ext(command_buffer, counter_buffers::AbstractArray; counter_buffer_offsets)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_execute_commands-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_execute_commands","text":"cmd_execute_commands(command_buffer, command_buffers::AbstractArray{CommandBuffer}, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\ncommand_buffers::AbstractArray{CommandBuffer}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_execute_commands(command_buffer, command_buffers::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_execute_commands-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan.cmd_execute_commands","text":"cmd_execute_commands(command_buffer, command_buffers::AbstractArray{CommandBuffer})\n\nArguments:\n\ncommand_buffer (externsync)\ncommand_buffers::AbstractArray{CommandBuffer}\n\nAPI documentation\n\ncmd_execute_commands(command_buffer, command_buffers::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_execute_generated_commands_nv-Tuple{Any, Bool, GeneratedCommandsInfoNV, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_execute_generated_commands_nv","text":"cmd_execute_generated_commands_nv(command_buffer, is_preprocessed::Bool, generated_commands_info::GeneratedCommandsInfoNV, fptr::FunctionPtr)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ncommand_buffer (externsync)\nis_preprocessed::Bool\ngenerated_commands_info::GeneratedCommandsInfoNV\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_execute_generated_commands_nv(command_buffer, is_preprocessed::Bool, generated_commands_info::GeneratedCommandsInfoNV, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_execute_generated_commands_nv-Tuple{Any, Bool, GeneratedCommandsInfoNV}","page":"API","title":"Vulkan.cmd_execute_generated_commands_nv","text":"cmd_execute_generated_commands_nv(command_buffer, is_preprocessed::Bool, generated_commands_info::GeneratedCommandsInfoNV)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ncommand_buffer (externsync)\nis_preprocessed::Bool\ngenerated_commands_info::GeneratedCommandsInfoNV\n\nAPI documentation\n\ncmd_execute_generated_commands_nv(command_buffer, is_preprocessed::Bool, generated_commands_info::GeneratedCommandsInfoNV)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_fill_buffer-Tuple{Any, Any, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_fill_buffer","text":"cmd_fill_buffer(command_buffer, dst_buffer, dst_offset::Integer, size::Integer, data::Integer, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\ndst_buffer\ndst_offset::Integer\nsize::Integer\ndata::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_fill_buffer(command_buffer, dst_buffer, dst_offset::Integer, size::Integer, data::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_fill_buffer-Tuple{Any, Any, Integer, Integer, Integer}","page":"API","title":"Vulkan.cmd_fill_buffer","text":"cmd_fill_buffer(command_buffer, dst_buffer, dst_offset::Integer, size::Integer, data::Integer)\n\nArguments:\n\ncommand_buffer (externsync)\ndst_buffer\ndst_offset::Integer\nsize::Integer\ndata::Integer\n\nAPI documentation\n\ncmd_fill_buffer(command_buffer, dst_buffer, dst_offset::Integer, size::Integer, data::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_insert_debug_utils_label_ext-Tuple{Any, DebugUtilsLabelEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_insert_debug_utils_label_ext","text":"cmd_insert_debug_utils_label_ext(command_buffer, label_info::DebugUtilsLabelEXT, fptr::FunctionPtr)\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\ncommand_buffer (externsync)\nlabel_info::DebugUtilsLabelEXT\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_insert_debug_utils_label_ext(command_buffer, label_info::DebugUtilsLabelEXT, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_insert_debug_utils_label_ext-Tuple{Any, DebugUtilsLabelEXT}","page":"API","title":"Vulkan.cmd_insert_debug_utils_label_ext","text":"cmd_insert_debug_utils_label_ext(command_buffer, label_info::DebugUtilsLabelEXT)\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\ncommand_buffer (externsync)\nlabel_info::DebugUtilsLabelEXT\n\nAPI documentation\n\ncmd_insert_debug_utils_label_ext(command_buffer, label_info::DebugUtilsLabelEXT)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_next_subpass-Tuple{Any, SubpassContents, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_next_subpass","text":"cmd_next_subpass(command_buffer, contents::SubpassContents, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\ncontents::SubpassContents\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_next_subpass(command_buffer, contents::SubpassContents, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_next_subpass-Tuple{Any, SubpassContents}","page":"API","title":"Vulkan.cmd_next_subpass","text":"cmd_next_subpass(command_buffer, contents::SubpassContents)\n\nArguments:\n\ncommand_buffer (externsync)\ncontents::SubpassContents\n\nAPI documentation\n\ncmd_next_subpass(command_buffer, contents::SubpassContents)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_next_subpass_2-Tuple{Any, SubpassBeginInfo, SubpassEndInfo, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_next_subpass_2","text":"cmd_next_subpass_2(command_buffer, subpass_begin_info::SubpassBeginInfo, subpass_end_info::SubpassEndInfo, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nsubpass_begin_info::SubpassBeginInfo\nsubpass_end_info::SubpassEndInfo\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_next_subpass_2(command_buffer, subpass_begin_info::SubpassBeginInfo, subpass_end_info::SubpassEndInfo, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_next_subpass_2-Tuple{Any, SubpassBeginInfo, SubpassEndInfo}","page":"API","title":"Vulkan.cmd_next_subpass_2","text":"cmd_next_subpass_2(command_buffer, subpass_begin_info::SubpassBeginInfo, subpass_end_info::SubpassEndInfo)\n\nArguments:\n\ncommand_buffer (externsync)\nsubpass_begin_info::SubpassBeginInfo\nsubpass_end_info::SubpassEndInfo\n\nAPI documentation\n\ncmd_next_subpass_2(command_buffer, subpass_begin_info::SubpassBeginInfo, subpass_end_info::SubpassEndInfo)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_pipeline_barrier-Tuple{Any, PipelineStageFlag, PipelineStageFlag, AbstractArray, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_pipeline_barrier","text":"cmd_pipeline_barrier(command_buffer, src_stage_mask::PipelineStageFlag, dst_stage_mask::PipelineStageFlag, memory_barriers::AbstractArray{MemoryBarrier}, buffer_memory_barriers::AbstractArray{BufferMemoryBarrier}, image_memory_barriers::AbstractArray{ImageMemoryBarrier}, fptr::FunctionPtr; dependency_flags = 0)\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_stage_mask::PipelineStageFlag\ndst_stage_mask::PipelineStageFlag\nmemory_barriers::AbstractArray{MemoryBarrier}\nbuffer_memory_barriers::AbstractArray{BufferMemoryBarrier}\nimage_memory_barriers::AbstractArray{ImageMemoryBarrier}\nfptr::FunctionPtr\ndependency_flags: defaults to 0\n\nAPI documentation\n\ncmd_pipeline_barrier(command_buffer, src_stage_mask::PipelineStageFlag, dst_stage_mask::PipelineStageFlag, memory_barriers::AbstractArray, buffer_memory_barriers::AbstractArray, image_memory_barriers::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}; dependency_flags)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_pipeline_barrier-Tuple{Any, PipelineStageFlag, PipelineStageFlag, AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.cmd_pipeline_barrier","text":"cmd_pipeline_barrier(command_buffer, src_stage_mask::PipelineStageFlag, dst_stage_mask::PipelineStageFlag, memory_barriers::AbstractArray{MemoryBarrier}, buffer_memory_barriers::AbstractArray{BufferMemoryBarrier}, image_memory_barriers::AbstractArray{ImageMemoryBarrier}; dependency_flags = 0)\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_stage_mask::PipelineStageFlag\ndst_stage_mask::PipelineStageFlag\nmemory_barriers::AbstractArray{MemoryBarrier}\nbuffer_memory_barriers::AbstractArray{BufferMemoryBarrier}\nimage_memory_barriers::AbstractArray{ImageMemoryBarrier}\ndependency_flags: defaults to 0\n\nAPI documentation\n\ncmd_pipeline_barrier(command_buffer, src_stage_mask::PipelineStageFlag, dst_stage_mask::PipelineStageFlag, memory_barriers::AbstractArray, buffer_memory_barriers::AbstractArray, image_memory_barriers::AbstractArray; dependency_flags)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_pipeline_barrier_2_khr-Tuple{Any, DependencyInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_pipeline_barrier_2_khr","text":"cmd_pipeline_barrier_2_khr(command_buffer, dependency_info::DependencyInfoKHR, fptr::FunctionPtr)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncommand_buffer (externsync)\ndependency_info::DependencyInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_pipeline_barrier_2_khr(command_buffer, dependency_info::DependencyInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_pipeline_barrier_2_khr-Tuple{Any, DependencyInfoKHR}","page":"API","title":"Vulkan.cmd_pipeline_barrier_2_khr","text":"cmd_pipeline_barrier_2_khr(command_buffer, dependency_info::DependencyInfoKHR)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncommand_buffer (externsync)\ndependency_info::DependencyInfoKHR\n\nAPI documentation\n\ncmd_pipeline_barrier_2_khr(command_buffer, dependency_info::DependencyInfoKHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_preprocess_generated_commands_nv-Tuple{Any, GeneratedCommandsInfoNV, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_preprocess_generated_commands_nv","text":"cmd_preprocess_generated_commands_nv(command_buffer, generated_commands_info::GeneratedCommandsInfoNV, fptr::FunctionPtr)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ncommand_buffer (externsync)\ngenerated_commands_info::GeneratedCommandsInfoNV\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_preprocess_generated_commands_nv(command_buffer, generated_commands_info::GeneratedCommandsInfoNV, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_preprocess_generated_commands_nv-Tuple{Any, GeneratedCommandsInfoNV}","page":"API","title":"Vulkan.cmd_preprocess_generated_commands_nv","text":"cmd_preprocess_generated_commands_nv(command_buffer, generated_commands_info::GeneratedCommandsInfoNV)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ncommand_buffer (externsync)\ngenerated_commands_info::GeneratedCommandsInfoNV\n\nAPI documentation\n\ncmd_preprocess_generated_commands_nv(command_buffer, generated_commands_info::GeneratedCommandsInfoNV)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_push_constants-Tuple{Any, Any, ShaderStageFlag, Integer, Integer, Ptr{Nothing}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_push_constants","text":"cmd_push_constants(command_buffer, layout, stage_flags::ShaderStageFlag, offset::Integer, size::Integer, values::Ptr{Cvoid}, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nlayout\nstage_flags::ShaderStageFlag\noffset::Integer\nsize::Integer\nvalues::Ptr{Cvoid} (must be a valid pointer with size bytes)\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_push_constants(command_buffer, layout, stage_flags::ShaderStageFlag, offset::Integer, size::Integer, values::Ptr{Nothing}, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_push_constants-Tuple{Any, Any, ShaderStageFlag, Integer, Integer, Ptr{Nothing}}","page":"API","title":"Vulkan.cmd_push_constants","text":"cmd_push_constants(command_buffer, layout, stage_flags::ShaderStageFlag, offset::Integer, size::Integer, values::Ptr{Cvoid})\n\nArguments:\n\ncommand_buffer (externsync)\nlayout\nstage_flags::ShaderStageFlag\noffset::Integer\nsize::Integer\nvalues::Ptr{Cvoid} (must be a valid pointer with size bytes)\n\nAPI documentation\n\ncmd_push_constants(command_buffer, layout, stage_flags::ShaderStageFlag, offset::Integer, size::Integer, values::Ptr{Nothing})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_push_descriptor_set_khr-Tuple{Any, PipelineBindPoint, Any, Integer, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_push_descriptor_set_khr","text":"cmd_push_descriptor_set_khr(command_buffer, pipeline_bind_point::PipelineBindPoint, layout, set::Integer, descriptor_writes::AbstractArray{WriteDescriptorSet}, fptr::FunctionPtr)\n\nExtension: VK_KHR_push_descriptor\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_bind_point::PipelineBindPoint\nlayout\nset::Integer\ndescriptor_writes::AbstractArray{WriteDescriptorSet}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_push_descriptor_set_khr(command_buffer, pipeline_bind_point::PipelineBindPoint, layout, set::Integer, descriptor_writes::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_push_descriptor_set_khr-Tuple{Any, PipelineBindPoint, Any, Integer, AbstractArray}","page":"API","title":"Vulkan.cmd_push_descriptor_set_khr","text":"cmd_push_descriptor_set_khr(command_buffer, pipeline_bind_point::PipelineBindPoint, layout, set::Integer, descriptor_writes::AbstractArray{WriteDescriptorSet})\n\nExtension: VK_KHR_push_descriptor\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_bind_point::PipelineBindPoint\nlayout\nset::Integer\ndescriptor_writes::AbstractArray{WriteDescriptorSet}\n\nAPI documentation\n\ncmd_push_descriptor_set_khr(command_buffer, pipeline_bind_point::PipelineBindPoint, layout, set::Integer, descriptor_writes::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_push_descriptor_set_with_template_khr-Tuple{Any, Any, Any, Integer, Ptr{Nothing}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_push_descriptor_set_with_template_khr","text":"cmd_push_descriptor_set_with_template_khr(command_buffer, descriptor_update_template, layout, set::Integer, data::Ptr{Cvoid}, fptr::FunctionPtr)\n\nExtension: VK_KHR_push_descriptor\n\nArguments:\n\ncommand_buffer (externsync)\ndescriptor_update_template\nlayout\nset::Integer\ndata::Ptr{Cvoid}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_push_descriptor_set_with_template_khr(command_buffer, descriptor_update_template, layout, set::Integer, data::Ptr{Nothing}, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_push_descriptor_set_with_template_khr-Tuple{Any, Any, Any, Integer, Ptr{Nothing}}","page":"API","title":"Vulkan.cmd_push_descriptor_set_with_template_khr","text":"cmd_push_descriptor_set_with_template_khr(command_buffer, descriptor_update_template, layout, set::Integer, data::Ptr{Cvoid})\n\nExtension: VK_KHR_push_descriptor\n\nArguments:\n\ncommand_buffer (externsync)\ndescriptor_update_template\nlayout\nset::Integer\ndata::Ptr{Cvoid}\n\nAPI documentation\n\ncmd_push_descriptor_set_with_template_khr(command_buffer, descriptor_update_template, layout, set::Integer, data::Ptr{Nothing})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_reset_event-Tuple{Any, Any, PipelineStageFlag, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_reset_event","text":"cmd_reset_event(command_buffer, event, stage_mask::PipelineStageFlag, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nevent\nstage_mask::PipelineStageFlag\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_reset_event(command_buffer, event, stage_mask::PipelineStageFlag, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_reset_event-Tuple{Any, Any, PipelineStageFlag}","page":"API","title":"Vulkan.cmd_reset_event","text":"cmd_reset_event(command_buffer, event, stage_mask::PipelineStageFlag)\n\nArguments:\n\ncommand_buffer (externsync)\nevent\nstage_mask::PipelineStageFlag\n\nAPI documentation\n\ncmd_reset_event(command_buffer, event, stage_mask::PipelineStageFlag)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_reset_event_2_khr-Tuple{Any, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_reset_event_2_khr","text":"cmd_reset_event_2_khr(command_buffer, event, stage_mask::Integer, fptr::FunctionPtr)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncommand_buffer (externsync)\nevent\nstage_mask::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_reset_event_2_khr(command_buffer, event, stage_mask::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_reset_event_2_khr-Tuple{Any, Any, Integer}","page":"API","title":"Vulkan.cmd_reset_event_2_khr","text":"cmd_reset_event_2_khr(command_buffer, event, stage_mask::Integer)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncommand_buffer (externsync)\nevent\nstage_mask::Integer\n\nAPI documentation\n\ncmd_reset_event_2_khr(command_buffer, event, stage_mask::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_reset_query_pool-Tuple{Any, Any, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_reset_query_pool","text":"cmd_reset_query_pool(command_buffer, query_pool, first_query::Integer, query_count::Integer, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nquery_pool\nfirst_query::Integer\nquery_count::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_reset_query_pool(command_buffer, query_pool, first_query::Integer, query_count::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_reset_query_pool-Tuple{Any, Any, Integer, Integer}","page":"API","title":"Vulkan.cmd_reset_query_pool","text":"cmd_reset_query_pool(command_buffer, query_pool, first_query::Integer, query_count::Integer)\n\nArguments:\n\ncommand_buffer (externsync)\nquery_pool\nfirst_query::Integer\nquery_count::Integer\n\nAPI documentation\n\ncmd_reset_query_pool(command_buffer, query_pool, first_query::Integer, query_count::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_resolve_image-Tuple{Any, Any, ImageLayout, Any, ImageLayout, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_resolve_image","text":"cmd_resolve_image(command_buffer, src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray{ImageResolve}, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_image\nsrc_image_layout::ImageLayout\ndst_image\ndst_image_layout::ImageLayout\nregions::AbstractArray{ImageResolve}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_resolve_image(command_buffer, src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_resolve_image-Tuple{Any, Any, ImageLayout, Any, ImageLayout, AbstractArray}","page":"API","title":"Vulkan.cmd_resolve_image","text":"cmd_resolve_image(command_buffer, src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray{ImageResolve})\n\nArguments:\n\ncommand_buffer (externsync)\nsrc_image\nsrc_image_layout::ImageLayout\ndst_image\ndst_image_layout::ImageLayout\nregions::AbstractArray{ImageResolve}\n\nAPI documentation\n\ncmd_resolve_image(command_buffer, src_image, src_image_layout::ImageLayout, dst_image, dst_image_layout::ImageLayout, regions::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_resolve_image_2_khr-Tuple{Any, ResolveImageInfo2KHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_resolve_image_2_khr","text":"cmd_resolve_image_2_khr(command_buffer, resolve_image_info::ResolveImageInfo2KHR, fptr::FunctionPtr)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\ncommand_buffer (externsync)\nresolve_image_info::ResolveImageInfo2KHR\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_resolve_image_2_khr(command_buffer, resolve_image_info::ResolveImageInfo2KHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_resolve_image_2_khr-Tuple{Any, ResolveImageInfo2KHR}","page":"API","title":"Vulkan.cmd_resolve_image_2_khr","text":"cmd_resolve_image_2_khr(command_buffer, resolve_image_info::ResolveImageInfo2KHR)\n\nExtension: VK_KHR_copy_commands2\n\nArguments:\n\ncommand_buffer (externsync)\nresolve_image_info::ResolveImageInfo2KHR\n\nAPI documentation\n\ncmd_resolve_image_2_khr(command_buffer, resolve_image_info::ResolveImageInfo2KHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_blend_constants-Tuple{Any, NTuple{4, Float32}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_blend_constants","text":"cmd_set_blend_constants(command_buffer, blend_constants::NTuple{4, Float32}, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nblend_constants::NTuple{4, Float32}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_blend_constants(command_buffer, blend_constants::NTuple{4, Float32}, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_blend_constants-Tuple{Any, NTuple{4, Float32}}","page":"API","title":"Vulkan.cmd_set_blend_constants","text":"cmd_set_blend_constants(command_buffer, blend_constants::NTuple{4, Float32})\n\nArguments:\n\ncommand_buffer (externsync)\nblend_constants::NTuple{4, Float32}\n\nAPI documentation\n\ncmd_set_blend_constants(command_buffer, blend_constants::NTuple{4, Float32})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_checkpoint_nv-Tuple{Any, Ptr{Nothing}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_checkpoint_nv","text":"cmd_set_checkpoint_nv(command_buffer, checkpoint_marker::Ptr{Cvoid}, fptr::FunctionPtr)\n\nExtension: VK_NV_device_diagnostic_checkpoints\n\nArguments:\n\ncommand_buffer (externsync)\ncheckpoint_marker::Ptr{Cvoid}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_checkpoint_nv(command_buffer, checkpoint_marker::Ptr{Nothing}, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_checkpoint_nv-Tuple{Any, Ptr{Nothing}}","page":"API","title":"Vulkan.cmd_set_checkpoint_nv","text":"cmd_set_checkpoint_nv(command_buffer, checkpoint_marker::Ptr{Cvoid})\n\nExtension: VK_NV_device_diagnostic_checkpoints\n\nArguments:\n\ncommand_buffer (externsync)\ncheckpoint_marker::Ptr{Cvoid}\n\nAPI documentation\n\ncmd_set_checkpoint_nv(command_buffer, checkpoint_marker::Ptr{Nothing})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_coarse_sample_order_nv-Tuple{Any, CoarseSampleOrderTypeNV, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_coarse_sample_order_nv","text":"cmd_set_coarse_sample_order_nv(command_buffer, sample_order_type::CoarseSampleOrderTypeNV, custom_sample_orders::AbstractArray{CoarseSampleOrderCustomNV}, fptr::FunctionPtr)\n\nExtension: VK_NV_shading_rate_image\n\nArguments:\n\ncommand_buffer (externsync)\nsample_order_type::CoarseSampleOrderTypeNV\ncustom_sample_orders::AbstractArray{CoarseSampleOrderCustomNV}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_coarse_sample_order_nv(command_buffer, sample_order_type::CoarseSampleOrderTypeNV, custom_sample_orders::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_coarse_sample_order_nv-Tuple{Any, CoarseSampleOrderTypeNV, AbstractArray}","page":"API","title":"Vulkan.cmd_set_coarse_sample_order_nv","text":"cmd_set_coarse_sample_order_nv(command_buffer, sample_order_type::CoarseSampleOrderTypeNV, custom_sample_orders::AbstractArray{CoarseSampleOrderCustomNV})\n\nExtension: VK_NV_shading_rate_image\n\nArguments:\n\ncommand_buffer (externsync)\nsample_order_type::CoarseSampleOrderTypeNV\ncustom_sample_orders::AbstractArray{CoarseSampleOrderCustomNV}\n\nAPI documentation\n\ncmd_set_coarse_sample_order_nv(command_buffer, sample_order_type::CoarseSampleOrderTypeNV, custom_sample_orders::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_color_write_enable_ext-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_color_write_enable_ext","text":"cmd_set_color_write_enable_ext(command_buffer, color_write_enables::AbstractArray{Bool}, fptr::FunctionPtr)\n\nExtension: VK_EXT_color_write_enable\n\nArguments:\n\ncommand_buffer (externsync)\ncolor_write_enables::AbstractArray{Bool}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_color_write_enable_ext(command_buffer, color_write_enables::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_color_write_enable_ext-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan.cmd_set_color_write_enable_ext","text":"cmd_set_color_write_enable_ext(command_buffer, color_write_enables::AbstractArray{Bool})\n\nExtension: VK_EXT_color_write_enable\n\nArguments:\n\ncommand_buffer (externsync)\ncolor_write_enables::AbstractArray{Bool}\n\nAPI documentation\n\ncmd_set_color_write_enable_ext(command_buffer, color_write_enables::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_cull_mode_ext-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_cull_mode_ext","text":"cmd_set_cull_mode_ext(command_buffer, fptr::FunctionPtr; cull_mode = 0)\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nfptr::FunctionPtr\ncull_mode: defaults to 0\n\nAPI documentation\n\ncmd_set_cull_mode_ext(command_buffer, fptr::Union{Ptr{Nothing}, Base.CFunction}; cull_mode)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_cull_mode_ext-Tuple{Any}","page":"API","title":"Vulkan.cmd_set_cull_mode_ext","text":"cmd_set_cull_mode_ext(command_buffer; cull_mode = 0)\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\ncull_mode: defaults to 0\n\nAPI documentation\n\ncmd_set_cull_mode_ext(command_buffer; cull_mode)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_depth_bias-Tuple{Any, Real, Real, Real, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_depth_bias","text":"cmd_set_depth_bias(command_buffer, depth_bias_constant_factor::Real, depth_bias_clamp::Real, depth_bias_slope_factor::Real, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\ndepth_bias_constant_factor::Real\ndepth_bias_clamp::Real\ndepth_bias_slope_factor::Real\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_depth_bias(command_buffer, depth_bias_constant_factor::Real, depth_bias_clamp::Real, depth_bias_slope_factor::Real, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_depth_bias-Tuple{Any, Real, Real, Real}","page":"API","title":"Vulkan.cmd_set_depth_bias","text":"cmd_set_depth_bias(command_buffer, depth_bias_constant_factor::Real, depth_bias_clamp::Real, depth_bias_slope_factor::Real)\n\nArguments:\n\ncommand_buffer (externsync)\ndepth_bias_constant_factor::Real\ndepth_bias_clamp::Real\ndepth_bias_slope_factor::Real\n\nAPI documentation\n\ncmd_set_depth_bias(command_buffer, depth_bias_constant_factor::Real, depth_bias_clamp::Real, depth_bias_slope_factor::Real)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_depth_bias_enable_ext-Tuple{Any, Bool, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_depth_bias_enable_ext","text":"cmd_set_depth_bias_enable_ext(command_buffer, depth_bias_enable::Bool, fptr::FunctionPtr)\n\nExtension: VK_EXT_extended_dynamic_state2\n\nArguments:\n\ncommand_buffer (externsync)\ndepth_bias_enable::Bool\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_depth_bias_enable_ext(command_buffer, depth_bias_enable::Bool, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_depth_bias_enable_ext-Tuple{Any, Bool}","page":"API","title":"Vulkan.cmd_set_depth_bias_enable_ext","text":"cmd_set_depth_bias_enable_ext(command_buffer, depth_bias_enable::Bool)\n\nExtension: VK_EXT_extended_dynamic_state2\n\nArguments:\n\ncommand_buffer (externsync)\ndepth_bias_enable::Bool\n\nAPI documentation\n\ncmd_set_depth_bias_enable_ext(command_buffer, depth_bias_enable::Bool)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_depth_bounds-Tuple{Any, Real, Real, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_depth_bounds","text":"cmd_set_depth_bounds(command_buffer, min_depth_bounds::Real, max_depth_bounds::Real, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nmin_depth_bounds::Real\nmax_depth_bounds::Real\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_depth_bounds(command_buffer, min_depth_bounds::Real, max_depth_bounds::Real, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_depth_bounds-Tuple{Any, Real, Real}","page":"API","title":"Vulkan.cmd_set_depth_bounds","text":"cmd_set_depth_bounds(command_buffer, min_depth_bounds::Real, max_depth_bounds::Real)\n\nArguments:\n\ncommand_buffer (externsync)\nmin_depth_bounds::Real\nmax_depth_bounds::Real\n\nAPI documentation\n\ncmd_set_depth_bounds(command_buffer, min_depth_bounds::Real, max_depth_bounds::Real)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_depth_bounds_test_enable_ext-Tuple{Any, Bool, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_depth_bounds_test_enable_ext","text":"cmd_set_depth_bounds_test_enable_ext(command_buffer, depth_bounds_test_enable::Bool, fptr::FunctionPtr)\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\ndepth_bounds_test_enable::Bool\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_depth_bounds_test_enable_ext(command_buffer, depth_bounds_test_enable::Bool, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_depth_bounds_test_enable_ext-Tuple{Any, Bool}","page":"API","title":"Vulkan.cmd_set_depth_bounds_test_enable_ext","text":"cmd_set_depth_bounds_test_enable_ext(command_buffer, depth_bounds_test_enable::Bool)\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\ndepth_bounds_test_enable::Bool\n\nAPI documentation\n\ncmd_set_depth_bounds_test_enable_ext(command_buffer, depth_bounds_test_enable::Bool)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_depth_compare_op_ext-Tuple{Any, CompareOp, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_depth_compare_op_ext","text":"cmd_set_depth_compare_op_ext(command_buffer, depth_compare_op::CompareOp, fptr::FunctionPtr)\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\ndepth_compare_op::CompareOp\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_depth_compare_op_ext(command_buffer, depth_compare_op::CompareOp, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_depth_compare_op_ext-Tuple{Any, CompareOp}","page":"API","title":"Vulkan.cmd_set_depth_compare_op_ext","text":"cmd_set_depth_compare_op_ext(command_buffer, depth_compare_op::CompareOp)\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\ndepth_compare_op::CompareOp\n\nAPI documentation\n\ncmd_set_depth_compare_op_ext(command_buffer, depth_compare_op::CompareOp)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_depth_test_enable_ext-Tuple{Any, Bool, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_depth_test_enable_ext","text":"cmd_set_depth_test_enable_ext(command_buffer, depth_test_enable::Bool, fptr::FunctionPtr)\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\ndepth_test_enable::Bool\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_depth_test_enable_ext(command_buffer, depth_test_enable::Bool, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_depth_test_enable_ext-Tuple{Any, Bool}","page":"API","title":"Vulkan.cmd_set_depth_test_enable_ext","text":"cmd_set_depth_test_enable_ext(command_buffer, depth_test_enable::Bool)\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\ndepth_test_enable::Bool\n\nAPI documentation\n\ncmd_set_depth_test_enable_ext(command_buffer, depth_test_enable::Bool)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_depth_write_enable_ext-Tuple{Any, Bool, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_depth_write_enable_ext","text":"cmd_set_depth_write_enable_ext(command_buffer, depth_write_enable::Bool, fptr::FunctionPtr)\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\ndepth_write_enable::Bool\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_depth_write_enable_ext(command_buffer, depth_write_enable::Bool, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_depth_write_enable_ext-Tuple{Any, Bool}","page":"API","title":"Vulkan.cmd_set_depth_write_enable_ext","text":"cmd_set_depth_write_enable_ext(command_buffer, depth_write_enable::Bool)\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\ndepth_write_enable::Bool\n\nAPI documentation\n\ncmd_set_depth_write_enable_ext(command_buffer, depth_write_enable::Bool)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_device_mask-Tuple{Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_device_mask","text":"cmd_set_device_mask(command_buffer, device_mask::Integer, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\ndevice_mask::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_device_mask(command_buffer, device_mask::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_device_mask-Tuple{Any, Integer}","page":"API","title":"Vulkan.cmd_set_device_mask","text":"cmd_set_device_mask(command_buffer, device_mask::Integer)\n\nArguments:\n\ncommand_buffer (externsync)\ndevice_mask::Integer\n\nAPI documentation\n\ncmd_set_device_mask(command_buffer, device_mask::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_discard_rectangle_ext-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_discard_rectangle_ext","text":"cmd_set_discard_rectangle_ext(command_buffer, discard_rectangles::AbstractArray{Rect2D}, fptr::FunctionPtr)\n\nExtension: VK_EXT_discard_rectangles\n\nArguments:\n\ncommand_buffer (externsync)\ndiscard_rectangles::AbstractArray{Rect2D}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_discard_rectangle_ext(command_buffer, discard_rectangles::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_discard_rectangle_ext-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan.cmd_set_discard_rectangle_ext","text":"cmd_set_discard_rectangle_ext(command_buffer, discard_rectangles::AbstractArray{Rect2D})\n\nExtension: VK_EXT_discard_rectangles\n\nArguments:\n\ncommand_buffer (externsync)\ndiscard_rectangles::AbstractArray{Rect2D}\n\nAPI documentation\n\ncmd_set_discard_rectangle_ext(command_buffer, discard_rectangles::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_event-Tuple{Any, Any, PipelineStageFlag, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_event","text":"cmd_set_event(command_buffer, event, stage_mask::PipelineStageFlag, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nevent\nstage_mask::PipelineStageFlag\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_event(command_buffer, event, stage_mask::PipelineStageFlag, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_event-Tuple{Any, Any, PipelineStageFlag}","page":"API","title":"Vulkan.cmd_set_event","text":"cmd_set_event(command_buffer, event, stage_mask::PipelineStageFlag)\n\nArguments:\n\ncommand_buffer (externsync)\nevent\nstage_mask::PipelineStageFlag\n\nAPI documentation\n\ncmd_set_event(command_buffer, event, stage_mask::PipelineStageFlag)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_event_2_khr-Tuple{Any, Any, DependencyInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_event_2_khr","text":"cmd_set_event_2_khr(command_buffer, event, dependency_info::DependencyInfoKHR, fptr::FunctionPtr)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncommand_buffer (externsync)\nevent\ndependency_info::DependencyInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_event_2_khr(command_buffer, event, dependency_info::DependencyInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_event_2_khr-Tuple{Any, Any, DependencyInfoKHR}","page":"API","title":"Vulkan.cmd_set_event_2_khr","text":"cmd_set_event_2_khr(command_buffer, event, dependency_info::DependencyInfoKHR)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncommand_buffer (externsync)\nevent\ndependency_info::DependencyInfoKHR\n\nAPI documentation\n\ncmd_set_event_2_khr(command_buffer, event, dependency_info::DependencyInfoKHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_exclusive_scissor_nv-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_exclusive_scissor_nv","text":"cmd_set_exclusive_scissor_nv(command_buffer, exclusive_scissors::AbstractArray{Rect2D}, fptr::FunctionPtr)\n\nExtension: VK_NV_scissor_exclusive\n\nArguments:\n\ncommand_buffer (externsync)\nexclusive_scissors::AbstractArray{Rect2D}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_exclusive_scissor_nv(command_buffer, exclusive_scissors::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_exclusive_scissor_nv-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan.cmd_set_exclusive_scissor_nv","text":"cmd_set_exclusive_scissor_nv(command_buffer, exclusive_scissors::AbstractArray{Rect2D})\n\nExtension: VK_NV_scissor_exclusive\n\nArguments:\n\ncommand_buffer (externsync)\nexclusive_scissors::AbstractArray{Rect2D}\n\nAPI documentation\n\ncmd_set_exclusive_scissor_nv(command_buffer, exclusive_scissors::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_fragment_shading_rate_enum_nv-Tuple{Any, FragmentShadingRateNV, Tuple{FragmentShadingRateCombinerOpKHR, FragmentShadingRateCombinerOpKHR}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_fragment_shading_rate_enum_nv","text":"cmd_set_fragment_shading_rate_enum_nv(command_buffer, shading_rate::FragmentShadingRateNV, combiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR}, fptr::FunctionPtr)\n\nExtension: VK_NV_fragment_shading_rate_enums\n\nArguments:\n\ncommand_buffer (externsync)\nshading_rate::FragmentShadingRateNV\ncombiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_fragment_shading_rate_enum_nv(command_buffer, shading_rate::FragmentShadingRateNV, combiner_ops::Tuple{FragmentShadingRateCombinerOpKHR, FragmentShadingRateCombinerOpKHR}, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_fragment_shading_rate_enum_nv-Tuple{Any, FragmentShadingRateNV, Tuple{FragmentShadingRateCombinerOpKHR, FragmentShadingRateCombinerOpKHR}}","page":"API","title":"Vulkan.cmd_set_fragment_shading_rate_enum_nv","text":"cmd_set_fragment_shading_rate_enum_nv(command_buffer, shading_rate::FragmentShadingRateNV, combiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR})\n\nExtension: VK_NV_fragment_shading_rate_enums\n\nArguments:\n\ncommand_buffer (externsync)\nshading_rate::FragmentShadingRateNV\ncombiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR}\n\nAPI documentation\n\ncmd_set_fragment_shading_rate_enum_nv(command_buffer, shading_rate::FragmentShadingRateNV, combiner_ops::Tuple{FragmentShadingRateCombinerOpKHR, FragmentShadingRateCombinerOpKHR})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_fragment_shading_rate_khr-Tuple{Any, Extent2D, Tuple{FragmentShadingRateCombinerOpKHR, FragmentShadingRateCombinerOpKHR}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_fragment_shading_rate_khr","text":"cmd_set_fragment_shading_rate_khr(command_buffer, fragment_size::Extent2D, combiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR}, fptr::FunctionPtr)\n\nExtension: VK_KHR_fragment_shading_rate\n\nArguments:\n\ncommand_buffer (externsync)\nfragment_size::Extent2D\ncombiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_fragment_shading_rate_khr(command_buffer, fragment_size::Extent2D, combiner_ops::Tuple{FragmentShadingRateCombinerOpKHR, FragmentShadingRateCombinerOpKHR}, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_fragment_shading_rate_khr-Tuple{Any, Extent2D, Tuple{FragmentShadingRateCombinerOpKHR, FragmentShadingRateCombinerOpKHR}}","page":"API","title":"Vulkan.cmd_set_fragment_shading_rate_khr","text":"cmd_set_fragment_shading_rate_khr(command_buffer, fragment_size::Extent2D, combiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR})\n\nExtension: VK_KHR_fragment_shading_rate\n\nArguments:\n\ncommand_buffer (externsync)\nfragment_size::Extent2D\ncombiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR}\n\nAPI documentation\n\ncmd_set_fragment_shading_rate_khr(command_buffer, fragment_size::Extent2D, combiner_ops::Tuple{FragmentShadingRateCombinerOpKHR, FragmentShadingRateCombinerOpKHR})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_front_face_ext-Tuple{Any, FrontFace, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_front_face_ext","text":"cmd_set_front_face_ext(command_buffer, front_face::FrontFace, fptr::FunctionPtr)\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nfront_face::FrontFace\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_front_face_ext(command_buffer, front_face::FrontFace, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_front_face_ext-Tuple{Any, FrontFace}","page":"API","title":"Vulkan.cmd_set_front_face_ext","text":"cmd_set_front_face_ext(command_buffer, front_face::FrontFace)\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nfront_face::FrontFace\n\nAPI documentation\n\ncmd_set_front_face_ext(command_buffer, front_face::FrontFace)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_line_stipple_ext-Tuple{Any, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_line_stipple_ext","text":"cmd_set_line_stipple_ext(command_buffer, line_stipple_factor::Integer, line_stipple_pattern::Integer, fptr::FunctionPtr)\n\nExtension: VK_EXT_line_rasterization\n\nArguments:\n\ncommand_buffer (externsync)\nline_stipple_factor::Integer\nline_stipple_pattern::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_line_stipple_ext(command_buffer, line_stipple_factor::Integer, line_stipple_pattern::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_line_stipple_ext-Tuple{Any, Integer, Integer}","page":"API","title":"Vulkan.cmd_set_line_stipple_ext","text":"cmd_set_line_stipple_ext(command_buffer, line_stipple_factor::Integer, line_stipple_pattern::Integer)\n\nExtension: VK_EXT_line_rasterization\n\nArguments:\n\ncommand_buffer (externsync)\nline_stipple_factor::Integer\nline_stipple_pattern::Integer\n\nAPI documentation\n\ncmd_set_line_stipple_ext(command_buffer, line_stipple_factor::Integer, line_stipple_pattern::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_line_width-Tuple{Any, Real, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_line_width","text":"cmd_set_line_width(command_buffer, line_width::Real, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nline_width::Real\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_line_width(command_buffer, line_width::Real, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_line_width-Tuple{Any, Real}","page":"API","title":"Vulkan.cmd_set_line_width","text":"cmd_set_line_width(command_buffer, line_width::Real)\n\nArguments:\n\ncommand_buffer (externsync)\nline_width::Real\n\nAPI documentation\n\ncmd_set_line_width(command_buffer, line_width::Real)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_logic_op_ext-Tuple{Any, LogicOp, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_logic_op_ext","text":"cmd_set_logic_op_ext(command_buffer, logic_op::LogicOp, fptr::FunctionPtr)\n\nExtension: VK_EXT_extended_dynamic_state2\n\nArguments:\n\ncommand_buffer (externsync)\nlogic_op::LogicOp\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_logic_op_ext(command_buffer, logic_op::LogicOp, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_logic_op_ext-Tuple{Any, LogicOp}","page":"API","title":"Vulkan.cmd_set_logic_op_ext","text":"cmd_set_logic_op_ext(command_buffer, logic_op::LogicOp)\n\nExtension: VK_EXT_extended_dynamic_state2\n\nArguments:\n\ncommand_buffer (externsync)\nlogic_op::LogicOp\n\nAPI documentation\n\ncmd_set_logic_op_ext(command_buffer, logic_op::LogicOp)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_patch_control_points_ext-Tuple{Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_patch_control_points_ext","text":"cmd_set_patch_control_points_ext(command_buffer, patch_control_points::Integer, fptr::FunctionPtr)\n\nExtension: VK_EXT_extended_dynamic_state2\n\nArguments:\n\ncommand_buffer (externsync)\npatch_control_points::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_patch_control_points_ext(command_buffer, patch_control_points::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_patch_control_points_ext-Tuple{Any, Integer}","page":"API","title":"Vulkan.cmd_set_patch_control_points_ext","text":"cmd_set_patch_control_points_ext(command_buffer, patch_control_points::Integer)\n\nExtension: VK_EXT_extended_dynamic_state2\n\nArguments:\n\ncommand_buffer (externsync)\npatch_control_points::Integer\n\nAPI documentation\n\ncmd_set_patch_control_points_ext(command_buffer, patch_control_points::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_performance_marker_intel-Tuple{Any, PerformanceMarkerInfoINTEL, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_performance_marker_intel","text":"cmd_set_performance_marker_intel(command_buffer, marker_info::PerformanceMarkerInfoINTEL, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ncommand_buffer (externsync)\nmarker_info::PerformanceMarkerInfoINTEL\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_performance_marker_intel(command_buffer, marker_info::PerformanceMarkerInfoINTEL, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_performance_marker_intel-Tuple{Any, PerformanceMarkerInfoINTEL}","page":"API","title":"Vulkan.cmd_set_performance_marker_intel","text":"cmd_set_performance_marker_intel(command_buffer, marker_info::PerformanceMarkerInfoINTEL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ncommand_buffer (externsync)\nmarker_info::PerformanceMarkerInfoINTEL\n\nAPI documentation\n\ncmd_set_performance_marker_intel(command_buffer, marker_info::PerformanceMarkerInfoINTEL) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_performance_override_intel-Tuple{Any, PerformanceOverrideInfoINTEL, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_performance_override_intel","text":"cmd_set_performance_override_intel(command_buffer, override_info::PerformanceOverrideInfoINTEL, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ncommand_buffer (externsync)\noverride_info::PerformanceOverrideInfoINTEL\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_performance_override_intel(command_buffer, override_info::PerformanceOverrideInfoINTEL, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_performance_override_intel-Tuple{Any, PerformanceOverrideInfoINTEL}","page":"API","title":"Vulkan.cmd_set_performance_override_intel","text":"cmd_set_performance_override_intel(command_buffer, override_info::PerformanceOverrideInfoINTEL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ncommand_buffer (externsync)\noverride_info::PerformanceOverrideInfoINTEL\n\nAPI documentation\n\ncmd_set_performance_override_intel(command_buffer, override_info::PerformanceOverrideInfoINTEL) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_performance_stream_marker_intel-Tuple{Any, PerformanceStreamMarkerInfoINTEL, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_performance_stream_marker_intel","text":"cmd_set_performance_stream_marker_intel(command_buffer, marker_info::PerformanceStreamMarkerInfoINTEL, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ncommand_buffer (externsync)\nmarker_info::PerformanceStreamMarkerInfoINTEL\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_performance_stream_marker_intel(command_buffer, marker_info::PerformanceStreamMarkerInfoINTEL, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_performance_stream_marker_intel-Tuple{Any, PerformanceStreamMarkerInfoINTEL}","page":"API","title":"Vulkan.cmd_set_performance_stream_marker_intel","text":"cmd_set_performance_stream_marker_intel(command_buffer, marker_info::PerformanceStreamMarkerInfoINTEL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ncommand_buffer (externsync)\nmarker_info::PerformanceStreamMarkerInfoINTEL\n\nAPI documentation\n\ncmd_set_performance_stream_marker_intel(command_buffer, marker_info::PerformanceStreamMarkerInfoINTEL) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_primitive_restart_enable_ext-Tuple{Any, Bool, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_primitive_restart_enable_ext","text":"cmd_set_primitive_restart_enable_ext(command_buffer, primitive_restart_enable::Bool, fptr::FunctionPtr)\n\nExtension: VK_EXT_extended_dynamic_state2\n\nArguments:\n\ncommand_buffer (externsync)\nprimitive_restart_enable::Bool\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_primitive_restart_enable_ext(command_buffer, primitive_restart_enable::Bool, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_primitive_restart_enable_ext-Tuple{Any, Bool}","page":"API","title":"Vulkan.cmd_set_primitive_restart_enable_ext","text":"cmd_set_primitive_restart_enable_ext(command_buffer, primitive_restart_enable::Bool)\n\nExtension: VK_EXT_extended_dynamic_state2\n\nArguments:\n\ncommand_buffer (externsync)\nprimitive_restart_enable::Bool\n\nAPI documentation\n\ncmd_set_primitive_restart_enable_ext(command_buffer, primitive_restart_enable::Bool)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_primitive_topology_ext-Tuple{Any, PrimitiveTopology, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_primitive_topology_ext","text":"cmd_set_primitive_topology_ext(command_buffer, primitive_topology::PrimitiveTopology, fptr::FunctionPtr)\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nprimitive_topology::PrimitiveTopology\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_primitive_topology_ext(command_buffer, primitive_topology::PrimitiveTopology, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_primitive_topology_ext-Tuple{Any, PrimitiveTopology}","page":"API","title":"Vulkan.cmd_set_primitive_topology_ext","text":"cmd_set_primitive_topology_ext(command_buffer, primitive_topology::PrimitiveTopology)\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nprimitive_topology::PrimitiveTopology\n\nAPI documentation\n\ncmd_set_primitive_topology_ext(command_buffer, primitive_topology::PrimitiveTopology)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_rasterizer_discard_enable_ext-Tuple{Any, Bool, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_rasterizer_discard_enable_ext","text":"cmd_set_rasterizer_discard_enable_ext(command_buffer, rasterizer_discard_enable::Bool, fptr::FunctionPtr)\n\nExtension: VK_EXT_extended_dynamic_state2\n\nArguments:\n\ncommand_buffer (externsync)\nrasterizer_discard_enable::Bool\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_rasterizer_discard_enable_ext(command_buffer, rasterizer_discard_enable::Bool, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_rasterizer_discard_enable_ext-Tuple{Any, Bool}","page":"API","title":"Vulkan.cmd_set_rasterizer_discard_enable_ext","text":"cmd_set_rasterizer_discard_enable_ext(command_buffer, rasterizer_discard_enable::Bool)\n\nExtension: VK_EXT_extended_dynamic_state2\n\nArguments:\n\ncommand_buffer (externsync)\nrasterizer_discard_enable::Bool\n\nAPI documentation\n\ncmd_set_rasterizer_discard_enable_ext(command_buffer, rasterizer_discard_enable::Bool)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_ray_tracing_pipeline_stack_size_khr-Tuple{Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_ray_tracing_pipeline_stack_size_khr","text":"cmd_set_ray_tracing_pipeline_stack_size_khr(command_buffer, pipeline_stack_size::Integer, fptr::FunctionPtr)\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_stack_size::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_ray_tracing_pipeline_stack_size_khr(command_buffer, pipeline_stack_size::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_ray_tracing_pipeline_stack_size_khr-Tuple{Any, Integer}","page":"API","title":"Vulkan.cmd_set_ray_tracing_pipeline_stack_size_khr","text":"cmd_set_ray_tracing_pipeline_stack_size_khr(command_buffer, pipeline_stack_size::Integer)\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_stack_size::Integer\n\nAPI documentation\n\ncmd_set_ray_tracing_pipeline_stack_size_khr(command_buffer, pipeline_stack_size::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_sample_locations_ext-Tuple{Any, SampleLocationsInfoEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_sample_locations_ext","text":"cmd_set_sample_locations_ext(command_buffer, sample_locations_info::SampleLocationsInfoEXT, fptr::FunctionPtr)\n\nExtension: VK_EXT_sample_locations\n\nArguments:\n\ncommand_buffer (externsync)\nsample_locations_info::SampleLocationsInfoEXT\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_sample_locations_ext(command_buffer, sample_locations_info::SampleLocationsInfoEXT, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_sample_locations_ext-Tuple{Any, SampleLocationsInfoEXT}","page":"API","title":"Vulkan.cmd_set_sample_locations_ext","text":"cmd_set_sample_locations_ext(command_buffer, sample_locations_info::SampleLocationsInfoEXT)\n\nExtension: VK_EXT_sample_locations\n\nArguments:\n\ncommand_buffer (externsync)\nsample_locations_info::SampleLocationsInfoEXT\n\nAPI documentation\n\ncmd_set_sample_locations_ext(command_buffer, sample_locations_info::SampleLocationsInfoEXT)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_scissor-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_scissor","text":"cmd_set_scissor(command_buffer, scissors::AbstractArray{Rect2D}, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nscissors::AbstractArray{Rect2D}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_scissor(command_buffer, scissors::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_scissor-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan.cmd_set_scissor","text":"cmd_set_scissor(command_buffer, scissors::AbstractArray{Rect2D})\n\nArguments:\n\ncommand_buffer (externsync)\nscissors::AbstractArray{Rect2D}\n\nAPI documentation\n\ncmd_set_scissor(command_buffer, scissors::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_scissor_with_count_ext-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_scissor_with_count_ext","text":"cmd_set_scissor_with_count_ext(command_buffer, scissors::AbstractArray{Rect2D}, fptr::FunctionPtr)\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nscissors::AbstractArray{Rect2D}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_scissor_with_count_ext(command_buffer, scissors::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_scissor_with_count_ext-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan.cmd_set_scissor_with_count_ext","text":"cmd_set_scissor_with_count_ext(command_buffer, scissors::AbstractArray{Rect2D})\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nscissors::AbstractArray{Rect2D}\n\nAPI documentation\n\ncmd_set_scissor_with_count_ext(command_buffer, scissors::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_stencil_compare_mask-Tuple{Any, StencilFaceFlag, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_stencil_compare_mask","text":"cmd_set_stencil_compare_mask(command_buffer, face_mask::StencilFaceFlag, compare_mask::Integer, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nface_mask::StencilFaceFlag\ncompare_mask::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_stencil_compare_mask(command_buffer, face_mask::StencilFaceFlag, compare_mask::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_stencil_compare_mask-Tuple{Any, StencilFaceFlag, Integer}","page":"API","title":"Vulkan.cmd_set_stencil_compare_mask","text":"cmd_set_stencil_compare_mask(command_buffer, face_mask::StencilFaceFlag, compare_mask::Integer)\n\nArguments:\n\ncommand_buffer (externsync)\nface_mask::StencilFaceFlag\ncompare_mask::Integer\n\nAPI documentation\n\ncmd_set_stencil_compare_mask(command_buffer, face_mask::StencilFaceFlag, compare_mask::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_stencil_op_ext-Tuple{Any, StencilFaceFlag, StencilOp, StencilOp, StencilOp, CompareOp, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_stencil_op_ext","text":"cmd_set_stencil_op_ext(command_buffer, face_mask::StencilFaceFlag, fail_op::StencilOp, pass_op::StencilOp, depth_fail_op::StencilOp, compare_op::CompareOp, fptr::FunctionPtr)\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nface_mask::StencilFaceFlag\nfail_op::StencilOp\npass_op::StencilOp\ndepth_fail_op::StencilOp\ncompare_op::CompareOp\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_stencil_op_ext(command_buffer, face_mask::StencilFaceFlag, fail_op::StencilOp, pass_op::StencilOp, depth_fail_op::StencilOp, compare_op::CompareOp, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_stencil_op_ext-Tuple{Any, StencilFaceFlag, StencilOp, StencilOp, StencilOp, CompareOp}","page":"API","title":"Vulkan.cmd_set_stencil_op_ext","text":"cmd_set_stencil_op_ext(command_buffer, face_mask::StencilFaceFlag, fail_op::StencilOp, pass_op::StencilOp, depth_fail_op::StencilOp, compare_op::CompareOp)\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nface_mask::StencilFaceFlag\nfail_op::StencilOp\npass_op::StencilOp\ndepth_fail_op::StencilOp\ncompare_op::CompareOp\n\nAPI documentation\n\ncmd_set_stencil_op_ext(command_buffer, face_mask::StencilFaceFlag, fail_op::StencilOp, pass_op::StencilOp, depth_fail_op::StencilOp, compare_op::CompareOp)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_stencil_reference-Tuple{Any, StencilFaceFlag, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_stencil_reference","text":"cmd_set_stencil_reference(command_buffer, face_mask::StencilFaceFlag, reference::Integer, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nface_mask::StencilFaceFlag\nreference::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_stencil_reference(command_buffer, face_mask::StencilFaceFlag, reference::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_stencil_reference-Tuple{Any, StencilFaceFlag, Integer}","page":"API","title":"Vulkan.cmd_set_stencil_reference","text":"cmd_set_stencil_reference(command_buffer, face_mask::StencilFaceFlag, reference::Integer)\n\nArguments:\n\ncommand_buffer (externsync)\nface_mask::StencilFaceFlag\nreference::Integer\n\nAPI documentation\n\ncmd_set_stencil_reference(command_buffer, face_mask::StencilFaceFlag, reference::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_stencil_test_enable_ext-Tuple{Any, Bool, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_stencil_test_enable_ext","text":"cmd_set_stencil_test_enable_ext(command_buffer, stencil_test_enable::Bool, fptr::FunctionPtr)\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nstencil_test_enable::Bool\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_stencil_test_enable_ext(command_buffer, stencil_test_enable::Bool, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_stencil_test_enable_ext-Tuple{Any, Bool}","page":"API","title":"Vulkan.cmd_set_stencil_test_enable_ext","text":"cmd_set_stencil_test_enable_ext(command_buffer, stencil_test_enable::Bool)\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nstencil_test_enable::Bool\n\nAPI documentation\n\ncmd_set_stencil_test_enable_ext(command_buffer, stencil_test_enable::Bool)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_stencil_write_mask-Tuple{Any, StencilFaceFlag, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_stencil_write_mask","text":"cmd_set_stencil_write_mask(command_buffer, face_mask::StencilFaceFlag, write_mask::Integer, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nface_mask::StencilFaceFlag\nwrite_mask::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_stencil_write_mask(command_buffer, face_mask::StencilFaceFlag, write_mask::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_stencil_write_mask-Tuple{Any, StencilFaceFlag, Integer}","page":"API","title":"Vulkan.cmd_set_stencil_write_mask","text":"cmd_set_stencil_write_mask(command_buffer, face_mask::StencilFaceFlag, write_mask::Integer)\n\nArguments:\n\ncommand_buffer (externsync)\nface_mask::StencilFaceFlag\nwrite_mask::Integer\n\nAPI documentation\n\ncmd_set_stencil_write_mask(command_buffer, face_mask::StencilFaceFlag, write_mask::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_vertex_input_ext-Tuple{Any, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_vertex_input_ext","text":"cmd_set_vertex_input_ext(command_buffer, vertex_binding_descriptions::AbstractArray{VertexInputBindingDescription2EXT}, vertex_attribute_descriptions::AbstractArray{VertexInputAttributeDescription2EXT}, fptr::FunctionPtr)\n\nExtension: VK_EXT_vertex_input_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nvertex_binding_descriptions::AbstractArray{VertexInputBindingDescription2EXT}\nvertex_attribute_descriptions::AbstractArray{VertexInputAttributeDescription2EXT}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_vertex_input_ext(command_buffer, vertex_binding_descriptions::AbstractArray, vertex_attribute_descriptions::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_vertex_input_ext-Tuple{Any, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.cmd_set_vertex_input_ext","text":"cmd_set_vertex_input_ext(command_buffer, vertex_binding_descriptions::AbstractArray{VertexInputBindingDescription2EXT}, vertex_attribute_descriptions::AbstractArray{VertexInputAttributeDescription2EXT})\n\nExtension: VK_EXT_vertex_input_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nvertex_binding_descriptions::AbstractArray{VertexInputBindingDescription2EXT}\nvertex_attribute_descriptions::AbstractArray{VertexInputAttributeDescription2EXT}\n\nAPI documentation\n\ncmd_set_vertex_input_ext(command_buffer, vertex_binding_descriptions::AbstractArray, vertex_attribute_descriptions::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_viewport-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_viewport","text":"cmd_set_viewport(command_buffer, viewports::AbstractArray{Viewport}, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\nviewports::AbstractArray{Viewport}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_viewport(command_buffer, viewports::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_viewport-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan.cmd_set_viewport","text":"cmd_set_viewport(command_buffer, viewports::AbstractArray{Viewport})\n\nArguments:\n\ncommand_buffer (externsync)\nviewports::AbstractArray{Viewport}\n\nAPI documentation\n\ncmd_set_viewport(command_buffer, viewports::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_viewport_shading_rate_palette_nv-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_viewport_shading_rate_palette_nv","text":"cmd_set_viewport_shading_rate_palette_nv(command_buffer, shading_rate_palettes::AbstractArray{ShadingRatePaletteNV}, fptr::FunctionPtr)\n\nExtension: VK_NV_shading_rate_image\n\nArguments:\n\ncommand_buffer (externsync)\nshading_rate_palettes::AbstractArray{ShadingRatePaletteNV}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_viewport_shading_rate_palette_nv(command_buffer, shading_rate_palettes::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_viewport_shading_rate_palette_nv-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan.cmd_set_viewport_shading_rate_palette_nv","text":"cmd_set_viewport_shading_rate_palette_nv(command_buffer, shading_rate_palettes::AbstractArray{ShadingRatePaletteNV})\n\nExtension: VK_NV_shading_rate_image\n\nArguments:\n\ncommand_buffer (externsync)\nshading_rate_palettes::AbstractArray{ShadingRatePaletteNV}\n\nAPI documentation\n\ncmd_set_viewport_shading_rate_palette_nv(command_buffer, shading_rate_palettes::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_viewport_w_scaling_nv-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_viewport_w_scaling_nv","text":"cmd_set_viewport_w_scaling_nv(command_buffer, viewport_w_scalings::AbstractArray{ViewportWScalingNV}, fptr::FunctionPtr)\n\nExtension: VK_NV_clip_space_w_scaling\n\nArguments:\n\ncommand_buffer (externsync)\nviewport_w_scalings::AbstractArray{ViewportWScalingNV}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_viewport_w_scaling_nv(command_buffer, viewport_w_scalings::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_viewport_w_scaling_nv-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan.cmd_set_viewport_w_scaling_nv","text":"cmd_set_viewport_w_scaling_nv(command_buffer, viewport_w_scalings::AbstractArray{ViewportWScalingNV})\n\nExtension: VK_NV_clip_space_w_scaling\n\nArguments:\n\ncommand_buffer (externsync)\nviewport_w_scalings::AbstractArray{ViewportWScalingNV}\n\nAPI documentation\n\ncmd_set_viewport_w_scaling_nv(command_buffer, viewport_w_scalings::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_viewport_with_count_ext-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_set_viewport_with_count_ext","text":"cmd_set_viewport_with_count_ext(command_buffer, viewports::AbstractArray{Viewport}, fptr::FunctionPtr)\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nviewports::AbstractArray{Viewport}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_set_viewport_with_count_ext(command_buffer, viewports::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_set_viewport_with_count_ext-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan.cmd_set_viewport_with_count_ext","text":"cmd_set_viewport_with_count_ext(command_buffer, viewports::AbstractArray{Viewport})\n\nExtension: VK_EXT_extended_dynamic_state\n\nArguments:\n\ncommand_buffer (externsync)\nviewports::AbstractArray{Viewport}\n\nAPI documentation\n\ncmd_set_viewport_with_count_ext(command_buffer, viewports::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_trace_rays_indirect_khr-Tuple{Any, StridedDeviceAddressRegionKHR, StridedDeviceAddressRegionKHR, StridedDeviceAddressRegionKHR, StridedDeviceAddressRegionKHR, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_trace_rays_indirect_khr","text":"cmd_trace_rays_indirect_khr(command_buffer, raygen_shader_binding_table::StridedDeviceAddressRegionKHR, miss_shader_binding_table::StridedDeviceAddressRegionKHR, hit_shader_binding_table::StridedDeviceAddressRegionKHR, callable_shader_binding_table::StridedDeviceAddressRegionKHR, indirect_device_address::Integer, fptr::FunctionPtr)\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\ncommand_buffer (externsync)\nraygen_shader_binding_table::StridedDeviceAddressRegionKHR\nmiss_shader_binding_table::StridedDeviceAddressRegionKHR\nhit_shader_binding_table::StridedDeviceAddressRegionKHR\ncallable_shader_binding_table::StridedDeviceAddressRegionKHR\nindirect_device_address::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_trace_rays_indirect_khr(command_buffer, raygen_shader_binding_table::StridedDeviceAddressRegionKHR, miss_shader_binding_table::StridedDeviceAddressRegionKHR, hit_shader_binding_table::StridedDeviceAddressRegionKHR, callable_shader_binding_table::StridedDeviceAddressRegionKHR, indirect_device_address::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_trace_rays_indirect_khr-Tuple{Any, StridedDeviceAddressRegionKHR, StridedDeviceAddressRegionKHR, StridedDeviceAddressRegionKHR, StridedDeviceAddressRegionKHR, Integer}","page":"API","title":"Vulkan.cmd_trace_rays_indirect_khr","text":"cmd_trace_rays_indirect_khr(command_buffer, raygen_shader_binding_table::StridedDeviceAddressRegionKHR, miss_shader_binding_table::StridedDeviceAddressRegionKHR, hit_shader_binding_table::StridedDeviceAddressRegionKHR, callable_shader_binding_table::StridedDeviceAddressRegionKHR, indirect_device_address::Integer)\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\ncommand_buffer (externsync)\nraygen_shader_binding_table::StridedDeviceAddressRegionKHR\nmiss_shader_binding_table::StridedDeviceAddressRegionKHR\nhit_shader_binding_table::StridedDeviceAddressRegionKHR\ncallable_shader_binding_table::StridedDeviceAddressRegionKHR\nindirect_device_address::Integer\n\nAPI documentation\n\ncmd_trace_rays_indirect_khr(command_buffer, raygen_shader_binding_table::StridedDeviceAddressRegionKHR, miss_shader_binding_table::StridedDeviceAddressRegionKHR, hit_shader_binding_table::StridedDeviceAddressRegionKHR, callable_shader_binding_table::StridedDeviceAddressRegionKHR, indirect_device_address::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_trace_rays_khr-Tuple{Any, StridedDeviceAddressRegionKHR, StridedDeviceAddressRegionKHR, StridedDeviceAddressRegionKHR, StridedDeviceAddressRegionKHR, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_trace_rays_khr","text":"cmd_trace_rays_khr(command_buffer, raygen_shader_binding_table::StridedDeviceAddressRegionKHR, miss_shader_binding_table::StridedDeviceAddressRegionKHR, hit_shader_binding_table::StridedDeviceAddressRegionKHR, callable_shader_binding_table::StridedDeviceAddressRegionKHR, width::Integer, height::Integer, depth::Integer, fptr::FunctionPtr)\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\ncommand_buffer (externsync)\nraygen_shader_binding_table::StridedDeviceAddressRegionKHR\nmiss_shader_binding_table::StridedDeviceAddressRegionKHR\nhit_shader_binding_table::StridedDeviceAddressRegionKHR\ncallable_shader_binding_table::StridedDeviceAddressRegionKHR\nwidth::Integer\nheight::Integer\ndepth::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_trace_rays_khr(command_buffer, raygen_shader_binding_table::StridedDeviceAddressRegionKHR, miss_shader_binding_table::StridedDeviceAddressRegionKHR, hit_shader_binding_table::StridedDeviceAddressRegionKHR, callable_shader_binding_table::StridedDeviceAddressRegionKHR, width::Integer, height::Integer, depth::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_trace_rays_khr-Tuple{Any, StridedDeviceAddressRegionKHR, StridedDeviceAddressRegionKHR, StridedDeviceAddressRegionKHR, StridedDeviceAddressRegionKHR, Integer, Integer, Integer}","page":"API","title":"Vulkan.cmd_trace_rays_khr","text":"cmd_trace_rays_khr(command_buffer, raygen_shader_binding_table::StridedDeviceAddressRegionKHR, miss_shader_binding_table::StridedDeviceAddressRegionKHR, hit_shader_binding_table::StridedDeviceAddressRegionKHR, callable_shader_binding_table::StridedDeviceAddressRegionKHR, width::Integer, height::Integer, depth::Integer)\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\ncommand_buffer (externsync)\nraygen_shader_binding_table::StridedDeviceAddressRegionKHR\nmiss_shader_binding_table::StridedDeviceAddressRegionKHR\nhit_shader_binding_table::StridedDeviceAddressRegionKHR\ncallable_shader_binding_table::StridedDeviceAddressRegionKHR\nwidth::Integer\nheight::Integer\ndepth::Integer\n\nAPI documentation\n\ncmd_trace_rays_khr(command_buffer, raygen_shader_binding_table::StridedDeviceAddressRegionKHR, miss_shader_binding_table::StridedDeviceAddressRegionKHR, hit_shader_binding_table::StridedDeviceAddressRegionKHR, callable_shader_binding_table::StridedDeviceAddressRegionKHR, width::Integer, height::Integer, depth::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_trace_rays_nv-Tuple{Any, Any, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_trace_rays_nv","text":"cmd_trace_rays_nv(command_buffer, raygen_shader_binding_table_buffer, raygen_shader_binding_offset::Integer, miss_shader_binding_offset::Integer, miss_shader_binding_stride::Integer, hit_shader_binding_offset::Integer, hit_shader_binding_stride::Integer, callable_shader_binding_offset::Integer, callable_shader_binding_stride::Integer, width::Integer, height::Integer, depth::Integer, fptr::FunctionPtr; miss_shader_binding_table_buffer = C_NULL, hit_shader_binding_table_buffer = C_NULL, callable_shader_binding_table_buffer = C_NULL)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ncommand_buffer (externsync)\nraygen_shader_binding_table_buffer\nraygen_shader_binding_offset::Integer\nmiss_shader_binding_offset::Integer\nmiss_shader_binding_stride::Integer\nhit_shader_binding_offset::Integer\nhit_shader_binding_stride::Integer\ncallable_shader_binding_offset::Integer\ncallable_shader_binding_stride::Integer\nwidth::Integer\nheight::Integer\ndepth::Integer\nfptr::FunctionPtr\nmiss_shader_binding_table_buffer: defaults to C_NULL\nhit_shader_binding_table_buffer: defaults to C_NULL\ncallable_shader_binding_table_buffer: defaults to C_NULL\n\nAPI documentation\n\ncmd_trace_rays_nv(command_buffer, raygen_shader_binding_table_buffer, raygen_shader_binding_offset::Integer, miss_shader_binding_offset::Integer, miss_shader_binding_stride::Integer, hit_shader_binding_offset::Integer, hit_shader_binding_stride::Integer, callable_shader_binding_offset::Integer, callable_shader_binding_stride::Integer, width::Integer, height::Integer, depth::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}; miss_shader_binding_table_buffer, hit_shader_binding_table_buffer, callable_shader_binding_table_buffer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_trace_rays_nv-Tuple{Any, Any, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer}","page":"API","title":"Vulkan.cmd_trace_rays_nv","text":"cmd_trace_rays_nv(command_buffer, raygen_shader_binding_table_buffer, raygen_shader_binding_offset::Integer, miss_shader_binding_offset::Integer, miss_shader_binding_stride::Integer, hit_shader_binding_offset::Integer, hit_shader_binding_stride::Integer, callable_shader_binding_offset::Integer, callable_shader_binding_stride::Integer, width::Integer, height::Integer, depth::Integer; miss_shader_binding_table_buffer = C_NULL, hit_shader_binding_table_buffer = C_NULL, callable_shader_binding_table_buffer = C_NULL)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ncommand_buffer (externsync)\nraygen_shader_binding_table_buffer\nraygen_shader_binding_offset::Integer\nmiss_shader_binding_offset::Integer\nmiss_shader_binding_stride::Integer\nhit_shader_binding_offset::Integer\nhit_shader_binding_stride::Integer\ncallable_shader_binding_offset::Integer\ncallable_shader_binding_stride::Integer\nwidth::Integer\nheight::Integer\ndepth::Integer\nmiss_shader_binding_table_buffer: defaults to C_NULL\nhit_shader_binding_table_buffer: defaults to C_NULL\ncallable_shader_binding_table_buffer: defaults to C_NULL\n\nAPI documentation\n\ncmd_trace_rays_nv(command_buffer, raygen_shader_binding_table_buffer, raygen_shader_binding_offset::Integer, miss_shader_binding_offset::Integer, miss_shader_binding_stride::Integer, hit_shader_binding_offset::Integer, hit_shader_binding_stride::Integer, callable_shader_binding_offset::Integer, callable_shader_binding_stride::Integer, width::Integer, height::Integer, depth::Integer; miss_shader_binding_table_buffer, hit_shader_binding_table_buffer, callable_shader_binding_table_buffer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_update_buffer-Tuple{Any, Any, Integer, Integer, Ptr{Nothing}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_update_buffer","text":"cmd_update_buffer(command_buffer, dst_buffer, dst_offset::Integer, data_size::Integer, data::Ptr{Cvoid}, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\ndst_buffer\ndst_offset::Integer\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_update_buffer(command_buffer, dst_buffer, dst_offset::Integer, data_size::Integer, data::Ptr{Nothing}, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_update_buffer-Tuple{Any, Any, Integer, Integer, Ptr{Nothing}}","page":"API","title":"Vulkan.cmd_update_buffer","text":"cmd_update_buffer(command_buffer, dst_buffer, dst_offset::Integer, data_size::Integer, data::Ptr{Cvoid})\n\nArguments:\n\ncommand_buffer (externsync)\ndst_buffer\ndst_offset::Integer\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\n\nAPI documentation\n\ncmd_update_buffer(command_buffer, dst_buffer, dst_offset::Integer, data_size::Integer, data::Ptr{Nothing})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_wait_events-Tuple{Any, AbstractArray, AbstractArray, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_wait_events","text":"cmd_wait_events(command_buffer, events::AbstractArray{Event}, memory_barriers::AbstractArray{MemoryBarrier}, buffer_memory_barriers::AbstractArray{BufferMemoryBarrier}, image_memory_barriers::AbstractArray{ImageMemoryBarrier}, fptr::FunctionPtr; src_stage_mask = 0, dst_stage_mask = 0)\n\nArguments:\n\ncommand_buffer (externsync)\nevents::AbstractArray{Event}\nmemory_barriers::AbstractArray{MemoryBarrier}\nbuffer_memory_barriers::AbstractArray{BufferMemoryBarrier}\nimage_memory_barriers::AbstractArray{ImageMemoryBarrier}\nfptr::FunctionPtr\nsrc_stage_mask: defaults to 0\ndst_stage_mask: defaults to 0\n\nAPI documentation\n\ncmd_wait_events(command_buffer, events::AbstractArray, memory_barriers::AbstractArray, buffer_memory_barriers::AbstractArray, image_memory_barriers::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}; src_stage_mask, dst_stage_mask)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_wait_events-Tuple{Any, AbstractArray, AbstractArray, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.cmd_wait_events","text":"cmd_wait_events(command_buffer, events::AbstractArray{Event}, memory_barriers::AbstractArray{MemoryBarrier}, buffer_memory_barriers::AbstractArray{BufferMemoryBarrier}, image_memory_barriers::AbstractArray{ImageMemoryBarrier}; src_stage_mask = 0, dst_stage_mask = 0)\n\nArguments:\n\ncommand_buffer (externsync)\nevents::AbstractArray{Event}\nmemory_barriers::AbstractArray{MemoryBarrier}\nbuffer_memory_barriers::AbstractArray{BufferMemoryBarrier}\nimage_memory_barriers::AbstractArray{ImageMemoryBarrier}\nsrc_stage_mask: defaults to 0\ndst_stage_mask: defaults to 0\n\nAPI documentation\n\ncmd_wait_events(command_buffer, events::AbstractArray, memory_barriers::AbstractArray, buffer_memory_barriers::AbstractArray, image_memory_barriers::AbstractArray; src_stage_mask, dst_stage_mask)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_wait_events_2_khr-Tuple{Any, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_wait_events_2_khr","text":"cmd_wait_events_2_khr(command_buffer, events::AbstractArray{Event}, dependency_infos::AbstractArray{DependencyInfoKHR}, fptr::FunctionPtr)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncommand_buffer (externsync)\nevents::AbstractArray{Event}\ndependency_infos::AbstractArray{DependencyInfoKHR}\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_wait_events_2_khr(command_buffer, events::AbstractArray, dependency_infos::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_wait_events_2_khr-Tuple{Any, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.cmd_wait_events_2_khr","text":"cmd_wait_events_2_khr(command_buffer, events::AbstractArray{Event}, dependency_infos::AbstractArray{DependencyInfoKHR})\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncommand_buffer (externsync)\nevents::AbstractArray{Event}\ndependency_infos::AbstractArray{DependencyInfoKHR}\n\nAPI documentation\n\ncmd_wait_events_2_khr(command_buffer, events::AbstractArray, dependency_infos::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_write_acceleration_structures_properties_khr-Tuple{Any, AbstractArray, QueryType, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_write_acceleration_structures_properties_khr","text":"cmd_write_acceleration_structures_properties_khr(command_buffer, acceleration_structures::AbstractArray{AccelerationStructureKHR}, query_type::QueryType, query_pool, first_query::Integer, fptr::FunctionPtr)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ncommand_buffer (externsync)\nacceleration_structures::AbstractArray{AccelerationStructureKHR}\nquery_type::QueryType\nquery_pool\nfirst_query::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_write_acceleration_structures_properties_khr(command_buffer, acceleration_structures::AbstractArray, query_type::QueryType, query_pool, first_query::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_write_acceleration_structures_properties_khr-Tuple{Any, AbstractArray, QueryType, Any, Integer}","page":"API","title":"Vulkan.cmd_write_acceleration_structures_properties_khr","text":"cmd_write_acceleration_structures_properties_khr(command_buffer, acceleration_structures::AbstractArray{AccelerationStructureKHR}, query_type::QueryType, query_pool, first_query::Integer)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ncommand_buffer (externsync)\nacceleration_structures::AbstractArray{AccelerationStructureKHR}\nquery_type::QueryType\nquery_pool\nfirst_query::Integer\n\nAPI documentation\n\ncmd_write_acceleration_structures_properties_khr(command_buffer, acceleration_structures::AbstractArray, query_type::QueryType, query_pool, first_query::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_write_acceleration_structures_properties_nv-Tuple{Any, AbstractArray, QueryType, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_write_acceleration_structures_properties_nv","text":"cmd_write_acceleration_structures_properties_nv(command_buffer, acceleration_structures::AbstractArray{AccelerationStructureNV}, query_type::QueryType, query_pool, first_query::Integer, fptr::FunctionPtr)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ncommand_buffer (externsync)\nacceleration_structures::AbstractArray{AccelerationStructureNV}\nquery_type::QueryType\nquery_pool\nfirst_query::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_write_acceleration_structures_properties_nv(command_buffer, acceleration_structures::AbstractArray, query_type::QueryType, query_pool, first_query::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_write_acceleration_structures_properties_nv-Tuple{Any, AbstractArray, QueryType, Any, Integer}","page":"API","title":"Vulkan.cmd_write_acceleration_structures_properties_nv","text":"cmd_write_acceleration_structures_properties_nv(command_buffer, acceleration_structures::AbstractArray{AccelerationStructureNV}, query_type::QueryType, query_pool, first_query::Integer)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ncommand_buffer (externsync)\nacceleration_structures::AbstractArray{AccelerationStructureNV}\nquery_type::QueryType\nquery_pool\nfirst_query::Integer\n\nAPI documentation\n\ncmd_write_acceleration_structures_properties_nv(command_buffer, acceleration_structures::AbstractArray, query_type::QueryType, query_pool, first_query::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_write_buffer_marker_2_amd-Tuple{Any, Integer, Any, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_write_buffer_marker_2_amd","text":"cmd_write_buffer_marker_2_amd(command_buffer, stage::Integer, dst_buffer, dst_offset::Integer, marker::Integer, fptr::FunctionPtr)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncommand_buffer (externsync)\nstage::Integer\ndst_buffer\ndst_offset::Integer\nmarker::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_write_buffer_marker_2_amd(command_buffer, stage::Integer, dst_buffer, dst_offset::Integer, marker::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_write_buffer_marker_2_amd-Tuple{Any, Integer, Any, Integer, Integer}","page":"API","title":"Vulkan.cmd_write_buffer_marker_2_amd","text":"cmd_write_buffer_marker_2_amd(command_buffer, stage::Integer, dst_buffer, dst_offset::Integer, marker::Integer)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncommand_buffer (externsync)\nstage::Integer\ndst_buffer\ndst_offset::Integer\nmarker::Integer\n\nAPI documentation\n\ncmd_write_buffer_marker_2_amd(command_buffer, stage::Integer, dst_buffer, dst_offset::Integer, marker::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_write_buffer_marker_amd-Tuple{Any, PipelineStageFlag, Any, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_write_buffer_marker_amd","text":"cmd_write_buffer_marker_amd(command_buffer, pipeline_stage::PipelineStageFlag, dst_buffer, dst_offset::Integer, marker::Integer, fptr::FunctionPtr)\n\nExtension: VK_AMD_buffer_marker\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_stage::PipelineStageFlag\ndst_buffer\ndst_offset::Integer\nmarker::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_write_buffer_marker_amd(command_buffer, pipeline_stage::PipelineStageFlag, dst_buffer, dst_offset::Integer, marker::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_write_buffer_marker_amd-Tuple{Any, PipelineStageFlag, Any, Integer, Integer}","page":"API","title":"Vulkan.cmd_write_buffer_marker_amd","text":"cmd_write_buffer_marker_amd(command_buffer, pipeline_stage::PipelineStageFlag, dst_buffer, dst_offset::Integer, marker::Integer)\n\nExtension: VK_AMD_buffer_marker\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_stage::PipelineStageFlag\ndst_buffer\ndst_offset::Integer\nmarker::Integer\n\nAPI documentation\n\ncmd_write_buffer_marker_amd(command_buffer, pipeline_stage::PipelineStageFlag, dst_buffer, dst_offset::Integer, marker::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_write_timestamp-Tuple{Any, PipelineStageFlag, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_write_timestamp","text":"cmd_write_timestamp(command_buffer, pipeline_stage::PipelineStageFlag, query_pool, query::Integer, fptr::FunctionPtr)\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_stage::PipelineStageFlag\nquery_pool\nquery::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_write_timestamp(command_buffer, pipeline_stage::PipelineStageFlag, query_pool, query::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_write_timestamp-Tuple{Any, PipelineStageFlag, Any, Integer}","page":"API","title":"Vulkan.cmd_write_timestamp","text":"cmd_write_timestamp(command_buffer, pipeline_stage::PipelineStageFlag, query_pool, query::Integer)\n\nArguments:\n\ncommand_buffer (externsync)\npipeline_stage::PipelineStageFlag\nquery_pool\nquery::Integer\n\nAPI documentation\n\ncmd_write_timestamp(command_buffer, pipeline_stage::PipelineStageFlag, query_pool, query::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_write_timestamp_2_khr-Tuple{Any, Integer, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.cmd_write_timestamp_2_khr","text":"cmd_write_timestamp_2_khr(command_buffer, stage::Integer, query_pool, query::Integer, fptr::FunctionPtr)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncommand_buffer (externsync)\nstage::Integer\nquery_pool\nquery::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncmd_write_timestamp_2_khr(command_buffer, stage::Integer, query_pool, query::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.cmd_write_timestamp_2_khr-Tuple{Any, Integer, Any, Integer}","page":"API","title":"Vulkan.cmd_write_timestamp_2_khr","text":"cmd_write_timestamp_2_khr(command_buffer, stage::Integer, query_pool, query::Integer)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\ncommand_buffer (externsync)\nstage::Integer\nquery_pool\nquery::Integer\n\nAPI documentation\n\ncmd_write_timestamp_2_khr(command_buffer, stage::Integer, query_pool, query::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.compile_deferred_nv-Tuple{Any, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.compile_deferred_nv","text":"compile_deferred_nv(device, pipeline, shader::Integer, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_NV_ray_tracing\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\npipeline\nshader::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\ncompile_deferred_nv(device, pipeline, shader::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.compile_deferred_nv-Tuple{Any, Any, Integer}","page":"API","title":"Vulkan.compile_deferred_nv","text":"compile_deferred_nv(device, pipeline, shader::Integer)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_NV_ray_tracing\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\npipeline\nshader::Integer\n\nAPI documentation\n\ncompile_deferred_nv(device, pipeline, shader::Integer) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.copy_acceleration_structure_khr-Tuple{Any, CopyAccelerationStructureInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.copy_acceleration_structure_khr","text":"copy_acceleration_structure_khr(device, info::CopyAccelerationStructureInfoKHR, fptr::FunctionPtr; deferred_operation = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_acceleration_structure\n\nReturn codes:\n\nSuccess:\nSUCCESS\nOPERATION_DEFERRED_KHR\nOPERATION_NOT_DEFERRED_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ninfo::CopyAccelerationStructureInfoKHR\nfptr::FunctionPtr\ndeferred_operation: defaults to C_NULL\n\nAPI documentation\n\ncopy_acceleration_structure_khr(device, info::CopyAccelerationStructureInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}; deferred_operation) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.copy_acceleration_structure_khr-Tuple{Any, CopyAccelerationStructureInfoKHR}","page":"API","title":"Vulkan.copy_acceleration_structure_khr","text":"copy_acceleration_structure_khr(device, info::CopyAccelerationStructureInfoKHR; deferred_operation = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_acceleration_structure\n\nReturn codes:\n\nSuccess:\nSUCCESS\nOPERATION_DEFERRED_KHR\nOPERATION_NOT_DEFERRED_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ninfo::CopyAccelerationStructureInfoKHR\ndeferred_operation: defaults to C_NULL\n\nAPI documentation\n\ncopy_acceleration_structure_khr(device, info::CopyAccelerationStructureInfoKHR; deferred_operation) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.copy_acceleration_structure_to_memory_khr-Tuple{Any, CopyAccelerationStructureToMemoryInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.copy_acceleration_structure_to_memory_khr","text":"copy_acceleration_structure_to_memory_khr(device, info::CopyAccelerationStructureToMemoryInfoKHR, fptr::FunctionPtr; deferred_operation = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_acceleration_structure\n\nReturn codes:\n\nSuccess:\nSUCCESS\nOPERATION_DEFERRED_KHR\nOPERATION_NOT_DEFERRED_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ninfo::CopyAccelerationStructureToMemoryInfoKHR\nfptr::FunctionPtr\ndeferred_operation: defaults to C_NULL\n\nAPI documentation\n\ncopy_acceleration_structure_to_memory_khr(device, info::CopyAccelerationStructureToMemoryInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}; deferred_operation)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.copy_acceleration_structure_to_memory_khr-Tuple{Any, CopyAccelerationStructureToMemoryInfoKHR}","page":"API","title":"Vulkan.copy_acceleration_structure_to_memory_khr","text":"copy_acceleration_structure_to_memory_khr(device, info::CopyAccelerationStructureToMemoryInfoKHR; deferred_operation = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_acceleration_structure\n\nReturn codes:\n\nSuccess:\nSUCCESS\nOPERATION_DEFERRED_KHR\nOPERATION_NOT_DEFERRED_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ninfo::CopyAccelerationStructureToMemoryInfoKHR\ndeferred_operation: defaults to C_NULL\n\nAPI documentation\n\ncopy_acceleration_structure_to_memory_khr(device, info::CopyAccelerationStructureToMemoryInfoKHR; deferred_operation)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.copy_memory_to_acceleration_structure_khr-Tuple{Any, CopyMemoryToAccelerationStructureInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.copy_memory_to_acceleration_structure_khr","text":"copy_memory_to_acceleration_structure_khr(device, info::CopyMemoryToAccelerationStructureInfoKHR, fptr::FunctionPtr; deferred_operation = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_acceleration_structure\n\nReturn codes:\n\nSuccess:\nSUCCESS\nOPERATION_DEFERRED_KHR\nOPERATION_NOT_DEFERRED_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ninfo::CopyMemoryToAccelerationStructureInfoKHR\nfptr::FunctionPtr\ndeferred_operation: defaults to C_NULL\n\nAPI documentation\n\ncopy_memory_to_acceleration_structure_khr(device, info::CopyMemoryToAccelerationStructureInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}; deferred_operation)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.copy_memory_to_acceleration_structure_khr-Tuple{Any, CopyMemoryToAccelerationStructureInfoKHR}","page":"API","title":"Vulkan.copy_memory_to_acceleration_structure_khr","text":"copy_memory_to_acceleration_structure_khr(device, info::CopyMemoryToAccelerationStructureInfoKHR; deferred_operation = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_acceleration_structure\n\nReturn codes:\n\nSuccess:\nSUCCESS\nOPERATION_DEFERRED_KHR\nOPERATION_NOT_DEFERRED_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ninfo::CopyMemoryToAccelerationStructureInfoKHR\ndeferred_operation: defaults to C_NULL\n\nAPI documentation\n\ncopy_memory_to_acceleration_structure_khr(device, info::CopyMemoryToAccelerationStructureInfoKHR; deferred_operation)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_acceleration_structure_khr-Tuple{Any, AccelerationStructureCreateInfoKHR, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_acceleration_structure_khr","text":"create_acceleration_structure_khr(device, create_info::AccelerationStructureCreateInfoKHR, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{AccelerationStructureKHR, VulkanError}\n\nExtension: VK_KHR_acceleration_structure\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR\n\nArguments:\n\ndevice\ncreate_info::AccelerationStructureCreateInfoKHR\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_acceleration_structure_khr(device, create_info::AccelerationStructureCreateInfoKHR, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{AccelerationStructureKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_acceleration_structure_khr-Tuple{Any, AccelerationStructureCreateInfoKHR}","page":"API","title":"Vulkan.create_acceleration_structure_khr","text":"create_acceleration_structure_khr(device, create_info::AccelerationStructureCreateInfoKHR; allocator = C_NULL)::ResultTypes.Result{AccelerationStructureKHR, VulkanError}\n\nExtension: VK_KHR_acceleration_structure\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR\n\nArguments:\n\ndevice\ncreate_info::AccelerationStructureCreateInfoKHR\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_acceleration_structure_khr(device, create_info::AccelerationStructureCreateInfoKHR; allocator) -> ResultTypes.Result{AccelerationStructureKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_acceleration_structure_nv-Tuple{Any, AccelerationStructureCreateInfoNV, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_acceleration_structure_nv","text":"create_acceleration_structure_nv(device, create_info::AccelerationStructureCreateInfoNV, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{AccelerationStructureNV, VulkanError}\n\nExtension: VK_NV_ray_tracing\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ncreate_info::AccelerationStructureCreateInfoNV\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_acceleration_structure_nv(device, create_info::AccelerationStructureCreateInfoNV, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{AccelerationStructureNV, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_acceleration_structure_nv-Tuple{Any, AccelerationStructureCreateInfoNV}","page":"API","title":"Vulkan.create_acceleration_structure_nv","text":"create_acceleration_structure_nv(device, create_info::AccelerationStructureCreateInfoNV; allocator = C_NULL)::ResultTypes.Result{AccelerationStructureNV, VulkanError}\n\nExtension: VK_NV_ray_tracing\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ncreate_info::AccelerationStructureCreateInfoNV\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_acceleration_structure_nv(device, create_info::AccelerationStructureCreateInfoNV; allocator) -> ResultTypes.Result{AccelerationStructureNV, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_buffer-Tuple{Any, BufferCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_buffer","text":"create_buffer(device, create_info::BufferCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{Buffer, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR\n\nArguments:\n\ndevice\ncreate_info::BufferCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_buffer(device, create_info::BufferCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{Buffer, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_buffer-Tuple{Any, BufferCreateInfo}","page":"API","title":"Vulkan.create_buffer","text":"create_buffer(device, create_info::BufferCreateInfo; allocator = C_NULL)::ResultTypes.Result{Buffer, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR\n\nArguments:\n\ndevice\ncreate_info::BufferCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_buffer(device, create_info::BufferCreateInfo; allocator) -> ResultTypes.Result{Buffer, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_buffer_view-Tuple{Any, BufferViewCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_buffer_view","text":"create_buffer_view(device, create_info::BufferViewCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{BufferView, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::BufferViewCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_buffer_view(device, create_info::BufferViewCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{BufferView, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_buffer_view-Tuple{Any, BufferViewCreateInfo}","page":"API","title":"Vulkan.create_buffer_view","text":"create_buffer_view(device, create_info::BufferViewCreateInfo; allocator = C_NULL)::ResultTypes.Result{BufferView, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::BufferViewCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_buffer_view(device, create_info::BufferViewCreateInfo; allocator) -> ResultTypes.Result{BufferView, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_command_pool-Tuple{Any, CommandPoolCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_command_pool","text":"create_command_pool(device, create_info::CommandPoolCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{CommandPool, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::CommandPoolCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_command_pool(device, create_info::CommandPoolCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{CommandPool, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_command_pool-Tuple{Any, CommandPoolCreateInfo}","page":"API","title":"Vulkan.create_command_pool","text":"create_command_pool(device, create_info::CommandPoolCreateInfo; allocator = C_NULL)::ResultTypes.Result{CommandPool, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::CommandPoolCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_command_pool(device, create_info::CommandPoolCreateInfo; allocator) -> ResultTypes.Result{CommandPool, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_compute_pipelines-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_compute_pipelines","text":"create_compute_pipelines(device, create_infos::AbstractArray{ComputePipelineCreateInfo}, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; pipeline_cache = C_NULL, allocator = C_NULL)::ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nPIPELINE_COMPILE_REQUIRED_EXT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_SHADER_NV\n\nArguments:\n\ndevice\ncreate_infos::AbstractArray{ComputePipelineCreateInfo}\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\npipeline_cache: defaults to C_NULL\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_compute_pipelines(device, create_infos::AbstractArray, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; pipeline_cache, allocator) -> ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_compute_pipelines-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan.create_compute_pipelines","text":"create_compute_pipelines(device, create_infos::AbstractArray{ComputePipelineCreateInfo}; pipeline_cache = C_NULL, allocator = C_NULL)::ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nPIPELINE_COMPILE_REQUIRED_EXT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_SHADER_NV\n\nArguments:\n\ndevice\ncreate_infos::AbstractArray{ComputePipelineCreateInfo}\npipeline_cache: defaults to C_NULL\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_compute_pipelines(device, create_infos::AbstractArray; pipeline_cache, allocator) -> ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_debug_report_callback_ext-Tuple{Any, DebugReportCallbackCreateInfoEXT, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_debug_report_callback_ext","text":"create_debug_report_callback_ext(instance, create_info::DebugReportCallbackCreateInfoEXT, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{DebugReportCallbackEXT, VulkanError}\n\nExtension: VK_EXT_debug_report\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ninstance\ncreate_info::DebugReportCallbackCreateInfoEXT\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_debug_report_callback_ext(instance, create_info::DebugReportCallbackCreateInfoEXT, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{DebugReportCallbackEXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_debug_report_callback_ext-Tuple{Any, DebugReportCallbackCreateInfoEXT}","page":"API","title":"Vulkan.create_debug_report_callback_ext","text":"create_debug_report_callback_ext(instance, create_info::DebugReportCallbackCreateInfoEXT; allocator = C_NULL)::ResultTypes.Result{DebugReportCallbackEXT, VulkanError}\n\nExtension: VK_EXT_debug_report\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ninstance\ncreate_info::DebugReportCallbackCreateInfoEXT\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_debug_report_callback_ext(instance, create_info::DebugReportCallbackCreateInfoEXT; allocator) -> ResultTypes.Result{DebugReportCallbackEXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_debug_utils_messenger_ext-Tuple{Any, DebugUtilsMessengerCreateInfoEXT, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_debug_utils_messenger_ext","text":"create_debug_utils_messenger_ext(instance, create_info::DebugUtilsMessengerCreateInfoEXT, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{DebugUtilsMessengerEXT, VulkanError}\n\nExtension: VK_EXT_debug_utils\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ninstance\ncreate_info::DebugUtilsMessengerCreateInfoEXT\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_debug_utils_messenger_ext(instance, create_info::DebugUtilsMessengerCreateInfoEXT, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{DebugUtilsMessengerEXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_debug_utils_messenger_ext-Tuple{Any, DebugUtilsMessengerCreateInfoEXT}","page":"API","title":"Vulkan.create_debug_utils_messenger_ext","text":"create_debug_utils_messenger_ext(instance, create_info::DebugUtilsMessengerCreateInfoEXT; allocator = C_NULL)::ResultTypes.Result{DebugUtilsMessengerEXT, VulkanError}\n\nExtension: VK_EXT_debug_utils\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ninstance\ncreate_info::DebugUtilsMessengerCreateInfoEXT\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_debug_utils_messenger_ext(instance, create_info::DebugUtilsMessengerCreateInfoEXT; allocator) -> ResultTypes.Result{DebugUtilsMessengerEXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_deferred_operation_khr-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_deferred_operation_khr","text":"create_deferred_operation_khr(device, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{DeferredOperationKHR, VulkanError}\n\nExtension: VK_KHR_deferred_host_operations\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_deferred_operation_khr(device, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{DeferredOperationKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_deferred_operation_khr-Tuple{Any}","page":"API","title":"Vulkan.create_deferred_operation_khr","text":"create_deferred_operation_khr(device; allocator = C_NULL)::ResultTypes.Result{DeferredOperationKHR, VulkanError}\n\nExtension: VK_KHR_deferred_host_operations\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_deferred_operation_khr(device; allocator) -> ResultTypes.Result{DeferredOperationKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_descriptor_pool-Tuple{Any, DescriptorPoolCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_descriptor_pool","text":"create_descriptor_pool(device, create_info::DescriptorPoolCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{DescriptorPool, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_FRAGMENTATION_EXT\n\nArguments:\n\ndevice\ncreate_info::DescriptorPoolCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_descriptor_pool(device, create_info::DescriptorPoolCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{DescriptorPool, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_descriptor_pool-Tuple{Any, DescriptorPoolCreateInfo}","page":"API","title":"Vulkan.create_descriptor_pool","text":"create_descriptor_pool(device, create_info::DescriptorPoolCreateInfo; allocator = C_NULL)::ResultTypes.Result{DescriptorPool, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_FRAGMENTATION_EXT\n\nArguments:\n\ndevice\ncreate_info::DescriptorPoolCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_descriptor_pool(device, create_info::DescriptorPoolCreateInfo; allocator) -> ResultTypes.Result{DescriptorPool, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_descriptor_set_layout-Tuple{Any, DescriptorSetLayoutCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_descriptor_set_layout","text":"create_descriptor_set_layout(device, create_info::DescriptorSetLayoutCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{DescriptorSetLayout, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::DescriptorSetLayoutCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_descriptor_set_layout(device, create_info::DescriptorSetLayoutCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{DescriptorSetLayout, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_descriptor_set_layout-Tuple{Any, DescriptorSetLayoutCreateInfo}","page":"API","title":"Vulkan.create_descriptor_set_layout","text":"create_descriptor_set_layout(device, create_info::DescriptorSetLayoutCreateInfo; allocator = C_NULL)::ResultTypes.Result{DescriptorSetLayout, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::DescriptorSetLayoutCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_descriptor_set_layout(device, create_info::DescriptorSetLayoutCreateInfo; allocator) -> ResultTypes.Result{DescriptorSetLayout, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_descriptor_update_template-Tuple{Any, DescriptorUpdateTemplateCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_descriptor_update_template","text":"create_descriptor_update_template(device, create_info::DescriptorUpdateTemplateCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{DescriptorUpdateTemplate, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::DescriptorUpdateTemplateCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_descriptor_update_template(device, create_info::DescriptorUpdateTemplateCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{DescriptorUpdateTemplate, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_descriptor_update_template-Tuple{Any, DescriptorUpdateTemplateCreateInfo}","page":"API","title":"Vulkan.create_descriptor_update_template","text":"create_descriptor_update_template(device, create_info::DescriptorUpdateTemplateCreateInfo; allocator = C_NULL)::ResultTypes.Result{DescriptorUpdateTemplate, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::DescriptorUpdateTemplateCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_descriptor_update_template(device, create_info::DescriptorUpdateTemplateCreateInfo; allocator) -> ResultTypes.Result{DescriptorUpdateTemplate, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_device-Tuple{Any, DeviceCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_device","text":"create_device(physical_device, create_info::DeviceCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{Device, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\nERROR_EXTENSION_NOT_PRESENT\nERROR_FEATURE_NOT_PRESENT\nERROR_TOO_MANY_OBJECTS\nERROR_DEVICE_LOST\n\nArguments:\n\nphysical_device\ncreate_info::DeviceCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_device(physical_device, create_info::DeviceCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{Device, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_device-Tuple{Any, DeviceCreateInfo}","page":"API","title":"Vulkan.create_device","text":"create_device(physical_device, create_info::DeviceCreateInfo; allocator = C_NULL)::ResultTypes.Result{Device, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\nERROR_EXTENSION_NOT_PRESENT\nERROR_FEATURE_NOT_PRESENT\nERROR_TOO_MANY_OBJECTS\nERROR_DEVICE_LOST\n\nArguments:\n\nphysical_device\ncreate_info::DeviceCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_device(physical_device, create_info::DeviceCreateInfo; allocator) -> ResultTypes.Result{Device, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_display_mode_khr-Tuple{Any, Any, DisplayModeCreateInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_display_mode_khr","text":"create_display_mode_khr(physical_device, display, create_info::DisplayModeCreateInfoKHR, fptr_create::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{DisplayModeKHR, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\nphysical_device\ndisplay (externsync)\ncreate_info::DisplayModeCreateInfoKHR\nfptr_create::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_display_mode_khr(physical_device, display, create_info::DisplayModeCreateInfoKHR, fptr_create::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{DisplayModeKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_display_mode_khr-Tuple{Any, Any, DisplayModeCreateInfoKHR}","page":"API","title":"Vulkan.create_display_mode_khr","text":"create_display_mode_khr(physical_device, display, create_info::DisplayModeCreateInfoKHR; allocator = C_NULL)::ResultTypes.Result{DisplayModeKHR, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\nphysical_device\ndisplay (externsync)\ncreate_info::DisplayModeCreateInfoKHR\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_display_mode_khr(physical_device, display, create_info::DisplayModeCreateInfoKHR; allocator) -> ResultTypes.Result{DisplayModeKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_display_plane_surface_khr-Tuple{Any, DisplaySurfaceCreateInfoKHR, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_display_plane_surface_khr","text":"create_display_plane_surface_khr(instance, create_info::DisplaySurfaceCreateInfoKHR, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance\ncreate_info::DisplaySurfaceCreateInfoKHR\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_display_plane_surface_khr(instance, create_info::DisplaySurfaceCreateInfoKHR, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{SurfaceKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_display_plane_surface_khr-Tuple{Any, DisplaySurfaceCreateInfoKHR}","page":"API","title":"Vulkan.create_display_plane_surface_khr","text":"create_display_plane_surface_khr(instance, create_info::DisplaySurfaceCreateInfoKHR; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance\ncreate_info::DisplaySurfaceCreateInfoKHR\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_display_plane_surface_khr(instance, create_info::DisplaySurfaceCreateInfoKHR; allocator) -> ResultTypes.Result{SurfaceKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_event-Tuple{Any, EventCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_event","text":"create_event(device, create_info::EventCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{Event, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::EventCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_event(device, create_info::EventCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{Event, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_event-Tuple{Any, EventCreateInfo}","page":"API","title":"Vulkan.create_event","text":"create_event(device, create_info::EventCreateInfo; allocator = C_NULL)::ResultTypes.Result{Event, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::EventCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_event(device, create_info::EventCreateInfo; allocator) -> ResultTypes.Result{Event, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_fence-Tuple{Any, FenceCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_fence","text":"create_fence(device, create_info::FenceCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{Fence, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::FenceCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_fence(device, create_info::FenceCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{Fence, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_fence-Tuple{Any, FenceCreateInfo}","page":"API","title":"Vulkan.create_fence","text":"create_fence(device, create_info::FenceCreateInfo; allocator = C_NULL)::ResultTypes.Result{Fence, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::FenceCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_fence(device, create_info::FenceCreateInfo; allocator) -> ResultTypes.Result{Fence, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_framebuffer-Tuple{Any, FramebufferCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_framebuffer","text":"create_framebuffer(device, create_info::FramebufferCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{Framebuffer, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::FramebufferCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_framebuffer(device, create_info::FramebufferCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{Framebuffer, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_framebuffer-Tuple{Any, FramebufferCreateInfo}","page":"API","title":"Vulkan.create_framebuffer","text":"create_framebuffer(device, create_info::FramebufferCreateInfo; allocator = C_NULL)::ResultTypes.Result{Framebuffer, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::FramebufferCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_framebuffer(device, create_info::FramebufferCreateInfo; allocator) -> ResultTypes.Result{Framebuffer, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_graphics_pipelines-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_graphics_pipelines","text":"create_graphics_pipelines(device, create_infos::AbstractArray{GraphicsPipelineCreateInfo}, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; pipeline_cache = C_NULL, allocator = C_NULL)::ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nPIPELINE_COMPILE_REQUIRED_EXT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_SHADER_NV\n\nArguments:\n\ndevice\ncreate_infos::AbstractArray{GraphicsPipelineCreateInfo}\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\npipeline_cache: defaults to C_NULL\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_graphics_pipelines(device, create_infos::AbstractArray, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; pipeline_cache, allocator) -> ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_graphics_pipelines-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan.create_graphics_pipelines","text":"create_graphics_pipelines(device, create_infos::AbstractArray{GraphicsPipelineCreateInfo}; pipeline_cache = C_NULL, allocator = C_NULL)::ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nPIPELINE_COMPILE_REQUIRED_EXT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_SHADER_NV\n\nArguments:\n\ndevice\ncreate_infos::AbstractArray{GraphicsPipelineCreateInfo}\npipeline_cache: defaults to C_NULL\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_graphics_pipelines(device, create_infos::AbstractArray; pipeline_cache, allocator) -> ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_headless_surface_ext-Tuple{Any, HeadlessSurfaceCreateInfoEXT, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_headless_surface_ext","text":"create_headless_surface_ext(instance, create_info::HeadlessSurfaceCreateInfoEXT, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nExtension: VK_EXT_headless_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance\ncreate_info::HeadlessSurfaceCreateInfoEXT\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_headless_surface_ext(instance, create_info::HeadlessSurfaceCreateInfoEXT, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{SurfaceKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_headless_surface_ext-Tuple{Any, HeadlessSurfaceCreateInfoEXT}","page":"API","title":"Vulkan.create_headless_surface_ext","text":"create_headless_surface_ext(instance, create_info::HeadlessSurfaceCreateInfoEXT; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nExtension: VK_EXT_headless_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance\ncreate_info::HeadlessSurfaceCreateInfoEXT\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_headless_surface_ext(instance, create_info::HeadlessSurfaceCreateInfoEXT; allocator) -> ResultTypes.Result{SurfaceKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_image-Tuple{Any, ImageCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_image","text":"create_image(device, create_info::ImageCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{Image, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::ImageCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_image(device, create_info::ImageCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{Image, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_image-Tuple{Any, ImageCreateInfo}","page":"API","title":"Vulkan.create_image","text":"create_image(device, create_info::ImageCreateInfo; allocator = C_NULL)::ResultTypes.Result{Image, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::ImageCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_image(device, create_info::ImageCreateInfo; allocator) -> ResultTypes.Result{Image, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_image_view-Tuple{Any, ImageViewCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_image_view","text":"create_image_view(device, create_info::ImageViewCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{ImageView, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::ImageViewCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_image_view(device, create_info::ImageViewCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{ImageView, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_image_view-Tuple{Any, ImageViewCreateInfo}","page":"API","title":"Vulkan.create_image_view","text":"create_image_view(device, create_info::ImageViewCreateInfo; allocator = C_NULL)::ResultTypes.Result{ImageView, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::ImageViewCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_image_view(device, create_info::ImageViewCreateInfo; allocator) -> ResultTypes.Result{ImageView, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_indirect_commands_layout_nv-Tuple{Any, IndirectCommandsLayoutCreateInfoNV, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_indirect_commands_layout_nv","text":"create_indirect_commands_layout_nv(device, create_info::IndirectCommandsLayoutCreateInfoNV, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{IndirectCommandsLayoutNV, VulkanError}\n\nExtension: VK_NV_device_generated_commands\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::IndirectCommandsLayoutCreateInfoNV\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_indirect_commands_layout_nv(device, create_info::IndirectCommandsLayoutCreateInfoNV, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{IndirectCommandsLayoutNV, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_indirect_commands_layout_nv-Tuple{Any, IndirectCommandsLayoutCreateInfoNV}","page":"API","title":"Vulkan.create_indirect_commands_layout_nv","text":"create_indirect_commands_layout_nv(device, create_info::IndirectCommandsLayoutCreateInfoNV; allocator = C_NULL)::ResultTypes.Result{IndirectCommandsLayoutNV, VulkanError}\n\nExtension: VK_NV_device_generated_commands\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::IndirectCommandsLayoutCreateInfoNV\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_indirect_commands_layout_nv(device, create_info::IndirectCommandsLayoutCreateInfoNV; allocator) -> ResultTypes.Result{IndirectCommandsLayoutNV, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_instance-Tuple{InstanceCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_instance","text":"create_instance(create_info::InstanceCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{Instance, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\nERROR_LAYER_NOT_PRESENT\nERROR_EXTENSION_NOT_PRESENT\nERROR_INCOMPATIBLE_DRIVER\n\nArguments:\n\ncreate_info::InstanceCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_instance(create_info::InstanceCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{Instance, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_instance-Tuple{InstanceCreateInfo}","page":"API","title":"Vulkan.create_instance","text":"create_instance(create_info::InstanceCreateInfo; allocator = C_NULL)::ResultTypes.Result{Instance, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\nERROR_LAYER_NOT_PRESENT\nERROR_EXTENSION_NOT_PRESENT\nERROR_INCOMPATIBLE_DRIVER\n\nArguments:\n\ncreate_info::InstanceCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_instance(create_info::InstanceCreateInfo; allocator) -> ResultTypes.Result{Instance, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_pipeline_cache-Tuple{Any, PipelineCacheCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_pipeline_cache","text":"create_pipeline_cache(device, create_info::PipelineCacheCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{PipelineCache, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::PipelineCacheCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_pipeline_cache(device, create_info::PipelineCacheCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{PipelineCache, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_pipeline_cache-Tuple{Any, PipelineCacheCreateInfo}","page":"API","title":"Vulkan.create_pipeline_cache","text":"create_pipeline_cache(device, create_info::PipelineCacheCreateInfo; allocator = C_NULL)::ResultTypes.Result{PipelineCache, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::PipelineCacheCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_pipeline_cache(device, create_info::PipelineCacheCreateInfo; allocator) -> ResultTypes.Result{PipelineCache, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_pipeline_layout-Tuple{Any, PipelineLayoutCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_pipeline_layout","text":"create_pipeline_layout(device, create_info::PipelineLayoutCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{PipelineLayout, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::PipelineLayoutCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_pipeline_layout(device, create_info::PipelineLayoutCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{PipelineLayout, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_pipeline_layout-Tuple{Any, PipelineLayoutCreateInfo}","page":"API","title":"Vulkan.create_pipeline_layout","text":"create_pipeline_layout(device, create_info::PipelineLayoutCreateInfo; allocator = C_NULL)::ResultTypes.Result{PipelineLayout, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::PipelineLayoutCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_pipeline_layout(device, create_info::PipelineLayoutCreateInfo; allocator) -> ResultTypes.Result{PipelineLayout, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_private_data_slot_ext-Tuple{Any, PrivateDataSlotCreateInfoEXT, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_private_data_slot_ext","text":"create_private_data_slot_ext(device, create_info::PrivateDataSlotCreateInfoEXT, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{PrivateDataSlotEXT, VulkanError}\n\nExtension: VK_EXT_private_data\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ncreate_info::PrivateDataSlotCreateInfoEXT\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_private_data_slot_ext(device, create_info::PrivateDataSlotCreateInfoEXT, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{PrivateDataSlotEXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_private_data_slot_ext-Tuple{Any, PrivateDataSlotCreateInfoEXT}","page":"API","title":"Vulkan.create_private_data_slot_ext","text":"create_private_data_slot_ext(device, create_info::PrivateDataSlotCreateInfoEXT; allocator = C_NULL)::ResultTypes.Result{PrivateDataSlotEXT, VulkanError}\n\nExtension: VK_EXT_private_data\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ncreate_info::PrivateDataSlotCreateInfoEXT\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_private_data_slot_ext(device, create_info::PrivateDataSlotCreateInfoEXT; allocator) -> ResultTypes.Result{PrivateDataSlotEXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_query_pool-Tuple{Any, QueryPoolCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_query_pool","text":"create_query_pool(device, create_info::QueryPoolCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{QueryPool, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::QueryPoolCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_query_pool(device, create_info::QueryPoolCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{QueryPool, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_query_pool-Tuple{Any, QueryPoolCreateInfo}","page":"API","title":"Vulkan.create_query_pool","text":"create_query_pool(device, create_info::QueryPoolCreateInfo; allocator = C_NULL)::ResultTypes.Result{QueryPool, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::QueryPoolCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_query_pool(device, create_info::QueryPoolCreateInfo; allocator) -> ResultTypes.Result{QueryPool, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_ray_tracing_pipelines_khr-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_ray_tracing_pipelines_khr","text":"create_ray_tracing_pipelines_khr(device, create_infos::AbstractArray{RayTracingPipelineCreateInfoKHR}, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; deferred_operation = C_NULL, pipeline_cache = C_NULL, allocator = C_NULL)::ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nReturn codes:\n\nSuccess:\nSUCCESS\nOPERATION_DEFERRED_KHR\nOPERATION_NOT_DEFERRED_KHR\nPIPELINE_COMPILE_REQUIRED_EXT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS\n\nArguments:\n\ndevice\ncreate_infos::AbstractArray{RayTracingPipelineCreateInfoKHR}\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\ndeferred_operation: defaults to C_NULL\npipeline_cache: defaults to C_NULL\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_ray_tracing_pipelines_khr(device, create_infos::AbstractArray, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; deferred_operation, pipeline_cache, allocator) -> ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_ray_tracing_pipelines_khr-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan.create_ray_tracing_pipelines_khr","text":"create_ray_tracing_pipelines_khr(device, create_infos::AbstractArray{RayTracingPipelineCreateInfoKHR}; deferred_operation = C_NULL, pipeline_cache = C_NULL, allocator = C_NULL)::ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nReturn codes:\n\nSuccess:\nSUCCESS\nOPERATION_DEFERRED_KHR\nOPERATION_NOT_DEFERRED_KHR\nPIPELINE_COMPILE_REQUIRED_EXT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS\n\nArguments:\n\ndevice\ncreate_infos::AbstractArray{RayTracingPipelineCreateInfoKHR}\ndeferred_operation: defaults to C_NULL\npipeline_cache: defaults to C_NULL\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_ray_tracing_pipelines_khr(device, create_infos::AbstractArray; deferred_operation, pipeline_cache, allocator) -> ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_ray_tracing_pipelines_nv-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_ray_tracing_pipelines_nv","text":"create_ray_tracing_pipelines_nv(device, create_infos::AbstractArray{RayTracingPipelineCreateInfoNV}, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; pipeline_cache = C_NULL, allocator = C_NULL)::ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\nExtension: VK_NV_ray_tracing\n\nReturn codes:\n\nSuccess:\nSUCCESS\nPIPELINE_COMPILE_REQUIRED_EXT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_SHADER_NV\n\nArguments:\n\ndevice\ncreate_infos::AbstractArray{RayTracingPipelineCreateInfoNV}\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\npipeline_cache: defaults to C_NULL\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_ray_tracing_pipelines_nv(device, create_infos::AbstractArray, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; pipeline_cache, allocator) -> ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_ray_tracing_pipelines_nv-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan.create_ray_tracing_pipelines_nv","text":"create_ray_tracing_pipelines_nv(device, create_infos::AbstractArray{RayTracingPipelineCreateInfoNV}; pipeline_cache = C_NULL, allocator = C_NULL)::ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\nExtension: VK_NV_ray_tracing\n\nReturn codes:\n\nSuccess:\nSUCCESS\nPIPELINE_COMPILE_REQUIRED_EXT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_SHADER_NV\n\nArguments:\n\ndevice\ncreate_infos::AbstractArray{RayTracingPipelineCreateInfoNV}\npipeline_cache: defaults to C_NULL\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_ray_tracing_pipelines_nv(device, create_infos::AbstractArray; pipeline_cache, allocator) -> ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_render_pass-Tuple{Any, RenderPassCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_render_pass","text":"create_render_pass(device, create_info::RenderPassCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{RenderPass, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::RenderPassCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_render_pass(device, create_info::RenderPassCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{RenderPass, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_render_pass-Tuple{Any, RenderPassCreateInfo}","page":"API","title":"Vulkan.create_render_pass","text":"create_render_pass(device, create_info::RenderPassCreateInfo; allocator = C_NULL)::ResultTypes.Result{RenderPass, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::RenderPassCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_render_pass(device, create_info::RenderPassCreateInfo; allocator) -> ResultTypes.Result{RenderPass, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_render_pass_2-Tuple{Any, RenderPassCreateInfo2, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_render_pass_2","text":"create_render_pass_2(device, create_info::RenderPassCreateInfo2, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{RenderPass, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::RenderPassCreateInfo2\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_render_pass_2(device, create_info::RenderPassCreateInfo2, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{RenderPass, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_render_pass_2-Tuple{Any, RenderPassCreateInfo2}","page":"API","title":"Vulkan.create_render_pass_2","text":"create_render_pass_2(device, create_info::RenderPassCreateInfo2; allocator = C_NULL)::ResultTypes.Result{RenderPass, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::RenderPassCreateInfo2\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_render_pass_2(device, create_info::RenderPassCreateInfo2; allocator) -> ResultTypes.Result{RenderPass, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_sampler-Tuple{Any, SamplerCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_sampler","text":"create_sampler(device, create_info::SamplerCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{Sampler, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::SamplerCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_sampler(device, create_info::SamplerCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{Sampler, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_sampler-Tuple{Any, SamplerCreateInfo}","page":"API","title":"Vulkan.create_sampler","text":"create_sampler(device, create_info::SamplerCreateInfo; allocator = C_NULL)::ResultTypes.Result{Sampler, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::SamplerCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_sampler(device, create_info::SamplerCreateInfo; allocator) -> ResultTypes.Result{Sampler, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_sampler_ycbcr_conversion-Tuple{Any, SamplerYcbcrConversionCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_sampler_ycbcr_conversion","text":"create_sampler_ycbcr_conversion(device, create_info::SamplerYcbcrConversionCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{SamplerYcbcrConversion, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::SamplerYcbcrConversionCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_sampler_ycbcr_conversion(device, create_info::SamplerYcbcrConversionCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{SamplerYcbcrConversion, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_sampler_ycbcr_conversion-Tuple{Any, SamplerYcbcrConversionCreateInfo}","page":"API","title":"Vulkan.create_sampler_ycbcr_conversion","text":"create_sampler_ycbcr_conversion(device, create_info::SamplerYcbcrConversionCreateInfo; allocator = C_NULL)::ResultTypes.Result{SamplerYcbcrConversion, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::SamplerYcbcrConversionCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_sampler_ycbcr_conversion(device, create_info::SamplerYcbcrConversionCreateInfo; allocator) -> ResultTypes.Result{SamplerYcbcrConversion, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_semaphore-Tuple{Any, SemaphoreCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_semaphore","text":"create_semaphore(device, create_info::SemaphoreCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{Semaphore, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::SemaphoreCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_semaphore(device, create_info::SemaphoreCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{Semaphore, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_semaphore-Tuple{Any, SemaphoreCreateInfo}","page":"API","title":"Vulkan.create_semaphore","text":"create_semaphore(device, create_info::SemaphoreCreateInfo; allocator = C_NULL)::ResultTypes.Result{Semaphore, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncreate_info::SemaphoreCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_semaphore(device, create_info::SemaphoreCreateInfo; allocator) -> ResultTypes.Result{Semaphore, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_shader_module-Tuple{Any, ShaderModuleCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_shader_module","text":"create_shader_module(device, create_info::ShaderModuleCreateInfo, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{ShaderModule, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_SHADER_NV\n\nArguments:\n\ndevice\ncreate_info::ShaderModuleCreateInfo\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_shader_module(device, create_info::ShaderModuleCreateInfo, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{ShaderModule, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_shader_module-Tuple{Any, ShaderModuleCreateInfo}","page":"API","title":"Vulkan.create_shader_module","text":"create_shader_module(device, create_info::ShaderModuleCreateInfo; allocator = C_NULL)::ResultTypes.Result{ShaderModule, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_SHADER_NV\n\nArguments:\n\ndevice\ncreate_info::ShaderModuleCreateInfo\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_shader_module(device, create_info::ShaderModuleCreateInfo; allocator) -> ResultTypes.Result{ShaderModule, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_shared_swapchains_khr-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_shared_swapchains_khr","text":"create_shared_swapchains_khr(device, create_infos::AbstractArray{SwapchainCreateInfoKHR}, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{Vector{SwapchainKHR}, VulkanError}\n\nExtension: VK_KHR_display_swapchain\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INCOMPATIBLE_DISPLAY_KHR\nERROR_DEVICE_LOST\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\ndevice\ncreate_infos::AbstractArray{SwapchainCreateInfoKHR} (externsync)\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_shared_swapchains_khr(device, create_infos::AbstractArray, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{Vector{SwapchainKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_shared_swapchains_khr-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan.create_shared_swapchains_khr","text":"create_shared_swapchains_khr(device, create_infos::AbstractArray{SwapchainCreateInfoKHR}; allocator = C_NULL)::ResultTypes.Result{Vector{SwapchainKHR}, VulkanError}\n\nExtension: VK_KHR_display_swapchain\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INCOMPATIBLE_DISPLAY_KHR\nERROR_DEVICE_LOST\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\ndevice\ncreate_infos::AbstractArray{SwapchainCreateInfoKHR} (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_shared_swapchains_khr(device, create_infos::AbstractArray; allocator) -> ResultTypes.Result{Vector{SwapchainKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_swapchain_khr-Tuple{Any, SwapchainCreateInfoKHR, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_swapchain_khr","text":"create_swapchain_khr(device, create_info::SwapchainCreateInfoKHR, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{SwapchainKHR, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\nERROR_SURFACE_LOST_KHR\nERROR_NATIVE_WINDOW_IN_USE_KHR\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\ndevice\ncreate_info::SwapchainCreateInfoKHR (externsync)\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_swapchain_khr(device, create_info::SwapchainCreateInfoKHR, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{SwapchainKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_swapchain_khr-Tuple{Any, SwapchainCreateInfoKHR}","page":"API","title":"Vulkan.create_swapchain_khr","text":"create_swapchain_khr(device, create_info::SwapchainCreateInfoKHR; allocator = C_NULL)::ResultTypes.Result{SwapchainKHR, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\nERROR_SURFACE_LOST_KHR\nERROR_NATIVE_WINDOW_IN_USE_KHR\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\ndevice\ncreate_info::SwapchainCreateInfoKHR (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_swapchain_khr(device, create_info::SwapchainCreateInfoKHR; allocator) -> ResultTypes.Result{SwapchainKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_validation_cache_ext-Tuple{Any, ValidationCacheCreateInfoEXT, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_validation_cache_ext","text":"create_validation_cache_ext(device, create_info::ValidationCacheCreateInfoEXT, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{ValidationCacheEXT, VulkanError}\n\nExtension: VK_EXT_validation_cache\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ncreate_info::ValidationCacheCreateInfoEXT\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_validation_cache_ext(device, create_info::ValidationCacheCreateInfoEXT, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{ValidationCacheEXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_validation_cache_ext-Tuple{Any, ValidationCacheCreateInfoEXT}","page":"API","title":"Vulkan.create_validation_cache_ext","text":"create_validation_cache_ext(device, create_info::ValidationCacheCreateInfoEXT; allocator = C_NULL)::ResultTypes.Result{ValidationCacheEXT, VulkanError}\n\nExtension: VK_EXT_validation_cache\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ncreate_info::ValidationCacheCreateInfoEXT\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_validation_cache_ext(device, create_info::ValidationCacheCreateInfoEXT; allocator) -> ResultTypes.Result{ValidationCacheEXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_wayland_surface_khr-Tuple{Any, WaylandSurfaceCreateInfoKHR, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_wayland_surface_khr","text":"create_wayland_surface_khr(instance, create_info::WaylandSurfaceCreateInfoKHR, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nExtension: VK_KHR_wayland_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance\ncreate_info::WaylandSurfaceCreateInfoKHR\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_wayland_surface_khr(instance, create_info::WaylandSurfaceCreateInfoKHR, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{SurfaceKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_wayland_surface_khr-Tuple{Any, WaylandSurfaceCreateInfoKHR}","page":"API","title":"Vulkan.create_wayland_surface_khr","text":"create_wayland_surface_khr(instance, create_info::WaylandSurfaceCreateInfoKHR; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nExtension: VK_KHR_wayland_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance\ncreate_info::WaylandSurfaceCreateInfoKHR\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_wayland_surface_khr(instance, create_info::WaylandSurfaceCreateInfoKHR; allocator) -> ResultTypes.Result{SurfaceKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_xcb_surface_khr-Tuple{Any, XcbSurfaceCreateInfoKHR, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_xcb_surface_khr","text":"create_xcb_surface_khr(instance, create_info::XcbSurfaceCreateInfoKHR, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nExtension: VK_KHR_xcb_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance\ncreate_info::XcbSurfaceCreateInfoKHR\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_xcb_surface_khr(instance, create_info::XcbSurfaceCreateInfoKHR, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{SurfaceKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_xcb_surface_khr-Tuple{Any, XcbSurfaceCreateInfoKHR}","page":"API","title":"Vulkan.create_xcb_surface_khr","text":"create_xcb_surface_khr(instance, create_info::XcbSurfaceCreateInfoKHR; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nExtension: VK_KHR_xcb_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance\ncreate_info::XcbSurfaceCreateInfoKHR\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_xcb_surface_khr(instance, create_info::XcbSurfaceCreateInfoKHR; allocator) -> ResultTypes.Result{SurfaceKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_xlib_surface_khr-Tuple{Any, XlibSurfaceCreateInfoKHR, Union{Ptr{Nothing}, Base.CFunction}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.create_xlib_surface_khr","text":"create_xlib_surface_khr(instance, create_info::XlibSurfaceCreateInfoKHR, fptr_create::FunctionPtr, fptr_destroy::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nExtension: VK_KHR_xlib_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance\ncreate_info::XlibSurfaceCreateInfoKHR\nfptr_create::FunctionPtr\nfptr_destroy::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_xlib_surface_khr(instance, create_info::XlibSurfaceCreateInfoKHR, fptr_create::Union{Ptr{Nothing}, Base.CFunction}, fptr_destroy::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{SurfaceKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.create_xlib_surface_khr-Tuple{Any, XlibSurfaceCreateInfoKHR}","page":"API","title":"Vulkan.create_xlib_surface_khr","text":"create_xlib_surface_khr(instance, create_info::XlibSurfaceCreateInfoKHR; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nExtension: VK_KHR_xlib_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance\ncreate_info::XlibSurfaceCreateInfoKHR\nallocator: defaults to C_NULL\n\nAPI documentation\n\ncreate_xlib_surface_khr(instance, create_info::XlibSurfaceCreateInfoKHR; allocator) -> ResultTypes.Result{SurfaceKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.debug_marker_set_object_name_ext-Tuple{Any, DebugMarkerObjectNameInfoEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.debug_marker_set_object_name_ext","text":"debug_marker_set_object_name_ext(device, name_info::DebugMarkerObjectNameInfoEXT, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_debug_marker\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nname_info::DebugMarkerObjectNameInfoEXT (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\ndebug_marker_set_object_name_ext(device, name_info::DebugMarkerObjectNameInfoEXT, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.debug_marker_set_object_name_ext-Tuple{Any, DebugMarkerObjectNameInfoEXT}","page":"API","title":"Vulkan.debug_marker_set_object_name_ext","text":"debug_marker_set_object_name_ext(device, name_info::DebugMarkerObjectNameInfoEXT)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_debug_marker\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nname_info::DebugMarkerObjectNameInfoEXT (externsync)\n\nAPI documentation\n\ndebug_marker_set_object_name_ext(device, name_info::DebugMarkerObjectNameInfoEXT) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.debug_marker_set_object_tag_ext-Tuple{Any, DebugMarkerObjectTagInfoEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.debug_marker_set_object_tag_ext","text":"debug_marker_set_object_tag_ext(device, tag_info::DebugMarkerObjectTagInfoEXT, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_debug_marker\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ntag_info::DebugMarkerObjectTagInfoEXT (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\ndebug_marker_set_object_tag_ext(device, tag_info::DebugMarkerObjectTagInfoEXT, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.debug_marker_set_object_tag_ext-Tuple{Any, DebugMarkerObjectTagInfoEXT}","page":"API","title":"Vulkan.debug_marker_set_object_tag_ext","text":"debug_marker_set_object_tag_ext(device, tag_info::DebugMarkerObjectTagInfoEXT)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_debug_marker\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ntag_info::DebugMarkerObjectTagInfoEXT (externsync)\n\nAPI documentation\n\ndebug_marker_set_object_tag_ext(device, tag_info::DebugMarkerObjectTagInfoEXT) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.debug_report_message_ext-Tuple{Any, DebugReportFlagEXT, DebugReportObjectTypeEXT, Integer, Integer, Integer, AbstractString, AbstractString, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.debug_report_message_ext","text":"debug_report_message_ext(instance, flags::DebugReportFlagEXT, object_type::DebugReportObjectTypeEXT, object::Integer, location::Integer, message_code::Integer, layer_prefix::AbstractString, message::AbstractString, fptr::FunctionPtr)\n\nExtension: VK_EXT_debug_report\n\nArguments:\n\ninstance\nflags::DebugReportFlagEXT\nobject_type::DebugReportObjectTypeEXT\nobject::Integer\nlocation::Integer\nmessage_code::Integer\nlayer_prefix::AbstractString\nmessage::AbstractString\nfptr::FunctionPtr\n\nAPI documentation\n\ndebug_report_message_ext(instance, flags::DebugReportFlagEXT, object_type::DebugReportObjectTypeEXT, object::Integer, location::Integer, message_code::Integer, layer_prefix::AbstractString, message::AbstractString, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.debug_report_message_ext-Tuple{Any, DebugReportFlagEXT, DebugReportObjectTypeEXT, Integer, Integer, Integer, AbstractString, AbstractString}","page":"API","title":"Vulkan.debug_report_message_ext","text":"debug_report_message_ext(instance, flags::DebugReportFlagEXT, object_type::DebugReportObjectTypeEXT, object::Integer, location::Integer, message_code::Integer, layer_prefix::AbstractString, message::AbstractString)\n\nExtension: VK_EXT_debug_report\n\nArguments:\n\ninstance\nflags::DebugReportFlagEXT\nobject_type::DebugReportObjectTypeEXT\nobject::Integer\nlocation::Integer\nmessage_code::Integer\nlayer_prefix::AbstractString\nmessage::AbstractString\n\nAPI documentation\n\ndebug_report_message_ext(instance, flags::DebugReportFlagEXT, object_type::DebugReportObjectTypeEXT, object::Integer, location::Integer, message_code::Integer, layer_prefix::AbstractString, message::AbstractString)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.default_debug_callback-NTuple{4, Any}","page":"API","title":"Vulkan.default_debug_callback","text":"Default callback for debugging with DebugUtilsMessengerEXT.\n\ndefault_debug_callback(message_severity, message_type, callback_data_ptr, user_data_ptr) -> UInt32\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.deferred_operation_join_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.deferred_operation_join_khr","text":"deferred_operation_join_khr(device, operation, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_deferred_host_operations\n\nReturn codes:\n\nSuccess:\nSUCCESS\nTHREAD_DONE_KHR\nTHREAD_IDLE_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\noperation\nfptr::FunctionPtr\n\nAPI documentation\n\ndeferred_operation_join_khr(device, operation, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.deferred_operation_join_khr-Tuple{Any, Any}","page":"API","title":"Vulkan.deferred_operation_join_khr","text":"deferred_operation_join_khr(device, operation)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_deferred_host_operations\n\nReturn codes:\n\nSuccess:\nSUCCESS\nTHREAD_DONE_KHR\nTHREAD_IDLE_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\noperation\n\nAPI documentation\n\ndeferred_operation_join_khr(device, operation) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_acceleration_structure_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_acceleration_structure_khr","text":"destroy_acceleration_structure_khr(device, acceleration_structure, fptr::FunctionPtr; allocator = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ndevice\nacceleration_structure (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_acceleration_structure_khr(device, acceleration_structure, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_acceleration_structure_khr-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_acceleration_structure_khr","text":"destroy_acceleration_structure_khr(device, acceleration_structure; allocator = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ndevice\nacceleration_structure (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_acceleration_structure_khr(device, acceleration_structure; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_acceleration_structure_nv-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_acceleration_structure_nv","text":"destroy_acceleration_structure_nv(device, acceleration_structure, fptr::FunctionPtr; allocator = C_NULL)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ndevice\nacceleration_structure (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_acceleration_structure_nv(device, acceleration_structure, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_acceleration_structure_nv-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_acceleration_structure_nv","text":"destroy_acceleration_structure_nv(device, acceleration_structure; allocator = C_NULL)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ndevice\nacceleration_structure (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_acceleration_structure_nv(device, acceleration_structure; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_buffer-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_buffer","text":"destroy_buffer(device, buffer, fptr::FunctionPtr; allocator = C_NULL)\n\nArguments:\n\ndevice\nbuffer (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_buffer(device, buffer, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_buffer-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_buffer","text":"destroy_buffer(device, buffer; allocator = C_NULL)\n\nArguments:\n\ndevice\nbuffer (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_buffer(device, buffer; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_buffer_view-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_buffer_view","text":"destroy_buffer_view(device, buffer_view, fptr::FunctionPtr; allocator = C_NULL)\n\nArguments:\n\ndevice\nbuffer_view (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_buffer_view(device, buffer_view, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_buffer_view-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_buffer_view","text":"destroy_buffer_view(device, buffer_view; allocator = C_NULL)\n\nArguments:\n\ndevice\nbuffer_view (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_buffer_view(device, buffer_view; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_command_pool-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_command_pool","text":"destroy_command_pool(device, command_pool, fptr::FunctionPtr; allocator = C_NULL)\n\nArguments:\n\ndevice\ncommand_pool (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_command_pool(device, command_pool, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_command_pool-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_command_pool","text":"destroy_command_pool(device, command_pool; allocator = C_NULL)\n\nArguments:\n\ndevice\ncommand_pool (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_command_pool(device, command_pool; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_debug_report_callback_ext-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_debug_report_callback_ext","text":"destroy_debug_report_callback_ext(instance, callback, fptr::FunctionPtr; allocator = C_NULL)\n\nExtension: VK_EXT_debug_report\n\nArguments:\n\ninstance\ncallback (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_debug_report_callback_ext(instance, callback, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_debug_report_callback_ext-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_debug_report_callback_ext","text":"destroy_debug_report_callback_ext(instance, callback; allocator = C_NULL)\n\nExtension: VK_EXT_debug_report\n\nArguments:\n\ninstance\ncallback (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_debug_report_callback_ext(instance, callback; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_debug_utils_messenger_ext-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_debug_utils_messenger_ext","text":"destroy_debug_utils_messenger_ext(instance, messenger, fptr::FunctionPtr; allocator = C_NULL)\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\ninstance\nmessenger (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_debug_utils_messenger_ext(instance, messenger, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_debug_utils_messenger_ext-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_debug_utils_messenger_ext","text":"destroy_debug_utils_messenger_ext(instance, messenger; allocator = C_NULL)\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\ninstance\nmessenger (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_debug_utils_messenger_ext(instance, messenger; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_deferred_operation_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_deferred_operation_khr","text":"destroy_deferred_operation_khr(device, operation, fptr::FunctionPtr; allocator = C_NULL)\n\nExtension: VK_KHR_deferred_host_operations\n\nArguments:\n\ndevice\noperation (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_deferred_operation_khr(device, operation, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_deferred_operation_khr-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_deferred_operation_khr","text":"destroy_deferred_operation_khr(device, operation; allocator = C_NULL)\n\nExtension: VK_KHR_deferred_host_operations\n\nArguments:\n\ndevice\noperation (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_deferred_operation_khr(device, operation; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_descriptor_pool-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_descriptor_pool","text":"destroy_descriptor_pool(device, descriptor_pool, fptr::FunctionPtr; allocator = C_NULL)\n\nArguments:\n\ndevice\ndescriptor_pool (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_descriptor_pool(device, descriptor_pool, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_descriptor_pool-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_descriptor_pool","text":"destroy_descriptor_pool(device, descriptor_pool; allocator = C_NULL)\n\nArguments:\n\ndevice\ndescriptor_pool (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_descriptor_pool(device, descriptor_pool; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_descriptor_set_layout-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_descriptor_set_layout","text":"destroy_descriptor_set_layout(device, descriptor_set_layout, fptr::FunctionPtr; allocator = C_NULL)\n\nArguments:\n\ndevice\ndescriptor_set_layout (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_descriptor_set_layout(device, descriptor_set_layout, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_descriptor_set_layout-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_descriptor_set_layout","text":"destroy_descriptor_set_layout(device, descriptor_set_layout; allocator = C_NULL)\n\nArguments:\n\ndevice\ndescriptor_set_layout (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_descriptor_set_layout(device, descriptor_set_layout; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_descriptor_update_template-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_descriptor_update_template","text":"destroy_descriptor_update_template(device, descriptor_update_template, fptr::FunctionPtr; allocator = C_NULL)\n\nArguments:\n\ndevice\ndescriptor_update_template (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_descriptor_update_template(device, descriptor_update_template, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_descriptor_update_template-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_descriptor_update_template","text":"destroy_descriptor_update_template(device, descriptor_update_template; allocator = C_NULL)\n\nArguments:\n\ndevice\ndescriptor_update_template (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_descriptor_update_template(device, descriptor_update_template; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_device-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_device","text":"destroy_device(device, fptr::FunctionPtr; allocator = C_NULL)\n\nArguments:\n\ndevice (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_device(device, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_device-Tuple{Any}","page":"API","title":"Vulkan.destroy_device","text":"destroy_device(device; allocator = C_NULL)\n\nArguments:\n\ndevice (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_device(device; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_event-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_event","text":"destroy_event(device, event, fptr::FunctionPtr; allocator = C_NULL)\n\nArguments:\n\ndevice\nevent (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_event(device, event, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_event-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_event","text":"destroy_event(device, event; allocator = C_NULL)\n\nArguments:\n\ndevice\nevent (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_event(device, event; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_fence-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_fence","text":"destroy_fence(device, fence, fptr::FunctionPtr; allocator = C_NULL)\n\nArguments:\n\ndevice\nfence (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_fence(device, fence, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_fence-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_fence","text":"destroy_fence(device, fence; allocator = C_NULL)\n\nArguments:\n\ndevice\nfence (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_fence(device, fence; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_framebuffer-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_framebuffer","text":"destroy_framebuffer(device, framebuffer, fptr::FunctionPtr; allocator = C_NULL)\n\nArguments:\n\ndevice\nframebuffer (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_framebuffer(device, framebuffer, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_framebuffer-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_framebuffer","text":"destroy_framebuffer(device, framebuffer; allocator = C_NULL)\n\nArguments:\n\ndevice\nframebuffer (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_framebuffer(device, framebuffer; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_image-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_image","text":"destroy_image(device, image, fptr::FunctionPtr; allocator = C_NULL)\n\nArguments:\n\ndevice\nimage (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_image(device, image, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_image-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_image","text":"destroy_image(device, image; allocator = C_NULL)\n\nArguments:\n\ndevice\nimage (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_image(device, image; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_image_view-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_image_view","text":"destroy_image_view(device, image_view, fptr::FunctionPtr; allocator = C_NULL)\n\nArguments:\n\ndevice\nimage_view (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_image_view(device, image_view, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_image_view-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_image_view","text":"destroy_image_view(device, image_view; allocator = C_NULL)\n\nArguments:\n\ndevice\nimage_view (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_image_view(device, image_view; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_indirect_commands_layout_nv-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_indirect_commands_layout_nv","text":"destroy_indirect_commands_layout_nv(device, indirect_commands_layout, fptr::FunctionPtr; allocator = C_NULL)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ndevice\nindirect_commands_layout (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_indirect_commands_layout_nv(device, indirect_commands_layout, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_indirect_commands_layout_nv-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_indirect_commands_layout_nv","text":"destroy_indirect_commands_layout_nv(device, indirect_commands_layout; allocator = C_NULL)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ndevice\nindirect_commands_layout (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_indirect_commands_layout_nv(device, indirect_commands_layout; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_instance-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_instance","text":"destroy_instance(instance, fptr::FunctionPtr; allocator = C_NULL)\n\nArguments:\n\ninstance (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_instance(instance, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_instance-Tuple{Any}","page":"API","title":"Vulkan.destroy_instance","text":"destroy_instance(instance; allocator = C_NULL)\n\nArguments:\n\ninstance (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_instance(instance; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_pipeline-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_pipeline","text":"destroy_pipeline(device, pipeline, fptr::FunctionPtr; allocator = C_NULL)\n\nArguments:\n\ndevice\npipeline (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_pipeline(device, pipeline, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_pipeline-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_pipeline","text":"destroy_pipeline(device, pipeline; allocator = C_NULL)\n\nArguments:\n\ndevice\npipeline (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_pipeline(device, pipeline; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_pipeline_cache-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_pipeline_cache","text":"destroy_pipeline_cache(device, pipeline_cache, fptr::FunctionPtr; allocator = C_NULL)\n\nArguments:\n\ndevice\npipeline_cache (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_pipeline_cache(device, pipeline_cache, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_pipeline_cache-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_pipeline_cache","text":"destroy_pipeline_cache(device, pipeline_cache; allocator = C_NULL)\n\nArguments:\n\ndevice\npipeline_cache (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_pipeline_cache(device, pipeline_cache; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_pipeline_layout-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_pipeline_layout","text":"destroy_pipeline_layout(device, pipeline_layout, fptr::FunctionPtr; allocator = C_NULL)\n\nArguments:\n\ndevice\npipeline_layout (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_pipeline_layout(device, pipeline_layout, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_pipeline_layout-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_pipeline_layout","text":"destroy_pipeline_layout(device, pipeline_layout; allocator = C_NULL)\n\nArguments:\n\ndevice\npipeline_layout (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_pipeline_layout(device, pipeline_layout; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_private_data_slot_ext-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_private_data_slot_ext","text":"destroy_private_data_slot_ext(device, private_data_slot, fptr::FunctionPtr; allocator = C_NULL)\n\nExtension: VK_EXT_private_data\n\nArguments:\n\ndevice\nprivate_data_slot (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_private_data_slot_ext(device, private_data_slot, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_private_data_slot_ext-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_private_data_slot_ext","text":"destroy_private_data_slot_ext(device, private_data_slot; allocator = C_NULL)\n\nExtension: VK_EXT_private_data\n\nArguments:\n\ndevice\nprivate_data_slot (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_private_data_slot_ext(device, private_data_slot; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_query_pool-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_query_pool","text":"destroy_query_pool(device, query_pool, fptr::FunctionPtr; allocator = C_NULL)\n\nArguments:\n\ndevice\nquery_pool (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_query_pool(device, query_pool, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_query_pool-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_query_pool","text":"destroy_query_pool(device, query_pool; allocator = C_NULL)\n\nArguments:\n\ndevice\nquery_pool (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_query_pool(device, query_pool; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_render_pass-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_render_pass","text":"destroy_render_pass(device, render_pass, fptr::FunctionPtr; allocator = C_NULL)\n\nArguments:\n\ndevice\nrender_pass (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_render_pass(device, render_pass, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_render_pass-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_render_pass","text":"destroy_render_pass(device, render_pass; allocator = C_NULL)\n\nArguments:\n\ndevice\nrender_pass (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_render_pass(device, render_pass; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_sampler-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_sampler","text":"destroy_sampler(device, sampler, fptr::FunctionPtr; allocator = C_NULL)\n\nArguments:\n\ndevice\nsampler (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_sampler(device, sampler, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_sampler-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_sampler","text":"destroy_sampler(device, sampler; allocator = C_NULL)\n\nArguments:\n\ndevice\nsampler (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_sampler(device, sampler; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_sampler_ycbcr_conversion-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_sampler_ycbcr_conversion","text":"destroy_sampler_ycbcr_conversion(device, ycbcr_conversion, fptr::FunctionPtr; allocator = C_NULL)\n\nArguments:\n\ndevice\nycbcr_conversion (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_sampler_ycbcr_conversion(device, ycbcr_conversion, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_sampler_ycbcr_conversion-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_sampler_ycbcr_conversion","text":"destroy_sampler_ycbcr_conversion(device, ycbcr_conversion; allocator = C_NULL)\n\nArguments:\n\ndevice\nycbcr_conversion (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_sampler_ycbcr_conversion(device, ycbcr_conversion; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_semaphore-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_semaphore","text":"destroy_semaphore(device, semaphore, fptr::FunctionPtr; allocator = C_NULL)\n\nArguments:\n\ndevice\nsemaphore (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_semaphore(device, semaphore, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_semaphore-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_semaphore","text":"destroy_semaphore(device, semaphore; allocator = C_NULL)\n\nArguments:\n\ndevice\nsemaphore (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_semaphore(device, semaphore; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_shader_module-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_shader_module","text":"destroy_shader_module(device, shader_module, fptr::FunctionPtr; allocator = C_NULL)\n\nArguments:\n\ndevice\nshader_module (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_shader_module(device, shader_module, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_shader_module-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_shader_module","text":"destroy_shader_module(device, shader_module; allocator = C_NULL)\n\nArguments:\n\ndevice\nshader_module (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_shader_module(device, shader_module; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_surface_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_surface_khr","text":"destroy_surface_khr(instance, surface, fptr::FunctionPtr; allocator = C_NULL)\n\nExtension: VK_KHR_surface\n\nArguments:\n\ninstance\nsurface (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_surface_khr(instance, surface, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_surface_khr-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_surface_khr","text":"destroy_surface_khr(instance, surface; allocator = C_NULL)\n\nExtension: VK_KHR_surface\n\nArguments:\n\ninstance\nsurface (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_surface_khr(instance, surface; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_swapchain_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_swapchain_khr","text":"destroy_swapchain_khr(device, swapchain, fptr::FunctionPtr; allocator = C_NULL)\n\nExtension: VK_KHR_swapchain\n\nArguments:\n\ndevice\nswapchain (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_swapchain_khr(device, swapchain, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_swapchain_khr-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_swapchain_khr","text":"destroy_swapchain_khr(device, swapchain; allocator = C_NULL)\n\nExtension: VK_KHR_swapchain\n\nArguments:\n\ndevice\nswapchain (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_swapchain_khr(device, swapchain; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_validation_cache_ext-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.destroy_validation_cache_ext","text":"destroy_validation_cache_ext(device, validation_cache, fptr::FunctionPtr; allocator = C_NULL)\n\nExtension: VK_EXT_validation_cache\n\nArguments:\n\ndevice\nvalidation_cache (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_validation_cache_ext(device, validation_cache, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.destroy_validation_cache_ext-Tuple{Any, Any}","page":"API","title":"Vulkan.destroy_validation_cache_ext","text":"destroy_validation_cache_ext(device, validation_cache; allocator = C_NULL)\n\nExtension: VK_EXT_validation_cache\n\nArguments:\n\ndevice\nvalidation_cache (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\ndestroy_validation_cache_ext(device, validation_cache; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.device_wait_idle-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.device_wait_idle","text":"device_wait_idle(device, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\nfptr::FunctionPtr\n\nAPI documentation\n\ndevice_wait_idle(device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.device_wait_idle-Tuple{Any}","page":"API","title":"Vulkan.device_wait_idle","text":"device_wait_idle(device)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\n\nAPI documentation\n\ndevice_wait_idle(device) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.display_power_control_ext-Tuple{Any, Any, DisplayPowerInfoEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.display_power_control_ext","text":"display_power_control_ext(device, display, display_power_info::DisplayPowerInfoEXT, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_display_control\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ndisplay\ndisplay_power_info::DisplayPowerInfoEXT\nfptr::FunctionPtr\n\nAPI documentation\n\ndisplay_power_control_ext(device, display, display_power_info::DisplayPowerInfoEXT, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.display_power_control_ext-Tuple{Any, Any, DisplayPowerInfoEXT}","page":"API","title":"Vulkan.display_power_control_ext","text":"display_power_control_ext(device, display, display_power_info::DisplayPowerInfoEXT)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_display_control\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ndisplay\ndisplay_power_info::DisplayPowerInfoEXT\n\nAPI documentation\n\ndisplay_power_control_ext(device, display, display_power_info::DisplayPowerInfoEXT) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.end_command_buffer-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.end_command_buffer","text":"end_command_buffer(command_buffer, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ncommand_buffer (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\nend_command_buffer(command_buffer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.end_command_buffer-Tuple{Any}","page":"API","title":"Vulkan.end_command_buffer","text":"end_command_buffer(command_buffer)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ncommand_buffer (externsync)\n\nAPI documentation\n\nend_command_buffer(command_buffer) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.enumerate_device_extension_properties-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.enumerate_device_extension_properties","text":"enumerate_device_extension_properties(physical_device, fptr::FunctionPtr; layer_name = C_NULL)::ResultTypes.Result{Vector{ExtensionProperties}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_LAYER_NOT_PRESENT\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\nlayer_name: defaults to C_NULL\n\nAPI documentation\n\nenumerate_device_extension_properties(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}; layer_name) -> ResultTypes.Result{Vector{ExtensionProperties}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.enumerate_device_extension_properties-Tuple{Any}","page":"API","title":"Vulkan.enumerate_device_extension_properties","text":"enumerate_device_extension_properties(physical_device; layer_name = C_NULL)::ResultTypes.Result{Vector{ExtensionProperties}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_LAYER_NOT_PRESENT\n\nArguments:\n\nphysical_device\nlayer_name: defaults to C_NULL\n\nAPI documentation\n\nenumerate_device_extension_properties(physical_device; layer_name) -> ResultTypes.Result{Vector{ExtensionProperties}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.enumerate_device_layer_properties-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.enumerate_device_layer_properties","text":"enumerate_device_layer_properties(physical_device, fptr::FunctionPtr)::ResultTypes.Result{Vector{LayerProperties}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\nenumerate_device_layer_properties(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{LayerProperties}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.enumerate_device_layer_properties-Tuple{Any}","page":"API","title":"Vulkan.enumerate_device_layer_properties","text":"enumerate_device_layer_properties(physical_device)::ResultTypes.Result{Vector{LayerProperties}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\nenumerate_device_layer_properties(physical_device) -> ResultTypes.Result{Vector{LayerProperties}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.enumerate_instance_extension_properties-Tuple{Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.enumerate_instance_extension_properties","text":"enumerate_instance_extension_properties(fptr::FunctionPtr; layer_name = C_NULL)::ResultTypes.Result{Vector{ExtensionProperties}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_LAYER_NOT_PRESENT\n\nArguments:\n\nfptr::FunctionPtr\nlayer_name: defaults to C_NULL\n\nAPI documentation\n\nenumerate_instance_extension_properties(fptr::Union{Ptr{Nothing}, Base.CFunction}; layer_name) -> ResultTypes.Result{Vector{ExtensionProperties}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.enumerate_instance_extension_properties-Tuple{}","page":"API","title":"Vulkan.enumerate_instance_extension_properties","text":"enumerate_instance_extension_properties(; layer_name = C_NULL)::ResultTypes.Result{Vector{ExtensionProperties}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_LAYER_NOT_PRESENT\n\nArguments:\n\nlayer_name: defaults to C_NULL\n\nAPI documentation\n\nenumerate_instance_extension_properties(; layer_name) -> ResultTypes.Result{Vector{ExtensionProperties}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.enumerate_instance_layer_properties-Tuple{Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.enumerate_instance_layer_properties","text":"enumerate_instance_layer_properties(fptr::FunctionPtr)::ResultTypes.Result{Vector{LayerProperties}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nfptr::FunctionPtr\n\nAPI documentation\n\nenumerate_instance_layer_properties(fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{LayerProperties}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.enumerate_instance_layer_properties-Tuple{}","page":"API","title":"Vulkan.enumerate_instance_layer_properties","text":"enumerate_instance_layer_properties()::ResultTypes.Result{Vector{LayerProperties}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nAPI documentation\n\nenumerate_instance_layer_properties() -> ResultTypes.Result{Vector{LayerProperties}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.enumerate_instance_version-Tuple{Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.enumerate_instance_version","text":"enumerate_instance_version(fptr::FunctionPtr)::ResultTypes.Result{VersionNumber, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\nfptr::FunctionPtr\n\nAPI documentation\n\nenumerate_instance_version(fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{VersionNumber, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.enumerate_instance_version-Tuple{}","page":"API","title":"Vulkan.enumerate_instance_version","text":"enumerate_instance_version()::ResultTypes.Result{VersionNumber, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nAPI documentation\n\nenumerate_instance_version() -> ResultTypes.Result{VersionNumber, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.enumerate_physical_device_groups-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.enumerate_physical_device_groups","text":"enumerate_physical_device_groups(instance, fptr::FunctionPtr)::ResultTypes.Result{Vector{PhysicalDeviceGroupProperties}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\ninstance\nfptr::FunctionPtr\n\nAPI documentation\n\nenumerate_physical_device_groups(instance, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{PhysicalDeviceGroupProperties}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.enumerate_physical_device_groups-Tuple{Any}","page":"API","title":"Vulkan.enumerate_physical_device_groups","text":"enumerate_physical_device_groups(instance)::ResultTypes.Result{Vector{PhysicalDeviceGroupProperties}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\ninstance\n\nAPI documentation\n\nenumerate_physical_device_groups(instance) -> ResultTypes.Result{Vector{PhysicalDeviceGroupProperties}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.enumerate_physical_device_queue_family_performance_query_counters_khr-Tuple{Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.enumerate_physical_device_queue_family_performance_query_counters_khr","text":"enumerate_physical_device_queue_family_performance_query_counters_khr(physical_device, queue_family_index::Integer, fptr::FunctionPtr)::ResultTypes.Result{Tuple{Vector{_PerformanceCounterKHR}, Vector{_PerformanceCounterDescriptionKHR}}, VulkanError}\n\nExtension: VK_KHR_performance_query\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\nphysical_device\nqueue_family_index::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\nenumerate_physical_device_queue_family_performance_query_counters_khr(physical_device, queue_family_index::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Tuple{Vector{_PerformanceCounterKHR}, Vector{_PerformanceCounterDescriptionKHR}}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.enumerate_physical_device_queue_family_performance_query_counters_khr-Tuple{Any, Integer}","page":"API","title":"Vulkan.enumerate_physical_device_queue_family_performance_query_counters_khr","text":"enumerate_physical_device_queue_family_performance_query_counters_khr(physical_device, queue_family_index::Integer)::ResultTypes.Result{Tuple{Vector{_PerformanceCounterKHR}, Vector{_PerformanceCounterDescriptionKHR}}, VulkanError}\n\nExtension: VK_KHR_performance_query\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\nphysical_device\nqueue_family_index::Integer\n\nAPI documentation\n\nenumerate_physical_device_queue_family_performance_query_counters_khr(physical_device, queue_family_index::Integer) -> ResultTypes.Result{Tuple{Vector{_PerformanceCounterKHR}, Vector{_PerformanceCounterDescriptionKHR}}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.enumerate_physical_devices-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.enumerate_physical_devices","text":"enumerate_physical_devices(instance, fptr::FunctionPtr)::ResultTypes.Result{Vector{PhysicalDevice}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\ninstance\nfptr::FunctionPtr\n\nAPI documentation\n\nenumerate_physical_devices(instance, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{PhysicalDevice}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.enumerate_physical_devices-Tuple{Any}","page":"API","title":"Vulkan.enumerate_physical_devices","text":"enumerate_physical_devices(instance)::ResultTypes.Result{Vector{PhysicalDevice}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\ninstance\n\nAPI documentation\n\nenumerate_physical_devices(instance) -> ResultTypes.Result{Vector{PhysicalDevice}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.find_queue_family-Tuple{PhysicalDevice, QueueFlag}","page":"API","title":"Vulkan.find_queue_family","text":"Find a queue index (starting at 0) from physical_device which matches the provided queue_capabilities.\n\njulia> find_queue_family(physical_device, QUEUE_COMPUTE_BIT & QUEUE_GRAPHICS_BIT)\n0\n\nfind_queue_family(physical_device::PhysicalDevice, queue_capabilities::QueueFlag) -> Int64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.flush_mapped_memory_ranges-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.flush_mapped_memory_ranges","text":"flush_mapped_memory_ranges(device, memory_ranges::AbstractArray{MappedMemoryRange}, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nmemory_ranges::AbstractArray{MappedMemoryRange}\nfptr::FunctionPtr\n\nAPI documentation\n\nflush_mapped_memory_ranges(device, memory_ranges::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.flush_mapped_memory_ranges-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan.flush_mapped_memory_ranges","text":"flush_mapped_memory_ranges(device, memory_ranges::AbstractArray{MappedMemoryRange})::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nmemory_ranges::AbstractArray{MappedMemoryRange}\n\nAPI documentation\n\nflush_mapped_memory_ranges(device, memory_ranges::AbstractArray) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.free_command_buffers-Tuple{Any, Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.free_command_buffers","text":"free_command_buffers(device, command_pool, command_buffers::AbstractArray{CommandBuffer}, fptr::FunctionPtr)\n\nArguments:\n\ndevice\ncommand_pool (externsync)\ncommand_buffers::AbstractArray{CommandBuffer} (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\nfree_command_buffers(device, command_pool, command_buffers::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.free_command_buffers-Tuple{Any, Any, AbstractArray}","page":"API","title":"Vulkan.free_command_buffers","text":"free_command_buffers(device, command_pool, command_buffers::AbstractArray{CommandBuffer})\n\nArguments:\n\ndevice\ncommand_pool (externsync)\ncommand_buffers::AbstractArray{CommandBuffer} (externsync)\n\nAPI documentation\n\nfree_command_buffers(device, command_pool, command_buffers::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.free_descriptor_sets-Tuple{Any, Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.free_descriptor_sets","text":"free_descriptor_sets(device, descriptor_pool, descriptor_sets::AbstractArray{DescriptorSet}, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nArguments:\n\ndevice\ndescriptor_pool (externsync)\ndescriptor_sets::AbstractArray{DescriptorSet} (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\nfree_descriptor_sets(device, descriptor_pool, descriptor_sets::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.free_descriptor_sets-Tuple{Any, Any, AbstractArray}","page":"API","title":"Vulkan.free_descriptor_sets","text":"free_descriptor_sets(device, descriptor_pool, descriptor_sets::AbstractArray{DescriptorSet})::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nArguments:\n\ndevice\ndescriptor_pool (externsync)\ndescriptor_sets::AbstractArray{DescriptorSet} (externsync)\n\nAPI documentation\n\nfree_descriptor_sets(device, descriptor_pool, descriptor_sets::AbstractArray) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.free_memory-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.free_memory","text":"free_memory(device, memory, fptr::FunctionPtr; allocator = C_NULL)\n\nArguments:\n\ndevice\nmemory (externsync)\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\nfree_memory(device, memory, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.free_memory-Tuple{Any, Any}","page":"API","title":"Vulkan.free_memory","text":"free_memory(device, memory; allocator = C_NULL)\n\nArguments:\n\ndevice\nmemory (externsync)\nallocator: defaults to C_NULL\n\nAPI documentation\n\nfree_memory(device, memory; allocator)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.from_vk","page":"API","title":"Vulkan.from_vk","text":"Convert a Vulkan type into its corresponding Julia type.\n\nExamples\n\njulia> from_vk(VersionNumber, UInt32(VkCore.VK_MAKE_VERSION(1, 2, 3)))\nv\"1.2.3\"\n\njulia> from_vk(String, (0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x00))\n\"hello\"\n\njulia> from_vk(Bool, UInt32(1))\ntrue\n\nfrom_vk(T, x)\n\ndefined at /home/runner/work/Vulkan.jl/Vulkan.jl/src/prewrap/conversions.jl:39.\n\nfrom_vk(T, x)\n\ndefined at /home/runner/work/Vulkan.jl/Vulkan.jl/src/prewrap/conversions.jl:40.\n\nfrom_vk(T, x, next_types)\n\ndefined at /home/runner/work/Vulkan.jl/Vulkan.jl/src/prewrap/conversions.jl:41.\n\nfrom_vk(T, x)\n\ndefined at /home/runner/work/Vulkan.jl/Vulkan.jl/src/prewrap/conversions.jl:42.\n\nfrom_vk(T, x)\n\ndefined at /home/runner/work/Vulkan.jl/Vulkan.jl/src/prewrap/conversions.jl:43.\n\nfrom_vk(T, version)\n\ndefined at /home/runner/work/Vulkan.jl/Vulkan.jl/src/prewrap/conversions.jl:44.\n\nfrom_vk(T, str)\n\ndefined at /home/runner/work/Vulkan.jl/Vulkan.jl/src/prewrap/conversions.jl:46.\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.function_pointer","page":"API","title":"Vulkan.function_pointer","text":"Query a function pointer for an API function.\n\nOne of get_instance_proc_addr or get_device_proc_addr will be used depending on the argument types.\n\nfunction_pointer(name)\n\ndefined at /home/runner/work/Vulkan.jl/Vulkan.jl/src/utils.jl:8.\n\nfunction_pointer(instance, name)\n\ndefined at /home/runner/work/Vulkan.jl/Vulkan.jl/src/utils.jl:9.\n\nfunction_pointer(device, name)\n\ndefined at /home/runner/work/Vulkan.jl/Vulkan.jl/src/utils.jl:10.\n\nfunction_pointer(x, name)\n\ndefined at /home/runner/work/Vulkan.jl/Vulkan.jl/src/utils.jl:11.\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_acceleration_structure_build_sizes_khr-Tuple{Any, AccelerationStructureBuildTypeKHR, AccelerationStructureBuildGeometryInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_acceleration_structure_build_sizes_khr","text":"get_acceleration_structure_build_sizes_khr(device, build_type::AccelerationStructureBuildTypeKHR, build_info::AccelerationStructureBuildGeometryInfoKHR, fptr::FunctionPtr; max_primitive_counts = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ndevice\nbuild_type::AccelerationStructureBuildTypeKHR\nbuild_info::AccelerationStructureBuildGeometryInfoKHR\nfptr::FunctionPtr\nmax_primitive_counts: defaults to C_NULL\n\nAPI documentation\n\nget_acceleration_structure_build_sizes_khr(device, build_type::AccelerationStructureBuildTypeKHR, build_info::AccelerationStructureBuildGeometryInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}; max_primitive_counts)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_acceleration_structure_build_sizes_khr-Tuple{Any, AccelerationStructureBuildTypeKHR, AccelerationStructureBuildGeometryInfoKHR}","page":"API","title":"Vulkan.get_acceleration_structure_build_sizes_khr","text":"get_acceleration_structure_build_sizes_khr(device, build_type::AccelerationStructureBuildTypeKHR, build_info::AccelerationStructureBuildGeometryInfoKHR; max_primitive_counts = C_NULL)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ndevice\nbuild_type::AccelerationStructureBuildTypeKHR\nbuild_info::AccelerationStructureBuildGeometryInfoKHR\nmax_primitive_counts: defaults to C_NULL\n\nAPI documentation\n\nget_acceleration_structure_build_sizes_khr(device, build_type::AccelerationStructureBuildTypeKHR, build_info::AccelerationStructureBuildGeometryInfoKHR; max_primitive_counts)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_acceleration_structure_device_address_khr-Tuple{Any, AccelerationStructureDeviceAddressInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_acceleration_structure_device_address_khr","text":"get_acceleration_structure_device_address_khr(device, info::AccelerationStructureDeviceAddressInfoKHR, fptr::FunctionPtr)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ndevice\ninfo::AccelerationStructureDeviceAddressInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\nget_acceleration_structure_device_address_khr(device, info::AccelerationStructureDeviceAddressInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_acceleration_structure_device_address_khr-Tuple{Any, AccelerationStructureDeviceAddressInfoKHR}","page":"API","title":"Vulkan.get_acceleration_structure_device_address_khr","text":"get_acceleration_structure_device_address_khr(device, info::AccelerationStructureDeviceAddressInfoKHR)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ndevice\ninfo::AccelerationStructureDeviceAddressInfoKHR\n\nAPI documentation\n\nget_acceleration_structure_device_address_khr(device, info::AccelerationStructureDeviceAddressInfoKHR) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_acceleration_structure_handle_nv-Tuple{Any, Any, Integer, Ptr{Nothing}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_acceleration_structure_handle_nv","text":"get_acceleration_structure_handle_nv(device, acceleration_structure, data_size::Integer, data::Ptr{Cvoid}, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_NV_ray_tracing\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nacceleration_structure\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\nfptr::FunctionPtr\n\nAPI documentation\n\nget_acceleration_structure_handle_nv(device, acceleration_structure, data_size::Integer, data::Ptr{Nothing}, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_acceleration_structure_handle_nv-Tuple{Any, Any, Integer, Ptr{Nothing}}","page":"API","title":"Vulkan.get_acceleration_structure_handle_nv","text":"get_acceleration_structure_handle_nv(device, acceleration_structure, data_size::Integer, data::Ptr{Cvoid})::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_NV_ray_tracing\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nacceleration_structure\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\n\nAPI documentation\n\nget_acceleration_structure_handle_nv(device, acceleration_structure, data_size::Integer, data::Ptr{Nothing}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_acceleration_structure_memory_requirements_nv-Tuple{Any, AccelerationStructureMemoryRequirementsInfoNV, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_acceleration_structure_memory_requirements_nv","text":"get_acceleration_structure_memory_requirements_nv(device, info::AccelerationStructureMemoryRequirementsInfoNV, fptr::FunctionPtr)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ndevice\ninfo::AccelerationStructureMemoryRequirementsInfoNV\nfptr::FunctionPtr\n\nAPI documentation\n\nget_acceleration_structure_memory_requirements_nv(device, info::AccelerationStructureMemoryRequirementsInfoNV, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> VulkanCore.LibVulkan.VkMemoryRequirements2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_acceleration_structure_memory_requirements_nv-Tuple{Any, AccelerationStructureMemoryRequirementsInfoNV}","page":"API","title":"Vulkan.get_acceleration_structure_memory_requirements_nv","text":"get_acceleration_structure_memory_requirements_nv(device, info::AccelerationStructureMemoryRequirementsInfoNV)\n\nExtension: VK_NV_ray_tracing\n\nArguments:\n\ndevice\ninfo::AccelerationStructureMemoryRequirementsInfoNV\n\nAPI documentation\n\nget_acceleration_structure_memory_requirements_nv(device, info::AccelerationStructureMemoryRequirementsInfoNV) -> VulkanCore.LibVulkan.VkMemoryRequirements2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_buffer_device_address-Tuple{Any, BufferDeviceAddressInfo, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_buffer_device_address","text":"get_buffer_device_address(device, info::BufferDeviceAddressInfo, fptr::FunctionPtr)\n\nArguments:\n\ndevice\ninfo::BufferDeviceAddressInfo\nfptr::FunctionPtr\n\nAPI documentation\n\nget_buffer_device_address(device, info::BufferDeviceAddressInfo, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_buffer_device_address-Tuple{Any, BufferDeviceAddressInfo}","page":"API","title":"Vulkan.get_buffer_device_address","text":"get_buffer_device_address(device, info::BufferDeviceAddressInfo)\n\nArguments:\n\ndevice\ninfo::BufferDeviceAddressInfo\n\nAPI documentation\n\nget_buffer_device_address(device, info::BufferDeviceAddressInfo) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_buffer_memory_requirements-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_buffer_memory_requirements","text":"get_buffer_memory_requirements(device, buffer, fptr::FunctionPtr)\n\nArguments:\n\ndevice\nbuffer\nfptr::FunctionPtr\n\nAPI documentation\n\nget_buffer_memory_requirements(device, buffer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> MemoryRequirements\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_buffer_memory_requirements-Tuple{Any, Any}","page":"API","title":"Vulkan.get_buffer_memory_requirements","text":"get_buffer_memory_requirements(device, buffer)\n\nArguments:\n\ndevice\nbuffer\n\nAPI documentation\n\nget_buffer_memory_requirements(device, buffer) -> MemoryRequirements\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_buffer_memory_requirements_2-Tuple{Any, BufferMemoryRequirementsInfo2, Union{Ptr{Nothing}, Base.CFunction}, Vararg{Type}}","page":"API","title":"Vulkan.get_buffer_memory_requirements_2","text":"get_buffer_memory_requirements_2(device, info::BufferMemoryRequirementsInfo2, fptr::FunctionPtr, next_types::Type...)\n\nArguments:\n\ndevice\ninfo::BufferMemoryRequirementsInfo2\nfptr::FunctionPtr\nnext_types::Type...\n\nAPI documentation\n\nget_buffer_memory_requirements_2(device, info::BufferMemoryRequirementsInfo2, fptr::Union{Ptr{Nothing}, Base.CFunction}, next_types::Type...) -> MemoryRequirements2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_buffer_memory_requirements_2-Tuple{Any, BufferMemoryRequirementsInfo2, Vararg{Type}}","page":"API","title":"Vulkan.get_buffer_memory_requirements_2","text":"get_buffer_memory_requirements_2(device, info::BufferMemoryRequirementsInfo2, next_types::Type...)\n\nArguments:\n\ndevice\ninfo::BufferMemoryRequirementsInfo2\nnext_types::Type...\n\nAPI documentation\n\nget_buffer_memory_requirements_2(device, info::BufferMemoryRequirementsInfo2, next_types::Type...) -> MemoryRequirements2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_buffer_opaque_capture_address-Tuple{Any, BufferDeviceAddressInfo, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_buffer_opaque_capture_address","text":"get_buffer_opaque_capture_address(device, info::BufferDeviceAddressInfo, fptr::FunctionPtr)\n\nArguments:\n\ndevice\ninfo::BufferDeviceAddressInfo\nfptr::FunctionPtr\n\nAPI documentation\n\nget_buffer_opaque_capture_address(device, info::BufferDeviceAddressInfo, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_buffer_opaque_capture_address-Tuple{Any, BufferDeviceAddressInfo}","page":"API","title":"Vulkan.get_buffer_opaque_capture_address","text":"get_buffer_opaque_capture_address(device, info::BufferDeviceAddressInfo)\n\nArguments:\n\ndevice\ninfo::BufferDeviceAddressInfo\n\nAPI documentation\n\nget_buffer_opaque_capture_address(device, info::BufferDeviceAddressInfo) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_calibrated_timestamps_ext-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_calibrated_timestamps_ext","text":"get_calibrated_timestamps_ext(device, timestamp_infos::AbstractArray{CalibratedTimestampInfoEXT}, fptr::FunctionPtr)::ResultTypes.Result{Tuple{Vector{UInt64}, UInt64}, VulkanError}\n\nExtension: VK_EXT_calibrated_timestamps\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ntimestamp_infos::AbstractArray{CalibratedTimestampInfoEXT}\nfptr::FunctionPtr\n\nAPI documentation\n\nget_calibrated_timestamps_ext(device, timestamp_infos::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Tuple{Vector{UInt64}, UInt64}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_calibrated_timestamps_ext-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan.get_calibrated_timestamps_ext","text":"get_calibrated_timestamps_ext(device, timestamp_infos::AbstractArray{CalibratedTimestampInfoEXT})::ResultTypes.Result{Tuple{Vector{UInt64}, UInt64}, VulkanError}\n\nExtension: VK_EXT_calibrated_timestamps\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ntimestamp_infos::AbstractArray{CalibratedTimestampInfoEXT}\n\nAPI documentation\n\nget_calibrated_timestamps_ext(device, timestamp_infos::AbstractArray) -> ResultTypes.Result{Tuple{Vector{UInt64}, UInt64}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_deferred_operation_max_concurrency_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_deferred_operation_max_concurrency_khr","text":"get_deferred_operation_max_concurrency_khr(device, operation, fptr::FunctionPtr)\n\nExtension: VK_KHR_deferred_host_operations\n\nArguments:\n\ndevice\noperation\nfptr::FunctionPtr\n\nAPI documentation\n\nget_deferred_operation_max_concurrency_khr(device, operation, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> UInt32\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_deferred_operation_max_concurrency_khr-Tuple{Any, Any}","page":"API","title":"Vulkan.get_deferred_operation_max_concurrency_khr","text":"get_deferred_operation_max_concurrency_khr(device, operation)\n\nExtension: VK_KHR_deferred_host_operations\n\nArguments:\n\ndevice\noperation\n\nAPI documentation\n\nget_deferred_operation_max_concurrency_khr(device, operation) -> UInt32\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_deferred_operation_result_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_deferred_operation_result_khr","text":"get_deferred_operation_result_khr(device, operation, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_deferred_host_operations\n\nReturn codes:\n\nSuccess:\nSUCCESS\nNOT_READY\n\nArguments:\n\ndevice\noperation\nfptr::FunctionPtr\n\nAPI documentation\n\nget_deferred_operation_result_khr(device, operation, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_deferred_operation_result_khr-Tuple{Any, Any}","page":"API","title":"Vulkan.get_deferred_operation_result_khr","text":"get_deferred_operation_result_khr(device, operation)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_deferred_host_operations\n\nReturn codes:\n\nSuccess:\nSUCCESS\nNOT_READY\n\nArguments:\n\ndevice\noperation\n\nAPI documentation\n\nget_deferred_operation_result_khr(device, operation) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_descriptor_set_layout_support-Tuple{Any, DescriptorSetLayoutCreateInfo, Union{Ptr{Nothing}, Base.CFunction}, Vararg{Type}}","page":"API","title":"Vulkan.get_descriptor_set_layout_support","text":"get_descriptor_set_layout_support(device, create_info::DescriptorSetLayoutCreateInfo, fptr::FunctionPtr, next_types::Type...)\n\nArguments:\n\ndevice\ncreate_info::DescriptorSetLayoutCreateInfo\nfptr::FunctionPtr\nnext_types::Type...\n\nAPI documentation\n\nget_descriptor_set_layout_support(device, create_info::DescriptorSetLayoutCreateInfo, fptr::Union{Ptr{Nothing}, Base.CFunction}, next_types::Type...) -> DescriptorSetLayoutSupport\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_descriptor_set_layout_support-Tuple{Any, DescriptorSetLayoutCreateInfo, Vararg{Type}}","page":"API","title":"Vulkan.get_descriptor_set_layout_support","text":"get_descriptor_set_layout_support(device, create_info::DescriptorSetLayoutCreateInfo, next_types::Type...)\n\nArguments:\n\ndevice\ncreate_info::DescriptorSetLayoutCreateInfo\nnext_types::Type...\n\nAPI documentation\n\nget_descriptor_set_layout_support(device, create_info::DescriptorSetLayoutCreateInfo, next_types::Type...) -> DescriptorSetLayoutSupport\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_device_acceleration_structure_compatibility_khr-Tuple{Any, AccelerationStructureVersionInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_device_acceleration_structure_compatibility_khr","text":"get_device_acceleration_structure_compatibility_khr(device, version_info::AccelerationStructureVersionInfoKHR, fptr::FunctionPtr)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ndevice\nversion_info::AccelerationStructureVersionInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\nget_device_acceleration_structure_compatibility_khr(device, version_info::AccelerationStructureVersionInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> AccelerationStructureCompatibilityKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_device_acceleration_structure_compatibility_khr-Tuple{Any, AccelerationStructureVersionInfoKHR}","page":"API","title":"Vulkan.get_device_acceleration_structure_compatibility_khr","text":"get_device_acceleration_structure_compatibility_khr(device, version_info::AccelerationStructureVersionInfoKHR)\n\nExtension: VK_KHR_acceleration_structure\n\nArguments:\n\ndevice\nversion_info::AccelerationStructureVersionInfoKHR\n\nAPI documentation\n\nget_device_acceleration_structure_compatibility_khr(device, version_info::AccelerationStructureVersionInfoKHR) -> AccelerationStructureCompatibilityKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_device_group_peer_memory_features-Tuple{Any, Integer, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_device_group_peer_memory_features","text":"get_device_group_peer_memory_features(device, heap_index::Integer, local_device_index::Integer, remote_device_index::Integer, fptr::FunctionPtr)\n\nArguments:\n\ndevice\nheap_index::Integer\nlocal_device_index::Integer\nremote_device_index::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\nget_device_group_peer_memory_features(device, heap_index::Integer, local_device_index::Integer, remote_device_index::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> PeerMemoryFeatureFlag\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_device_group_peer_memory_features-Tuple{Any, Integer, Integer, Integer}","page":"API","title":"Vulkan.get_device_group_peer_memory_features","text":"get_device_group_peer_memory_features(device, heap_index::Integer, local_device_index::Integer, remote_device_index::Integer)\n\nArguments:\n\ndevice\nheap_index::Integer\nlocal_device_index::Integer\nremote_device_index::Integer\n\nAPI documentation\n\nget_device_group_peer_memory_features(device, heap_index::Integer, local_device_index::Integer, remote_device_index::Integer) -> PeerMemoryFeatureFlag\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_device_group_present_capabilities_khr-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_device_group_present_capabilities_khr","text":"get_device_group_present_capabilities_khr(device, fptr::FunctionPtr)::ResultTypes.Result{DeviceGroupPresentCapabilitiesKHR, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nfptr::FunctionPtr\n\nAPI documentation\n\nget_device_group_present_capabilities_khr(device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{DeviceGroupPresentCapabilitiesKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_device_group_present_capabilities_khr-Tuple{Any}","page":"API","title":"Vulkan.get_device_group_present_capabilities_khr","text":"get_device_group_present_capabilities_khr(device)::ResultTypes.Result{DeviceGroupPresentCapabilitiesKHR, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\n\nAPI documentation\n\nget_device_group_present_capabilities_khr(device) -> ResultTypes.Result{DeviceGroupPresentCapabilitiesKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_device_group_surface_present_modes_khr-Tuple{Any, Any, DeviceGroupPresentModeFlagKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_device_group_surface_present_modes_khr","text":"get_device_group_surface_present_modes_khr(device, surface, modes::DeviceGroupPresentModeFlagKHR, fptr::FunctionPtr)::ResultTypes.Result{DeviceGroupPresentModeFlagKHR, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\ndevice\nsurface (externsync)\nmodes::DeviceGroupPresentModeFlagKHR\nfptr::FunctionPtr\n\nAPI documentation\n\nget_device_group_surface_present_modes_khr(device, surface, modes::DeviceGroupPresentModeFlagKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{DeviceGroupPresentModeFlagKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_device_group_surface_present_modes_khr-Tuple{Any, Any, DeviceGroupPresentModeFlagKHR}","page":"API","title":"Vulkan.get_device_group_surface_present_modes_khr","text":"get_device_group_surface_present_modes_khr(device, surface, modes::DeviceGroupPresentModeFlagKHR)::ResultTypes.Result{DeviceGroupPresentModeFlagKHR, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\ndevice\nsurface (externsync)\nmodes::DeviceGroupPresentModeFlagKHR\n\nAPI documentation\n\nget_device_group_surface_present_modes_khr(device, surface, modes::DeviceGroupPresentModeFlagKHR) -> ResultTypes.Result{DeviceGroupPresentModeFlagKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_device_memory_commitment-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_device_memory_commitment","text":"get_device_memory_commitment(device, memory, fptr::FunctionPtr)\n\nArguments:\n\ndevice\nmemory\nfptr::FunctionPtr\n\nAPI documentation\n\nget_device_memory_commitment(device, memory, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_device_memory_commitment-Tuple{Any, Any}","page":"API","title":"Vulkan.get_device_memory_commitment","text":"get_device_memory_commitment(device, memory)\n\nArguments:\n\ndevice\nmemory\n\nAPI documentation\n\nget_device_memory_commitment(device, memory) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_device_memory_opaque_capture_address-Tuple{Any, DeviceMemoryOpaqueCaptureAddressInfo, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_device_memory_opaque_capture_address","text":"get_device_memory_opaque_capture_address(device, info::DeviceMemoryOpaqueCaptureAddressInfo, fptr::FunctionPtr)\n\nArguments:\n\ndevice\ninfo::DeviceMemoryOpaqueCaptureAddressInfo\nfptr::FunctionPtr\n\nAPI documentation\n\nget_device_memory_opaque_capture_address(device, info::DeviceMemoryOpaqueCaptureAddressInfo, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_device_memory_opaque_capture_address-Tuple{Any, DeviceMemoryOpaqueCaptureAddressInfo}","page":"API","title":"Vulkan.get_device_memory_opaque_capture_address","text":"get_device_memory_opaque_capture_address(device, info::DeviceMemoryOpaqueCaptureAddressInfo)\n\nArguments:\n\ndevice\ninfo::DeviceMemoryOpaqueCaptureAddressInfo\n\nAPI documentation\n\nget_device_memory_opaque_capture_address(device, info::DeviceMemoryOpaqueCaptureAddressInfo) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_device_proc_addr-Tuple{Any, AbstractString, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_device_proc_addr","text":"get_device_proc_addr(device, name::AbstractString, fptr::FunctionPtr)\n\nArguments:\n\ndevice\nname::AbstractString\nfptr::FunctionPtr\n\nAPI documentation\n\nget_device_proc_addr(device, name::AbstractString, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Ptr{Nothing}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_device_proc_addr-Tuple{Any, AbstractString}","page":"API","title":"Vulkan.get_device_proc_addr","text":"get_device_proc_addr(device, name::AbstractString)\n\nArguments:\n\ndevice\nname::AbstractString\n\nAPI documentation\n\nget_device_proc_addr(device, name::AbstractString) -> Ptr{Nothing}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_device_queue-Tuple{Any, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_device_queue","text":"get_device_queue(device, queue_family_index::Integer, queue_index::Integer, fptr::FunctionPtr)\n\nArguments:\n\ndevice\nqueue_family_index::Integer\nqueue_index::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\nget_device_queue(device, queue_family_index::Integer, queue_index::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Queue\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_device_queue-Tuple{Any, Integer, Integer}","page":"API","title":"Vulkan.get_device_queue","text":"get_device_queue(device, queue_family_index::Integer, queue_index::Integer)\n\nArguments:\n\ndevice\nqueue_family_index::Integer\nqueue_index::Integer\n\nAPI documentation\n\nget_device_queue(device, queue_family_index::Integer, queue_index::Integer) -> Queue\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_device_queue_2-Tuple{Any, DeviceQueueInfo2, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_device_queue_2","text":"get_device_queue_2(device, queue_info::DeviceQueueInfo2, fptr::FunctionPtr)\n\nArguments:\n\ndevice\nqueue_info::DeviceQueueInfo2\nfptr::FunctionPtr\n\nAPI documentation\n\nget_device_queue_2(device, queue_info::DeviceQueueInfo2, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Queue\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_device_queue_2-Tuple{Any, DeviceQueueInfo2}","page":"API","title":"Vulkan.get_device_queue_2","text":"get_device_queue_2(device, queue_info::DeviceQueueInfo2)\n\nArguments:\n\ndevice\nqueue_info::DeviceQueueInfo2\n\nAPI documentation\n\nget_device_queue_2(device, queue_info::DeviceQueueInfo2) -> Queue\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_display_mode_properties_2_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_display_mode_properties_2_khr","text":"get_display_mode_properties_2_khr(physical_device, display, fptr::FunctionPtr)::ResultTypes.Result{Vector{DisplayModeProperties2KHR}, VulkanError}\n\nExtension: VK_KHR_get_display_properties2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\ndisplay\nfptr::FunctionPtr\n\nAPI documentation\n\nget_display_mode_properties_2_khr(physical_device, display, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{DisplayModeProperties2KHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_display_mode_properties_2_khr-Tuple{Any, Any}","page":"API","title":"Vulkan.get_display_mode_properties_2_khr","text":"get_display_mode_properties_2_khr(physical_device, display)::ResultTypes.Result{Vector{DisplayModeProperties2KHR}, VulkanError}\n\nExtension: VK_KHR_get_display_properties2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\ndisplay\n\nAPI documentation\n\nget_display_mode_properties_2_khr(physical_device, display) -> ResultTypes.Result{Vector{DisplayModeProperties2KHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_display_mode_properties_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_display_mode_properties_khr","text":"get_display_mode_properties_khr(physical_device, display, fptr::FunctionPtr)::ResultTypes.Result{Vector{DisplayModePropertiesKHR}, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\ndisplay\nfptr::FunctionPtr\n\nAPI documentation\n\nget_display_mode_properties_khr(physical_device, display, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{DisplayModePropertiesKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_display_mode_properties_khr-Tuple{Any, Any}","page":"API","title":"Vulkan.get_display_mode_properties_khr","text":"get_display_mode_properties_khr(physical_device, display)::ResultTypes.Result{Vector{DisplayModePropertiesKHR}, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\ndisplay\n\nAPI documentation\n\nget_display_mode_properties_khr(physical_device, display) -> ResultTypes.Result{Vector{DisplayModePropertiesKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_display_plane_capabilities_2_khr-Tuple{Any, DisplayPlaneInfo2KHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_display_plane_capabilities_2_khr","text":"get_display_plane_capabilities_2_khr(physical_device, display_plane_info::DisplayPlaneInfo2KHR, fptr::FunctionPtr)::ResultTypes.Result{DisplayPlaneCapabilities2KHR, VulkanError}\n\nExtension: VK_KHR_get_display_properties2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\ndisplay_plane_info::DisplayPlaneInfo2KHR\nfptr::FunctionPtr\n\nAPI documentation\n\nget_display_plane_capabilities_2_khr(physical_device, display_plane_info::DisplayPlaneInfo2KHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{DisplayPlaneCapabilities2KHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_display_plane_capabilities_2_khr-Tuple{Any, DisplayPlaneInfo2KHR}","page":"API","title":"Vulkan.get_display_plane_capabilities_2_khr","text":"get_display_plane_capabilities_2_khr(physical_device, display_plane_info::DisplayPlaneInfo2KHR)::ResultTypes.Result{DisplayPlaneCapabilities2KHR, VulkanError}\n\nExtension: VK_KHR_get_display_properties2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\ndisplay_plane_info::DisplayPlaneInfo2KHR\n\nAPI documentation\n\nget_display_plane_capabilities_2_khr(physical_device, display_plane_info::DisplayPlaneInfo2KHR) -> ResultTypes.Result{DisplayPlaneCapabilities2KHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_display_plane_capabilities_khr-Tuple{Any, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_display_plane_capabilities_khr","text":"get_display_plane_capabilities_khr(physical_device, mode, plane_index::Integer, fptr::FunctionPtr)::ResultTypes.Result{DisplayPlaneCapabilitiesKHR, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nmode (externsync)\nplane_index::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\nget_display_plane_capabilities_khr(physical_device, mode, plane_index::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{DisplayPlaneCapabilitiesKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_display_plane_capabilities_khr-Tuple{Any, Any, Integer}","page":"API","title":"Vulkan.get_display_plane_capabilities_khr","text":"get_display_plane_capabilities_khr(physical_device, mode, plane_index::Integer)::ResultTypes.Result{DisplayPlaneCapabilitiesKHR, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nmode (externsync)\nplane_index::Integer\n\nAPI documentation\n\nget_display_plane_capabilities_khr(physical_device, mode, plane_index::Integer) -> ResultTypes.Result{DisplayPlaneCapabilitiesKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_display_plane_supported_displays_khr-Tuple{Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_display_plane_supported_displays_khr","text":"get_display_plane_supported_displays_khr(physical_device, plane_index::Integer, fptr::FunctionPtr)::ResultTypes.Result{Vector{DisplayKHR}, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nplane_index::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\nget_display_plane_supported_displays_khr(physical_device, plane_index::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{DisplayKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_display_plane_supported_displays_khr-Tuple{Any, Integer}","page":"API","title":"Vulkan.get_display_plane_supported_displays_khr","text":"get_display_plane_supported_displays_khr(physical_device, plane_index::Integer)::ResultTypes.Result{Vector{DisplayKHR}, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nplane_index::Integer\n\nAPI documentation\n\nget_display_plane_supported_displays_khr(physical_device, plane_index::Integer) -> ResultTypes.Result{Vector{DisplayKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_event_status-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_event_status","text":"get_event_status(device, event, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nEVENT_SET\nEVENT_RESET\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\nevent\nfptr::FunctionPtr\n\nAPI documentation\n\nget_event_status(device, event, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_event_status-Tuple{Any, Any}","page":"API","title":"Vulkan.get_event_status","text":"get_event_status(device, event)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nEVENT_SET\nEVENT_RESET\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\nevent\n\nAPI documentation\n\nget_event_status(device, event) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_fence_fd_khr-Tuple{Any, FenceGetFdInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_fence_fd_khr","text":"get_fence_fd_khr(device, get_fd_info::FenceGetFdInfoKHR, fptr::FunctionPtr)::ResultTypes.Result{Int, VulkanError}\n\nExtension: VK_KHR_external_fence_fd\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nget_fd_info::FenceGetFdInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\nget_fence_fd_khr(device, get_fd_info::FenceGetFdInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_fence_fd_khr-Tuple{Any, FenceGetFdInfoKHR}","page":"API","title":"Vulkan.get_fence_fd_khr","text":"get_fence_fd_khr(device, get_fd_info::FenceGetFdInfoKHR)::ResultTypes.Result{Int, VulkanError}\n\nExtension: VK_KHR_external_fence_fd\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nget_fd_info::FenceGetFdInfoKHR\n\nAPI documentation\n\nget_fence_fd_khr(device, get_fd_info::FenceGetFdInfoKHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_fence_status-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_fence_status","text":"get_fence_status(device, fence, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nNOT_READY\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\nfence\nfptr::FunctionPtr\n\nAPI documentation\n\nget_fence_status(device, fence, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_fence_status-Tuple{Any, Any}","page":"API","title":"Vulkan.get_fence_status","text":"get_fence_status(device, fence)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nNOT_READY\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\nfence\n\nAPI documentation\n\nget_fence_status(device, fence) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_generated_commands_memory_requirements_nv-Tuple{Any, GeneratedCommandsMemoryRequirementsInfoNV, Union{Ptr{Nothing}, Base.CFunction}, Vararg{Type}}","page":"API","title":"Vulkan.get_generated_commands_memory_requirements_nv","text":"get_generated_commands_memory_requirements_nv(device, info::GeneratedCommandsMemoryRequirementsInfoNV, fptr::FunctionPtr, next_types::Type...)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ndevice\ninfo::GeneratedCommandsMemoryRequirementsInfoNV\nfptr::FunctionPtr\nnext_types::Type...\n\nAPI documentation\n\nget_generated_commands_memory_requirements_nv(device, info::GeneratedCommandsMemoryRequirementsInfoNV, fptr::Union{Ptr{Nothing}, Base.CFunction}, next_types::Type...) -> MemoryRequirements2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_generated_commands_memory_requirements_nv-Tuple{Any, GeneratedCommandsMemoryRequirementsInfoNV, Vararg{Type}}","page":"API","title":"Vulkan.get_generated_commands_memory_requirements_nv","text":"get_generated_commands_memory_requirements_nv(device, info::GeneratedCommandsMemoryRequirementsInfoNV, next_types::Type...)\n\nExtension: VK_NV_device_generated_commands\n\nArguments:\n\ndevice\ninfo::GeneratedCommandsMemoryRequirementsInfoNV\nnext_types::Type...\n\nAPI documentation\n\nget_generated_commands_memory_requirements_nv(device, info::GeneratedCommandsMemoryRequirementsInfoNV, next_types::Type...) -> MemoryRequirements2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_image_drm_format_modifier_properties_ext-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_image_drm_format_modifier_properties_ext","text":"get_image_drm_format_modifier_properties_ext(device, image, fptr::FunctionPtr)::ResultTypes.Result{ImageDrmFormatModifierPropertiesEXT, VulkanError}\n\nExtension: VK_EXT_image_drm_format_modifier\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nimage\nfptr::FunctionPtr\n\nAPI documentation\n\nget_image_drm_format_modifier_properties_ext(device, image, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{ImageDrmFormatModifierPropertiesEXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_image_drm_format_modifier_properties_ext-Tuple{Any, Any}","page":"API","title":"Vulkan.get_image_drm_format_modifier_properties_ext","text":"get_image_drm_format_modifier_properties_ext(device, image)::ResultTypes.Result{ImageDrmFormatModifierPropertiesEXT, VulkanError}\n\nExtension: VK_EXT_image_drm_format_modifier\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nimage\n\nAPI documentation\n\nget_image_drm_format_modifier_properties_ext(device, image) -> ResultTypes.Result{ImageDrmFormatModifierPropertiesEXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_image_memory_requirements-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_image_memory_requirements","text":"get_image_memory_requirements(device, image, fptr::FunctionPtr)\n\nArguments:\n\ndevice\nimage\nfptr::FunctionPtr\n\nAPI documentation\n\nget_image_memory_requirements(device, image, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> MemoryRequirements\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_image_memory_requirements-Tuple{Any, Any}","page":"API","title":"Vulkan.get_image_memory_requirements","text":"get_image_memory_requirements(device, image)\n\nArguments:\n\ndevice\nimage\n\nAPI documentation\n\nget_image_memory_requirements(device, image) -> MemoryRequirements\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_image_memory_requirements_2-Tuple{Any, ImageMemoryRequirementsInfo2, Union{Ptr{Nothing}, Base.CFunction}, Vararg{Type}}","page":"API","title":"Vulkan.get_image_memory_requirements_2","text":"get_image_memory_requirements_2(device, info::ImageMemoryRequirementsInfo2, fptr::FunctionPtr, next_types::Type...)\n\nArguments:\n\ndevice\ninfo::ImageMemoryRequirementsInfo2\nfptr::FunctionPtr\nnext_types::Type...\n\nAPI documentation\n\nget_image_memory_requirements_2(device, info::ImageMemoryRequirementsInfo2, fptr::Union{Ptr{Nothing}, Base.CFunction}, next_types::Type...) -> MemoryRequirements2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_image_memory_requirements_2-Tuple{Any, ImageMemoryRequirementsInfo2, Vararg{Type}}","page":"API","title":"Vulkan.get_image_memory_requirements_2","text":"get_image_memory_requirements_2(device, info::ImageMemoryRequirementsInfo2, next_types::Type...)\n\nArguments:\n\ndevice\ninfo::ImageMemoryRequirementsInfo2\nnext_types::Type...\n\nAPI documentation\n\nget_image_memory_requirements_2(device, info::ImageMemoryRequirementsInfo2, next_types::Type...) -> MemoryRequirements2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_image_sparse_memory_requirements-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_image_sparse_memory_requirements","text":"get_image_sparse_memory_requirements(device, image, fptr::FunctionPtr)\n\nArguments:\n\ndevice\nimage\nfptr::FunctionPtr\n\nAPI documentation\n\nget_image_sparse_memory_requirements(device, image, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Vector{SparseImageMemoryRequirements}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_image_sparse_memory_requirements-Tuple{Any, Any}","page":"API","title":"Vulkan.get_image_sparse_memory_requirements","text":"get_image_sparse_memory_requirements(device, image)\n\nArguments:\n\ndevice\nimage\n\nAPI documentation\n\nget_image_sparse_memory_requirements(device, image) -> Vector{SparseImageMemoryRequirements}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_image_sparse_memory_requirements_2-Tuple{Any, ImageSparseMemoryRequirementsInfo2, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_image_sparse_memory_requirements_2","text":"get_image_sparse_memory_requirements_2(device, info::ImageSparseMemoryRequirementsInfo2, fptr::FunctionPtr)\n\nArguments:\n\ndevice\ninfo::ImageSparseMemoryRequirementsInfo2\nfptr::FunctionPtr\n\nAPI documentation\n\nget_image_sparse_memory_requirements_2(device, info::ImageSparseMemoryRequirementsInfo2, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Vector{SparseImageMemoryRequirements2}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_image_sparse_memory_requirements_2-Tuple{Any, ImageSparseMemoryRequirementsInfo2}","page":"API","title":"Vulkan.get_image_sparse_memory_requirements_2","text":"get_image_sparse_memory_requirements_2(device, info::ImageSparseMemoryRequirementsInfo2)\n\nArguments:\n\ndevice\ninfo::ImageSparseMemoryRequirementsInfo2\n\nAPI documentation\n\nget_image_sparse_memory_requirements_2(device, info::ImageSparseMemoryRequirementsInfo2) -> Vector{SparseImageMemoryRequirements2}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_image_subresource_layout-Tuple{Any, Any, ImageSubresource, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_image_subresource_layout","text":"get_image_subresource_layout(device, image, subresource::ImageSubresource, fptr::FunctionPtr)\n\nArguments:\n\ndevice\nimage\nsubresource::ImageSubresource\nfptr::FunctionPtr\n\nAPI documentation\n\nget_image_subresource_layout(device, image, subresource::ImageSubresource, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> SubresourceLayout\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_image_subresource_layout-Tuple{Any, Any, ImageSubresource}","page":"API","title":"Vulkan.get_image_subresource_layout","text":"get_image_subresource_layout(device, image, subresource::ImageSubresource)\n\nArguments:\n\ndevice\nimage\nsubresource::ImageSubresource\n\nAPI documentation\n\nget_image_subresource_layout(device, image, subresource::ImageSubresource) -> SubresourceLayout\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_image_view_address_nvx-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_image_view_address_nvx","text":"get_image_view_address_nvx(device, image_view, fptr::FunctionPtr)::ResultTypes.Result{ImageViewAddressPropertiesNVX, VulkanError}\n\nExtension: VK_NVX_image_view_handle\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_UNKNOWN\n\nArguments:\n\ndevice\nimage_view\nfptr::FunctionPtr\n\nAPI documentation\n\nget_image_view_address_nvx(device, image_view, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{ImageViewAddressPropertiesNVX, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_image_view_address_nvx-Tuple{Any, Any}","page":"API","title":"Vulkan.get_image_view_address_nvx","text":"get_image_view_address_nvx(device, image_view)::ResultTypes.Result{ImageViewAddressPropertiesNVX, VulkanError}\n\nExtension: VK_NVX_image_view_handle\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_UNKNOWN\n\nArguments:\n\ndevice\nimage_view\n\nAPI documentation\n\nget_image_view_address_nvx(device, image_view) -> ResultTypes.Result{ImageViewAddressPropertiesNVX, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_image_view_handle_nvx-Tuple{Any, ImageViewHandleInfoNVX, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_image_view_handle_nvx","text":"get_image_view_handle_nvx(device, info::ImageViewHandleInfoNVX, fptr::FunctionPtr)\n\nExtension: VK_NVX_image_view_handle\n\nArguments:\n\ndevice\ninfo::ImageViewHandleInfoNVX\nfptr::FunctionPtr\n\nAPI documentation\n\nget_image_view_handle_nvx(device, info::ImageViewHandleInfoNVX, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> UInt32\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_image_view_handle_nvx-Tuple{Any, ImageViewHandleInfoNVX}","page":"API","title":"Vulkan.get_image_view_handle_nvx","text":"get_image_view_handle_nvx(device, info::ImageViewHandleInfoNVX)\n\nExtension: VK_NVX_image_view_handle\n\nArguments:\n\ndevice\ninfo::ImageViewHandleInfoNVX\n\nAPI documentation\n\nget_image_view_handle_nvx(device, info::ImageViewHandleInfoNVX) -> UInt32\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_instance_proc_addr-Tuple{AbstractString, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_instance_proc_addr","text":"get_instance_proc_addr(name::AbstractString, fptr::FunctionPtr; instance = C_NULL)\n\nArguments:\n\nname::AbstractString\nfptr::FunctionPtr\ninstance: defaults to C_NULL\n\nAPI documentation\n\nget_instance_proc_addr(name::AbstractString, fptr::Union{Ptr{Nothing}, Base.CFunction}; instance) -> Ptr{Nothing}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_instance_proc_addr-Tuple{AbstractString}","page":"API","title":"Vulkan.get_instance_proc_addr","text":"get_instance_proc_addr(name::AbstractString; instance = C_NULL)\n\nArguments:\n\nname::AbstractString\ninstance: defaults to C_NULL\n\nAPI documentation\n\nget_instance_proc_addr(name::AbstractString; instance) -> Ptr{Nothing}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_memory_fd_khr-Tuple{Any, MemoryGetFdInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_memory_fd_khr","text":"get_memory_fd_khr(device, get_fd_info::MemoryGetFdInfoKHR, fptr::FunctionPtr)::ResultTypes.Result{Int, VulkanError}\n\nExtension: VK_KHR_external_memory_fd\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nget_fd_info::MemoryGetFdInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\nget_memory_fd_khr(device, get_fd_info::MemoryGetFdInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_memory_fd_khr-Tuple{Any, MemoryGetFdInfoKHR}","page":"API","title":"Vulkan.get_memory_fd_khr","text":"get_memory_fd_khr(device, get_fd_info::MemoryGetFdInfoKHR)::ResultTypes.Result{Int, VulkanError}\n\nExtension: VK_KHR_external_memory_fd\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nget_fd_info::MemoryGetFdInfoKHR\n\nAPI documentation\n\nget_memory_fd_khr(device, get_fd_info::MemoryGetFdInfoKHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_memory_fd_properties_khr-Tuple{Any, ExternalMemoryHandleTypeFlag, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_memory_fd_properties_khr","text":"get_memory_fd_properties_khr(device, handle_type::ExternalMemoryHandleTypeFlag, fd::Integer, fptr::FunctionPtr)::ResultTypes.Result{MemoryFdPropertiesKHR, VulkanError}\n\nExtension: VK_KHR_external_memory_fd\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\n\nArguments:\n\ndevice\nhandle_type::ExternalMemoryHandleTypeFlag\nfd::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\nget_memory_fd_properties_khr(device, handle_type::ExternalMemoryHandleTypeFlag, fd::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{MemoryFdPropertiesKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_memory_fd_properties_khr-Tuple{Any, ExternalMemoryHandleTypeFlag, Integer}","page":"API","title":"Vulkan.get_memory_fd_properties_khr","text":"get_memory_fd_properties_khr(device, handle_type::ExternalMemoryHandleTypeFlag, fd::Integer)::ResultTypes.Result{MemoryFdPropertiesKHR, VulkanError}\n\nExtension: VK_KHR_external_memory_fd\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\n\nArguments:\n\ndevice\nhandle_type::ExternalMemoryHandleTypeFlag\nfd::Integer\n\nAPI documentation\n\nget_memory_fd_properties_khr(device, handle_type::ExternalMemoryHandleTypeFlag, fd::Integer) -> ResultTypes.Result{MemoryFdPropertiesKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_memory_host_pointer_properties_ext-Tuple{Any, ExternalMemoryHandleTypeFlag, Ptr{Nothing}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_memory_host_pointer_properties_ext","text":"get_memory_host_pointer_properties_ext(device, handle_type::ExternalMemoryHandleTypeFlag, host_pointer::Ptr{Cvoid}, fptr::FunctionPtr)::ResultTypes.Result{MemoryHostPointerPropertiesEXT, VulkanError}\n\nExtension: VK_EXT_external_memory_host\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\n\nArguments:\n\ndevice\nhandle_type::ExternalMemoryHandleTypeFlag\nhost_pointer::Ptr{Cvoid}\nfptr::FunctionPtr\n\nAPI documentation\n\nget_memory_host_pointer_properties_ext(device, handle_type::ExternalMemoryHandleTypeFlag, host_pointer::Ptr{Nothing}, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{MemoryHostPointerPropertiesEXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_memory_host_pointer_properties_ext-Tuple{Any, ExternalMemoryHandleTypeFlag, Ptr{Nothing}}","page":"API","title":"Vulkan.get_memory_host_pointer_properties_ext","text":"get_memory_host_pointer_properties_ext(device, handle_type::ExternalMemoryHandleTypeFlag, host_pointer::Ptr{Cvoid})::ResultTypes.Result{MemoryHostPointerPropertiesEXT, VulkanError}\n\nExtension: VK_EXT_external_memory_host\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\n\nArguments:\n\ndevice\nhandle_type::ExternalMemoryHandleTypeFlag\nhost_pointer::Ptr{Cvoid}\n\nAPI documentation\n\nget_memory_host_pointer_properties_ext(device, handle_type::ExternalMemoryHandleTypeFlag, host_pointer::Ptr{Nothing}) -> ResultTypes.Result{MemoryHostPointerPropertiesEXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_past_presentation_timing_google-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_past_presentation_timing_google","text":"get_past_presentation_timing_google(device, swapchain, fptr::FunctionPtr)::ResultTypes.Result{Vector{PastPresentationTimingGOOGLE}, VulkanError}\n\nExtension: VK_GOOGLE_display_timing\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\ndevice\nswapchain (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\nget_past_presentation_timing_google(device, swapchain, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{PastPresentationTimingGOOGLE}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_past_presentation_timing_google-Tuple{Any, Any}","page":"API","title":"Vulkan.get_past_presentation_timing_google","text":"get_past_presentation_timing_google(device, swapchain)::ResultTypes.Result{Vector{PastPresentationTimingGOOGLE}, VulkanError}\n\nExtension: VK_GOOGLE_display_timing\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\ndevice\nswapchain (externsync)\n\nAPI documentation\n\nget_past_presentation_timing_google(device, swapchain) -> ResultTypes.Result{Vector{PastPresentationTimingGOOGLE}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_performance_parameter_intel-Tuple{Any, PerformanceParameterTypeINTEL, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_performance_parameter_intel","text":"get_performance_parameter_intel(device, parameter::PerformanceParameterTypeINTEL, fptr::FunctionPtr)::ResultTypes.Result{PerformanceValueINTEL, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nparameter::PerformanceParameterTypeINTEL\nfptr::FunctionPtr\n\nAPI documentation\n\nget_performance_parameter_intel(device, parameter::PerformanceParameterTypeINTEL, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{PerformanceValueINTEL, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_performance_parameter_intel-Tuple{Any, PerformanceParameterTypeINTEL}","page":"API","title":"Vulkan.get_performance_parameter_intel","text":"get_performance_parameter_intel(device, parameter::PerformanceParameterTypeINTEL)::ResultTypes.Result{PerformanceValueINTEL, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nparameter::PerformanceParameterTypeINTEL\n\nAPI documentation\n\nget_performance_parameter_intel(device, parameter::PerformanceParameterTypeINTEL) -> ResultTypes.Result{PerformanceValueINTEL, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_calibrateable_time_domains_ext-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_calibrateable_time_domains_ext","text":"get_physical_device_calibrateable_time_domains_ext(physical_device, fptr::FunctionPtr)::ResultTypes.Result{Vector{TimeDomainEXT}, VulkanError}\n\nExtension: VK_EXT_calibrated_timestamps\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_calibrateable_time_domains_ext(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{TimeDomainEXT}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_calibrateable_time_domains_ext-Tuple{Any}","page":"API","title":"Vulkan.get_physical_device_calibrateable_time_domains_ext","text":"get_physical_device_calibrateable_time_domains_ext(physical_device)::ResultTypes.Result{Vector{TimeDomainEXT}, VulkanError}\n\nExtension: VK_EXT_calibrated_timestamps\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\nget_physical_device_calibrateable_time_domains_ext(physical_device) -> ResultTypes.Result{Vector{TimeDomainEXT}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_cooperative_matrix_properties_nv-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_cooperative_matrix_properties_nv","text":"get_physical_device_cooperative_matrix_properties_nv(physical_device, fptr::FunctionPtr)::ResultTypes.Result{Vector{CooperativeMatrixPropertiesNV}, VulkanError}\n\nExtension: VK_NV_cooperative_matrix\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_cooperative_matrix_properties_nv(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{CooperativeMatrixPropertiesNV}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_cooperative_matrix_properties_nv-Tuple{Any}","page":"API","title":"Vulkan.get_physical_device_cooperative_matrix_properties_nv","text":"get_physical_device_cooperative_matrix_properties_nv(physical_device)::ResultTypes.Result{Vector{CooperativeMatrixPropertiesNV}, VulkanError}\n\nExtension: VK_NV_cooperative_matrix\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\nget_physical_device_cooperative_matrix_properties_nv(physical_device) -> ResultTypes.Result{Vector{CooperativeMatrixPropertiesNV}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_display_plane_properties_2_khr-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_display_plane_properties_2_khr","text":"get_physical_device_display_plane_properties_2_khr(physical_device, fptr::FunctionPtr)::ResultTypes.Result{Vector{DisplayPlaneProperties2KHR}, VulkanError}\n\nExtension: VK_KHR_get_display_properties2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_display_plane_properties_2_khr(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{DisplayPlaneProperties2KHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_display_plane_properties_2_khr-Tuple{Any}","page":"API","title":"Vulkan.get_physical_device_display_plane_properties_2_khr","text":"get_physical_device_display_plane_properties_2_khr(physical_device)::ResultTypes.Result{Vector{DisplayPlaneProperties2KHR}, VulkanError}\n\nExtension: VK_KHR_get_display_properties2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\nget_physical_device_display_plane_properties_2_khr(physical_device) -> ResultTypes.Result{Vector{DisplayPlaneProperties2KHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_display_plane_properties_khr-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_display_plane_properties_khr","text":"get_physical_device_display_plane_properties_khr(physical_device, fptr::FunctionPtr)::ResultTypes.Result{Vector{DisplayPlanePropertiesKHR}, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_display_plane_properties_khr(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{DisplayPlanePropertiesKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_display_plane_properties_khr-Tuple{Any}","page":"API","title":"Vulkan.get_physical_device_display_plane_properties_khr","text":"get_physical_device_display_plane_properties_khr(physical_device)::ResultTypes.Result{Vector{DisplayPlanePropertiesKHR}, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\nget_physical_device_display_plane_properties_khr(physical_device) -> ResultTypes.Result{Vector{DisplayPlanePropertiesKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_display_properties_2_khr-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_display_properties_2_khr","text":"get_physical_device_display_properties_2_khr(physical_device, fptr::FunctionPtr)::ResultTypes.Result{Vector{DisplayProperties2KHR}, VulkanError}\n\nExtension: VK_KHR_get_display_properties2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_display_properties_2_khr(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{DisplayProperties2KHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_display_properties_2_khr-Tuple{Any}","page":"API","title":"Vulkan.get_physical_device_display_properties_2_khr","text":"get_physical_device_display_properties_2_khr(physical_device)::ResultTypes.Result{Vector{DisplayProperties2KHR}, VulkanError}\n\nExtension: VK_KHR_get_display_properties2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\nget_physical_device_display_properties_2_khr(physical_device) -> ResultTypes.Result{Vector{DisplayProperties2KHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_display_properties_khr-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_display_properties_khr","text":"get_physical_device_display_properties_khr(physical_device, fptr::FunctionPtr)::ResultTypes.Result{Vector{DisplayPropertiesKHR}, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_display_properties_khr(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{DisplayPropertiesKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_display_properties_khr-Tuple{Any}","page":"API","title":"Vulkan.get_physical_device_display_properties_khr","text":"get_physical_device_display_properties_khr(physical_device)::ResultTypes.Result{Vector{DisplayPropertiesKHR}, VulkanError}\n\nExtension: VK_KHR_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\nget_physical_device_display_properties_khr(physical_device) -> ResultTypes.Result{Vector{DisplayPropertiesKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_external_buffer_properties-Tuple{Any, PhysicalDeviceExternalBufferInfo, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_external_buffer_properties","text":"get_physical_device_external_buffer_properties(physical_device, external_buffer_info::PhysicalDeviceExternalBufferInfo, fptr::FunctionPtr)\n\nArguments:\n\nphysical_device\nexternal_buffer_info::PhysicalDeviceExternalBufferInfo\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_external_buffer_properties(physical_device, external_buffer_info::PhysicalDeviceExternalBufferInfo, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ExternalBufferProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_external_buffer_properties-Tuple{Any, PhysicalDeviceExternalBufferInfo}","page":"API","title":"Vulkan.get_physical_device_external_buffer_properties","text":"get_physical_device_external_buffer_properties(physical_device, external_buffer_info::PhysicalDeviceExternalBufferInfo)\n\nArguments:\n\nphysical_device\nexternal_buffer_info::PhysicalDeviceExternalBufferInfo\n\nAPI documentation\n\nget_physical_device_external_buffer_properties(physical_device, external_buffer_info::PhysicalDeviceExternalBufferInfo) -> ExternalBufferProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_external_fence_properties-Tuple{Any, PhysicalDeviceExternalFenceInfo, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_external_fence_properties","text":"get_physical_device_external_fence_properties(physical_device, external_fence_info::PhysicalDeviceExternalFenceInfo, fptr::FunctionPtr)\n\nArguments:\n\nphysical_device\nexternal_fence_info::PhysicalDeviceExternalFenceInfo\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_external_fence_properties(physical_device, external_fence_info::PhysicalDeviceExternalFenceInfo, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ExternalFenceProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_external_fence_properties-Tuple{Any, PhysicalDeviceExternalFenceInfo}","page":"API","title":"Vulkan.get_physical_device_external_fence_properties","text":"get_physical_device_external_fence_properties(physical_device, external_fence_info::PhysicalDeviceExternalFenceInfo)\n\nArguments:\n\nphysical_device\nexternal_fence_info::PhysicalDeviceExternalFenceInfo\n\nAPI documentation\n\nget_physical_device_external_fence_properties(physical_device, external_fence_info::PhysicalDeviceExternalFenceInfo) -> ExternalFenceProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_external_image_format_properties_nv-Tuple{Any, Format, ImageType, ImageTiling, ImageUsageFlag, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_external_image_format_properties_nv","text":"get_physical_device_external_image_format_properties_nv(physical_device, format::Format, type::ImageType, tiling::ImageTiling, usage::ImageUsageFlag, fptr::FunctionPtr; flags = 0, external_handle_type = 0)::ResultTypes.Result{ExternalImageFormatPropertiesNV, VulkanError}\n\nExtension: VK_NV_external_memory_capabilities\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_FORMAT_NOT_SUPPORTED\n\nArguments:\n\nphysical_device\nformat::Format\ntype::ImageType\ntiling::ImageTiling\nusage::ImageUsageFlag\nfptr::FunctionPtr\nflags: defaults to 0\nexternal_handle_type: defaults to 0\n\nAPI documentation\n\nget_physical_device_external_image_format_properties_nv(physical_device, format::Format, type::ImageType, tiling::ImageTiling, usage::ImageUsageFlag, fptr::Union{Ptr{Nothing}, Base.CFunction}; flags, external_handle_type) -> ResultTypes.Result{ExternalImageFormatPropertiesNV, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_external_image_format_properties_nv-Tuple{Any, Format, ImageType, ImageTiling, ImageUsageFlag}","page":"API","title":"Vulkan.get_physical_device_external_image_format_properties_nv","text":"get_physical_device_external_image_format_properties_nv(physical_device, format::Format, type::ImageType, tiling::ImageTiling, usage::ImageUsageFlag; flags = 0, external_handle_type = 0)::ResultTypes.Result{ExternalImageFormatPropertiesNV, VulkanError}\n\nExtension: VK_NV_external_memory_capabilities\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_FORMAT_NOT_SUPPORTED\n\nArguments:\n\nphysical_device\nformat::Format\ntype::ImageType\ntiling::ImageTiling\nusage::ImageUsageFlag\nflags: defaults to 0\nexternal_handle_type: defaults to 0\n\nAPI documentation\n\nget_physical_device_external_image_format_properties_nv(physical_device, format::Format, type::ImageType, tiling::ImageTiling, usage::ImageUsageFlag; flags, external_handle_type) -> ResultTypes.Result{ExternalImageFormatPropertiesNV, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_external_semaphore_properties-Tuple{Any, PhysicalDeviceExternalSemaphoreInfo, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_external_semaphore_properties","text":"get_physical_device_external_semaphore_properties(physical_device, external_semaphore_info::PhysicalDeviceExternalSemaphoreInfo, fptr::FunctionPtr)\n\nArguments:\n\nphysical_device\nexternal_semaphore_info::PhysicalDeviceExternalSemaphoreInfo\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_external_semaphore_properties(physical_device, external_semaphore_info::PhysicalDeviceExternalSemaphoreInfo, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ExternalSemaphoreProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_external_semaphore_properties-Tuple{Any, PhysicalDeviceExternalSemaphoreInfo}","page":"API","title":"Vulkan.get_physical_device_external_semaphore_properties","text":"get_physical_device_external_semaphore_properties(physical_device, external_semaphore_info::PhysicalDeviceExternalSemaphoreInfo)\n\nArguments:\n\nphysical_device\nexternal_semaphore_info::PhysicalDeviceExternalSemaphoreInfo\n\nAPI documentation\n\nget_physical_device_external_semaphore_properties(physical_device, external_semaphore_info::PhysicalDeviceExternalSemaphoreInfo) -> ExternalSemaphoreProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_features-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_features","text":"get_physical_device_features(physical_device, fptr::FunctionPtr)\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_features(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> PhysicalDeviceFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_features-Tuple{Any}","page":"API","title":"Vulkan.get_physical_device_features","text":"get_physical_device_features(physical_device)\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\nget_physical_device_features(physical_device) -> PhysicalDeviceFeatures\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_features_2-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}, Vararg{Type}}","page":"API","title":"Vulkan.get_physical_device_features_2","text":"get_physical_device_features_2(physical_device, fptr::FunctionPtr, next_types::Type...)\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\nnext_types::Type...\n\nAPI documentation\n\nget_physical_device_features_2(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}, next_types::Type...) -> PhysicalDeviceFeatures2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_features_2-Tuple{Any, Vararg{Type}}","page":"API","title":"Vulkan.get_physical_device_features_2","text":"get_physical_device_features_2(physical_device, next_types::Type...)\n\nArguments:\n\nphysical_device\nnext_types::Type...\n\nAPI documentation\n\nget_physical_device_features_2(physical_device, next_types::Type...) -> PhysicalDeviceFeatures2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_format_properties-Tuple{Any, Format, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_format_properties","text":"get_physical_device_format_properties(physical_device, format::Format, fptr::FunctionPtr)\n\nArguments:\n\nphysical_device\nformat::Format\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_format_properties(physical_device, format::Format, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> FormatProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_format_properties-Tuple{Any, Format}","page":"API","title":"Vulkan.get_physical_device_format_properties","text":"get_physical_device_format_properties(physical_device, format::Format)\n\nArguments:\n\nphysical_device\nformat::Format\n\nAPI documentation\n\nget_physical_device_format_properties(physical_device, format::Format) -> FormatProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_format_properties_2-Tuple{Any, Format, Union{Ptr{Nothing}, Base.CFunction}, Vararg{Type}}","page":"API","title":"Vulkan.get_physical_device_format_properties_2","text":"get_physical_device_format_properties_2(physical_device, format::Format, fptr::FunctionPtr, next_types::Type...)\n\nArguments:\n\nphysical_device\nformat::Format\nfptr::FunctionPtr\nnext_types::Type...\n\nAPI documentation\n\nget_physical_device_format_properties_2(physical_device, format::Format, fptr::Union{Ptr{Nothing}, Base.CFunction}, next_types::Type...) -> FormatProperties2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_format_properties_2-Tuple{Any, Format, Vararg{Type}}","page":"API","title":"Vulkan.get_physical_device_format_properties_2","text":"get_physical_device_format_properties_2(physical_device, format::Format, next_types::Type...)\n\nArguments:\n\nphysical_device\nformat::Format\nnext_types::Type...\n\nAPI documentation\n\nget_physical_device_format_properties_2(physical_device, format::Format, next_types::Type...) -> FormatProperties2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_fragment_shading_rates_khr-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_fragment_shading_rates_khr","text":"get_physical_device_fragment_shading_rates_khr(physical_device, fptr::FunctionPtr)::ResultTypes.Result{Vector{PhysicalDeviceFragmentShadingRateKHR}, VulkanError}\n\nExtension: VK_KHR_fragment_shading_rate\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_fragment_shading_rates_khr(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{PhysicalDeviceFragmentShadingRateKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_fragment_shading_rates_khr-Tuple{Any}","page":"API","title":"Vulkan.get_physical_device_fragment_shading_rates_khr","text":"get_physical_device_fragment_shading_rates_khr(physical_device)::ResultTypes.Result{Vector{PhysicalDeviceFragmentShadingRateKHR}, VulkanError}\n\nExtension: VK_KHR_fragment_shading_rate\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\nget_physical_device_fragment_shading_rates_khr(physical_device) -> ResultTypes.Result{Vector{PhysicalDeviceFragmentShadingRateKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_image_format_properties-Tuple{Any, Format, ImageType, ImageTiling, ImageUsageFlag, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_image_format_properties","text":"get_physical_device_image_format_properties(physical_device, format::Format, type::ImageType, tiling::ImageTiling, usage::ImageUsageFlag, fptr::FunctionPtr; flags = 0)::ResultTypes.Result{ImageFormatProperties, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_FORMAT_NOT_SUPPORTED\n\nArguments:\n\nphysical_device\nformat::Format\ntype::ImageType\ntiling::ImageTiling\nusage::ImageUsageFlag\nfptr::FunctionPtr\nflags: defaults to 0\n\nAPI documentation\n\nget_physical_device_image_format_properties(physical_device, format::Format, type::ImageType, tiling::ImageTiling, usage::ImageUsageFlag, fptr::Union{Ptr{Nothing}, Base.CFunction}; flags) -> ResultTypes.Result{ImageFormatProperties, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_image_format_properties-Tuple{Any, Format, ImageType, ImageTiling, ImageUsageFlag}","page":"API","title":"Vulkan.get_physical_device_image_format_properties","text":"get_physical_device_image_format_properties(physical_device, format::Format, type::ImageType, tiling::ImageTiling, usage::ImageUsageFlag; flags = 0)::ResultTypes.Result{ImageFormatProperties, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_FORMAT_NOT_SUPPORTED\n\nArguments:\n\nphysical_device\nformat::Format\ntype::ImageType\ntiling::ImageTiling\nusage::ImageUsageFlag\nflags: defaults to 0\n\nAPI documentation\n\nget_physical_device_image_format_properties(physical_device, format::Format, type::ImageType, tiling::ImageTiling, usage::ImageUsageFlag; flags) -> ResultTypes.Result{ImageFormatProperties, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_image_format_properties_2-Tuple{Any, PhysicalDeviceImageFormatInfo2, Union{Ptr{Nothing}, Base.CFunction}, Vararg{Type}}","page":"API","title":"Vulkan.get_physical_device_image_format_properties_2","text":"get_physical_device_image_format_properties_2(physical_device, image_format_info::PhysicalDeviceImageFormatInfo2, fptr::FunctionPtr, next_types::Type...)::ResultTypes.Result{ImageFormatProperties2, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_FORMAT_NOT_SUPPORTED\n\nArguments:\n\nphysical_device\nimage_format_info::PhysicalDeviceImageFormatInfo2\nfptr::FunctionPtr\nnext_types::Type...\n\nAPI documentation\n\nget_physical_device_image_format_properties_2(physical_device, image_format_info::PhysicalDeviceImageFormatInfo2, fptr::Union{Ptr{Nothing}, Base.CFunction}, next_types::Type...) -> ResultTypes.Result{ImageFormatProperties2, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_image_format_properties_2-Tuple{Any, PhysicalDeviceImageFormatInfo2, Vararg{Type}}","page":"API","title":"Vulkan.get_physical_device_image_format_properties_2","text":"get_physical_device_image_format_properties_2(physical_device, image_format_info::PhysicalDeviceImageFormatInfo2, next_types::Type...)::ResultTypes.Result{ImageFormatProperties2, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_FORMAT_NOT_SUPPORTED\n\nArguments:\n\nphysical_device\nimage_format_info::PhysicalDeviceImageFormatInfo2\nnext_types::Type...\n\nAPI documentation\n\nget_physical_device_image_format_properties_2(physical_device, image_format_info::PhysicalDeviceImageFormatInfo2, next_types::Type...) -> ResultTypes.Result{ImageFormatProperties2, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_memory_properties-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_memory_properties","text":"get_physical_device_memory_properties(physical_device, fptr::FunctionPtr)\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_memory_properties(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> PhysicalDeviceMemoryProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_memory_properties-Tuple{Any}","page":"API","title":"Vulkan.get_physical_device_memory_properties","text":"get_physical_device_memory_properties(physical_device)\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\nget_physical_device_memory_properties(physical_device) -> PhysicalDeviceMemoryProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_memory_properties_2-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}, Vararg{Type}}","page":"API","title":"Vulkan.get_physical_device_memory_properties_2","text":"get_physical_device_memory_properties_2(physical_device, fptr::FunctionPtr, next_types::Type...)\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\nnext_types::Type...\n\nAPI documentation\n\nget_physical_device_memory_properties_2(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}, next_types::Type...) -> PhysicalDeviceMemoryProperties2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_memory_properties_2-Tuple{Any, Vararg{Type}}","page":"API","title":"Vulkan.get_physical_device_memory_properties_2","text":"get_physical_device_memory_properties_2(physical_device, next_types::Type...)\n\nArguments:\n\nphysical_device\nnext_types::Type...\n\nAPI documentation\n\nget_physical_device_memory_properties_2(physical_device, next_types::Type...) -> PhysicalDeviceMemoryProperties2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_multisample_properties_ext-Tuple{Any, SampleCountFlag, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_multisample_properties_ext","text":"get_physical_device_multisample_properties_ext(physical_device, samples::SampleCountFlag, fptr::FunctionPtr)\n\nExtension: VK_EXT_sample_locations\n\nArguments:\n\nphysical_device\nsamples::SampleCountFlag\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_multisample_properties_ext(physical_device, samples::SampleCountFlag, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> MultisamplePropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_multisample_properties_ext-Tuple{Any, SampleCountFlag}","page":"API","title":"Vulkan.get_physical_device_multisample_properties_ext","text":"get_physical_device_multisample_properties_ext(physical_device, samples::SampleCountFlag)\n\nExtension: VK_EXT_sample_locations\n\nArguments:\n\nphysical_device\nsamples::SampleCountFlag\n\nAPI documentation\n\nget_physical_device_multisample_properties_ext(physical_device, samples::SampleCountFlag) -> MultisamplePropertiesEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_present_rectangles_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_present_rectangles_khr","text":"get_physical_device_present_rectangles_khr(physical_device, surface, fptr::FunctionPtr)::ResultTypes.Result{Vector{Rect2D}, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nsurface (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_present_rectangles_khr(physical_device, surface, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{Rect2D}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_present_rectangles_khr-Tuple{Any, Any}","page":"API","title":"Vulkan.get_physical_device_present_rectangles_khr","text":"get_physical_device_present_rectangles_khr(physical_device, surface)::ResultTypes.Result{Vector{Rect2D}, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nsurface (externsync)\n\nAPI documentation\n\nget_physical_device_present_rectangles_khr(physical_device, surface) -> ResultTypes.Result{Vector{Rect2D}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_properties-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_properties","text":"get_physical_device_properties(physical_device, fptr::FunctionPtr)\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_properties(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> PhysicalDeviceProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_properties-Tuple{Any}","page":"API","title":"Vulkan.get_physical_device_properties","text":"get_physical_device_properties(physical_device)\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\nget_physical_device_properties(physical_device) -> PhysicalDeviceProperties\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_properties_2-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}, Vararg{Type}}","page":"API","title":"Vulkan.get_physical_device_properties_2","text":"get_physical_device_properties_2(physical_device, fptr::FunctionPtr, next_types::Type...)\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\nnext_types::Type...\n\nAPI documentation\n\nget_physical_device_properties_2(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}, next_types::Type...) -> PhysicalDeviceProperties2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_properties_2-Tuple{Any, Vararg{Type}}","page":"API","title":"Vulkan.get_physical_device_properties_2","text":"get_physical_device_properties_2(physical_device, next_types::Type...)\n\nArguments:\n\nphysical_device\nnext_types::Type...\n\nAPI documentation\n\nget_physical_device_properties_2(physical_device, next_types::Type...) -> PhysicalDeviceProperties2\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_queue_family_performance_query_passes_khr-Tuple{Any, QueryPoolPerformanceCreateInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_queue_family_performance_query_passes_khr","text":"get_physical_device_queue_family_performance_query_passes_khr(physical_device, performance_query_create_info::QueryPoolPerformanceCreateInfoKHR, fptr::FunctionPtr)\n\nExtension: VK_KHR_performance_query\n\nArguments:\n\nphysical_device\nperformance_query_create_info::QueryPoolPerformanceCreateInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_queue_family_performance_query_passes_khr(physical_device, performance_query_create_info::QueryPoolPerformanceCreateInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> UInt32\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_queue_family_performance_query_passes_khr-Tuple{Any, QueryPoolPerformanceCreateInfoKHR}","page":"API","title":"Vulkan.get_physical_device_queue_family_performance_query_passes_khr","text":"get_physical_device_queue_family_performance_query_passes_khr(physical_device, performance_query_create_info::QueryPoolPerformanceCreateInfoKHR)\n\nExtension: VK_KHR_performance_query\n\nArguments:\n\nphysical_device\nperformance_query_create_info::QueryPoolPerformanceCreateInfoKHR\n\nAPI documentation\n\nget_physical_device_queue_family_performance_query_passes_khr(physical_device, performance_query_create_info::QueryPoolPerformanceCreateInfoKHR) -> UInt32\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_queue_family_properties-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_queue_family_properties","text":"get_physical_device_queue_family_properties(physical_device, fptr::FunctionPtr)\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_queue_family_properties(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Vector{QueueFamilyProperties}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_queue_family_properties-Tuple{Any}","page":"API","title":"Vulkan.get_physical_device_queue_family_properties","text":"get_physical_device_queue_family_properties(physical_device)\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\nget_physical_device_queue_family_properties(physical_device) -> Vector{QueueFamilyProperties}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_queue_family_properties_2-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_queue_family_properties_2","text":"get_physical_device_queue_family_properties_2(physical_device, fptr::FunctionPtr)\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_queue_family_properties_2(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Vector{QueueFamilyProperties2}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_queue_family_properties_2-Tuple{Any}","page":"API","title":"Vulkan.get_physical_device_queue_family_properties_2","text":"get_physical_device_queue_family_properties_2(physical_device)\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\nget_physical_device_queue_family_properties_2(physical_device) -> Vector{QueueFamilyProperties2}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_sparse_image_format_properties-Tuple{Any, Format, ImageType, SampleCountFlag, ImageUsageFlag, ImageTiling, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_sparse_image_format_properties","text":"get_physical_device_sparse_image_format_properties(physical_device, format::Format, type::ImageType, samples::SampleCountFlag, usage::ImageUsageFlag, tiling::ImageTiling, fptr::FunctionPtr)\n\nArguments:\n\nphysical_device\nformat::Format\ntype::ImageType\nsamples::SampleCountFlag\nusage::ImageUsageFlag\ntiling::ImageTiling\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_sparse_image_format_properties(physical_device, format::Format, type::ImageType, samples::SampleCountFlag, usage::ImageUsageFlag, tiling::ImageTiling, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Vector{SparseImageFormatProperties}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_sparse_image_format_properties-Tuple{Any, Format, ImageType, SampleCountFlag, ImageUsageFlag, ImageTiling}","page":"API","title":"Vulkan.get_physical_device_sparse_image_format_properties","text":"get_physical_device_sparse_image_format_properties(physical_device, format::Format, type::ImageType, samples::SampleCountFlag, usage::ImageUsageFlag, tiling::ImageTiling)\n\nArguments:\n\nphysical_device\nformat::Format\ntype::ImageType\nsamples::SampleCountFlag\nusage::ImageUsageFlag\ntiling::ImageTiling\n\nAPI documentation\n\nget_physical_device_sparse_image_format_properties(physical_device, format::Format, type::ImageType, samples::SampleCountFlag, usage::ImageUsageFlag, tiling::ImageTiling) -> Vector{SparseImageFormatProperties}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_sparse_image_format_properties_2-Tuple{Any, PhysicalDeviceSparseImageFormatInfo2, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_sparse_image_format_properties_2","text":"get_physical_device_sparse_image_format_properties_2(physical_device, format_info::PhysicalDeviceSparseImageFormatInfo2, fptr::FunctionPtr)\n\nArguments:\n\nphysical_device\nformat_info::PhysicalDeviceSparseImageFormatInfo2\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_sparse_image_format_properties_2(physical_device, format_info::PhysicalDeviceSparseImageFormatInfo2, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Vector{SparseImageFormatProperties2}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_sparse_image_format_properties_2-Tuple{Any, PhysicalDeviceSparseImageFormatInfo2}","page":"API","title":"Vulkan.get_physical_device_sparse_image_format_properties_2","text":"get_physical_device_sparse_image_format_properties_2(physical_device, format_info::PhysicalDeviceSparseImageFormatInfo2)\n\nArguments:\n\nphysical_device\nformat_info::PhysicalDeviceSparseImageFormatInfo2\n\nAPI documentation\n\nget_physical_device_sparse_image_format_properties_2(physical_device, format_info::PhysicalDeviceSparseImageFormatInfo2) -> Vector{SparseImageFormatProperties2}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_supported_framebuffer_mixed_samples_combinations_nv-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_supported_framebuffer_mixed_samples_combinations_nv","text":"get_physical_device_supported_framebuffer_mixed_samples_combinations_nv(physical_device, fptr::FunctionPtr)::ResultTypes.Result{Vector{FramebufferMixedSamplesCombinationNV}, VulkanError}\n\nExtension: VK_NV_coverage_reduction_mode\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_supported_framebuffer_mixed_samples_combinations_nv(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{FramebufferMixedSamplesCombinationNV}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_supported_framebuffer_mixed_samples_combinations_nv-Tuple{Any}","page":"API","title":"Vulkan.get_physical_device_supported_framebuffer_mixed_samples_combinations_nv","text":"get_physical_device_supported_framebuffer_mixed_samples_combinations_nv(physical_device)::ResultTypes.Result{Vector{FramebufferMixedSamplesCombinationNV}, VulkanError}\n\nExtension: VK_NV_coverage_reduction_mode\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\nget_physical_device_supported_framebuffer_mixed_samples_combinations_nv(physical_device) -> ResultTypes.Result{Vector{FramebufferMixedSamplesCombinationNV}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_surface_capabilities_2_ext-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_surface_capabilities_2_ext","text":"get_physical_device_surface_capabilities_2_ext(physical_device, surface, fptr::FunctionPtr)::ResultTypes.Result{SurfaceCapabilities2EXT, VulkanError}\n\nExtension: VK_EXT_display_surface_counter\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nsurface\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_surface_capabilities_2_ext(physical_device, surface, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{SurfaceCapabilities2EXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_surface_capabilities_2_ext-Tuple{Any, Any}","page":"API","title":"Vulkan.get_physical_device_surface_capabilities_2_ext","text":"get_physical_device_surface_capabilities_2_ext(physical_device, surface)::ResultTypes.Result{SurfaceCapabilities2EXT, VulkanError}\n\nExtension: VK_EXT_display_surface_counter\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nsurface\n\nAPI documentation\n\nget_physical_device_surface_capabilities_2_ext(physical_device, surface) -> ResultTypes.Result{SurfaceCapabilities2EXT, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_surface_capabilities_2_khr-Tuple{Any, PhysicalDeviceSurfaceInfo2KHR, Union{Ptr{Nothing}, Base.CFunction}, Vararg{Type}}","page":"API","title":"Vulkan.get_physical_device_surface_capabilities_2_khr","text":"get_physical_device_surface_capabilities_2_khr(physical_device, surface_info::PhysicalDeviceSurfaceInfo2KHR, fptr::FunctionPtr, next_types::Type...)::ResultTypes.Result{SurfaceCapabilities2KHR, VulkanError}\n\nExtension: VK_KHR_get_surface_capabilities2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nsurface_info::PhysicalDeviceSurfaceInfo2KHR\nfptr::FunctionPtr\nnext_types::Type...\n\nAPI documentation\n\nget_physical_device_surface_capabilities_2_khr(physical_device, surface_info::PhysicalDeviceSurfaceInfo2KHR, fptr::Union{Ptr{Nothing}, Base.CFunction}, next_types::Type...) -> ResultTypes.Result{SurfaceCapabilities2KHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_surface_capabilities_2_khr-Tuple{Any, PhysicalDeviceSurfaceInfo2KHR, Vararg{Type}}","page":"API","title":"Vulkan.get_physical_device_surface_capabilities_2_khr","text":"get_physical_device_surface_capabilities_2_khr(physical_device, surface_info::PhysicalDeviceSurfaceInfo2KHR, next_types::Type...)::ResultTypes.Result{SurfaceCapabilities2KHR, VulkanError}\n\nExtension: VK_KHR_get_surface_capabilities2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nsurface_info::PhysicalDeviceSurfaceInfo2KHR\nnext_types::Type...\n\nAPI documentation\n\nget_physical_device_surface_capabilities_2_khr(physical_device, surface_info::PhysicalDeviceSurfaceInfo2KHR, next_types::Type...) -> ResultTypes.Result{SurfaceCapabilities2KHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_surface_capabilities_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_surface_capabilities_khr","text":"get_physical_device_surface_capabilities_khr(physical_device, surface, fptr::FunctionPtr)::ResultTypes.Result{SurfaceCapabilitiesKHR, VulkanError}\n\nExtension: VK_KHR_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nsurface\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_surface_capabilities_khr(physical_device, surface, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{SurfaceCapabilitiesKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_surface_capabilities_khr-Tuple{Any, Any}","page":"API","title":"Vulkan.get_physical_device_surface_capabilities_khr","text":"get_physical_device_surface_capabilities_khr(physical_device, surface)::ResultTypes.Result{SurfaceCapabilitiesKHR, VulkanError}\n\nExtension: VK_KHR_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nsurface\n\nAPI documentation\n\nget_physical_device_surface_capabilities_khr(physical_device, surface) -> ResultTypes.Result{SurfaceCapabilitiesKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_surface_formats_2_khr-Tuple{Any, PhysicalDeviceSurfaceInfo2KHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_surface_formats_2_khr","text":"get_physical_device_surface_formats_2_khr(physical_device, surface_info::PhysicalDeviceSurfaceInfo2KHR, fptr::FunctionPtr)::ResultTypes.Result{Vector{SurfaceFormat2KHR}, VulkanError}\n\nExtension: VK_KHR_get_surface_capabilities2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nsurface_info::PhysicalDeviceSurfaceInfo2KHR\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_surface_formats_2_khr(physical_device, surface_info::PhysicalDeviceSurfaceInfo2KHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{SurfaceFormat2KHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_surface_formats_2_khr-Tuple{Any, PhysicalDeviceSurfaceInfo2KHR}","page":"API","title":"Vulkan.get_physical_device_surface_formats_2_khr","text":"get_physical_device_surface_formats_2_khr(physical_device, surface_info::PhysicalDeviceSurfaceInfo2KHR)::ResultTypes.Result{Vector{SurfaceFormat2KHR}, VulkanError}\n\nExtension: VK_KHR_get_surface_capabilities2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nsurface_info::PhysicalDeviceSurfaceInfo2KHR\n\nAPI documentation\n\nget_physical_device_surface_formats_2_khr(physical_device, surface_info::PhysicalDeviceSurfaceInfo2KHR) -> ResultTypes.Result{Vector{SurfaceFormat2KHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_surface_formats_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_surface_formats_khr","text":"get_physical_device_surface_formats_khr(physical_device, surface, fptr::FunctionPtr)::ResultTypes.Result{Vector{SurfaceFormatKHR}, VulkanError}\n\nExtension: VK_KHR_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nsurface\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_surface_formats_khr(physical_device, surface, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{SurfaceFormatKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_surface_formats_khr-Tuple{Any, Any}","page":"API","title":"Vulkan.get_physical_device_surface_formats_khr","text":"get_physical_device_surface_formats_khr(physical_device, surface)::ResultTypes.Result{Vector{SurfaceFormatKHR}, VulkanError}\n\nExtension: VK_KHR_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nsurface\n\nAPI documentation\n\nget_physical_device_surface_formats_khr(physical_device, surface) -> ResultTypes.Result{Vector{SurfaceFormatKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_surface_present_modes_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_surface_present_modes_khr","text":"get_physical_device_surface_present_modes_khr(physical_device, surface, fptr::FunctionPtr)::ResultTypes.Result{Vector{PresentModeKHR}, VulkanError}\n\nExtension: VK_KHR_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nsurface\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_surface_present_modes_khr(physical_device, surface, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{PresentModeKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_surface_present_modes_khr-Tuple{Any, Any}","page":"API","title":"Vulkan.get_physical_device_surface_present_modes_khr","text":"get_physical_device_surface_present_modes_khr(physical_device, surface)::ResultTypes.Result{Vector{PresentModeKHR}, VulkanError}\n\nExtension: VK_KHR_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nsurface\n\nAPI documentation\n\nget_physical_device_surface_present_modes_khr(physical_device, surface) -> ResultTypes.Result{Vector{PresentModeKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_surface_support_khr-Tuple{Any, Integer, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_surface_support_khr","text":"get_physical_device_surface_support_khr(physical_device, queue_family_index::Integer, surface, fptr::FunctionPtr)::ResultTypes.Result{Bool, VulkanError}\n\nExtension: VK_KHR_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nqueue_family_index::Integer\nsurface\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_surface_support_khr(physical_device, queue_family_index::Integer, surface, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Bool, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_surface_support_khr-Tuple{Any, Integer, Any}","page":"API","title":"Vulkan.get_physical_device_surface_support_khr","text":"get_physical_device_surface_support_khr(physical_device, queue_family_index::Integer, surface)::ResultTypes.Result{Bool, VulkanError}\n\nExtension: VK_KHR_surface\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device\nqueue_family_index::Integer\nsurface\n\nAPI documentation\n\nget_physical_device_surface_support_khr(physical_device, queue_family_index::Integer, surface) -> ResultTypes.Result{Bool, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_tool_properties_ext-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_tool_properties_ext","text":"get_physical_device_tool_properties_ext(physical_device, fptr::FunctionPtr)::ResultTypes.Result{Vector{PhysicalDeviceToolPropertiesEXT}, VulkanError}\n\nExtension: VK_EXT_tooling_info\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\nphysical_device\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_tool_properties_ext(physical_device, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{PhysicalDeviceToolPropertiesEXT}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_tool_properties_ext-Tuple{Any}","page":"API","title":"Vulkan.get_physical_device_tool_properties_ext","text":"get_physical_device_tool_properties_ext(physical_device)::ResultTypes.Result{Vector{PhysicalDeviceToolPropertiesEXT}, VulkanError}\n\nExtension: VK_EXT_tooling_info\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\nphysical_device\n\nAPI documentation\n\nget_physical_device_tool_properties_ext(physical_device) -> ResultTypes.Result{Vector{PhysicalDeviceToolPropertiesEXT}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_wayland_presentation_support_khr-Tuple{Any, Integer, Ptr{Nothing}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_wayland_presentation_support_khr","text":"get_physical_device_wayland_presentation_support_khr(physical_device, queue_family_index::Integer, display::Ptr{wl_display}, fptr::FunctionPtr)\n\nExtension: VK_KHR_wayland_surface\n\nArguments:\n\nphysical_device\nqueue_family_index::Integer\ndisplay::Ptr{wl_display}\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_wayland_presentation_support_khr(physical_device, queue_family_index::Integer, display::Ptr{Nothing}, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Bool\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_wayland_presentation_support_khr-Tuple{Any, Integer, Ptr{Nothing}}","page":"API","title":"Vulkan.get_physical_device_wayland_presentation_support_khr","text":"get_physical_device_wayland_presentation_support_khr(physical_device, queue_family_index::Integer, display::Ptr{wl_display})\n\nExtension: VK_KHR_wayland_surface\n\nArguments:\n\nphysical_device\nqueue_family_index::Integer\ndisplay::Ptr{wl_display}\n\nAPI documentation\n\nget_physical_device_wayland_presentation_support_khr(physical_device, queue_family_index::Integer, display::Ptr{Nothing}) -> Bool\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_xcb_presentation_support_khr-Tuple{Any, Integer, Ptr{Nothing}, UInt32, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_xcb_presentation_support_khr","text":"get_physical_device_xcb_presentation_support_khr(physical_device, queue_family_index::Integer, connection::Ptr{xcb_connection_t}, visual_id::xcb_visualid_t, fptr::FunctionPtr)\n\nExtension: VK_KHR_xcb_surface\n\nArguments:\n\nphysical_device\nqueue_family_index::Integer\nconnection::Ptr{xcb_connection_t}\nvisual_id::xcb_visualid_t\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_xcb_presentation_support_khr(physical_device, queue_family_index::Integer, connection::Ptr{Nothing}, visual_id::UInt32, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Bool\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_xcb_presentation_support_khr-Tuple{Any, Integer, Ptr{Nothing}, UInt32}","page":"API","title":"Vulkan.get_physical_device_xcb_presentation_support_khr","text":"get_physical_device_xcb_presentation_support_khr(physical_device, queue_family_index::Integer, connection::Ptr{xcb_connection_t}, visual_id::xcb_visualid_t)\n\nExtension: VK_KHR_xcb_surface\n\nArguments:\n\nphysical_device\nqueue_family_index::Integer\nconnection::Ptr{xcb_connection_t}\nvisual_id::xcb_visualid_t\n\nAPI documentation\n\nget_physical_device_xcb_presentation_support_khr(physical_device, queue_family_index::Integer, connection::Ptr{Nothing}, visual_id::UInt32) -> Bool\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_xlib_presentation_support_khr-Tuple{Any, Integer, Ptr{Nothing}, UInt64, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_physical_device_xlib_presentation_support_khr","text":"get_physical_device_xlib_presentation_support_khr(physical_device, queue_family_index::Integer, dpy::Ptr{Display}, visual_id::VisualID, fptr::FunctionPtr)\n\nExtension: VK_KHR_xlib_surface\n\nArguments:\n\nphysical_device\nqueue_family_index::Integer\ndpy::Ptr{Display}\nvisual_id::VisualID\nfptr::FunctionPtr\n\nAPI documentation\n\nget_physical_device_xlib_presentation_support_khr(physical_device, queue_family_index::Integer, dpy::Ptr{Nothing}, visual_id::UInt64, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Bool\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_physical_device_xlib_presentation_support_khr-Tuple{Any, Integer, Ptr{Nothing}, UInt64}","page":"API","title":"Vulkan.get_physical_device_xlib_presentation_support_khr","text":"get_physical_device_xlib_presentation_support_khr(physical_device, queue_family_index::Integer, dpy::Ptr{Display}, visual_id::VisualID)\n\nExtension: VK_KHR_xlib_surface\n\nArguments:\n\nphysical_device\nqueue_family_index::Integer\ndpy::Ptr{Display}\nvisual_id::VisualID\n\nAPI documentation\n\nget_physical_device_xlib_presentation_support_khr(physical_device, queue_family_index::Integer, dpy::Ptr{Nothing}, visual_id::UInt64) -> Bool\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_pipeline_cache_data-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_pipeline_cache_data","text":"get_pipeline_cache_data(device, pipeline_cache, fptr::FunctionPtr)::ResultTypes.Result{Tuple{UInt, Ptr{Cvoid}}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\npipeline_cache\nfptr::FunctionPtr\n\nwarning: Warning\nThe pointer returned by this function holds memory owned by Julia. It is therefore your responsibility to free it after use (e.g. with Libc.free).\n\nAPI documentation\n\nget_pipeline_cache_data(device, pipeline_cache, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Tuple{UInt64, Ptr{Nothing}}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_pipeline_cache_data-Tuple{Any, Any}","page":"API","title":"Vulkan.get_pipeline_cache_data","text":"get_pipeline_cache_data(device, pipeline_cache)::ResultTypes.Result{Tuple{UInt, Ptr{Cvoid}}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\npipeline_cache\n\nwarning: Warning\nThe pointer returned by this function holds memory owned by Julia. It is therefore your responsibility to free it after use (e.g. with Libc.free).\n\nAPI documentation\n\nget_pipeline_cache_data(device, pipeline_cache) -> ResultTypes.Result{Tuple{UInt64, Ptr{Nothing}}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_pipeline_executable_internal_representations_khr-Tuple{Any, PipelineExecutableInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_pipeline_executable_internal_representations_khr","text":"get_pipeline_executable_internal_representations_khr(device, executable_info::PipelineExecutableInfoKHR, fptr::FunctionPtr)::ResultTypes.Result{Vector{PipelineExecutableInternalRepresentationKHR}, VulkanError}\n\nExtension: VK_KHR_pipeline_executable_properties\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nexecutable_info::PipelineExecutableInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\nget_pipeline_executable_internal_representations_khr(device, executable_info::PipelineExecutableInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{PipelineExecutableInternalRepresentationKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_pipeline_executable_internal_representations_khr-Tuple{Any, PipelineExecutableInfoKHR}","page":"API","title":"Vulkan.get_pipeline_executable_internal_representations_khr","text":"get_pipeline_executable_internal_representations_khr(device, executable_info::PipelineExecutableInfoKHR)::ResultTypes.Result{Vector{PipelineExecutableInternalRepresentationKHR}, VulkanError}\n\nExtension: VK_KHR_pipeline_executable_properties\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nexecutable_info::PipelineExecutableInfoKHR\n\nAPI documentation\n\nget_pipeline_executable_internal_representations_khr(device, executable_info::PipelineExecutableInfoKHR) -> ResultTypes.Result{Vector{PipelineExecutableInternalRepresentationKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_pipeline_executable_properties_khr-Tuple{Any, PipelineInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_pipeline_executable_properties_khr","text":"get_pipeline_executable_properties_khr(device, pipeline_info::PipelineInfoKHR, fptr::FunctionPtr)::ResultTypes.Result{Vector{PipelineExecutablePropertiesKHR}, VulkanError}\n\nExtension: VK_KHR_pipeline_executable_properties\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\npipeline_info::PipelineInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\nget_pipeline_executable_properties_khr(device, pipeline_info::PipelineInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{PipelineExecutablePropertiesKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_pipeline_executable_properties_khr-Tuple{Any, PipelineInfoKHR}","page":"API","title":"Vulkan.get_pipeline_executable_properties_khr","text":"get_pipeline_executable_properties_khr(device, pipeline_info::PipelineInfoKHR)::ResultTypes.Result{Vector{PipelineExecutablePropertiesKHR}, VulkanError}\n\nExtension: VK_KHR_pipeline_executable_properties\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\npipeline_info::PipelineInfoKHR\n\nAPI documentation\n\nget_pipeline_executable_properties_khr(device, pipeline_info::PipelineInfoKHR) -> ResultTypes.Result{Vector{PipelineExecutablePropertiesKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_pipeline_executable_statistics_khr-Tuple{Any, PipelineExecutableInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_pipeline_executable_statistics_khr","text":"get_pipeline_executable_statistics_khr(device, executable_info::PipelineExecutableInfoKHR, fptr::FunctionPtr)::ResultTypes.Result{Vector{PipelineExecutableStatisticKHR}, VulkanError}\n\nExtension: VK_KHR_pipeline_executable_properties\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nexecutable_info::PipelineExecutableInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\nget_pipeline_executable_statistics_khr(device, executable_info::PipelineExecutableInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{PipelineExecutableStatisticKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_pipeline_executable_statistics_khr-Tuple{Any, PipelineExecutableInfoKHR}","page":"API","title":"Vulkan.get_pipeline_executable_statistics_khr","text":"get_pipeline_executable_statistics_khr(device, executable_info::PipelineExecutableInfoKHR)::ResultTypes.Result{Vector{PipelineExecutableStatisticKHR}, VulkanError}\n\nExtension: VK_KHR_pipeline_executable_properties\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nexecutable_info::PipelineExecutableInfoKHR\n\nAPI documentation\n\nget_pipeline_executable_statistics_khr(device, executable_info::PipelineExecutableInfoKHR) -> ResultTypes.Result{Vector{PipelineExecutableStatisticKHR}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_private_data_ext-Tuple{Any, ObjectType, Integer, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_private_data_ext","text":"get_private_data_ext(device, object_type::ObjectType, object_handle::Integer, private_data_slot, fptr::FunctionPtr)\n\nExtension: VK_EXT_private_data\n\nArguments:\n\ndevice\nobject_type::ObjectType\nobject_handle::Integer\nprivate_data_slot\nfptr::FunctionPtr\n\nAPI documentation\n\nget_private_data_ext(device, object_type::ObjectType, object_handle::Integer, private_data_slot, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_private_data_ext-Tuple{Any, ObjectType, Integer, Any}","page":"API","title":"Vulkan.get_private_data_ext","text":"get_private_data_ext(device, object_type::ObjectType, object_handle::Integer, private_data_slot)\n\nExtension: VK_EXT_private_data\n\nArguments:\n\ndevice\nobject_type::ObjectType\nobject_handle::Integer\nprivate_data_slot\n\nAPI documentation\n\nget_private_data_ext(device, object_type::ObjectType, object_handle::Integer, private_data_slot) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_query_pool_results-Tuple{Any, Any, Integer, Integer, Integer, Ptr{Nothing}, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_query_pool_results","text":"get_query_pool_results(device, query_pool, first_query::Integer, query_count::Integer, data_size::Integer, data::Ptr{Cvoid}, stride::Integer, fptr::FunctionPtr; flags = 0)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nNOT_READY\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\nquery_pool\nfirst_query::Integer\nquery_count::Integer\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\nstride::Integer\nfptr::FunctionPtr\nflags: defaults to 0\n\nAPI documentation\n\nget_query_pool_results(device, query_pool, first_query::Integer, query_count::Integer, data_size::Integer, data::Ptr{Nothing}, stride::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}; flags) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_query_pool_results-Tuple{Any, Any, Integer, Integer, Integer, Ptr{Nothing}, Integer}","page":"API","title":"Vulkan.get_query_pool_results","text":"get_query_pool_results(device, query_pool, first_query::Integer, query_count::Integer, data_size::Integer, data::Ptr{Cvoid}, stride::Integer; flags = 0)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nNOT_READY\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\nquery_pool\nfirst_query::Integer\nquery_count::Integer\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\nstride::Integer\nflags: defaults to 0\n\nAPI documentation\n\nget_query_pool_results(device, query_pool, first_query::Integer, query_count::Integer, data_size::Integer, data::Ptr{Nothing}, stride::Integer; flags) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_queue_checkpoint_data_2_nv-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_queue_checkpoint_data_2_nv","text":"get_queue_checkpoint_data_2_nv(queue, fptr::FunctionPtr)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\nqueue\nfptr::FunctionPtr\n\nAPI documentation\n\nget_queue_checkpoint_data_2_nv(queue, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Vector{CheckpointData2NV}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_queue_checkpoint_data_2_nv-Tuple{Any}","page":"API","title":"Vulkan.get_queue_checkpoint_data_2_nv","text":"get_queue_checkpoint_data_2_nv(queue)\n\nExtension: VK_KHR_synchronization2\n\nArguments:\n\nqueue\n\nAPI documentation\n\nget_queue_checkpoint_data_2_nv(queue) -> Vector{CheckpointData2NV}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_queue_checkpoint_data_nv-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_queue_checkpoint_data_nv","text":"get_queue_checkpoint_data_nv(queue, fptr::FunctionPtr)\n\nExtension: VK_NV_device_diagnostic_checkpoints\n\nArguments:\n\nqueue\nfptr::FunctionPtr\n\nAPI documentation\n\nget_queue_checkpoint_data_nv(queue, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Vector{CheckpointDataNV}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_queue_checkpoint_data_nv-Tuple{Any}","page":"API","title":"Vulkan.get_queue_checkpoint_data_nv","text":"get_queue_checkpoint_data_nv(queue)\n\nExtension: VK_NV_device_diagnostic_checkpoints\n\nArguments:\n\nqueue\n\nAPI documentation\n\nget_queue_checkpoint_data_nv(queue) -> Vector{CheckpointDataNV}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_rand_r_output_display_ext-Tuple{Any, Ptr{Nothing}, UInt64, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_rand_r_output_display_ext","text":"get_rand_r_output_display_ext(physical_device, dpy::Ptr{Display}, rr_output::RROutput, fptr::FunctionPtr)::ResultTypes.Result{DisplayKHR, VulkanError}\n\nExtension: VK_EXT_acquire_xlib_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\nphysical_device\ndpy::Ptr{Display}\nrr_output::RROutput\nfptr::FunctionPtr\n\nAPI documentation\n\nget_rand_r_output_display_ext(physical_device, dpy::Ptr{Nothing}, rr_output::UInt64, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{DisplayKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_rand_r_output_display_ext-Tuple{Any, Ptr{Nothing}, UInt64}","page":"API","title":"Vulkan.get_rand_r_output_display_ext","text":"get_rand_r_output_display_ext(physical_device, dpy::Ptr{Display}, rr_output::RROutput)::ResultTypes.Result{DisplayKHR, VulkanError}\n\nExtension: VK_EXT_acquire_xlib_display\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\nphysical_device\ndpy::Ptr{Display}\nrr_output::RROutput\n\nAPI documentation\n\nget_rand_r_output_display_ext(physical_device, dpy::Ptr{Nothing}, rr_output::UInt64) -> ResultTypes.Result{DisplayKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_ray_tracing_capture_replay_shader_group_handles_khr-Tuple{Any, Any, Integer, Integer, Integer, Ptr{Nothing}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_ray_tracing_capture_replay_shader_group_handles_khr","text":"get_ray_tracing_capture_replay_shader_group_handles_khr(device, pipeline, first_group::Integer, group_count::Integer, data_size::Integer, data::Ptr{Cvoid}, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\npipeline\nfirst_group::Integer\ngroup_count::Integer\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\nfptr::FunctionPtr\n\nAPI documentation\n\nget_ray_tracing_capture_replay_shader_group_handles_khr(device, pipeline, first_group::Integer, group_count::Integer, data_size::Integer, data::Ptr{Nothing}, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_ray_tracing_capture_replay_shader_group_handles_khr-Tuple{Any, Any, Integer, Integer, Integer, Ptr{Nothing}}","page":"API","title":"Vulkan.get_ray_tracing_capture_replay_shader_group_handles_khr","text":"get_ray_tracing_capture_replay_shader_group_handles_khr(device, pipeline, first_group::Integer, group_count::Integer, data_size::Integer, data::Ptr{Cvoid})::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\npipeline\nfirst_group::Integer\ngroup_count::Integer\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\n\nAPI documentation\n\nget_ray_tracing_capture_replay_shader_group_handles_khr(device, pipeline, first_group::Integer, group_count::Integer, data_size::Integer, data::Ptr{Nothing}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_ray_tracing_shader_group_handles_khr-Tuple{Any, Any, Integer, Integer, Integer, Ptr{Nothing}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_ray_tracing_shader_group_handles_khr","text":"get_ray_tracing_shader_group_handles_khr(device, pipeline, first_group::Integer, group_count::Integer, data_size::Integer, data::Ptr{Cvoid}, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\npipeline\nfirst_group::Integer\ngroup_count::Integer\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\nfptr::FunctionPtr\n\nAPI documentation\n\nget_ray_tracing_shader_group_handles_khr(device, pipeline, first_group::Integer, group_count::Integer, data_size::Integer, data::Ptr{Nothing}, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_ray_tracing_shader_group_handles_khr-Tuple{Any, Any, Integer, Integer, Integer, Ptr{Nothing}}","page":"API","title":"Vulkan.get_ray_tracing_shader_group_handles_khr","text":"get_ray_tracing_shader_group_handles_khr(device, pipeline, first_group::Integer, group_count::Integer, data_size::Integer, data::Ptr{Cvoid})::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\npipeline\nfirst_group::Integer\ngroup_count::Integer\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\n\nAPI documentation\n\nget_ray_tracing_shader_group_handles_khr(device, pipeline, first_group::Integer, group_count::Integer, data_size::Integer, data::Ptr{Nothing}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_ray_tracing_shader_group_stack_size_khr-Tuple{Any, Any, Integer, ShaderGroupShaderKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_ray_tracing_shader_group_stack_size_khr","text":"get_ray_tracing_shader_group_stack_size_khr(device, pipeline, group::Integer, group_shader::ShaderGroupShaderKHR, fptr::FunctionPtr)\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\ndevice\npipeline\ngroup::Integer\ngroup_shader::ShaderGroupShaderKHR\nfptr::FunctionPtr\n\nAPI documentation\n\nget_ray_tracing_shader_group_stack_size_khr(device, pipeline, group::Integer, group_shader::ShaderGroupShaderKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_ray_tracing_shader_group_stack_size_khr-Tuple{Any, Any, Integer, ShaderGroupShaderKHR}","page":"API","title":"Vulkan.get_ray_tracing_shader_group_stack_size_khr","text":"get_ray_tracing_shader_group_stack_size_khr(device, pipeline, group::Integer, group_shader::ShaderGroupShaderKHR)\n\nExtension: VK_KHR_ray_tracing_pipeline\n\nArguments:\n\ndevice\npipeline\ngroup::Integer\ngroup_shader::ShaderGroupShaderKHR\n\nAPI documentation\n\nget_ray_tracing_shader_group_stack_size_khr(device, pipeline, group::Integer, group_shader::ShaderGroupShaderKHR) -> UInt64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_refresh_cycle_duration_google-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_refresh_cycle_duration_google","text":"get_refresh_cycle_duration_google(device, swapchain, fptr::FunctionPtr)::ResultTypes.Result{RefreshCycleDurationGOOGLE, VulkanError}\n\nExtension: VK_GOOGLE_display_timing\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_DEVICE_LOST\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\ndevice\nswapchain (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\nget_refresh_cycle_duration_google(device, swapchain, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{RefreshCycleDurationGOOGLE, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_refresh_cycle_duration_google-Tuple{Any, Any}","page":"API","title":"Vulkan.get_refresh_cycle_duration_google","text":"get_refresh_cycle_duration_google(device, swapchain)::ResultTypes.Result{RefreshCycleDurationGOOGLE, VulkanError}\n\nExtension: VK_GOOGLE_display_timing\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_DEVICE_LOST\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\ndevice\nswapchain (externsync)\n\nAPI documentation\n\nget_refresh_cycle_duration_google(device, swapchain) -> ResultTypes.Result{RefreshCycleDurationGOOGLE, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_render_area_granularity-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_render_area_granularity","text":"get_render_area_granularity(device, render_pass, fptr::FunctionPtr)\n\nArguments:\n\ndevice\nrender_pass\nfptr::FunctionPtr\n\nAPI documentation\n\nget_render_area_granularity(device, render_pass, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> Extent2D\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_render_area_granularity-Tuple{Any, Any}","page":"API","title":"Vulkan.get_render_area_granularity","text":"get_render_area_granularity(device, render_pass)\n\nArguments:\n\ndevice\nrender_pass\n\nAPI documentation\n\nget_render_area_granularity(device, render_pass) -> Extent2D\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_semaphore_counter_value-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_semaphore_counter_value","text":"get_semaphore_counter_value(device, semaphore, fptr::FunctionPtr)::ResultTypes.Result{UInt64, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\nsemaphore\nfptr::FunctionPtr\n\nAPI documentation\n\nget_semaphore_counter_value(device, semaphore, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{UInt64, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_semaphore_counter_value-Tuple{Any, Any}","page":"API","title":"Vulkan.get_semaphore_counter_value","text":"get_semaphore_counter_value(device, semaphore)::ResultTypes.Result{UInt64, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\nsemaphore\n\nAPI documentation\n\nget_semaphore_counter_value(device, semaphore) -> ResultTypes.Result{UInt64, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_semaphore_fd_khr-Tuple{Any, SemaphoreGetFdInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_semaphore_fd_khr","text":"get_semaphore_fd_khr(device, get_fd_info::SemaphoreGetFdInfoKHR, fptr::FunctionPtr)::ResultTypes.Result{Int, VulkanError}\n\nExtension: VK_KHR_external_semaphore_fd\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nget_fd_info::SemaphoreGetFdInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\nget_semaphore_fd_khr(device, get_fd_info::SemaphoreGetFdInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_semaphore_fd_khr-Tuple{Any, SemaphoreGetFdInfoKHR}","page":"API","title":"Vulkan.get_semaphore_fd_khr","text":"get_semaphore_fd_khr(device, get_fd_info::SemaphoreGetFdInfoKHR)::ResultTypes.Result{Int, VulkanError}\n\nExtension: VK_KHR_external_semaphore_fd\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nget_fd_info::SemaphoreGetFdInfoKHR\n\nAPI documentation\n\nget_semaphore_fd_khr(device, get_fd_info::SemaphoreGetFdInfoKHR)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_shader_info_amd-Tuple{Any, Any, ShaderStageFlag, ShaderInfoTypeAMD, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_shader_info_amd","text":"get_shader_info_amd(device, pipeline, shader_stage::ShaderStageFlag, info_type::ShaderInfoTypeAMD, fptr::FunctionPtr)::ResultTypes.Result{Tuple{UInt, Ptr{Cvoid}}, VulkanError}\n\nExtension: VK_AMD_shader_info\n\nReturn codes:\n\nError:\nERROR_FEATURE_NOT_PRESENT\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\npipeline\nshader_stage::ShaderStageFlag\ninfo_type::ShaderInfoTypeAMD\nfptr::FunctionPtr\n\nwarning: Warning\nThe pointer returned by this function holds memory owned by Julia. It is therefore your responsibility to free it after use (e.g. with Libc.free).\n\nAPI documentation\n\nget_shader_info_amd(device, pipeline, shader_stage::ShaderStageFlag, info_type::ShaderInfoTypeAMD, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Tuple{UInt64, Ptr{Nothing}}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_shader_info_amd-Tuple{Any, Any, ShaderStageFlag, ShaderInfoTypeAMD}","page":"API","title":"Vulkan.get_shader_info_amd","text":"get_shader_info_amd(device, pipeline, shader_stage::ShaderStageFlag, info_type::ShaderInfoTypeAMD)::ResultTypes.Result{Tuple{UInt, Ptr{Cvoid}}, VulkanError}\n\nExtension: VK_AMD_shader_info\n\nReturn codes:\n\nError:\nERROR_FEATURE_NOT_PRESENT\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\npipeline\nshader_stage::ShaderStageFlag\ninfo_type::ShaderInfoTypeAMD\n\nwarning: Warning\nThe pointer returned by this function holds memory owned by Julia. It is therefore your responsibility to free it after use (e.g. with Libc.free).\n\nAPI documentation\n\nget_shader_info_amd(device, pipeline, shader_stage::ShaderStageFlag, info_type::ShaderInfoTypeAMD) -> ResultTypes.Result{Tuple{UInt64, Ptr{Nothing}}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_swapchain_counter_ext-Tuple{Any, Any, SurfaceCounterFlagEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_swapchain_counter_ext","text":"get_swapchain_counter_ext(device, swapchain, counter::SurfaceCounterFlagEXT, fptr::FunctionPtr)::ResultTypes.Result{UInt64, VulkanError}\n\nExtension: VK_EXT_display_control\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\n\nArguments:\n\ndevice\nswapchain\ncounter::SurfaceCounterFlagEXT\nfptr::FunctionPtr\n\nAPI documentation\n\nget_swapchain_counter_ext(device, swapchain, counter::SurfaceCounterFlagEXT, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{UInt64, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_swapchain_counter_ext-Tuple{Any, Any, SurfaceCounterFlagEXT}","page":"API","title":"Vulkan.get_swapchain_counter_ext","text":"get_swapchain_counter_ext(device, swapchain, counter::SurfaceCounterFlagEXT)::ResultTypes.Result{UInt64, VulkanError}\n\nExtension: VK_EXT_display_control\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\n\nArguments:\n\ndevice\nswapchain\ncounter::SurfaceCounterFlagEXT\n\nAPI documentation\n\nget_swapchain_counter_ext(device, swapchain, counter::SurfaceCounterFlagEXT) -> ResultTypes.Result{UInt64, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_swapchain_images_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_swapchain_images_khr","text":"get_swapchain_images_khr(device, swapchain, fptr::FunctionPtr)::ResultTypes.Result{Vector{Image}, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nswapchain\nfptr::FunctionPtr\n\nAPI documentation\n\nget_swapchain_images_khr(device, swapchain, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Vector{Image}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_swapchain_images_khr-Tuple{Any, Any}","page":"API","title":"Vulkan.get_swapchain_images_khr","text":"get_swapchain_images_khr(device, swapchain)::ResultTypes.Result{Vector{Image}, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nswapchain\n\nAPI documentation\n\nget_swapchain_images_khr(device, swapchain) -> ResultTypes.Result{Vector{Image}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_swapchain_status_khr-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_swapchain_status_khr","text":"get_swapchain_status_khr(device, swapchain, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_shared_presentable_image\n\nReturn codes:\n\nSuccess:\nSUCCESS\nSUBOPTIMAL_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\nERROR_SURFACE_LOST_KHR\nERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT\n\nArguments:\n\ndevice\nswapchain (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\nget_swapchain_status_khr(device, swapchain, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_swapchain_status_khr-Tuple{Any, Any}","page":"API","title":"Vulkan.get_swapchain_status_khr","text":"get_swapchain_status_khr(device, swapchain)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_shared_presentable_image\n\nReturn codes:\n\nSuccess:\nSUCCESS\nSUBOPTIMAL_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\nERROR_SURFACE_LOST_KHR\nERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT\n\nArguments:\n\ndevice\nswapchain (externsync)\n\nAPI documentation\n\nget_swapchain_status_khr(device, swapchain) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_validation_cache_data_ext-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.get_validation_cache_data_ext","text":"get_validation_cache_data_ext(device, validation_cache, fptr::FunctionPtr)::ResultTypes.Result{Tuple{UInt, Ptr{Cvoid}}, VulkanError}\n\nExtension: VK_EXT_validation_cache\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nvalidation_cache\nfptr::FunctionPtr\n\nwarning: Warning\nThe pointer returned by this function holds memory owned by Julia. It is therefore your responsibility to free it after use (e.g. with Libc.free).\n\nAPI documentation\n\nget_validation_cache_data_ext(device, validation_cache, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Tuple{UInt64, Ptr{Nothing}}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.get_validation_cache_data_ext-Tuple{Any, Any}","page":"API","title":"Vulkan.get_validation_cache_data_ext","text":"get_validation_cache_data_ext(device, validation_cache)::ResultTypes.Result{Tuple{UInt, Ptr{Cvoid}}, VulkanError}\n\nExtension: VK_EXT_validation_cache\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nvalidation_cache\n\nwarning: Warning\nThe pointer returned by this function holds memory owned by Julia. It is therefore your responsibility to free it after use (e.g. with Libc.free).\n\nAPI documentation\n\nget_validation_cache_data_ext(device, validation_cache) -> ResultTypes.Result{Tuple{UInt64, Ptr{Nothing}}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.import_fence_fd_khr-Tuple{Any, ImportFenceFdInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.import_fence_fd_khr","text":"import_fence_fd_khr(device, import_fence_fd_info::ImportFenceFdInfoKHR, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_external_fence_fd\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\n\nArguments:\n\ndevice\nimport_fence_fd_info::ImportFenceFdInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\nimport_fence_fd_khr(device, import_fence_fd_info::ImportFenceFdInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.import_fence_fd_khr-Tuple{Any, ImportFenceFdInfoKHR}","page":"API","title":"Vulkan.import_fence_fd_khr","text":"import_fence_fd_khr(device, import_fence_fd_info::ImportFenceFdInfoKHR)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_external_fence_fd\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\n\nArguments:\n\ndevice\nimport_fence_fd_info::ImportFenceFdInfoKHR\n\nAPI documentation\n\nimport_fence_fd_khr(device, import_fence_fd_info::ImportFenceFdInfoKHR) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.import_semaphore_fd_khr-Tuple{Any, ImportSemaphoreFdInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.import_semaphore_fd_khr","text":"import_semaphore_fd_khr(device, import_semaphore_fd_info::ImportSemaphoreFdInfoKHR, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_external_semaphore_fd\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\n\nArguments:\n\ndevice\nimport_semaphore_fd_info::ImportSemaphoreFdInfoKHR\nfptr::FunctionPtr\n\nAPI documentation\n\nimport_semaphore_fd_khr(device, import_semaphore_fd_info::ImportSemaphoreFdInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.import_semaphore_fd_khr-Tuple{Any, ImportSemaphoreFdInfoKHR}","page":"API","title":"Vulkan.import_semaphore_fd_khr","text":"import_semaphore_fd_khr(device, import_semaphore_fd_info::ImportSemaphoreFdInfoKHR)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_external_semaphore_fd\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\n\nArguments:\n\ndevice\nimport_semaphore_fd_info::ImportSemaphoreFdInfoKHR\n\nAPI documentation\n\nimport_semaphore_fd_khr(device, import_semaphore_fd_info::ImportSemaphoreFdInfoKHR) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.initialize_performance_api_intel-Tuple{Any, InitializePerformanceApiInfoINTEL, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.initialize_performance_api_intel","text":"initialize_performance_api_intel(device, initialize_info::InitializePerformanceApiInfoINTEL, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ninitialize_info::InitializePerformanceApiInfoINTEL\nfptr::FunctionPtr\n\nAPI documentation\n\ninitialize_performance_api_intel(device, initialize_info::InitializePerformanceApiInfoINTEL, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.initialize_performance_api_intel-Tuple{Any, InitializePerformanceApiInfoINTEL}","page":"API","title":"Vulkan.initialize_performance_api_intel","text":"initialize_performance_api_intel(device, initialize_info::InitializePerformanceApiInfoINTEL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ninitialize_info::InitializePerformanceApiInfoINTEL\n\nAPI documentation\n\ninitialize_performance_api_intel(device, initialize_info::InitializePerformanceApiInfoINTEL) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.invalidate_mapped_memory_ranges-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.invalidate_mapped_memory_ranges","text":"invalidate_mapped_memory_ranges(device, memory_ranges::AbstractArray{MappedMemoryRange}, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nmemory_ranges::AbstractArray{MappedMemoryRange}\nfptr::FunctionPtr\n\nAPI documentation\n\ninvalidate_mapped_memory_ranges(device, memory_ranges::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.invalidate_mapped_memory_ranges-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan.invalidate_mapped_memory_ranges","text":"invalidate_mapped_memory_ranges(device, memory_ranges::AbstractArray{MappedMemoryRange})::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nmemory_ranges::AbstractArray{MappedMemoryRange}\n\nAPI documentation\n\ninvalidate_mapped_memory_ranges(device, memory_ranges::AbstractArray) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.map_memory-Tuple{Any, Any, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.map_memory","text":"map_memory(device, memory, offset::Integer, size::Integer, fptr::FunctionPtr; flags = 0)::ResultTypes.Result{Ptr{Cvoid}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_MEMORY_MAP_FAILED\n\nArguments:\n\ndevice\nmemory (externsync)\noffset::Integer\nsize::Integer\nfptr::FunctionPtr\nflags: defaults to 0\n\nAPI documentation\n\nmap_memory(device, memory, offset::Integer, size::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}; flags) -> ResultTypes.Result{Ptr{Nothing}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.map_memory-Tuple{Any, Any, Integer, Integer}","page":"API","title":"Vulkan.map_memory","text":"map_memory(device, memory, offset::Integer, size::Integer; flags = 0)::ResultTypes.Result{Ptr{Cvoid}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_MEMORY_MAP_FAILED\n\nArguments:\n\ndevice\nmemory (externsync)\noffset::Integer\nsize::Integer\nflags: defaults to 0\n\nAPI documentation\n\nmap_memory(device, memory, offset::Integer, size::Integer; flags) -> ResultTypes.Result{Ptr{Nothing}, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.merge_pipeline_caches-Tuple{Any, Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.merge_pipeline_caches","text":"merge_pipeline_caches(device, dst_cache, src_caches::AbstractArray{PipelineCache}, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ndst_cache (externsync)\nsrc_caches::AbstractArray{PipelineCache}\nfptr::FunctionPtr\n\nAPI documentation\n\nmerge_pipeline_caches(device, dst_cache, src_caches::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.merge_pipeline_caches-Tuple{Any, Any, AbstractArray}","page":"API","title":"Vulkan.merge_pipeline_caches","text":"merge_pipeline_caches(device, dst_cache, src_caches::AbstractArray{PipelineCache})::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ndst_cache (externsync)\nsrc_caches::AbstractArray{PipelineCache}\n\nAPI documentation\n\nmerge_pipeline_caches(device, dst_cache, src_caches::AbstractArray) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.merge_validation_caches_ext-Tuple{Any, Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.merge_validation_caches_ext","text":"merge_validation_caches_ext(device, dst_cache, src_caches::AbstractArray{ValidationCacheEXT}, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_validation_cache\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ndst_cache (externsync)\nsrc_caches::AbstractArray{ValidationCacheEXT}\nfptr::FunctionPtr\n\nAPI documentation\n\nmerge_validation_caches_ext(device, dst_cache, src_caches::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.merge_validation_caches_ext-Tuple{Any, Any, AbstractArray}","page":"API","title":"Vulkan.merge_validation_caches_ext","text":"merge_validation_caches_ext(device, dst_cache, src_caches::AbstractArray{ValidationCacheEXT})::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_validation_cache\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ndst_cache (externsync)\nsrc_caches::AbstractArray{ValidationCacheEXT}\n\nAPI documentation\n\nmerge_validation_caches_ext(device, dst_cache, src_caches::AbstractArray) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.pointer_length","page":"API","title":"Vulkan.pointer_length","text":"`pointer_length(val)`\n\nReturn the length val considering it as an array.\n\nDiffer from Base.length in that pointer_length(C_NULL) == 0 and that a RefArrays return the length of their roots.\n\npointer_length(arr)\n\ndefined at /home/runner/work/Vulkan.jl/Vulkan.jl/src/prewrap/pointers.jl:25.\n\npointer_length(arr)\n\ndefined at /home/runner/work/Vulkan.jl/Vulkan.jl/src/prewrap/pointers.jl:26.\n\npointer_length(arr)\n\ndefined at /home/runner/work/Vulkan.jl/Vulkan.jl/src/prewrap/pointers.jl:27.\n\npointer_length(arr)\n\ndefined at /home/runner/work/Vulkan.jl/Vulkan.jl/src/prewrap/pointers.jl:28.\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.queue_begin_debug_utils_label_ext-Tuple{Any, DebugUtilsLabelEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.queue_begin_debug_utils_label_ext","text":"queue_begin_debug_utils_label_ext(queue, label_info::DebugUtilsLabelEXT, fptr::FunctionPtr)\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\nqueue\nlabel_info::DebugUtilsLabelEXT\nfptr::FunctionPtr\n\nAPI documentation\n\nqueue_begin_debug_utils_label_ext(queue, label_info::DebugUtilsLabelEXT, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.queue_begin_debug_utils_label_ext-Tuple{Any, DebugUtilsLabelEXT}","page":"API","title":"Vulkan.queue_begin_debug_utils_label_ext","text":"queue_begin_debug_utils_label_ext(queue, label_info::DebugUtilsLabelEXT)\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\nqueue\nlabel_info::DebugUtilsLabelEXT\n\nAPI documentation\n\nqueue_begin_debug_utils_label_ext(queue, label_info::DebugUtilsLabelEXT)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.queue_bind_sparse-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.queue_bind_sparse","text":"queue_bind_sparse(queue, bind_info::AbstractArray{BindSparseInfo}, fptr::FunctionPtr; fence = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\nqueue (externsync)\nbind_info::AbstractArray{BindSparseInfo} (externsync)\nfptr::FunctionPtr\nfence: defaults to C_NULL (externsync)\n\nAPI documentation\n\nqueue_bind_sparse(queue, bind_info::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}; fence) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.queue_bind_sparse-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan.queue_bind_sparse","text":"queue_bind_sparse(queue, bind_info::AbstractArray{BindSparseInfo}; fence = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\nqueue (externsync)\nbind_info::AbstractArray{BindSparseInfo} (externsync)\nfence: defaults to C_NULL (externsync)\n\nAPI documentation\n\nqueue_bind_sparse(queue, bind_info::AbstractArray; fence) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.queue_end_debug_utils_label_ext-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.queue_end_debug_utils_label_ext","text":"queue_end_debug_utils_label_ext(queue, fptr::FunctionPtr)\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\nqueue\nfptr::FunctionPtr\n\nAPI documentation\n\nqueue_end_debug_utils_label_ext(queue, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.queue_end_debug_utils_label_ext-Tuple{Any}","page":"API","title":"Vulkan.queue_end_debug_utils_label_ext","text":"queue_end_debug_utils_label_ext(queue)\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\nqueue\n\nAPI documentation\n\nqueue_end_debug_utils_label_ext(queue)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.queue_insert_debug_utils_label_ext-Tuple{Any, DebugUtilsLabelEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.queue_insert_debug_utils_label_ext","text":"queue_insert_debug_utils_label_ext(queue, label_info::DebugUtilsLabelEXT, fptr::FunctionPtr)\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\nqueue\nlabel_info::DebugUtilsLabelEXT\nfptr::FunctionPtr\n\nAPI documentation\n\nqueue_insert_debug_utils_label_ext(queue, label_info::DebugUtilsLabelEXT, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.queue_insert_debug_utils_label_ext-Tuple{Any, DebugUtilsLabelEXT}","page":"API","title":"Vulkan.queue_insert_debug_utils_label_ext","text":"queue_insert_debug_utils_label_ext(queue, label_info::DebugUtilsLabelEXT)\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\nqueue\nlabel_info::DebugUtilsLabelEXT\n\nAPI documentation\n\nqueue_insert_debug_utils_label_ext(queue, label_info::DebugUtilsLabelEXT)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.queue_present_khr-Tuple{Any, PresentInfoKHR, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.queue_present_khr","text":"queue_present_khr(queue, present_info::PresentInfoKHR, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nSuccess:\nSUCCESS\nSUBOPTIMAL_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\nERROR_SURFACE_LOST_KHR\nERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT\n\nArguments:\n\nqueue (externsync)\npresent_info::PresentInfoKHR (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\nqueue_present_khr(queue, present_info::PresentInfoKHR, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.queue_present_khr-Tuple{Any, PresentInfoKHR}","page":"API","title":"Vulkan.queue_present_khr","text":"queue_present_khr(queue, present_info::PresentInfoKHR)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_swapchain\n\nReturn codes:\n\nSuccess:\nSUCCESS\nSUBOPTIMAL_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\nERROR_SURFACE_LOST_KHR\nERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT\n\nArguments:\n\nqueue (externsync)\npresent_info::PresentInfoKHR (externsync)\n\nAPI documentation\n\nqueue_present_khr(queue, present_info::PresentInfoKHR) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.queue_set_performance_configuration_intel-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.queue_set_performance_configuration_intel","text":"queue_set_performance_configuration_intel(queue, configuration, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\nqueue\nconfiguration\nfptr::FunctionPtr\n\nAPI documentation\n\nqueue_set_performance_configuration_intel(queue, configuration, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.queue_set_performance_configuration_intel-Tuple{Any, Any}","page":"API","title":"Vulkan.queue_set_performance_configuration_intel","text":"queue_set_performance_configuration_intel(queue, configuration)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\nqueue\nconfiguration\n\nAPI documentation\n\nqueue_set_performance_configuration_intel(queue, configuration) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.queue_submit-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.queue_submit","text":"queue_submit(queue, submits::AbstractArray{SubmitInfo}, fptr::FunctionPtr; fence = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\nqueue (externsync)\nsubmits::AbstractArray{SubmitInfo}\nfptr::FunctionPtr\nfence: defaults to C_NULL (externsync)\n\nAPI documentation\n\nqueue_submit(queue, submits::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}; fence) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.queue_submit-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan.queue_submit","text":"queue_submit(queue, submits::AbstractArray{SubmitInfo}; fence = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\nqueue (externsync)\nsubmits::AbstractArray{SubmitInfo}\nfence: defaults to C_NULL (externsync)\n\nAPI documentation\n\nqueue_submit(queue, submits::AbstractArray; fence) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.queue_submit_2_khr-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.queue_submit_2_khr","text":"queue_submit_2_khr(queue, submits::AbstractArray{SubmitInfo2KHR}, fptr::FunctionPtr; fence = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_synchronization2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\nqueue (externsync)\nsubmits::AbstractArray{SubmitInfo2KHR}\nfptr::FunctionPtr\nfence: defaults to C_NULL (externsync)\n\nAPI documentation\n\nqueue_submit_2_khr(queue, submits::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}; fence) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.queue_submit_2_khr-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan.queue_submit_2_khr","text":"queue_submit_2_khr(queue, submits::AbstractArray{SubmitInfo2KHR}; fence = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_synchronization2\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\nqueue (externsync)\nsubmits::AbstractArray{SubmitInfo2KHR}\nfence: defaults to C_NULL (externsync)\n\nAPI documentation\n\nqueue_submit_2_khr(queue, submits::AbstractArray; fence) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.queue_wait_idle-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.queue_wait_idle","text":"queue_wait_idle(queue, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\nqueue (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\nqueue_wait_idle(queue, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.queue_wait_idle-Tuple{Any}","page":"API","title":"Vulkan.queue_wait_idle","text":"queue_wait_idle(queue)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\nqueue (externsync)\n\nAPI documentation\n\nqueue_wait_idle(queue) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.register_device_event_ext-Tuple{Any, DeviceEventInfoEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.register_device_event_ext","text":"register_device_event_ext(device, device_event_info::DeviceEventInfoEXT, fptr::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{Fence, VulkanError}\n\nExtension: VK_EXT_display_control\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ndevice_event_info::DeviceEventInfoEXT\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\nregister_device_event_ext(device, device_event_info::DeviceEventInfoEXT, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{Fence, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.register_device_event_ext-Tuple{Any, DeviceEventInfoEXT}","page":"API","title":"Vulkan.register_device_event_ext","text":"register_device_event_ext(device, device_event_info::DeviceEventInfoEXT; allocator = C_NULL)::ResultTypes.Result{Fence, VulkanError}\n\nExtension: VK_EXT_display_control\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ndevice_event_info::DeviceEventInfoEXT\nallocator: defaults to C_NULL\n\nAPI documentation\n\nregister_device_event_ext(device, device_event_info::DeviceEventInfoEXT; allocator) -> ResultTypes.Result{Fence, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.register_display_event_ext-Tuple{Any, Any, DisplayEventInfoEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.register_display_event_ext","text":"register_display_event_ext(device, display, display_event_info::DisplayEventInfoEXT, fptr::FunctionPtr; allocator = C_NULL)::ResultTypes.Result{Fence, VulkanError}\n\nExtension: VK_EXT_display_control\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ndisplay\ndisplay_event_info::DisplayEventInfoEXT\nfptr::FunctionPtr\nallocator: defaults to C_NULL\n\nAPI documentation\n\nregister_display_event_ext(device, display, display_event_info::DisplayEventInfoEXT, fptr::Union{Ptr{Nothing}, Base.CFunction}; allocator) -> ResultTypes.Result{Fence, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.register_display_event_ext-Tuple{Any, Any, DisplayEventInfoEXT}","page":"API","title":"Vulkan.register_display_event_ext","text":"register_display_event_ext(device, display, display_event_info::DisplayEventInfoEXT; allocator = C_NULL)::ResultTypes.Result{Fence, VulkanError}\n\nExtension: VK_EXT_display_control\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\ndisplay\ndisplay_event_info::DisplayEventInfoEXT\nallocator: defaults to C_NULL\n\nAPI documentation\n\nregister_display_event_ext(device, display, display_event_info::DisplayEventInfoEXT; allocator) -> ResultTypes.Result{Fence, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.release_display_ext-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.release_display_ext","text":"release_display_ext(physical_device, display, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_direct_mode_display\n\nReturn codes:\n\nArguments:\n\nphysical_device\ndisplay\nfptr::FunctionPtr\n\nAPI documentation\n\nrelease_display_ext(physical_device, display, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.release_display_ext-Tuple{Any, Any}","page":"API","title":"Vulkan.release_display_ext","text":"release_display_ext(physical_device, display)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_direct_mode_display\n\nReturn codes:\n\nArguments:\n\nphysical_device\ndisplay\n\nAPI documentation\n\nrelease_display_ext(physical_device, display) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.release_performance_configuration_intel-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.release_performance_configuration_intel","text":"release_performance_configuration_intel(device, fptr::FunctionPtr; configuration = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nfptr::FunctionPtr\nconfiguration: defaults to C_NULL (externsync)\n\nAPI documentation\n\nrelease_performance_configuration_intel(device, fptr::Union{Ptr{Nothing}, Base.CFunction}; configuration) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.release_performance_configuration_intel-Tuple{Any}","page":"API","title":"Vulkan.release_performance_configuration_intel","text":"release_performance_configuration_intel(device; configuration = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_INTEL_performance_query\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nconfiguration: defaults to C_NULL (externsync)\n\nAPI documentation\n\nrelease_performance_configuration_intel(device; configuration) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.release_profiling_lock_khr-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.release_profiling_lock_khr","text":"release_profiling_lock_khr(device, fptr::FunctionPtr)\n\nExtension: VK_KHR_performance_query\n\nArguments:\n\ndevice\nfptr::FunctionPtr\n\nAPI documentation\n\nrelease_profiling_lock_khr(device, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.release_profiling_lock_khr-Tuple{Any}","page":"API","title":"Vulkan.release_profiling_lock_khr","text":"release_profiling_lock_khr(device)\n\nExtension: VK_KHR_performance_query\n\nArguments:\n\ndevice\n\nAPI documentation\n\nrelease_profiling_lock_khr(device)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.reset_command_buffer-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.reset_command_buffer","text":"reset_command_buffer(command_buffer, fptr::FunctionPtr; flags = 0)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ncommand_buffer (externsync)\nfptr::FunctionPtr\nflags: defaults to 0\n\nAPI documentation\n\nreset_command_buffer(command_buffer, fptr::Union{Ptr{Nothing}, Base.CFunction}; flags) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.reset_command_buffer-Tuple{Any}","page":"API","title":"Vulkan.reset_command_buffer","text":"reset_command_buffer(command_buffer; flags = 0)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ncommand_buffer (externsync)\nflags: defaults to 0\n\nAPI documentation\n\nreset_command_buffer(command_buffer; flags) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.reset_command_pool-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.reset_command_pool","text":"reset_command_pool(device, command_pool, fptr::FunctionPtr; flags = 0)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncommand_pool (externsync)\nfptr::FunctionPtr\nflags: defaults to 0\n\nAPI documentation\n\nreset_command_pool(device, command_pool, fptr::Union{Ptr{Nothing}, Base.CFunction}; flags) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.reset_command_pool-Tuple{Any, Any}","page":"API","title":"Vulkan.reset_command_pool","text":"reset_command_pool(device, command_pool; flags = 0)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ncommand_pool (externsync)\nflags: defaults to 0\n\nAPI documentation\n\nreset_command_pool(device, command_pool; flags) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.reset_descriptor_pool-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.reset_descriptor_pool","text":"reset_descriptor_pool(device, descriptor_pool, fptr::FunctionPtr; flags = 0)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nArguments:\n\ndevice\ndescriptor_pool (externsync)\nfptr::FunctionPtr\nflags: defaults to 0\n\nAPI documentation\n\nreset_descriptor_pool(device, descriptor_pool, fptr::Union{Ptr{Nothing}, Base.CFunction}; flags) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.reset_descriptor_pool-Tuple{Any, Any}","page":"API","title":"Vulkan.reset_descriptor_pool","text":"reset_descriptor_pool(device, descriptor_pool; flags = 0)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nArguments:\n\ndevice\ndescriptor_pool (externsync)\nflags: defaults to 0\n\nAPI documentation\n\nreset_descriptor_pool(device, descriptor_pool; flags) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.reset_event-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.reset_event","text":"reset_event(device, event, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nevent (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\nreset_event(device, event, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.reset_event-Tuple{Any, Any}","page":"API","title":"Vulkan.reset_event","text":"reset_event(device, event)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nevent (externsync)\n\nAPI documentation\n\nreset_event(device, event) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.reset_fences-Tuple{Any, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.reset_fences","text":"reset_fences(device, fences::AbstractArray{Fence}, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nfences::AbstractArray{Fence} (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\nreset_fences(device, fences::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.reset_fences-Tuple{Any, AbstractArray}","page":"API","title":"Vulkan.reset_fences","text":"reset_fences(device, fences::AbstractArray{Fence})::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nfences::AbstractArray{Fence} (externsync)\n\nAPI documentation\n\nreset_fences(device, fences::AbstractArray) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.reset_query_pool-Tuple{Any, Any, Integer, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.reset_query_pool","text":"reset_query_pool(device, query_pool, first_query::Integer, query_count::Integer, fptr::FunctionPtr)\n\nArguments:\n\ndevice\nquery_pool\nfirst_query::Integer\nquery_count::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\nreset_query_pool(device, query_pool, first_query::Integer, query_count::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.reset_query_pool-Tuple{Any, Any, Integer, Integer}","page":"API","title":"Vulkan.reset_query_pool","text":"reset_query_pool(device, query_pool, first_query::Integer, query_count::Integer)\n\nArguments:\n\ndevice\nquery_pool\nfirst_query::Integer\nquery_count::Integer\n\nAPI documentation\n\nreset_query_pool(device, query_pool, first_query::Integer, query_count::Integer)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.set_debug_utils_object_name_ext-Tuple{Any, DebugUtilsObjectNameInfoEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.set_debug_utils_object_name_ext","text":"set_debug_utils_object_name_ext(device, name_info::DebugUtilsObjectNameInfoEXT, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_debug_utils\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nname_info::DebugUtilsObjectNameInfoEXT (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\nset_debug_utils_object_name_ext(device, name_info::DebugUtilsObjectNameInfoEXT, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.set_debug_utils_object_name_ext-Tuple{Any, DebugUtilsObjectNameInfoEXT}","page":"API","title":"Vulkan.set_debug_utils_object_name_ext","text":"set_debug_utils_object_name_ext(device, name_info::DebugUtilsObjectNameInfoEXT)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_debug_utils\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nname_info::DebugUtilsObjectNameInfoEXT (externsync)\n\nAPI documentation\n\nset_debug_utils_object_name_ext(device, name_info::DebugUtilsObjectNameInfoEXT) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.set_debug_utils_object_tag_ext-Tuple{Any, DebugUtilsObjectTagInfoEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.set_debug_utils_object_tag_ext","text":"set_debug_utils_object_tag_ext(device, tag_info::DebugUtilsObjectTagInfoEXT, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_debug_utils\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ntag_info::DebugUtilsObjectTagInfoEXT (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\nset_debug_utils_object_tag_ext(device, tag_info::DebugUtilsObjectTagInfoEXT, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.set_debug_utils_object_tag_ext-Tuple{Any, DebugUtilsObjectTagInfoEXT}","page":"API","title":"Vulkan.set_debug_utils_object_tag_ext","text":"set_debug_utils_object_tag_ext(device, tag_info::DebugUtilsObjectTagInfoEXT)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_debug_utils\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\ntag_info::DebugUtilsObjectTagInfoEXT (externsync)\n\nAPI documentation\n\nset_debug_utils_object_tag_ext(device, tag_info::DebugUtilsObjectTagInfoEXT) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.set_driver-Tuple{Module, Symbol}","page":"API","title":"Vulkan.set_driver","text":"Convenience function for setting an ICD (Installable Client Driver) used by Vulkan. Only SwiftShader is currently supported. To add another ICD, you must do it by hand. You can achieve that by setting the environment variable \"VKICDFILENAMES\" to point to your own ICD JSON file, as described in https://github.com/KhronosGroup/Vulkan-Loader/blob/master/loader/LoaderAndLayerInterface.md#icd-discovery.\n\nAvailable drivers:\n\nSwiftShader: a CPU implementation of Vulkan. Requires SwiftShader_jll to be imported in mod.\n\nset_driver(mod::Module, backend::Symbol) -> String\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.set_event-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.set_event","text":"set_event(device, event, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nevent (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\nset_event(device, event, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.set_event-Tuple{Any, Any}","page":"API","title":"Vulkan.set_event","text":"set_event(device, event)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nevent (externsync)\n\nAPI documentation\n\nset_event(device, event) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.set_hdr_metadata_ext-Tuple{Any, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.set_hdr_metadata_ext","text":"set_hdr_metadata_ext(device, swapchains::AbstractArray{SwapchainKHR}, metadata::AbstractArray{HdrMetadataEXT}, fptr::FunctionPtr)\n\nExtension: VK_EXT_hdr_metadata\n\nArguments:\n\ndevice\nswapchains::AbstractArray{SwapchainKHR}\nmetadata::AbstractArray{HdrMetadataEXT}\nfptr::FunctionPtr\n\nAPI documentation\n\nset_hdr_metadata_ext(device, swapchains::AbstractArray, metadata::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.set_hdr_metadata_ext-Tuple{Any, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.set_hdr_metadata_ext","text":"set_hdr_metadata_ext(device, swapchains::AbstractArray{SwapchainKHR}, metadata::AbstractArray{HdrMetadataEXT})\n\nExtension: VK_EXT_hdr_metadata\n\nArguments:\n\ndevice\nswapchains::AbstractArray{SwapchainKHR}\nmetadata::AbstractArray{HdrMetadataEXT}\n\nAPI documentation\n\nset_hdr_metadata_ext(device, swapchains::AbstractArray, metadata::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.set_local_dimming_amd-Tuple{Any, Any, Bool, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.set_local_dimming_amd","text":"set_local_dimming_amd(device, swap_chain, local_dimming_enable::Bool, fptr::FunctionPtr)\n\nExtension: VK_AMD_display_native_hdr\n\nArguments:\n\ndevice\nswap_chain\nlocal_dimming_enable::Bool\nfptr::FunctionPtr\n\nAPI documentation\n\nset_local_dimming_amd(device, swap_chain, local_dimming_enable::Bool, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.set_local_dimming_amd-Tuple{Any, Any, Bool}","page":"API","title":"Vulkan.set_local_dimming_amd","text":"set_local_dimming_amd(device, swap_chain, local_dimming_enable::Bool)\n\nExtension: VK_AMD_display_native_hdr\n\nArguments:\n\ndevice\nswap_chain\nlocal_dimming_enable::Bool\n\nAPI documentation\n\nset_local_dimming_amd(device, swap_chain, local_dimming_enable::Bool)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.set_private_data_ext-Tuple{Any, ObjectType, Integer, Any, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.set_private_data_ext","text":"set_private_data_ext(device, object_type::ObjectType, object_handle::Integer, private_data_slot, data::Integer, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_private_data\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nobject_type::ObjectType\nobject_handle::Integer\nprivate_data_slot\ndata::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\nset_private_data_ext(device, object_type::ObjectType, object_handle::Integer, private_data_slot, data::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.set_private_data_ext-Tuple{Any, ObjectType, Integer, Any, Integer}","page":"API","title":"Vulkan.set_private_data_ext","text":"set_private_data_ext(device, object_type::ObjectType, object_handle::Integer, private_data_slot, data::Integer)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_EXT_private_data\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice\nobject_type::ObjectType\nobject_handle::Integer\nprivate_data_slot\ndata::Integer\n\nAPI documentation\n\nset_private_data_ext(device, object_type::ObjectType, object_handle::Integer, private_data_slot, data::Integer) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.signal_semaphore-Tuple{Any, SemaphoreSignalInfo, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.signal_semaphore","text":"signal_semaphore(device, signal_info::SemaphoreSignalInfo, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nsignal_info::SemaphoreSignalInfo\nfptr::FunctionPtr\n\nAPI documentation\n\nsignal_semaphore(device, signal_info::SemaphoreSignalInfo, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.signal_semaphore-Tuple{Any, SemaphoreSignalInfo}","page":"API","title":"Vulkan.signal_semaphore","text":"signal_semaphore(device, signal_info::SemaphoreSignalInfo)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nsignal_info::SemaphoreSignalInfo\n\nAPI documentation\n\nsignal_semaphore(device, signal_info::SemaphoreSignalInfo) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.submit_debug_utils_message_ext-Tuple{Any, DebugUtilsMessageSeverityFlagEXT, DebugUtilsMessageTypeFlagEXT, DebugUtilsMessengerCallbackDataEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.submit_debug_utils_message_ext","text":"submit_debug_utils_message_ext(instance, message_severity::DebugUtilsMessageSeverityFlagEXT, message_types::DebugUtilsMessageTypeFlagEXT, callback_data::DebugUtilsMessengerCallbackDataEXT, fptr::FunctionPtr)\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\ninstance\nmessage_severity::DebugUtilsMessageSeverityFlagEXT\nmessage_types::DebugUtilsMessageTypeFlagEXT\ncallback_data::DebugUtilsMessengerCallbackDataEXT\nfptr::FunctionPtr\n\nAPI documentation\n\nsubmit_debug_utils_message_ext(instance, message_severity::DebugUtilsMessageSeverityFlagEXT, message_types::DebugUtilsMessageTypeFlagEXT, callback_data::DebugUtilsMessengerCallbackDataEXT, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.submit_debug_utils_message_ext-Tuple{Any, DebugUtilsMessageSeverityFlagEXT, DebugUtilsMessageTypeFlagEXT, DebugUtilsMessengerCallbackDataEXT}","page":"API","title":"Vulkan.submit_debug_utils_message_ext","text":"submit_debug_utils_message_ext(instance, message_severity::DebugUtilsMessageSeverityFlagEXT, message_types::DebugUtilsMessageTypeFlagEXT, callback_data::DebugUtilsMessengerCallbackDataEXT)\n\nExtension: VK_EXT_debug_utils\n\nArguments:\n\ninstance\nmessage_severity::DebugUtilsMessageSeverityFlagEXT\nmessage_types::DebugUtilsMessageTypeFlagEXT\ncallback_data::DebugUtilsMessengerCallbackDataEXT\n\nAPI documentation\n\nsubmit_debug_utils_message_ext(instance, message_severity::DebugUtilsMessageSeverityFlagEXT, message_types::DebugUtilsMessageTypeFlagEXT, callback_data::DebugUtilsMessengerCallbackDataEXT)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.to_vk","page":"API","title":"Vulkan.to_vk","text":"Convert a type into its corresponding Vulkan type.\n\nExamples\n\njulia> to_vk(UInt32, v\"1\")\n0x00400000\n\njulia> to_vk(NTuple{6, UInt8}, \"hello\")\n(0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x00)\n\nto_vk(T, x)\n\ndefined at /home/runner/work/Vulkan.jl/Vulkan.jl/src/prewrap/conversions.jl:15.\n\nto_vk(_, x)\n\ndefined at /home/runner/work/Vulkan.jl/Vulkan.jl/src/prewrap/conversions.jl:16.\n\nto_vk(_, x)\n\ndefined at /home/runner/work/Vulkan.jl/Vulkan.jl/src/prewrap/conversions.jl:17.\n\nto_vk(T, x)\n\ndefined at /home/runner/work/Vulkan.jl/Vulkan.jl/src/prewrap/conversions.jl:18.\n\nto_vk(T, version)\n\ndefined at /home/runner/work/Vulkan.jl/Vulkan.jl/src/prewrap/conversions.jl:19.\n\nto_vk(T, s)\n\ndefined at /home/runner/work/Vulkan.jl/Vulkan.jl/src/prewrap/conversions.jl:20.\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.trim_command_pool-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.trim_command_pool","text":"trim_command_pool(device, command_pool, fptr::FunctionPtr; flags = 0)\n\nArguments:\n\ndevice\ncommand_pool (externsync)\nfptr::FunctionPtr\nflags: defaults to 0\n\nAPI documentation\n\ntrim_command_pool(device, command_pool, fptr::Union{Ptr{Nothing}, Base.CFunction}; flags)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.trim_command_pool-Tuple{Any, Any}","page":"API","title":"Vulkan.trim_command_pool","text":"trim_command_pool(device, command_pool; flags = 0)\n\nArguments:\n\ndevice\ncommand_pool (externsync)\nflags: defaults to 0\n\nAPI documentation\n\ntrim_command_pool(device, command_pool; flags)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.unchain-Tuple{Vulkan.HighLevelStruct}","page":"API","title":"Vulkan.unchain","text":"Break a next chain into its constituents, with all next members set to C_NULL.\n\nunchain(x::Vulkan.HighLevelStruct) -> Vector{Any}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.uninitialize_performance_api_intel-Tuple{Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.uninitialize_performance_api_intel","text":"uninitialize_performance_api_intel(device, fptr::FunctionPtr)\n\nExtension: VK_INTEL_performance_query\n\nArguments:\n\ndevice\nfptr::FunctionPtr\n\nAPI documentation\n\nuninitialize_performance_api_intel(device, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.uninitialize_performance_api_intel-Tuple{Any}","page":"API","title":"Vulkan.uninitialize_performance_api_intel","text":"uninitialize_performance_api_intel(device)\n\nExtension: VK_INTEL_performance_query\n\nArguments:\n\ndevice\n\nAPI documentation\n\nuninitialize_performance_api_intel(device)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.unmap_memory-Tuple{Any, Any, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.unmap_memory","text":"unmap_memory(device, memory, fptr::FunctionPtr)\n\nArguments:\n\ndevice\nmemory (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\nunmap_memory(device, memory, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.unmap_memory-Tuple{Any, Any}","page":"API","title":"Vulkan.unmap_memory","text":"unmap_memory(device, memory)\n\nArguments:\n\ndevice\nmemory (externsync)\n\nAPI documentation\n\nunmap_memory(device, memory)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.update_descriptor_set_with_template-Tuple{Any, Any, Any, Ptr{Nothing}, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.update_descriptor_set_with_template","text":"update_descriptor_set_with_template(device, descriptor_set, descriptor_update_template, data::Ptr{Cvoid}, fptr::FunctionPtr)\n\nArguments:\n\ndevice\ndescriptor_set (externsync)\ndescriptor_update_template\ndata::Ptr{Cvoid}\nfptr::FunctionPtr\n\nAPI documentation\n\nupdate_descriptor_set_with_template(device, descriptor_set, descriptor_update_template, data::Ptr{Nothing}, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.update_descriptor_set_with_template-Tuple{Any, Any, Any, Ptr{Nothing}}","page":"API","title":"Vulkan.update_descriptor_set_with_template","text":"update_descriptor_set_with_template(device, descriptor_set, descriptor_update_template, data::Ptr{Cvoid})\n\nArguments:\n\ndevice\ndescriptor_set (externsync)\ndescriptor_update_template\ndata::Ptr{Cvoid}\n\nAPI documentation\n\nupdate_descriptor_set_with_template(device, descriptor_set, descriptor_update_template, data::Ptr{Nothing})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.update_descriptor_sets-Tuple{Any, AbstractArray, AbstractArray, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.update_descriptor_sets","text":"update_descriptor_sets(device, descriptor_writes::AbstractArray{WriteDescriptorSet}, descriptor_copies::AbstractArray{CopyDescriptorSet}, fptr::FunctionPtr)\n\nArguments:\n\ndevice\ndescriptor_writes::AbstractArray{WriteDescriptorSet} (externsync)\ndescriptor_copies::AbstractArray{CopyDescriptorSet} (externsync)\nfptr::FunctionPtr\n\nAPI documentation\n\nupdate_descriptor_sets(device, descriptor_writes::AbstractArray, descriptor_copies::AbstractArray, fptr::Union{Ptr{Nothing}, Base.CFunction})\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.update_descriptor_sets-Tuple{Any, AbstractArray, AbstractArray}","page":"API","title":"Vulkan.update_descriptor_sets","text":"update_descriptor_sets(device, descriptor_writes::AbstractArray{WriteDescriptorSet}, descriptor_copies::AbstractArray{CopyDescriptorSet})\n\nArguments:\n\ndevice\ndescriptor_writes::AbstractArray{WriteDescriptorSet} (externsync)\ndescriptor_copies::AbstractArray{CopyDescriptorSet} (externsync)\n\nAPI documentation\n\nupdate_descriptor_sets(device, descriptor_writes::AbstractArray, descriptor_copies::AbstractArray)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.wait_for_fences-Tuple{Any, AbstractArray, Bool, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.wait_for_fences","text":"wait_for_fences(device, fences::AbstractArray{Fence}, wait_all::Bool, timeout::Integer, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nTIMEOUT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\nfences::AbstractArray{Fence}\nwait_all::Bool\ntimeout::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\nwait_for_fences(device, fences::AbstractArray, wait_all::Bool, timeout::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.wait_for_fences-Tuple{Any, AbstractArray, Bool, Integer}","page":"API","title":"Vulkan.wait_for_fences","text":"wait_for_fences(device, fences::AbstractArray{Fence}, wait_all::Bool, timeout::Integer)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nTIMEOUT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\nfences::AbstractArray{Fence}\nwait_all::Bool\ntimeout::Integer\n\nAPI documentation\n\nwait_for_fences(device, fences::AbstractArray, wait_all::Bool, timeout::Integer) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.wait_semaphores-Tuple{Any, SemaphoreWaitInfo, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.wait_semaphores","text":"wait_semaphores(device, wait_info::SemaphoreWaitInfo, timeout::Integer, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nTIMEOUT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\nwait_info::SemaphoreWaitInfo\ntimeout::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\nwait_semaphores(device, wait_info::SemaphoreWaitInfo, timeout::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.wait_semaphores-Tuple{Any, SemaphoreWaitInfo, Integer}","page":"API","title":"Vulkan.wait_semaphores","text":"wait_semaphores(device, wait_info::SemaphoreWaitInfo, timeout::Integer)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nTIMEOUT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice\nwait_info::SemaphoreWaitInfo\ntimeout::Integer\n\nAPI documentation\n\nwait_semaphores(device, wait_info::SemaphoreWaitInfo, timeout::Integer) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.write_acceleration_structures_properties_khr-Tuple{Any, AbstractArray, QueryType, Integer, Ptr{Nothing}, Integer, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.write_acceleration_structures_properties_khr","text":"write_acceleration_structures_properties_khr(device, acceleration_structures::AbstractArray{AccelerationStructureKHR}, query_type::QueryType, data_size::Integer, data::Ptr{Cvoid}, stride::Integer, fptr::FunctionPtr)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_acceleration_structure\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nacceleration_structures::AbstractArray{AccelerationStructureKHR}\nquery_type::QueryType\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\nstride::Integer\nfptr::FunctionPtr\n\nAPI documentation\n\nwrite_acceleration_structures_properties_khr(device, acceleration_structures::AbstractArray, query_type::QueryType, data_size::Integer, data::Ptr{Nothing}, stride::Integer, fptr::Union{Ptr{Nothing}, Base.CFunction}) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.write_acceleration_structures_properties_khr-Tuple{Any, AbstractArray, QueryType, Integer, Ptr{Nothing}, Integer}","page":"API","title":"Vulkan.write_acceleration_structures_properties_khr","text":"write_acceleration_structures_properties_khr(device, acceleration_structures::AbstractArray{AccelerationStructureKHR}, query_type::QueryType, data_size::Integer, data::Ptr{Cvoid}, stride::Integer)::ResultTypes.Result{Result, VulkanError}\n\nExtension: VK_KHR_acceleration_structure\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice\nacceleration_structures::AbstractArray{AccelerationStructureKHR}\nquery_type::QueryType\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\nstride::Integer\n\nAPI documentation\n\nwrite_acceleration_structures_properties_khr(device, acceleration_structures::AbstractArray, query_type::QueryType, data_size::Integer, data::Ptr{Nothing}, stride::Integer) -> ResultTypes.Result{Result, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.@bitmask_flag-Tuple{Any, Any}","page":"API","title":"Vulkan.@bitmask_flag","text":"@bitmask_flag BitFlags::UInt32 begin\n    FLAG_A = 1\n    FLAG_B = 2\n    FLAG_C = 4\nend\n\nEnumeration of bitmask flags that can be combined with &, | and xor, forbidding the combination of flags from different bitmasks.\n\n\n\n\n\n","category":"macro"},{"location":"api/#Vulkan.@check-Tuple{Any}","page":"API","title":"Vulkan.@check","text":"@check vkCreateInstance(args...)\n\nAssign the expression to a variable named _return_code. Then, if the value is not a success code, return a VulkanError holding the return code.\n\n\n\n\n\n","category":"macro"},{"location":"api/#Vulkan.@set_driver-Tuple{Any}","page":"API","title":"Vulkan.@set_driver","text":"Call set_driver passing the current module as the first argument.\n\n\n\n\n\n","category":"macro"},{"location":"about/extension_mechanism/","page":"Optional functionality","title":"Optional functionality","text":"EditURL = \"https://github.com/JuliaGPU/Vulkan.jl/blob/master/docs/src/about/extension_mechanism.jl\"","category":"page"},{"location":"about/extension_mechanism/#Optional-functionality","page":"Optional functionality","title":"Optional functionality","text":"","category":"section"},{"location":"about/extension_mechanism/","page":"Optional functionality","title":"Optional functionality","text":"Vulkan uses a particular functionality mechanism based on features, extensions and properties.","category":"page"},{"location":"about/extension_mechanism/","page":"Optional functionality","title":"Optional functionality","text":"Properties are per-device, and are not specified by the user; instead, they are returned by the Vulkan corresponding driver. Features may be very similar to properties semantically: they may specify whether some functionality is available or not on the device, such as atomic operations. However, features are usually more general than that: the presence or absence of specific features will cause the driver to behave differently. The difference with properties is that enabling a feature may dynamically change the logic of the driver, while properties are static and can only tell whether some functionality is supported or not.","category":"page"},{"location":"about/extension_mechanism/","page":"Optional functionality","title":"Optional functionality","text":"SPIR-V uses a similar mechanism, with capabilities (analogous to features) and extensions. However, one should note that SPIR-V is just a format for GPU code, and not an API in itself; there is no SPIR-V driver of any kind. Therefore, any configuration for SPIR-V will be specified through its execution environment, e.g. OpenCL or Vulkan. This is why Vulkan specifies some features and extensions that are directly related to SPIR-V capabilities and extensions.","category":"page"},{"location":"about/extension_mechanism/","page":"Optional functionality","title":"Optional functionality","text":"As a client API for SPIR-V, Vulkan establishes what SPIR-V capabilities and extensions are enabled given the features and extensions that were enabled for Vulkan. Notably, there is no SPIR-V capability or extension that can be enabled without supporting a Vulkan core version or without having a matching Vulkan feature or extension enabled.","category":"page"},{"location":"about/extension_mechanism/","page":"Optional functionality","title":"Optional functionality","text":"Optional SPIR-V functionality is therefore fully implicit, based on the Vulkan API configuration. Notably, a SPIR-V capability may be enabled by:","category":"page"},{"location":"about/extension_mechanism/","page":"Optional functionality","title":"Optional functionality","text":"A Vulkan core version\nAt least one enabling Vulkan extension\nAt least one enabling Vulkan feature","category":"page"},{"location":"about/extension_mechanism/","page":"Optional functionality","title":"Optional functionality","text":"","category":"page"},{"location":"about/extension_mechanism/","page":"Optional functionality","title":"Optional functionality","text":"This page was generated using Literate.jl.","category":"page"},{"location":"about/motivations/#Motivations","page":"Motivations","title":"Motivations","text":"","category":"section"},{"location":"about/motivations/","page":"Motivations","title":"Motivations","text":"Vulkan is a low-level API that exhibits many patterns than any C library exposes. For example, some functions return error codes as a result, or mutate pointer memory as a way of returning values. Arrays are requested under the form of a pointer and a length. Pointers are used in many places, and it is not trivial to keep them valid (i.e. have them point to valid memory) in Julia. Their validity is not guaranteed out of the box, which introduces several pitfalls that ultimately lead to crashes. Notably, the API makes a heavy use of structures with pointer fields and structure pointers, which demands a clear knowledge of variable preservation in Julia.","category":"page"},{"location":"about/motivations/","page":"Motivations","title":"Motivations","text":"Usually, the patterns mentioned above are not problematic for small libraries, because structures are relatively simple. But with the large API that is Vulkan, they start to feel heavy: they require lots of boilerplate code and mistakes are a great source of crashes. That is why we developped a procedural approach to automate these patterns.","category":"page"},{"location":"about/motivations/","page":"Motivations","title":"Motivations","text":"Vulkan.jl uses a generator to programmatically generate higher-level wrappers for low-level API functions. This is a consequent part of this library, which helped us to minimize the amount of human errors in the wrapping process, while allowing a certain flexilibity. The related project is contained in the generator folder. Because its unique purpose is to generate wrappers, it is not included in the package, which results in a relatively lightweight library.","category":"page"},{"location":"howto/preferences/","page":"Setting preferences","title":"Setting preferences","text":"EditURL = \"https://github.com/JuliaGPU/Vulkan.jl/blob/master/docs/src/howto/preferences.jl\"","category":"page"},{"location":"howto/preferences/#Setting-preferences","page":"Setting preferences","title":"Setting preferences","text":"","category":"section"},{"location":"howto/preferences/","page":"Setting preferences","title":"Setting preferences","text":"To set the preferences LOG_DESTRUCTION to \"true\" for debugging, you can do it either by having a LocalPreferences.toml in your environment or by calling Vulkan.set_preferences!:","category":"page"},{"location":"howto/preferences/","page":"Setting preferences","title":"Setting preferences","text":"using Vulkan\n\nVulkan.set_preferences!(\"LOG_DESTRUCTION\" => \"true\")","category":"page"},{"location":"howto/preferences/","page":"Setting preferences","title":"Setting preferences","text":"","category":"page"},{"location":"howto/preferences/","page":"Setting preferences","title":"Setting preferences","text":"This page was generated using Literate.jl.","category":"page"},{"location":"tutorial/getting_started/#Getting-started","page":"Getting started","title":"Getting started","text":"","category":"section"},{"location":"tutorial/getting_started/#Overview","page":"Getting started","title":"Overview","text":"","category":"section"},{"location":"tutorial/getting_started/","page":"Getting started","title":"Getting started","text":"Several features are exposed which aim at simplifying the use of the Vulkan API from Julia. Some features are configurable through Preferences.jl; see the corresponding section for the list of available options.","category":"page"},{"location":"tutorial/getting_started/","page":"Getting started","title":"Getting started","text":"This library offers types and functions that are intended as a replacement for their C-like counterparts. There are two levels of wrapping for structures, although the minimalistic wrappers should be used only where there is a noticable performance impact. Functions have methods defined for both. Error handling is exposed through ResultTypes.jl to provide a more robust and user-friendly way of managing error return codes.","category":"page"},{"location":"tutorial/getting_started/","page":"Getting started","title":"Getting started","text":"Finally, functions and structures have docstrings with information extracted from the XML specification, with links to the original Vulkan documentation, information on required extensions, return codes and more. You can access them easily through the built-in help in the REPL: for example, ?InstanceCreateInfo will print you information regarding the InstanceCreateInfo structure. See the full documentation here.","category":"page"},{"location":"tutorial/getting_started/#Installation","page":"Getting started","title":"Installation","text":"","category":"section"},{"location":"tutorial/getting_started/","page":"Getting started","title":"Getting started","text":"This package can be installed through the registry with","category":"page"},{"location":"tutorial/getting_started/","page":"Getting started","title":"Getting started","text":"julia> ]add Vulkan","category":"page"},{"location":"tutorial/getting_started/","page":"Getting started","title":"Getting started","text":"Make sure that you have a decently recent Vulkan driver installed.","category":"page"},{"location":"tutorial/getting_started/#Preferences","page":"Getting started","title":"Preferences","text":"","category":"section"},{"location":"tutorial/getting_started/","page":"Getting started","title":"Getting started","text":"Certain features of this library are configurable via Preferences.jl.","category":"page"},{"location":"tutorial/getting_started/","page":"Getting started","title":"Getting started","text":"warning: Warning\nPreferences require running at least Julia 1.6. For earlier versions, these options are not customizable, and will have their default values.","category":"page"},{"location":"tutorial/getting_started/","page":"Getting started","title":"Getting started","text":"Preference Description Default\nLOG_DESTRUCTION Log the destruction of Vulkan handles \"false\"\nUSE_DISPATCH_TABLE Retrieve and store function pointers in a dispatch table to speed up API calls and facilitate the use of extensions \"true\"","category":"page"},{"location":"dev/gen/#VulkanGen","page":"Generator","title":"VulkanGen","text":"","category":"section"},{"location":"dev/gen/","page":"Generator","title":"Generator","text":"VulkanGen, the generator, converts the XML specification into a custom IR, and then generates wrapper code.","category":"page"},{"location":"dev/gen/#Platform-specific-wrapping","page":"Generator","title":"Platform-specific wrapping","text":"","category":"section"},{"location":"dev/gen/","page":"Generator","title":"Generator","text":"Some parts of the Vulkan API depend on system headers that are platform-specific; these notably include WSI (Window System Integration) extensions, which allow the developer to attach Vulkan devices to surfaces like windows. These platform-specific dependencies can be grouped into operating systems, notably Windows, MacOS, Linux and BSD. Each of these systems is associated with a set of WSI extensions and has a separate wrapper file that with the unsupported extensions removed.","category":"page"},{"location":"dev/gen/","page":"Generator","title":"Generator","text":"Modules = [VulkanGen]","category":"page"},{"location":"dev/gen/","page":"Generator","title":"Generator","text":"Modules = [VulkanGen]","category":"page"},{"location":"dev/gen/#VulkanGen.consumed_handles","page":"Generator","title":"VulkanGen.consumed_handles","text":"These handle types are consumed by whatever command uses them. From the specification: \"The following object types are consumed when they are passed into a Vulkan command and not further accessed by the objects they are used to create.\".\n\n\n\n\n\n","category":"constant"},{"location":"dev/gen/#VulkanGen.APIFunction-Tuple{CreateFunc, Any}","page":"Generator","title":"VulkanGen.APIFunction","text":"Extend functions that create (or allocate) one or several handles, by exposing the parameters of the associated CreateInfo structures. spec must have one or several CreateInfo arguments.\n\n\n\n\n\n","category":"method"},{"location":"dev/gen/#VulkanGen.WrapperConfig","page":"Generator","title":"VulkanGen.WrapperConfig","text":"Configuration structure which allow the selection of specific parts of the Vulkan API.\n\nstruct WrapperConfig\n\nwrap_core::Bool\nInclude core API (with core extensions).\ninclude_provisional_exts::Bool\nInclude beta (provisional) exensions. Provisional extensions may break between patch releases.\ninclude_platforms::Vector{PlatformType}\nPlatform-specific families of extensions to include.\ndestfile::String\nPath the wrapper will be written to.\n\n\n\n\n\n","category":"type"},{"location":"dev/gen/#VulkanGen._wrap_implicit_return","page":"Generator","title":"VulkanGen._wrap_implicit_return","text":"Build a return expression from an implicit return parameter. Implicit return parameters are pointers that are mutated by the API, rather than returned directly. API functions with implicit return parameters return either nothing or a return code, which is automatically checked and not returned by the wrapper. Such implicit return parameters are Refs or Vectors holding either a base type or a core struct Vk*. They need to be converted by the wrapper to their wrapping type.\n\n_wrap_implicit_return(return_param::SpecFuncParam) -> Union{Expr, Symbol}\n_wrap_implicit_return(return_param::SpecFuncParam, next_types; with_func_ptr) -> Union{Expr, Symbol}\n\n\n\n\n\n\n","category":"function"},{"location":"dev/gen/#VulkanGen.func_ptr_args-Tuple{SpecFunc}","page":"Generator","title":"VulkanGen.func_ptr_args","text":"Function pointer arguments for a function. Takes the function pointers arguments of the underlying handle if it is a Vulkan constructor, or a unique fptr if that's just a normal Vulkan function.\n\nfunc_ptr_args(spec::SpecFunc) -> Vector{Expr}\n\n\n\n\n\n\n","category":"method"},{"location":"dev/gen/#VulkanGen.func_ptr_args-Tuple{SpecHandle}","page":"Generator","title":"VulkanGen.func_ptr_args","text":"Function pointer arguments for a handle. Includes one fptr_create for the constructor (if applicable), and one fptr_destroy for the destructor (if applicable).\n\nfunc_ptr_args(spec::SpecHandle) -> Vector{Expr}\n\n\n\n\n\n\n","category":"method"},{"location":"dev/gen/#VulkanGen.func_ptrs-Tuple{Spec}","page":"Generator","title":"VulkanGen.func_ptrs","text":"Corresponding pointer argument for a Vulkan function.\n\nfunc_ptrs(spec::Spec) -> AbstractVector\n\n\n\n\n\n\n","category":"method"},{"location":"dev/gen/#VulkanGen.idiomatic_julia_type-Tuple{Spec}","page":"Generator","title":"VulkanGen.idiomatic_julia_type","text":"Return a new type easier to deal with.\n\nidiomatic_julia_type(spec::Spec) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"dev/gen/#VulkanGen.is_pointer_start-Tuple{Spec}","page":"Generator","title":"VulkanGen.is_pointer_start","text":"Represent an integer that gives the start of a C pointer.\n\nis_pointer_start(spec::Spec) -> Union{Missing, Bool}\n\n\n\n\n\n\n","category":"method"},{"location":"dev/gen/#VulkanGen.wrap_identifier-Tuple{Any}","page":"Generator","title":"VulkanGen.wrap_identifier","text":"Generate an identifier from a Vulkan identifier, in lower snake case and without pointer prefixes (such as in pNext).\n\nwrap_identifier(identifier) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"dev/gen/#VulkanGen.wrappable_constructors-Tuple{SpecHandle}","page":"Generator","title":"VulkanGen.wrappable_constructors","text":"API constructors (for a given handle) that can be wrapped to expose create info parameters.\n\nwrappable_constructors(handle::SpecHandle) -> Vector{CreateFunc}\n\n\n\n\n\n\n","category":"method"},{"location":"troubleshooting/#Troubleshooting","page":"Troubleshooting","title":"Troubleshooting","text":"","category":"section"},{"location":"troubleshooting/","page":"Troubleshooting","title":"Troubleshooting","text":"Here we list common errors that can be encountered, with common solutions.","category":"page"},{"location":"troubleshooting/#VK_ERROR_LAYER_NOT_PRESENT","page":"Troubleshooting","title":"VK_ERROR_LAYER_NOT_PRESENT","text":"","category":"section"},{"location":"troubleshooting/","page":"Troubleshooting","title":"Troubleshooting","text":"Most layers are not bundled with the default Vulkan driver. For example, the validation layer VK_LAYER_KHRONOS_validation should be installed from their Github Page. This specific layer should hopefully be integrated in the artifact system in the future, but other layers may be vendor-dependent, and therefore it is the responsibility of the user to install them before hand.","category":"page"},{"location":"troubleshooting/#Validation-layers-'GLIBCXX_X.X.XX'-not-found","page":"Troubleshooting","title":"Validation layers - 'GLIBCXX_X.X.XX' not found","text":"","category":"section"},{"location":"troubleshooting/","page":"Troubleshooting","title":"Troubleshooting","text":"The Khronos validation layer requires a libstc++ more recent than the old found on some Julia binaries. A workaround is to build Julia from source, with an up to date libstdc++ on the system, as indicated in this issue on Discourse.","category":"page"},{"location":"troubleshooting/#based-vs-1-based-indexing","page":"Troubleshooting","title":"0-based vs 1-based indexing","text":"","category":"section"},{"location":"troubleshooting/","page":"Troubleshooting","title":"Troubleshooting","text":"Vulkan uses a 0-based indexing system, so be careful whenever an index is returned from or requested for a Vulkan function.","category":"page"},{"location":"dev/next_chains/#Next-chains","page":"Next chains","title":"Next chains","text":"","category":"section"},{"location":"dev/next_chains/","page":"Next chains","title":"Next chains","text":"Vulkan has a concept of next chains, where API structures can be chained together by filling an optional next field (hence the name).","category":"page"},{"location":"dev/next_chains/","page":"Next chains","title":"Next chains","text":"This poses a few challenges on the Julia side, because such chains are linked lists which use raw pointers. Raw pointers are the reason why we required so-called intermediate structures that wrap core structures. As a reminder, these intermediate structures are nothing more than a core structure put alongside a vector of dependencies which holds Julia objects (arrays or references). These dependencies are what guarantees the validity of pointers present in the core structure, by making the garbage collector aware that these references must not be freed as long as the core structure is used (i.e., as long as the intermediate wrapper is used).","category":"page"},{"location":"dev/next_chains/","page":"Next chains","title":"Next chains","text":"Having linked lists with opaque pointers complicate the matter. First, one must be able to build such chains to pass in the data structures to Vulkan in the format the API expects. That is the easiest part: we can always have next objects in high-level wrappers, build a reference to these (immutable) objects and then turn these references into pointers. However, when handing out a next chain to be filled in from the API, one must reconstruct the original object. If the result is meant to be an intermediate structure, we can simply wrap the core object, the dependency being the original intermediate object that was used to initialize the object and its chain. If we want a high-level structure instead, then we simply chase pointers iteratively from next chain of the core object, reconstructing the next objects by loading the pointers as we go along.","category":"page"},{"location":"dev/next_chains/","page":"Next chains","title":"Next chains","text":"It becomes more complicated when one wants to initialize an empty intermediate object with a next chain. We must both reconstruct the core object and the dependencies; care must be taken because every reference used by subsequently chained structures must be retained as dependencies. Therefore, in initialize, references are first built all chained types, and the references get filled in initialize_core by the initialized core structures before being converted into pointers.","category":"page"},{"location":"tutorial/resource_management/","page":"Resource management","title":"Resource management","text":"EditURL = \"https://github.com/JuliaGPU/Vulkan.jl/blob/master/docs/src/tutorial/resource_management.jl\"","category":"page"},{"location":"tutorial/resource_management/#Resource-management","page":"Resource management","title":"Resource management","text":"","category":"section"},{"location":"tutorial/resource_management/","page":"Resource management","title":"Resource management","text":"Let's see how resources get freed automatically, and when they aren't. First let's set the preference \"LOG_DESTRUCTION\" to \"true\" to see what's going on:","category":"page"},{"location":"tutorial/resource_management/","page":"Resource management","title":"Resource management","text":"using SwiftShader_jll # hide\nusing Vulkan\n@set_driver :SwiftShader # hide\n\nVulkan.set_preferences!(\"LOG_DESTRUCTION\" => \"true\")","category":"page"},{"location":"tutorial/resource_management/","page":"Resource management","title":"Resource management","text":"Now let's create a bunch of handles and see what happens when the GC runs:","category":"page"},{"location":"tutorial/resource_management/","page":"Resource management","title":"Resource management","text":"function do_something()\n    instance = Instance([], [])\n    physical_devices = unwrap(enumerate_physical_devices(instance))\n    physical_device = first(physical_devices)\n    device = Device(\n        physical_device,\n        [DeviceQueueCreateInfo(0, [1.])],\n        [],\n        [],\n    )\n\n    fence = Fence(device)\n    command_pool = CommandPool(device, 0)\n    buffers = unwrap(allocate_command_buffers(device, CommandBufferAllocateInfo(command_pool, COMMAND_BUFFER_LEVEL_PRIMARY, 10)))\n    # they won't be automatically freed individually\n    free_command_buffers(device, command_pool, buffers)\n    nothing\nend\n\ndo_something()\n\n# to force some finalizers to run\nGC.gc()","category":"page"},{"location":"tutorial/resource_management/","page":"Resource management","title":"Resource management","text":"Not all handles were destroyed upon finalization. In particular, the physical device and the buffers were not destroyed. That's because a physical device is not owned by the application, so you can't destroy it, and buffers must be freed in batches with free_command_buffers (as done above). See more information in Automatic finalization.","category":"page"},{"location":"tutorial/resource_management/","page":"Resource management","title":"Resource management","text":"note: Note\nNot all finalizers have run. In some cases (e.g. when a finalizer must be run to release resources), it may be preferable to run them directly. You can do this by calling finalize (exported from Base):instance = Instance([], [])\nfinalize(instance)","category":"page"},{"location":"tutorial/resource_management/","page":"Resource management","title":"Resource management","text":"","category":"page"},{"location":"tutorial/resource_management/","page":"Resource management","title":"Resource management","text":"This page was generated using Literate.jl.","category":"page"},{"location":"dev/spec/#VulkanSpec","page":"Vulkan specification","title":"VulkanSpec","text":"","category":"section"},{"location":"dev/spec/","page":"Vulkan specification","title":"Vulkan specification","text":"Going from the XML to the IR is fairly independent of the code generation process, and has been isolated into its own module (VulkanSpec).","category":"page"},{"location":"dev/spec/","page":"Vulkan specification","title":"Vulkan specification","text":"Modules = [VulkanGen.VulkanSpec]","category":"page"},{"location":"dev/spec/","page":"Vulkan specification","title":"Vulkan specification","text":"Modules = [VulkanGen.VulkanSpec]","category":"page"},{"location":"dev/spec/#VulkanGen.VulkanSpec.disabled_symbols","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.disabled_symbols","text":"Some specifications are disabled in the Vulkan headers (see https://github.com/KhronosGroup/Vulkan-Docs/issues/1225).\n\n\n\n\n\n","category":"constant"},{"location":"dev/spec/#VulkanGen.VulkanSpec.spec_aliases","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.spec_aliases","text":"All specification aliases.\n\n\n\n\n\n","category":"constant"},{"location":"dev/spec/#VulkanGen.VulkanSpec.spec_all_noalias","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.spec_all_noalias","text":"All specifications except aliases.\n\n\n\n\n\n","category":"constant"},{"location":"dev/spec/#VulkanGen.VulkanSpec.spec_all_semantic_enums","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.spec_all_semantic_enums","text":"All enumerations, regardless of them being bitmasks or regular enum values.\n\n\n\n\n\n","category":"constant"},{"location":"dev/spec/#VulkanGen.VulkanSpec.spec_bitmasks","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.spec_bitmasks","text":"Specification bitmask enumerations.\n\n\n\n\n\n","category":"constant"},{"location":"dev/spec/#VulkanGen.VulkanSpec.spec_constants","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.spec_constants","text":"Specification constants, usually defined in C with #define.\n\n\n\n\n\n","category":"constant"},{"location":"dev/spec/#VulkanGen.VulkanSpec.spec_enums","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.spec_enums","text":"Specification enumerations, excluding bitmasks.\n\n\n\n\n\n","category":"constant"},{"location":"dev/spec/#VulkanGen.VulkanSpec.spec_flags","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.spec_flags","text":"Flag types.\n\n\n\n\n\n","category":"constant"},{"location":"dev/spec/#VulkanGen.VulkanSpec.spec_funcs","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.spec_funcs","text":"Specification functions.\n\n\n\n\n\n","category":"constant"},{"location":"dev/spec/#VulkanGen.VulkanSpec.spec_handles","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.spec_handles","text":"Specification handle types.\n\n\n\n\n\n","category":"constant"},{"location":"dev/spec/#VulkanGen.VulkanSpec.spec_structs","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.spec_structs","text":"Specification structures.\n\n\n\n\n\n","category":"constant"},{"location":"dev/spec/#VulkanGen.VulkanSpec.spec_unions","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.spec_unions","text":"Specification for union types.\n\n\n\n\n\n","category":"constant"},{"location":"dev/spec/#VulkanGen.VulkanSpec.CreateFunc","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.CreateFunc","text":"Function func that creates a handle from a create info structure create_info_struct passed as the value of the parameter create_info_param.\n\nIf batch is true, then func expects a list of multiple create info structures and will create multiple handles at once.\n\nstruct CreateFunc <: Spec\n\nfunc::SpecFunc\nhandle::SpecHandle\ncreate_info_struct::Union{Nothing, SpecStruct}\ncreate_info_param::Union{Nothing, SpecFuncParam}\nbatch::Bool\n\n\n\n\n\n","category":"type"},{"location":"dev/spec/#VulkanGen.VulkanSpec.DestroyFunc","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.DestroyFunc","text":"Function func that destroys a handle passed as the value of the parameter destroyed_param.\n\nIf batch is true, then func expects a list of multiple handles and will destroy all of them at once.\n\nstruct DestroyFunc <: Spec\n\nfunc::SpecFunc\nhandle::SpecHandle\ndestroyed_param::SpecFuncParam\nbatch::Bool\n\n\n\n\n\n","category":"type"},{"location":"dev/spec/#VulkanGen.VulkanSpec.FieldIterator","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.FieldIterator","text":"Iterate through function or struct specification fields from a list of fields. list is a sequence of fields to get through from root.\n\nstruct FieldIterator\n\nroot::Any\nlist::Any\n\n\n\n\n\n","category":"type"},{"location":"dev/spec/#VulkanGen.VulkanSpec.FunctionType","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.FunctionType","text":"Function type classification.\n\nTypes:\n\nFTYPE_CREATE: constructor (functions that begin with vkCreate).\nFTYPE_DESTROY: destructor (functions that begin with vkDestroy).\nFTYPE_ALLOCATE: allocator (functions that begin with vkAllocate).\nFTYPE_FREE: deallocator (functions that begin with vkFree).\nFTYPE_COMMAND: Vulkan command (functions that begin with vkCmd).\nFTYPE_QUERY: used to query parameters, returned directly or indirectly through pointer mutation (typically, functions that begin with vkEnumerate and vkGet, but not all of them and possibly others).\nFTYPE_OTHER: no identified type.\n\nprimitive type FunctionType <: Enum{Int32} 32\n\n\n\n\n\n","category":"type"},{"location":"dev/spec/#VulkanGen.VulkanSpec.PARAM_REQUIREMENT","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.PARAM_REQUIREMENT","text":"Parameter requirement. Applies both to struct members and function parameters.\n\nRequirement types: \n\nOPTIONAL: may have its default zero (or nullptr) value, acting as a sentinel value (similar to Nothing in Julia).\nREQUIRED: must be provided, no sentinel value is allowed.\nPOINTER_OPTIONAL: is a pointer which may be null, but must have valid elements if provided.\nPOINTER_REQUIRED: must be a valid pointer, but its elements are optional (e.g. are allowed to be sentinel values).\n\nprimitive type PARAM_REQUIREMENT <: Enum{Int32} 32\n\n\n\n\n\n","category":"type"},{"location":"dev/spec/#VulkanGen.VulkanSpec.QueueType","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.QueueType","text":"Queue type on which a computation can be carried.\n\nabstract type QueueType\n\n\n\n\n\n","category":"type"},{"location":"dev/spec/#VulkanGen.VulkanSpec.RenderPassInside","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.RenderPassInside","text":"The command can be executed inside a render pass.\n\nstruct RenderPassInside <: RenderPassRequirement\n\n\n\n\n\n","category":"type"},{"location":"dev/spec/#VulkanGen.VulkanSpec.RenderPassOutside","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.RenderPassOutside","text":"The command can be executed outside a render pass.\n\nstruct RenderPassOutside <: RenderPassRequirement\n\n\n\n\n\n","category":"type"},{"location":"dev/spec/#VulkanGen.VulkanSpec.RenderPassRequirement","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.RenderPassRequirement","text":"Render pass execution specification for commands.\n\nabstract type RenderPassRequirement\n\n\n\n\n\n","category":"type"},{"location":"dev/spec/#VulkanGen.VulkanSpec.Spec","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.Spec","text":"Everything that a Vulkan specification can apply to: data structures, functions, parameters...\n\nabstract type Spec\n\n\n\n\n\n","category":"type"},{"location":"dev/spec/#VulkanGen.VulkanSpec.SpecAlias","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.SpecAlias","text":"Specification for an alias of the form const <name> = <alias>.\n\n\n\n\n\n","category":"type"},{"location":"dev/spec/#VulkanGen.VulkanSpec.SpecBit","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.SpecBit","text":"Specification for a bit used in a bitmask.\n\nstruct SpecBit <: Spec\n\nname::Symbol\nName of the bit.\nposition::Int64\nPosition of the bit.\n\n\n\n\n\n","category":"type"},{"location":"dev/spec/#VulkanGen.VulkanSpec.SpecBitmask","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.SpecBitmask","text":"Specification for a bitmask type that must be formed through a combination of bits.\n\nIs usually an alias for a UInt32 type which carries meaning through its bits.\n\nstruct SpecBitmask <: Spec\n\nname::Symbol\nName of the bitmask type.\nbits::StructArrays.StructVector{SpecBit}\nValid bits that can be combined to form the final bitmask value.\ncombinations::StructArrays.StructVector{SpecBitCombination}\nwidth::Integer\n\n\n\n\n\n","category":"type"},{"location":"dev/spec/#VulkanGen.VulkanSpec.SpecConstant","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.SpecConstant","text":"Specification for a constant.\n\nstruct SpecConstant <: Spec\n\nname::Symbol\nName of the constant.\nvalue::Any\nValue of the constant.\n\n\n\n\n\n","category":"type"},{"location":"dev/spec/#VulkanGen.VulkanSpec.SpecEnum","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.SpecEnum","text":"Specification for an enumeration type.\n\nstruct SpecEnum <: Spec\n\nname::Symbol\nName of the enumeration type.\nenums::StructArrays.StructVector{SpecConstant}\nVector of possible enumeration values.\n\n\n\n\n\n","category":"type"},{"location":"dev/spec/#VulkanGen.VulkanSpec.SpecFlag","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.SpecFlag","text":"Specification for a flag type name that is a type alias of typealias. Can be associated with a bitmask structure, in which case the bitmask number is set to the corresponding SpecBitmask.\n\nstruct SpecFlag <: Spec\n\nname::Symbol\nName of the flag type.\ntypealias::Symbol\nThe type it aliases.\nbitmask::Union{Nothing, SpecBitmask}\nBitmask, if applicable.\n\n\n\n\n\n","category":"type"},{"location":"dev/spec/#VulkanGen.VulkanSpec.SpecFunc","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.SpecFunc","text":"Specification for a function.\n\nstruct SpecFunc <: Spec\n\nname::Symbol\nName of the function.\ntype::FunctionType\nFunctionType classification.\nreturn_type::Union{Nothing, Expr, Symbol}\nReturn type (void if Nothing).\nrender_pass_compatibility::Vector{RenderPassRequirement}\nWhether the function can be executed inside a render pass, outside, or both. Empty if not specified, in which case it is equivalent to both inside and outside.\nqueue_compatibility::Vector{QueueType}\nType of queues on which the function can be executed. Empty if not specified, in which case it is equivalent to being executable on all queues.\nparams::StructArrays.StructVector{SpecFuncParam}\nFunction parameters.\nsuccess_codes::Vector{Symbol}\nerror_codes::Vector{Symbol}\n\n\n\n\n\n","category":"type"},{"location":"dev/spec/#VulkanGen.VulkanSpec.SpecFuncParam","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.SpecFuncParam","text":"Specification for a function parameter.\n\nstruct SpecFuncParam <: Spec\n\nfunc::Symbol\nName of the parent function.\nname::Symbol\nIdentifier.\ntype::Union{Expr, Symbol}\nExpression of its idiomatic Julia type.\nis_constant::Bool\nIf constant, cannot be mutated by Vulkan functions.\nis_externsync::Bool\nWhether it must be externally synchronized before calling the function.\nrequirement::PARAM_REQUIREMENT\nPARAM_REQUIREMENT classification.\nlen::Union{Nothing, Symbol}\nName of the parameter (of the same function) which represents its length. Nothing for non-vector types.\narglen::Vector{Symbol}\nName of the parameters (of the same function) it is a length of.\nautovalidity::Bool\nWhether automatic validity documentation is enabled. If false, this means that the parameter may be an exception to at least one Vulkan convention.\n\n\n\n\n\n","category":"type"},{"location":"dev/spec/#VulkanGen.VulkanSpec.SpecHandle","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.SpecHandle","text":"Specification for handle types.\n\nA handle may possess a parent. In this case, the handle can only be valid if its parent is valid.\n\nSome handles are dispatchable, which means that they are represented as opaque pointers. Non-dispatchable handles are 64-bit integer types, and may encode information directly into their value.\n\nstruct SpecHandle <: Spec\n\nname::Symbol\nName of the handle type.\nparent::Union{Nothing, Symbol}\nName of the parent handle, if any.\nis_dispatchable::Bool\nWhether the handle is dispatchable or not.\n\n\n\n\n\n","category":"type"},{"location":"dev/spec/#VulkanGen.VulkanSpec.SpecStruct","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.SpecStruct","text":"Specification for a structure.\n\nstruct SpecStruct <: Spec\n\nname::Symbol\nName of the structure.\ntype::StructType\nStructType classification.\nis_returnedonly::Bool\nWhether the structure is only meant to be filled in by Vulkan functions, as opposed to being constructed by the user.\nNote that the API may still request the user to provide an initialized structure, notably as part of pNext chains for queries.\n\nextends::Vector{Symbol}\nName of the structures it extends, usually done through the original structures' pNext argument.\nmembers::StructArrays.StructVector{SpecStructMember}\nStructure members.\n\n\n\n\n\n","category":"type"},{"location":"dev/spec/#VulkanGen.VulkanSpec.SpecStructMember","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.SpecStructMember","text":"Specification for a structure parameter.\n\nstruct SpecStructMember <: Spec\n\nparent::Symbol\nName of the parent structure.\nname::Symbol\nIdentifier.\ntype::Union{Expr, Symbol}\nExpression of its idiomatic Julia type.\nis_constant::Bool\nIf constant, cannot be mutated by Vulkan functions.\nis_externsync::Bool\nWhether it must be externally synchronized before calling any function which uses the parent structure.\nrequirement::PARAM_REQUIREMENT\nPARAM_REQUIREMENT classification.\nlen::Union{Nothing, Expr, Symbol}\nName of the member (of the same structure) which represents its length. Nothing for non-vector types.\narglen::Vector{Union{Expr, Symbol}}\nName of the members (of the same structure) it is a length of.\nautovalidity::Bool\nWhether automatic validity documentation is enabled. If false, this means that the member may be an exception to at least one Vulkan convention.\n\n\n\n\n\n","category":"type"},{"location":"dev/spec/#VulkanGen.VulkanSpec.SpecUnion","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.SpecUnion","text":"Specification for a union type.\n\nstruct SpecUnion <: Spec\n\nname::Symbol\nName of the union type.\ntypes::Vector{Union{Expr, Symbol}}\nPossible types for the union.\nfields::Vector{Symbol}\nFields which cast the struct into the union types\nselectors::Vector{Symbol}\nSelector values, if any, to determine the type of the union in a given context (function call for example).\nis_returnedonly::Bool\nWhether the structure is only meant to be filled in by Vulkan functions, as opposed to being constructed by the user.\nNote that the API may still request the user to provide an initialized structure, notably as part of pNext chains for queries.\n\n\n\n\n\n","category":"type"},{"location":"dev/spec/#VulkanGen.VulkanSpec.StructType","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.StructType","text":"Structure type classification.\n\nTypes:\n\nSTYPE_CREATE_INFO: holds constructor parameters (structures that end with CreateInfo).\nSTYPE_ALLOCATE_INFO: holds allocator parameters (structures that end with AllocateInfo).\nSTYPE_GENERIC_INFO: holds parameters for another function or structure (structures that end with Info, excluding those falling into the previous types).\nSTYPE_DATA: usually represents user or Vulkan data.\nSTYPE_PROPERTY: is a property returned by Vulkan in a returnedonly structure, usually done through FTYPE_QUERY type functions.\n\nprimitive type StructType <: Enum{Int32} 32\n\n\n\n\n\n","category":"type"},{"location":"dev/spec/#VulkanGen.VulkanSpec.hasalias-Tuple{Any}","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.hasalias","text":"Whether an alias was built from this name.\n\nhasalias(name) -> Union{Missing, Bool}\n\n\n\n\n\n\n","category":"method"},{"location":"dev/spec/#VulkanGen.VulkanSpec.is_inferable_length-Tuple{Spec}","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.is_inferable_length","text":"True if the argument that can be inferred from other arguments.\n\nis_inferable_length(spec::Spec) -> Bool\n\n\n\n\n\n\n","category":"method"},{"location":"dev/spec/#VulkanGen.VulkanSpec.is_length_exception-Tuple{Spec}","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.is_length_exception","text":"True if the argument behaves differently than other length parameters.\n\nis_length_exception(spec::Spec) -> Bool\n\n\n\n\n\n\n","category":"method"},{"location":"dev/spec/#VulkanGen.VulkanSpec.isalias-Tuple{Any}","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.isalias","text":"Whether this type is an alias for another name.\n\nisalias(name) -> Bool\n\n\n\n\n\n\n","category":"method"},{"location":"dev/spec/#VulkanGen.VulkanSpec.translate_c_type-Tuple{Any}","page":"Vulkan specification","title":"VulkanGen.VulkanSpec.translate_c_type","text":"Semantically translate C types to their Julia counterpart. Note that since it is a semantic translation, translated types do not necessarily have the same layout, e.g. VkBool32 => Bool (8 bits).\n\ntranslate_c_type(ctype) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"#Vulkan.jl","page":"Home","title":"Vulkan.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Vulkan.jl is a lightweight wrapper around the Vulkan graphics and compute library. It exposes abstractions over the underlying C interface, primarily geared towards developers looking for a more natural way to work with Vulkan with minimal overhead.","category":"page"},{"location":"","page":"Home","title":"Home","text":"It builds upon the core API provided by VulkanCore.jl. Because Vulkan is originally a C specification, interfacing with it requires some knowledge before correctly being used from Julia. This package acts as an abstraction layer, so that you don't need to know how to properly call a C library, while still retaining full functionality. The wrapper is generated directly from the Vulkan Specification.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This is a very similar approach to that taken by VulkanHpp, except that the target language is Julia and not C++.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"intro.md\", \"tutorial\", \"howto\", \"api.md\", \"utility.md\", \"troubleshooting.md\"]","category":"page"}]
}
