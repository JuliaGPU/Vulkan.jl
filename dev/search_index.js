var documenterSearchIndex = {"docs":
[{"location":"utility/#Utility","page":"Utility","title":"Utility","text":"","category":"section"},{"location":"utility/","page":"Utility","title":"Utility","text":"Here we describe some tools that can assist the development of Vulkan applications.","category":"page"},{"location":"utility/","page":"Utility","title":"Utility","text":"Feel free to check out the official Vulkan website for a more complete list of resources.","category":"page"},{"location":"utility/#Validation","page":"Utility","title":"Validation","text":"","category":"section"},{"location":"utility/","page":"Utility","title":"Utility","text":"The activation of debugging messages is done via the creation of a DebugUtilsMessengerEXT. We provide an additional high-level constructor along with a default constructor function default_debug_callback.","category":"page"},{"location":"utility/#External-tools","page":"Utility","title":"External tools","text":"","category":"section"},{"location":"utility/#NVIDIA-Nsight-Systems","page":"Utility","title":"NVIDIA Nsight Systems","text":"","category":"section"},{"location":"utility/","page":"Utility","title":"Utility","text":"NVIDIA Nsight Systems is a tool developed by NVIDIA to profile applications, showing both CPU and GPU usage. It can be very useful for analyzing the balance between CPU and GPU usage, as well as troubleshoot general performance bottlenecks. However, it only outputs high-level information regarding GPU tasks. Therefore, to catch GPU bottlenecks on a low-level (such as inside shaders) one should instead use a dedicated profiler such as Nsight Graphics or Renderdoc.","category":"page"},{"location":"utility/#nsight-graphics","page":"Utility","title":"NVIDIA Nsight Graphics","text":"","category":"section"},{"location":"utility/","page":"Utility","title":"Utility","text":"Nsight Graphics dives deeper into the execution details of an application and provides detailed information regarding graphics pipelines, shaders and so on. This is a tool of choice to consider for NVIDIA GPUs once the GPU is identified as a bottleneck with Nsight Systems.","category":"page"},{"location":"utility/#renderdoc","page":"Utility","title":"Renderdoc","text":"","category":"section"},{"location":"utility/","page":"Utility","title":"Utility","text":"Renderdoc plays a similar role to Nsight Graphics for a wider range of GPUs. It is open-source and community-maintained.","category":"page"},{"location":"utility/#CPU-implementation-of-Vulkan","page":"Utility","title":"CPU implementation of Vulkan","text":"","category":"section"},{"location":"utility/","page":"Utility","title":"Utility","text":"SwiftShader is a CPU implementation of Vulkan primarily designed to extend the portability of Vulkan applications. It can be used wherever there is a lack of proper driver support, including public continuous integration services.","category":"page"},{"location":"utility/","page":"Utility","title":"Utility","text":"A convenience macro is implemented in Vulkan, so you can quickly use SwiftShader with","category":"page"},{"location":"utility/","page":"Utility","title":"Utility","text":"using SwiftShader_jll\nusing Vulkan\n@set_driver :SwiftShader","category":"page"},{"location":"utility/","page":"Utility","title":"Utility","text":"which will tell the Vulkan Loader to use the SwiftShader Installable Client Driver.","category":"page"},{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Modules = [Vulkan]","category":"page"},{"location":"api/","page":"API","title":"API","text":"Modules = [Vulkan]\nPrivate = false","category":"page"},{"location":"api/#Vulkan.AccelerationStructureKHR-Tuple{Device, Buffer, Integer, Integer, AccelerationStructureTypeKHR}","page":"API","title":"Vulkan.AccelerationStructureKHR","text":"AccelerationStructureKHR(device::Device, buffer::Buffer, offset::Integer, size::Integer, type::AccelerationStructureTypeKHR; allocator = C_NULL, next = C_NULL, create_flags = 0, device_address = 0)\n\nAccelerationStructureKHR(device::Device, buffer::Buffer, offset::Integer, size::Integer, type::AccelerationStructureTypeKHR; allocator, next, create_flags, device_address) -> AccelerationStructureKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.AccelerationStructureNV-Tuple{Device, Integer, _AccelerationStructureInfoNV}","page":"API","title":"Vulkan.AccelerationStructureNV","text":"AccelerationStructureNV(device::Device, compacted_size::Integer, info::_AccelerationStructureInfoNV; allocator = C_NULL, next = C_NULL)\n\nAccelerationStructureNV(device::Device, compacted_size::Integer, info::_AccelerationStructureInfoNV; allocator, next) -> AccelerationStructureNV\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.Buffer-Tuple{Device, Integer, BufferUsageFlag, SharingMode, AbstractArray{var\"#s1986\", N} where {var\"#s1986\"<:Integer, N}}","page":"API","title":"Vulkan.Buffer","text":"Buffer(device::Device, size::Integer, usage::BufferUsageFlag, sharing_mode::SharingMode, queue_family_indices::AbstractArray{<:Integer}; allocator = C_NULL, next = C_NULL, flags = 0)\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.BufferView-Tuple{Device, Buffer, Format, Integer, Integer}","page":"API","title":"Vulkan.BufferView","text":"BufferView(device::Device, buffer::Buffer, format::Format, offset::Integer, range::Integer; allocator = C_NULL, next = C_NULL, flags = 0)\n\nBufferView(device::Device, buffer::Buffer, format::Format, offset::Integer, range::Integer; allocator, next, flags) -> BufferView\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.CommandPool-Tuple{Device, Integer}","page":"API","title":"Vulkan.CommandPool","text":"CommandPool(device::Device, queue_family_index::Integer; allocator = C_NULL, next = C_NULL, flags = 0)\n\nCommandPool(device::Device, queue_family_index::Integer; allocator, next, flags) -> CommandPool\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DebugReportCallbackEXT-Tuple{Instance, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.DebugReportCallbackEXT","text":"DebugReportCallbackEXT(instance::Instance, pfn_callback::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0, user_data = C_NULL)\n\nDebugReportCallbackEXT(instance::Instance, pfn_callback::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags, user_data) -> DebugReportCallbackEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DebugUtilsMessengerEXT-Tuple{Instance, DebugUtilsMessageSeverityFlagEXT, DebugUtilsMessageTypeFlagEXT, Union{Ptr{Nothing}, Base.CFunction}}","page":"API","title":"Vulkan.DebugUtilsMessengerEXT","text":"DebugUtilsMessengerEXT(instance::Instance, message_severity::DebugUtilsMessageSeverityFlagEXT, message_type::DebugUtilsMessageTypeFlagEXT, pfn_user_callback::FunctionPtr; allocator = C_NULL, next = C_NULL, flags = 0, user_data = C_NULL)\n\nDebugUtilsMessengerEXT(instance::Instance, message_severity::DebugUtilsMessageSeverityFlagEXT, message_type::DebugUtilsMessageTypeFlagEXT, pfn_user_callback::Union{Ptr{Nothing}, Base.CFunction}; allocator, next, flags, user_data) -> DebugUtilsMessengerEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DebugUtilsMessengerEXT-Tuple{Instance, Ptr{Nothing}}","page":"API","title":"Vulkan.DebugUtilsMessengerEXT","text":"Register a user-defined callback and return the corresponding messenger. All the levels from min_severity will be included. Note that this controls only what messages are sent to the callback. The logging function may use logging macros such as @info or @error to easily filter logs through the Julia logging system.\n\nA default function default_debug_callback can be converted to a function pointer to use as a callback.\n\nwarning: Warning\ncallback must be a function pointer of type Ptr{Nothing} obtained from a callback_f function as follows:   callback = @cfunction(callback_f, UInt32, (DebugUtilsMessageSeverityFlagBitsEXT, DebugUtilsMessageTypeFlagBitsEXT, Ptr{vk.VkDebugUtilsMessengerCallbackDataEXT}, Ptr{Cvoid}))   with callback_f a Julia function with a signature matching the @cfunction call.\n\nDebugUtilsMessengerEXT(instance::Instance, callback::Ptr{Nothing}; min_severity, types)\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DeferredOperationKHR-Tuple{Device}","page":"API","title":"Vulkan.DeferredOperationKHR","text":"DeferredOperationKHR(device::Device; allocator = C_NULL)\n\nDeferredOperationKHR(device::Device; allocator) -> ResultTypes.Result{DeferredOperationKHR, VulkanError}\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DescriptorPool-Tuple{Device, Integer, AbstractArray{var\"#s1986\", N} where {var\"#s1986\"<:_DescriptorPoolSize, N}}","page":"API","title":"Vulkan.DescriptorPool","text":"DescriptorPool(device::Device, max_sets::Integer, pool_sizes::AbstractArray{<:_DescriptorPoolSize}; allocator = C_NULL, next = C_NULL, flags = 0)\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DescriptorSetLayout-Tuple{Device, AbstractArray{var\"#s1986\", N} where {var\"#s1986\"<:_DescriptorSetLayoutBinding, N}}","page":"API","title":"Vulkan.DescriptorSetLayout","text":"DescriptorSetLayout(device::Device, bindings::AbstractArray{<:_DescriptorSetLayoutBinding}; allocator = C_NULL, next = C_NULL, flags = 0)\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DescriptorUpdateTemplate-Tuple{Device, AbstractArray{var\"#s1986\", N} where {var\"#s1986\"<:_DescriptorUpdateTemplateEntry, N}, DescriptorUpdateTemplateType, DescriptorSetLayout, PipelineBindPoint, PipelineLayout, Integer}","page":"API","title":"Vulkan.DescriptorUpdateTemplate","text":"DescriptorUpdateTemplate(device::Device, descriptor_update_entries::AbstractArray{<:_DescriptorUpdateTemplateEntry}, template_type::DescriptorUpdateTemplateType, descriptor_set_layout::DescriptorSetLayout, pipeline_bind_point::PipelineBindPoint, pipeline_layout::PipelineLayout, set::Integer; allocator = C_NULL, next = C_NULL, flags = 0)\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.Device-Tuple{PhysicalDevice, AbstractArray{var\"#s1986\", N} where {var\"#s1986\"<:_DeviceQueueCreateInfo, N}, AbstractArray{var\"#s1985\", N} where {var\"#s1985\"<:AbstractString, N}, AbstractArray{var\"#s1984\", N} where {var\"#s1984\"<:AbstractString, N}}","page":"API","title":"Vulkan.Device","text":"Device(physical_device::PhysicalDevice, queue_create_infos::AbstractArray{<:_DeviceQueueCreateInfo}, enabled_layer_names::AbstractArray{<:AbstractString}, enabled_extension_names::AbstractArray{<:AbstractString}; allocator = C_NULL, next = C_NULL, flags = 0, enabled_features = C_NULL)\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DeviceMemory-Tuple{Device, Integer, Integer}","page":"API","title":"Vulkan.DeviceMemory","text":"DeviceMemory(device::Device, allocation_size::Integer, memory_type_index::Integer; allocator = C_NULL, next = C_NULL)\n\nDeviceMemory(device::Device, allocation_size::Integer, memory_type_index::Integer; allocator, next) -> DeviceMemory\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.DisplayModeKHR-Tuple{PhysicalDevice, DisplayKHR, _DisplayModeParametersKHR}","page":"API","title":"Vulkan.DisplayModeKHR","text":"DisplayModeKHR(physical_device::PhysicalDevice, display::DisplayKHR, parameters::_DisplayModeParametersKHR; allocator = C_NULL, next = C_NULL, flags = 0)\n\nDisplayModeKHR(physical_device::PhysicalDevice, display::DisplayKHR, parameters::_DisplayModeParametersKHR; allocator, next, flags) -> DisplayModeKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.Event-Tuple{Device}","page":"API","title":"Vulkan.Event","text":"Event(device::Device; allocator = C_NULL, next = C_NULL, flags = 0)\n\nEvent(device::Device; allocator, next, flags) -> Event\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.Fence-Tuple{Device}","page":"API","title":"Vulkan.Fence","text":"Fence(device::Device; allocator = C_NULL, next = C_NULL, flags = 0)\n\nFence(device::Device; allocator, next, flags) -> Fence\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.Framebuffer-Tuple{Device, RenderPass, AbstractArray{var\"#s1986\", N} where {var\"#s1986\"<:ImageView, N}, Integer, Integer, Integer}","page":"API","title":"Vulkan.Framebuffer","text":"Framebuffer(device::Device, render_pass::RenderPass, attachments::AbstractArray{<:ImageView}, width::Integer, height::Integer, layers::Integer; allocator = C_NULL, next = C_NULL, flags = 0)\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.Handle","page":"API","title":"Vulkan.Handle","text":"Opaque handle referring to internal Vulkan data. Finalizer registration is taken care of by constructors.\n\nabstract type Handle <: VulkanStruct{false}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.Image-Tuple{Device, ImageType, Format, _Extent3D, Integer, Integer, SampleCountFlag, ImageTiling, ImageUsageFlag, SharingMode, AbstractArray{var\"#s1986\", N} where {var\"#s1986\"<:Integer, N}, ImageLayout}","page":"API","title":"Vulkan.Image","text":"Image(device::Device, image_type::ImageType, format::Format, extent::_Extent3D, mip_levels::Integer, array_layers::Integer, samples::SampleCountFlag, tiling::ImageTiling, usage::ImageUsageFlag, sharing_mode::SharingMode, queue_family_indices::AbstractArray{<:Integer}, initial_layout::ImageLayout; allocator = C_NULL, next = C_NULL, flags = 0)\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ImageView-Tuple{Device, Image, ImageViewType, Format, _ComponentMapping, _ImageSubresourceRange}","page":"API","title":"Vulkan.ImageView","text":"ImageView(device::Device, image::Image, view_type::ImageViewType, format::Format, components::_ComponentMapping, subresource_range::_ImageSubresourceRange; allocator = C_NULL, next = C_NULL, flags = 0)\n\nImageView(device::Device, image::Image, view_type::ImageViewType, format::Format, components::_ComponentMapping, subresource_range::_ImageSubresourceRange; allocator, next, flags) -> ImageView\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.IndirectCommandsLayoutNV-Tuple{Device, PipelineBindPoint, AbstractArray{var\"#s1986\", N} where {var\"#s1986\"<:_IndirectCommandsLayoutTokenNV, N}, AbstractArray{var\"#s1985\", N} where {var\"#s1985\"<:Integer, N}}","page":"API","title":"Vulkan.IndirectCommandsLayoutNV","text":"IndirectCommandsLayoutNV(device::Device, pipeline_bind_point::PipelineBindPoint, tokens::AbstractArray{<:_IndirectCommandsLayoutTokenNV}, stream_strides::AbstractArray{<:Integer}; allocator = C_NULL, next = C_NULL, flags = 0)\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.Instance-Tuple{AbstractArray{var\"#s1986\", N} where {var\"#s1986\"<:AbstractString, N}, AbstractArray{var\"#s1985\", N} where {var\"#s1985\"<:AbstractString, N}}","page":"API","title":"Vulkan.Instance","text":"Instance(enabled_layer_names::AbstractArray{<:AbstractString}, enabled_extension_names::AbstractArray{<:AbstractString}; allocator = C_NULL, next = C_NULL, flags = 0, application_info = C_NULL)\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceFeatures-Tuple{Vararg{Symbol, N} where N}","page":"API","title":"Vulkan.PhysicalDeviceFeatures","text":"Return a PhysicalDeviceFeatures object with the provided features set to true.\n\njulia> PhysicalDeviceFeatures()\nPhysicalDeviceFeatures()\n\njulia> PhysicalDeviceFeatures(:wide_lines, :sparse_binding)\nPhysicalDeviceFeatures(wide_lines, sparse_binding)\n\nPhysicalDeviceFeatures(features::Symbol...) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceVulkan11Features-Tuple{Vararg{Symbol, N} where N}","page":"API","title":"Vulkan.PhysicalDeviceVulkan11Features","text":"Return a PhysicalDeviceVulkan11Features object with the provided features set to true.\n\njulia> PhysicalDeviceVulkan11Features(; next = C_NULL)\nPhysicalDeviceVulkan11Features(next=Ptr{Nothing} @0x0000000000000000)\n\njulia> PhysicalDeviceVulkan11Features(:multiview, :variable_pointers, next = C_NULL)\nPhysicalDeviceVulkan11Features(next=Ptr{Nothing} @0x0000000000000000, multiview, variable_pointers)\n\nPhysicalDeviceVulkan11Features(features::Symbol...; next) -> PhysicalDeviceVulkan11Features\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PhysicalDeviceVulkan12Features-Tuple{Vararg{Symbol, N} where N}","page":"API","title":"Vulkan.PhysicalDeviceVulkan12Features","text":"Return a PhysicalDeviceVulkan12Features object with the provided features set to true.\n\njulia> PhysicalDeviceVulkan12Features(; next = C_NULL)\nPhysicalDeviceVulkan12Features(next=Ptr{Nothing} @0x0000000000000000)\n\njulia> PhysicalDeviceVulkan12Features(:draw_indirect_count, :descriptor_binding_variable_descriptor_count)\nPhysicalDeviceVulkan12Features(next=Ptr{Nothing} @0x0000000000000000, draw_indirect_count, descriptor_binding_variable_descriptor_count)\n\nPhysicalDeviceVulkan12Features(features::Symbol...; next) -> PhysicalDeviceVulkan12Features\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineCache-Tuple{Device, Ptr{Nothing}}","page":"API","title":"Vulkan.PipelineCache","text":"PipelineCache(device::Device, initial_data::Ptr{Cvoid}; allocator = C_NULL, next = C_NULL, flags = 0, initial_data_size = 0)\n\nPipelineCache(device::Device, initial_data::Ptr{Nothing}; allocator, next, flags, initial_data_size) -> PipelineCache\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PipelineLayout-Tuple{Device, AbstractArray{var\"#s1986\", N} where {var\"#s1986\"<:DescriptorSetLayout, N}, AbstractArray{var\"#s1985\", N} where {var\"#s1985\"<:_PushConstantRange, N}}","page":"API","title":"Vulkan.PipelineLayout","text":"PipelineLayout(device::Device, set_layouts::AbstractArray{<:DescriptorSetLayout}, push_constant_ranges::AbstractArray{<:_PushConstantRange}; allocator = C_NULL, next = C_NULL, flags = 0)\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.PrivateDataSlotEXT-Tuple{Device, PrivateDataSlotCreateFlagEXT}","page":"API","title":"Vulkan.PrivateDataSlotEXT","text":"PrivateDataSlotEXT(device::Device, flags::PrivateDataSlotCreateFlagEXT; allocator = C_NULL, next = C_NULL)\n\nPrivateDataSlotEXT(device::Device, flags::PrivateDataSlotCreateFlagEXT; allocator, next) -> PrivateDataSlotEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.QueryPool-Tuple{Device, QueryType, Integer}","page":"API","title":"Vulkan.QueryPool","text":"QueryPool(device::Device, query_type::QueryType, query_count::Integer; allocator = C_NULL, next = C_NULL, flags = 0, pipeline_statistics = 0)\n\nQueryPool(device::Device, query_type::QueryType, query_count::Integer; allocator, next, flags, pipeline_statistics) -> QueryPool\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.RenderPass-Tuple{Device, AbstractArray{var\"#s1986\", N} where {var\"#s1986\"<:_AttachmentDescription, N}, AbstractArray{var\"#s1985\", N} where {var\"#s1985\"<:_SubpassDescription, N}, AbstractArray{var\"#s1984\", N} where {var\"#s1984\"<:_SubpassDependency, N}}","page":"API","title":"Vulkan.RenderPass","text":"RenderPass(device::Device, attachments::AbstractArray{<:_AttachmentDescription}, subpasses::AbstractArray{<:_SubpassDescription}, dependencies::AbstractArray{<:_SubpassDependency}; allocator = C_NULL, next = C_NULL, flags = 0)\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.RenderPass-Tuple{Device, AbstractArray{var\"#s1986\", N} where {var\"#s1986\"<:_AttachmentDescription2, N}, AbstractArray{var\"#s1985\", N} where {var\"#s1985\"<:_SubpassDescription2, N}, AbstractArray{var\"#s1984\", N} where {var\"#s1984\"<:_SubpassDependency2, N}, AbstractArray{var\"#s1983\", N} where {var\"#s1983\"<:Integer, N}}","page":"API","title":"Vulkan.RenderPass","text":"RenderPass(device::Device, attachments::AbstractArray{<:_AttachmentDescription2}, subpasses::AbstractArray{<:_SubpassDescription2}, dependencies::AbstractArray{<:_SubpassDependency2}, correlated_view_masks::AbstractArray{<:Integer}; allocator = C_NULL, next = C_NULL, flags = 0)\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ReturnedOnly","page":"API","title":"Vulkan.ReturnedOnly","text":"Represents a structure that will never be requested by API functions.\n\nabstract type ReturnedOnly <: VulkanStruct{false}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.Sampler-Tuple{Device, Filter, Filter, SamplerMipmapMode, SamplerAddressMode, SamplerAddressMode, SamplerAddressMode, Real, Bool, Real, Bool, CompareOp, Real, Real, BorderColor, Bool}","page":"API","title":"Vulkan.Sampler","text":"Sampler(device::Device, mag_filter::Filter, min_filter::Filter, mipmap_mode::SamplerMipmapMode, address_mode_u::SamplerAddressMode, address_mode_v::SamplerAddressMode, address_mode_w::SamplerAddressMode, mip_lod_bias::Real, anisotropy_enable::Bool, max_anisotropy::Real, compare_enable::Bool, compare_op::CompareOp, min_lod::Real, max_lod::Real, border_color::BorderColor, unnormalized_coordinates::Bool; allocator = C_NULL, next = C_NULL, flags = 0)\n\nSampler(device::Device, mag_filter::Filter, min_filter::Filter, mipmap_mode::SamplerMipmapMode, address_mode_u::SamplerAddressMode, address_mode_v::SamplerAddressMode, address_mode_w::SamplerAddressMode, mip_lod_bias::Real, anisotropy_enable::Bool, max_anisotropy::Real, compare_enable::Bool, compare_op::CompareOp, min_lod::Real, max_lod::Real, border_color::BorderColor, unnormalized_coordinates::Bool; allocator, next, flags) -> Sampler\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SamplerYcbcrConversion-Tuple{Device, Format, SamplerYcbcrModelConversion, SamplerYcbcrRange, _ComponentMapping, ChromaLocation, ChromaLocation, Filter, Bool}","page":"API","title":"Vulkan.SamplerYcbcrConversion","text":"SamplerYcbcrConversion(device::Device, format::Format, ycbcr_model::SamplerYcbcrModelConversion, ycbcr_range::SamplerYcbcrRange, components::_ComponentMapping, x_chroma_offset::ChromaLocation, y_chroma_offset::ChromaLocation, chroma_filter::Filter, force_explicit_reconstruction::Bool; allocator = C_NULL, next = C_NULL)\n\nSamplerYcbcrConversion(device::Device, format::Format, ycbcr_model::SamplerYcbcrModelConversion, ycbcr_range::SamplerYcbcrRange, components::_ComponentMapping, x_chroma_offset::ChromaLocation, y_chroma_offset::ChromaLocation, chroma_filter::Filter, force_explicit_reconstruction::Bool; allocator, next) -> SamplerYcbcrConversion\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.Semaphore-Tuple{Device}","page":"API","title":"Vulkan.Semaphore","text":"Semaphore(device::Device; allocator = C_NULL, next = C_NULL, flags = 0)\n\nSemaphore(device::Device; allocator, next, flags) -> Semaphore\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ShaderModule-Tuple{Device, Integer, AbstractArray{var\"#s1986\", N} where {var\"#s1986\"<:Integer, N}}","page":"API","title":"Vulkan.ShaderModule","text":"ShaderModule(device::Device, code_size::Integer, code::AbstractArray{<:Integer}; allocator = C_NULL, next = C_NULL, flags = 0)\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.SwapchainKHR-Tuple{Device, SurfaceKHR, Integer, Format, ColorSpaceKHR, _Extent2D, Integer, ImageUsageFlag, SharingMode, AbstractArray{var\"#s1986\", N} where {var\"#s1986\"<:Integer, N}, SurfaceTransformFlagKHR, CompositeAlphaFlagKHR, PresentModeKHR, Bool}","page":"API","title":"Vulkan.SwapchainKHR","text":"SwapchainKHR(device::Device, surface::SurfaceKHR, min_image_count::Integer, image_format::Format, image_color_space::ColorSpaceKHR, image_extent::_Extent2D, image_array_layers::Integer, image_usage::ImageUsageFlag, image_sharing_mode::SharingMode, queue_family_indices::AbstractArray{<:Integer}, pre_transform::SurfaceTransformFlagKHR, composite_alpha::CompositeAlphaFlagKHR, present_mode::PresentModeKHR, clipped::Bool; allocator = C_NULL, next = C_NULL, flags = 0, old_swapchain = C_NULL)\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.ValidationCacheEXT-Tuple{Device, Ptr{Nothing}}","page":"API","title":"Vulkan.ValidationCacheEXT","text":"ValidationCacheEXT(device::Device, initial_data::Ptr{Cvoid}; allocator = C_NULL, next = C_NULL, flags = 0, initial_data_size = 0)\n\nValidationCacheEXT(device::Device, initial_data::Ptr{Nothing}; allocator, next, flags, initial_data_size) -> ValidationCacheEXT\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.VideoSessionKHR-Tuple{Device, Integer, _VideoProfileKHR, Format, _Extent2D, Format, Integer, Integer}","page":"API","title":"Vulkan.VideoSessionKHR","text":"VideoSessionKHR(device::Device, queue_family_index::Integer, video_profile::_VideoProfileKHR, picture_format::Format, max_coded_extent::_Extent2D, reference_pictures_format::Format, max_reference_pictures_slots_count::Integer, max_reference_pictures_active_count::Integer; allocator = C_NULL, next = C_NULL, flags = 0)\n\nVideoSessionKHR(device::Device, queue_family_index::Integer, video_profile::_VideoProfileKHR, picture_format::Format, max_coded_extent::_Extent2D, reference_pictures_format::Format, max_reference_pictures_slots_count::Integer, max_reference_pictures_active_count::Integer; allocator, next, flags) -> VideoSessionKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.VideoSessionParametersKHR-Tuple{Device, VideoSessionParametersKHR, VideoSessionKHR}","page":"API","title":"Vulkan.VideoSessionParametersKHR","text":"VideoSessionParametersKHR(device::Device, video_session_parameters_template::VideoSessionParametersKHR, video_session::VideoSessionKHR; allocator = C_NULL, next = C_NULL)\n\nVideoSessionParametersKHR(device::Device, video_session_parameters_template::VideoSessionParametersKHR, video_session::VideoSessionKHR; allocator, next) -> VideoSessionParametersKHR\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.VulkanError","page":"API","title":"Vulkan.VulkanError","text":"Exception type indicating that an API function returned a non-success code.\n\nstruct VulkanError <: Exception\n\nmsg::String\ncode::Any\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.VulkanStruct","page":"API","title":"Vulkan.VulkanStruct","text":"Represents any kind of wrapper structure that was generated from a Vulkan structure. D is a Bool parameter indicating whether the structure has specific dependencies or not.\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AabbPositionsKHR","page":"API","title":"Vulkan._AabbPositionsKHR","text":"_AabbPositionsKHR(min_x::Real, min_y::Real, min_z::Real, max_x::Real, max_y::Real, max_z::Real)\n\nArguments:\n\nmin_x::Real\nmin_y::Real\nmin_z::Real\nmax_x::Real\nmax_y::Real\nmax_z::Real\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureBuildGeometryInfoKHR","page":"API","title":"Vulkan._AccelerationStructureBuildGeometryInfoKHR","text":"_AccelerationStructureBuildGeometryInfoKHR(type::AccelerationStructureTypeKHR, mode::BuildAccelerationStructureModeKHR, scratch_data::VkDeviceOrHostAddressKHR; next = C_NULL, flags = 0, src_acceleration_structure = C_NULL, dst_acceleration_structure = C_NULL, geometries = C_NULL, geometries_2 = C_NULL)\n\nArguments:\n\ntype::AccelerationStructureTypeKHR\nmode::BuildAccelerationStructureModeKHR\nscratch_data::VkDeviceOrHostAddressKHR\nnext: defaults to C_NULL\nflags: defaults to 0\nsrc_acceleration_structure: defaults to C_NULL\ndst_acceleration_structure: defaults to C_NULL\ngeometries: defaults to C_NULL\ngeometries_2: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureBuildRangeInfoKHR","page":"API","title":"Vulkan._AccelerationStructureBuildRangeInfoKHR","text":"_AccelerationStructureBuildRangeInfoKHR(primitive_count::Integer, primitive_offset::Integer, first_vertex::Integer, transform_offset::Integer)\n\nArguments:\n\nprimitive_count::Integer\nprimitive_offset::Integer\nfirst_vertex::Integer\ntransform_offset::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureBuildSizesInfoKHR","page":"API","title":"Vulkan._AccelerationStructureBuildSizesInfoKHR","text":"_AccelerationStructureBuildSizesInfoKHR(acceleration_structure_size::Integer, update_scratch_size::Integer, build_scratch_size::Integer; next = C_NULL)\n\nArguments:\n\nacceleration_structure_size::Integer\nupdate_scratch_size::Integer\nbuild_scratch_size::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureCreateInfoKHR","page":"API","title":"Vulkan._AccelerationStructureCreateInfoKHR","text":"_AccelerationStructureCreateInfoKHR(buffer::Buffer, offset::Integer, size::Integer, type::AccelerationStructureTypeKHR; next = C_NULL, create_flags = 0, device_address = 0)\n\nArguments:\n\nbuffer::Buffer\noffset::Integer\nsize::Integer\ntype::AccelerationStructureTypeKHR\nnext: defaults to C_NULL\ncreate_flags: defaults to 0\ndevice_address: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureCreateInfoNV","page":"API","title":"Vulkan._AccelerationStructureCreateInfoNV","text":"_AccelerationStructureCreateInfoNV(compacted_size::Integer, info::_AccelerationStructureInfoNV; next = C_NULL)\n\nArguments:\n\ncompacted_size::Integer\ninfo::_AccelerationStructureInfoNV\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureDeviceAddressInfoKHR","page":"API","title":"Vulkan._AccelerationStructureDeviceAddressInfoKHR","text":"_AccelerationStructureDeviceAddressInfoKHR(acceleration_structure::AccelerationStructureKHR; next = C_NULL)\n\nArguments:\n\nacceleration_structure::AccelerationStructureKHR\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureGeometryAabbsDataKHR","page":"API","title":"Vulkan._AccelerationStructureGeometryAabbsDataKHR","text":"_AccelerationStructureGeometryAabbsDataKHR(data::VkDeviceOrHostAddressConstKHR, stride::Integer; next = C_NULL)\n\nArguments:\n\ndata::VkDeviceOrHostAddressConstKHR\nstride::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureGeometryInstancesDataKHR","page":"API","title":"Vulkan._AccelerationStructureGeometryInstancesDataKHR","text":"_AccelerationStructureGeometryInstancesDataKHR(array_of_pointers::Bool, data::VkDeviceOrHostAddressConstKHR; next = C_NULL)\n\nArguments:\n\narray_of_pointers::Bool\ndata::VkDeviceOrHostAddressConstKHR\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureGeometryKHR","page":"API","title":"Vulkan._AccelerationStructureGeometryKHR","text":"_AccelerationStructureGeometryKHR(geometry_type::GeometryTypeKHR, geometry::VkAccelerationStructureGeometryDataKHR; next = C_NULL, flags = 0)\n\nArguments:\n\ngeometry_type::GeometryTypeKHR\ngeometry::VkAccelerationStructureGeometryDataKHR\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureGeometryTrianglesDataKHR","page":"API","title":"Vulkan._AccelerationStructureGeometryTrianglesDataKHR","text":"_AccelerationStructureGeometryTrianglesDataKHR(vertex_format::Format, vertex_data::VkDeviceOrHostAddressConstKHR, vertex_stride::Integer, max_vertex::Integer, index_type::IndexType, index_data::VkDeviceOrHostAddressConstKHR, transform_data::VkDeviceOrHostAddressConstKHR; next = C_NULL)\n\nArguments:\n\nvertex_format::Format\nvertex_data::VkDeviceOrHostAddressConstKHR\nvertex_stride::Integer\nmax_vertex::Integer\nindex_type::IndexType\nindex_data::VkDeviceOrHostAddressConstKHR\ntransform_data::VkDeviceOrHostAddressConstKHR\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureInfoNV","page":"API","title":"Vulkan._AccelerationStructureInfoNV","text":"_AccelerationStructureInfoNV(type::VkAccelerationStructureTypeNV, geometries::AbstractArray{<:_GeometryNV}; next = C_NULL, flags = 0, instance_count = 0)\n\nArguments:\n\ntype::VkAccelerationStructureTypeNV\ngeometries::AbstractArray{<:_GeometryNV}\nnext: defaults to C_NULL\nflags: defaults to 0\ninstance_count: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureInstanceKHR","page":"API","title":"Vulkan._AccelerationStructureInstanceKHR","text":"_AccelerationStructureInstanceKHR(transform::_TransformMatrixKHR, instance_custom_index::Integer, mask::Integer, instance_shader_binding_table_record_offset::Integer, acceleration_structure_reference::Integer; flags = 0)\n\nArguments:\n\ntransform::_TransformMatrixKHR\ninstance_custom_index::Integer\nmask::Integer\ninstance_shader_binding_table_record_offset::Integer\nacceleration_structure_reference::Integer\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureMemoryRequirementsInfoNV","page":"API","title":"Vulkan._AccelerationStructureMemoryRequirementsInfoNV","text":"_AccelerationStructureMemoryRequirementsInfoNV(type::AccelerationStructureMemoryRequirementsTypeNV, acceleration_structure::AccelerationStructureNV; next = C_NULL)\n\nArguments:\n\ntype::AccelerationStructureMemoryRequirementsTypeNV\nacceleration_structure::AccelerationStructureNV\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AccelerationStructureVersionInfoKHR","page":"API","title":"Vulkan._AccelerationStructureVersionInfoKHR","text":"_AccelerationStructureVersionInfoKHR(version_data::AbstractArray{<:Integer}; next = C_NULL)\n\nArguments:\n\nversion_data::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AcquireNextImageInfoKHR","page":"API","title":"Vulkan._AcquireNextImageInfoKHR","text":"_AcquireNextImageInfoKHR(swapchain::SwapchainKHR, timeout::Integer, device_mask::Integer; next = C_NULL, semaphore = C_NULL, fence = C_NULL)\n\nArguments:\n\nswapchain::SwapchainKHR (externsync)\ntimeout::Integer\ndevice_mask::Integer\nnext: defaults to C_NULL\nsemaphore: defaults to C_NULL (externsync)\nfence: defaults to C_NULL (externsync)\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AcquireProfilingLockInfoKHR","page":"API","title":"Vulkan._AcquireProfilingLockInfoKHR","text":"_AcquireProfilingLockInfoKHR(timeout::Integer; next = C_NULL, flags = 0)\n\nArguments:\n\ntimeout::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AllocationCallbacks","page":"API","title":"Vulkan._AllocationCallbacks","text":"_AllocationCallbacks(pfn_allocation::FunctionPtr, pfn_reallocation::FunctionPtr, pfn_free::FunctionPtr; user_data = C_NULL, pfn_internal_allocation = 0, pfn_internal_free = 0)\n\nArguments:\n\npfn_allocation::FunctionPtr\npfn_reallocation::FunctionPtr\npfn_free::FunctionPtr\nuser_data: defaults to C_NULL\npfn_internal_allocation: defaults to 0\npfn_internal_free: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AndroidSurfaceCreateInfoKHR","page":"API","title":"Vulkan._AndroidSurfaceCreateInfoKHR","text":"_AndroidSurfaceCreateInfoKHR(window::vk.ANativeWindow; next = C_NULL, flags = 0)\n\nArguments:\n\nwindow::vk.ANativeWindow\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ApplicationInfo","page":"API","title":"Vulkan._ApplicationInfo","text":"_ApplicationInfo(application_version::VersionNumber, engine_version::VersionNumber, api_version::VersionNumber; next = C_NULL, application_name = C_NULL, engine_name = C_NULL)\n\nArguments:\n\napplication_version::VersionNumber\nengine_version::VersionNumber\napi_version::VersionNumber\nnext: defaults to C_NULL\napplication_name: defaults to C_NULL\nengine_name: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AttachmentDescription","page":"API","title":"Vulkan._AttachmentDescription","text":"_AttachmentDescription(format::Format, samples::SampleCountFlag, load_op::AttachmentLoadOp, store_op::AttachmentStoreOp, stencil_load_op::AttachmentLoadOp, stencil_store_op::AttachmentStoreOp, initial_layout::ImageLayout, final_layout::ImageLayout; flags = 0)\n\nArguments:\n\nformat::Format\nsamples::SampleCountFlag\nload_op::AttachmentLoadOp\nstore_op::AttachmentStoreOp\nstencil_load_op::AttachmentLoadOp\nstencil_store_op::AttachmentStoreOp\ninitial_layout::ImageLayout\nfinal_layout::ImageLayout\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AttachmentDescription2","page":"API","title":"Vulkan._AttachmentDescription2","text":"_AttachmentDescription2(format::Format, samples::SampleCountFlag, load_op::AttachmentLoadOp, store_op::AttachmentStoreOp, stencil_load_op::AttachmentLoadOp, stencil_store_op::AttachmentStoreOp, initial_layout::ImageLayout, final_layout::ImageLayout; next = C_NULL, flags = 0)\n\nArguments:\n\nformat::Format\nsamples::SampleCountFlag\nload_op::AttachmentLoadOp\nstore_op::AttachmentStoreOp\nstencil_load_op::AttachmentLoadOp\nstencil_store_op::AttachmentStoreOp\ninitial_layout::ImageLayout\nfinal_layout::ImageLayout\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AttachmentDescriptionStencilLayout","page":"API","title":"Vulkan._AttachmentDescriptionStencilLayout","text":"_AttachmentDescriptionStencilLayout(stencil_initial_layout::ImageLayout, stencil_final_layout::ImageLayout; next = C_NULL)\n\nArguments:\n\nstencil_initial_layout::ImageLayout\nstencil_final_layout::ImageLayout\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AttachmentReference","page":"API","title":"Vulkan._AttachmentReference","text":"_AttachmentReference(attachment::Integer, layout::ImageLayout)\n\nArguments:\n\nattachment::Integer\nlayout::ImageLayout\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AttachmentReference2","page":"API","title":"Vulkan._AttachmentReference2","text":"_AttachmentReference2(attachment::Integer, layout::ImageLayout, aspect_mask::ImageAspectFlag; next = C_NULL)\n\nArguments:\n\nattachment::Integer\nlayout::ImageLayout\naspect_mask::ImageAspectFlag\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AttachmentReferenceStencilLayout","page":"API","title":"Vulkan._AttachmentReferenceStencilLayout","text":"_AttachmentReferenceStencilLayout(stencil_layout::ImageLayout; next = C_NULL)\n\nArguments:\n\nstencil_layout::ImageLayout\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._AttachmentSampleLocationsEXT","page":"API","title":"Vulkan._AttachmentSampleLocationsEXT","text":"_AttachmentSampleLocationsEXT(attachment_index::Integer, sample_locations_info::_SampleLocationsInfoEXT)\n\nArguments:\n\nattachment_index::Integer\nsample_locations_info::_SampleLocationsInfoEXT\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BaseInStructure","page":"API","title":"Vulkan._BaseInStructure","text":"_BaseInStructure(; next = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BaseOutStructure","page":"API","title":"Vulkan._BaseOutStructure","text":"_BaseOutStructure(; next = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BindAccelerationStructureMemoryInfoNV","page":"API","title":"Vulkan._BindAccelerationStructureMemoryInfoNV","text":"_BindAccelerationStructureMemoryInfoNV(acceleration_structure::AccelerationStructureNV, memory::DeviceMemory, memory_offset::Integer, device_indices::AbstractArray{<:Integer}; next = C_NULL)\n\nArguments:\n\nacceleration_structure::AccelerationStructureNV\nmemory::DeviceMemory\nmemory_offset::Integer\ndevice_indices::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BindBufferMemoryDeviceGroupInfo","page":"API","title":"Vulkan._BindBufferMemoryDeviceGroupInfo","text":"_BindBufferMemoryDeviceGroupInfo(device_indices::AbstractArray{<:Integer}; next = C_NULL)\n\nArguments:\n\ndevice_indices::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BindBufferMemoryInfo","page":"API","title":"Vulkan._BindBufferMemoryInfo","text":"_BindBufferMemoryInfo(buffer::Buffer, memory::DeviceMemory, memory_offset::Integer; next = C_NULL)\n\nArguments:\n\nbuffer::Buffer\nmemory::DeviceMemory\nmemory_offset::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BindImageMemoryDeviceGroupInfo","page":"API","title":"Vulkan._BindImageMemoryDeviceGroupInfo","text":"_BindImageMemoryDeviceGroupInfo(device_indices::AbstractArray{<:Integer}, split_instance_bind_regions::AbstractArray{<:_Rect2D}; next = C_NULL)\n\nArguments:\n\ndevice_indices::AbstractArray{<:Integer}\nsplit_instance_bind_regions::AbstractArray{<:_Rect2D}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BindImageMemoryInfo","page":"API","title":"Vulkan._BindImageMemoryInfo","text":"_BindImageMemoryInfo(image::Image, memory::DeviceMemory, memory_offset::Integer; next = C_NULL)\n\nArguments:\n\nimage::Image\nmemory::DeviceMemory\nmemory_offset::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BindImageMemorySwapchainInfoKHR","page":"API","title":"Vulkan._BindImageMemorySwapchainInfoKHR","text":"_BindImageMemorySwapchainInfoKHR(swapchain::SwapchainKHR, image_index::Integer; next = C_NULL)\n\nArguments:\n\nswapchain::SwapchainKHR (externsync)\nimage_index::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BindImagePlaneMemoryInfo","page":"API","title":"Vulkan._BindImagePlaneMemoryInfo","text":"_BindImagePlaneMemoryInfo(plane_aspect::ImageAspectFlag; next = C_NULL)\n\nArguments:\n\nplane_aspect::ImageAspectFlag\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BindIndexBufferIndirectCommandNV","page":"API","title":"Vulkan._BindIndexBufferIndirectCommandNV","text":"_BindIndexBufferIndirectCommandNV(buffer_address::Integer, size::Integer, index_type::IndexType)\n\nArguments:\n\nbuffer_address::Integer\nsize::Integer\nindex_type::IndexType\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BindShaderGroupIndirectCommandNV","page":"API","title":"Vulkan._BindShaderGroupIndirectCommandNV","text":"_BindShaderGroupIndirectCommandNV(group_index::Integer)\n\nArguments:\n\ngroup_index::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BindSparseInfo","page":"API","title":"Vulkan._BindSparseInfo","text":"_BindSparseInfo(wait_semaphores::AbstractArray{<:Semaphore}, buffer_binds::AbstractArray{<:_SparseBufferMemoryBindInfo}, image_opaque_binds::AbstractArray{<:_SparseImageOpaqueMemoryBindInfo}, image_binds::AbstractArray{<:_SparseImageMemoryBindInfo}, signal_semaphores::AbstractArray{<:Semaphore}; next = C_NULL)\n\nArguments:\n\nwait_semaphores::AbstractArray{<:Semaphore}\nbuffer_binds::AbstractArray{<:_SparseBufferMemoryBindInfo}\nimage_opaque_binds::AbstractArray{<:_SparseImageOpaqueMemoryBindInfo}\nimage_binds::AbstractArray{<:_SparseImageMemoryBindInfo}\nsignal_semaphores::AbstractArray{<:Semaphore}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BindVertexBufferIndirectCommandNV","page":"API","title":"Vulkan._BindVertexBufferIndirectCommandNV","text":"_BindVertexBufferIndirectCommandNV(buffer_address::Integer, size::Integer, stride::Integer)\n\nArguments:\n\nbuffer_address::Integer\nsize::Integer\nstride::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BlitImageInfo2KHR","page":"API","title":"Vulkan._BlitImageInfo2KHR","text":"_BlitImageInfo2KHR(src_image::Image, src_image_layout::ImageLayout, dst_image::Image, dst_image_layout::ImageLayout, regions::AbstractArray{<:_ImageBlit2KHR}, filter::Filter; next = C_NULL)\n\nArguments:\n\nsrc_image::Image\nsrc_image_layout::ImageLayout\ndst_image::Image\ndst_image_layout::ImageLayout\nregions::AbstractArray{<:_ImageBlit2KHR}\nfilter::Filter\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BufferCopy","page":"API","title":"Vulkan._BufferCopy","text":"_BufferCopy(src_offset::Integer, dst_offset::Integer, size::Integer)\n\nArguments:\n\nsrc_offset::Integer\ndst_offset::Integer\nsize::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BufferCopy2KHR","page":"API","title":"Vulkan._BufferCopy2KHR","text":"_BufferCopy2KHR(src_offset::Integer, dst_offset::Integer, size::Integer; next = C_NULL)\n\nArguments:\n\nsrc_offset::Integer\ndst_offset::Integer\nsize::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BufferCreateInfo","page":"API","title":"Vulkan._BufferCreateInfo","text":"_BufferCreateInfo(size::Integer, usage::BufferUsageFlag, sharing_mode::SharingMode, queue_family_indices::AbstractArray{<:Integer}; next = C_NULL, flags = 0)\n\nArguments:\n\nsize::Integer\nusage::BufferUsageFlag\nsharing_mode::SharingMode\nqueue_family_indices::AbstractArray{<:Integer}\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BufferDeviceAddressCreateInfoEXT","page":"API","title":"Vulkan._BufferDeviceAddressCreateInfoEXT","text":"_BufferDeviceAddressCreateInfoEXT(device_address::Integer; next = C_NULL)\n\nArguments:\n\ndevice_address::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BufferDeviceAddressInfo","page":"API","title":"Vulkan._BufferDeviceAddressInfo","text":"_BufferDeviceAddressInfo(buffer::Buffer; next = C_NULL)\n\nArguments:\n\nbuffer::Buffer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BufferImageCopy","page":"API","title":"Vulkan._BufferImageCopy","text":"_BufferImageCopy(buffer_offset::Integer, buffer_row_length::Integer, buffer_image_height::Integer, image_subresource::_ImageSubresourceLayers, image_offset::_Offset3D, image_extent::_Extent3D)\n\nArguments:\n\nbuffer_offset::Integer\nbuffer_row_length::Integer\nbuffer_image_height::Integer\nimage_subresource::_ImageSubresourceLayers\nimage_offset::_Offset3D\nimage_extent::_Extent3D\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BufferImageCopy2KHR","page":"API","title":"Vulkan._BufferImageCopy2KHR","text":"_BufferImageCopy2KHR(buffer_offset::Integer, buffer_row_length::Integer, buffer_image_height::Integer, image_subresource::_ImageSubresourceLayers, image_offset::_Offset3D, image_extent::_Extent3D; next = C_NULL)\n\nArguments:\n\nbuffer_offset::Integer\nbuffer_row_length::Integer\nbuffer_image_height::Integer\nimage_subresource::_ImageSubresourceLayers\nimage_offset::_Offset3D\nimage_extent::_Extent3D\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BufferMemoryBarrier","page":"API","title":"Vulkan._BufferMemoryBarrier","text":"_BufferMemoryBarrier(src_access_mask::AccessFlag, dst_access_mask::AccessFlag, src_queue_family_index::Integer, dst_queue_family_index::Integer, buffer::Buffer, offset::Integer, size::Integer; next = C_NULL)\n\nArguments:\n\nsrc_access_mask::AccessFlag\ndst_access_mask::AccessFlag\nsrc_queue_family_index::Integer\ndst_queue_family_index::Integer\nbuffer::Buffer\noffset::Integer\nsize::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BufferMemoryBarrier2KHR","page":"API","title":"Vulkan._BufferMemoryBarrier2KHR","text":"_BufferMemoryBarrier2KHR(src_queue_family_index::Integer, dst_queue_family_index::Integer, buffer::Buffer, offset::Integer, size::Integer; next = C_NULL, src_stage_mask = 0, src_access_mask = 0, dst_stage_mask = 0, dst_access_mask = 0)\n\nArguments:\n\nsrc_queue_family_index::Integer\ndst_queue_family_index::Integer\nbuffer::Buffer\noffset::Integer\nsize::Integer\nnext: defaults to C_NULL\nsrc_stage_mask: defaults to 0\nsrc_access_mask: defaults to 0\ndst_stage_mask: defaults to 0\ndst_access_mask: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BufferMemoryRequirementsInfo2","page":"API","title":"Vulkan._BufferMemoryRequirementsInfo2","text":"_BufferMemoryRequirementsInfo2(buffer::Buffer; next = C_NULL)\n\nArguments:\n\nbuffer::Buffer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BufferOpaqueCaptureAddressCreateInfo","page":"API","title":"Vulkan._BufferOpaqueCaptureAddressCreateInfo","text":"_BufferOpaqueCaptureAddressCreateInfo(opaque_capture_address::Integer; next = C_NULL)\n\nArguments:\n\nopaque_capture_address::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._BufferViewCreateInfo","page":"API","title":"Vulkan._BufferViewCreateInfo","text":"_BufferViewCreateInfo(buffer::Buffer, format::Format, offset::Integer, range::Integer; next = C_NULL, flags = 0)\n\nArguments:\n\nbuffer::Buffer\nformat::Format\noffset::Integer\nrange::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CalibratedTimestampInfoEXT","page":"API","title":"Vulkan._CalibratedTimestampInfoEXT","text":"_CalibratedTimestampInfoEXT(time_domain::TimeDomainEXT; next = C_NULL)\n\nArguments:\n\ntime_domain::TimeDomainEXT\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ClearAttachment","page":"API","title":"Vulkan._ClearAttachment","text":"_ClearAttachment(aspect_mask::ImageAspectFlag, color_attachment::Integer, clear_value::VkClearValue)\n\nArguments:\n\naspect_mask::ImageAspectFlag\ncolor_attachment::Integer\nclear_value::VkClearValue\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ClearDepthStencilValue","page":"API","title":"Vulkan._ClearDepthStencilValue","text":"_ClearDepthStencilValue(depth::Real, stencil::Integer)\n\nArguments:\n\ndepth::Real\nstencil::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ClearRect","page":"API","title":"Vulkan._ClearRect","text":"_ClearRect(rect::_Rect2D, base_array_layer::Integer, layer_count::Integer)\n\nArguments:\n\nrect::_Rect2D\nbase_array_layer::Integer\nlayer_count::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CoarseSampleLocationNV","page":"API","title":"Vulkan._CoarseSampleLocationNV","text":"_CoarseSampleLocationNV(pixel_x::Integer, pixel_y::Integer, sample::Integer)\n\nArguments:\n\npixel_x::Integer\npixel_y::Integer\nsample::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CoarseSampleOrderCustomNV","page":"API","title":"Vulkan._CoarseSampleOrderCustomNV","text":"_CoarseSampleOrderCustomNV(shading_rate::ShadingRatePaletteEntryNV, sample_count::Integer, sample_locations::AbstractArray{<:_CoarseSampleLocationNV})\n\nArguments:\n\nshading_rate::ShadingRatePaletteEntryNV\nsample_count::Integer\nsample_locations::AbstractArray{<:_CoarseSampleLocationNV}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CommandBufferAllocateInfo","page":"API","title":"Vulkan._CommandBufferAllocateInfo","text":"_CommandBufferAllocateInfo(command_pool::CommandPool, level::CommandBufferLevel, command_buffer_count::Integer; next = C_NULL)\n\nArguments:\n\ncommand_pool::CommandPool\nlevel::CommandBufferLevel\ncommand_buffer_count::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CommandBufferBeginInfo","page":"API","title":"Vulkan._CommandBufferBeginInfo","text":"_CommandBufferBeginInfo(; next = C_NULL, flags = 0, inheritance_info = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\nflags: defaults to 0\ninheritance_info: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CommandBufferInheritanceConditionalRenderingInfoEXT","page":"API","title":"Vulkan._CommandBufferInheritanceConditionalRenderingInfoEXT","text":"_CommandBufferInheritanceConditionalRenderingInfoEXT(conditional_rendering_enable::Bool; next = C_NULL)\n\nArguments:\n\nconditional_rendering_enable::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CommandBufferInheritanceInfo","page":"API","title":"Vulkan._CommandBufferInheritanceInfo","text":"_CommandBufferInheritanceInfo(subpass::Integer, occlusion_query_enable::Bool; next = C_NULL, render_pass = C_NULL, framebuffer = C_NULL, query_flags = 0, pipeline_statistics = 0)\n\nArguments:\n\nsubpass::Integer\nocclusion_query_enable::Bool\nnext: defaults to C_NULL\nrender_pass: defaults to C_NULL\nframebuffer: defaults to C_NULL\nquery_flags: defaults to 0\npipeline_statistics: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CommandBufferInheritanceRenderPassTransformInfoQCOM","page":"API","title":"Vulkan._CommandBufferInheritanceRenderPassTransformInfoQCOM","text":"_CommandBufferInheritanceRenderPassTransformInfoQCOM(transform::SurfaceTransformFlagKHR, render_area::_Rect2D; next = C_NULL)\n\nArguments:\n\ntransform::SurfaceTransformFlagKHR\nrender_area::_Rect2D\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CommandBufferInheritanceViewportScissorInfoNV","page":"API","title":"Vulkan._CommandBufferInheritanceViewportScissorInfoNV","text":"_CommandBufferInheritanceViewportScissorInfoNV(viewport_scissor_2_d::Bool, viewport_depth_count::Integer, viewport_depths::_Viewport; next = C_NULL)\n\nArguments:\n\nviewport_scissor_2_d::Bool\nviewport_depth_count::Integer\nviewport_depths::_Viewport\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CommandBufferSubmitInfoKHR","page":"API","title":"Vulkan._CommandBufferSubmitInfoKHR","text":"_CommandBufferSubmitInfoKHR(command_buffer::CommandBuffer, device_mask::Integer; next = C_NULL)\n\nArguments:\n\ncommand_buffer::CommandBuffer\ndevice_mask::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CommandPoolCreateInfo","page":"API","title":"Vulkan._CommandPoolCreateInfo","text":"_CommandPoolCreateInfo(queue_family_index::Integer; next = C_NULL, flags = 0)\n\nArguments:\n\nqueue_family_index::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ComponentMapping","page":"API","title":"Vulkan._ComponentMapping","text":"_ComponentMapping(r::ComponentSwizzle, g::ComponentSwizzle, b::ComponentSwizzle, a::ComponentSwizzle)\n\nArguments:\n\nr::ComponentSwizzle\ng::ComponentSwizzle\nb::ComponentSwizzle\na::ComponentSwizzle\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ComputePipelineCreateInfo","page":"API","title":"Vulkan._ComputePipelineCreateInfo","text":"_ComputePipelineCreateInfo(stage::_PipelineShaderStageCreateInfo, layout::PipelineLayout, base_pipeline_index::Integer; next = C_NULL, flags = 0, base_pipeline_handle = C_NULL)\n\nArguments:\n\nstage::_PipelineShaderStageCreateInfo\nlayout::PipelineLayout\nbase_pipeline_index::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\nbase_pipeline_handle: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ConditionalRenderingBeginInfoEXT","page":"API","title":"Vulkan._ConditionalRenderingBeginInfoEXT","text":"_ConditionalRenderingBeginInfoEXT(buffer::Buffer, offset::Integer; next = C_NULL, flags = 0)\n\nArguments:\n\nbuffer::Buffer\noffset::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ConformanceVersion","page":"API","title":"Vulkan._ConformanceVersion","text":"_ConformanceVersion(major::Integer, minor::Integer, subminor::Integer, patch::Integer)\n\nArguments:\n\nmajor::Integer\nminor::Integer\nsubminor::Integer\npatch::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CooperativeMatrixPropertiesNV","page":"API","title":"Vulkan._CooperativeMatrixPropertiesNV","text":"_CooperativeMatrixPropertiesNV(m_size::Integer, n_size::Integer, k_size::Integer, a_type::ComponentTypeNV, b_type::ComponentTypeNV, c_type::ComponentTypeNV, d_type::ComponentTypeNV, scope::ScopeNV; next = C_NULL)\n\nArguments:\n\nm_size::Integer\nn_size::Integer\nk_size::Integer\na_type::ComponentTypeNV\nb_type::ComponentTypeNV\nc_type::ComponentTypeNV\nd_type::ComponentTypeNV\nscope::ScopeNV\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CopyAccelerationStructureInfoKHR","page":"API","title":"Vulkan._CopyAccelerationStructureInfoKHR","text":"_CopyAccelerationStructureInfoKHR(src::AccelerationStructureKHR, dst::AccelerationStructureKHR, mode::CopyAccelerationStructureModeKHR; next = C_NULL)\n\nArguments:\n\nsrc::AccelerationStructureKHR\ndst::AccelerationStructureKHR\nmode::CopyAccelerationStructureModeKHR\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CopyAccelerationStructureToMemoryInfoKHR","page":"API","title":"Vulkan._CopyAccelerationStructureToMemoryInfoKHR","text":"_CopyAccelerationStructureToMemoryInfoKHR(src::AccelerationStructureKHR, dst::VkDeviceOrHostAddressKHR, mode::CopyAccelerationStructureModeKHR; next = C_NULL)\n\nArguments:\n\nsrc::AccelerationStructureKHR\ndst::VkDeviceOrHostAddressKHR\nmode::CopyAccelerationStructureModeKHR\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CopyBufferInfo2KHR","page":"API","title":"Vulkan._CopyBufferInfo2KHR","text":"_CopyBufferInfo2KHR(src_buffer::Buffer, dst_buffer::Buffer, regions::AbstractArray{<:_BufferCopy2KHR}; next = C_NULL)\n\nArguments:\n\nsrc_buffer::Buffer\ndst_buffer::Buffer\nregions::AbstractArray{<:_BufferCopy2KHR}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CopyBufferToImageInfo2KHR","page":"API","title":"Vulkan._CopyBufferToImageInfo2KHR","text":"_CopyBufferToImageInfo2KHR(src_buffer::Buffer, dst_image::Image, dst_image_layout::ImageLayout, regions::AbstractArray{<:_BufferImageCopy2KHR}; next = C_NULL)\n\nArguments:\n\nsrc_buffer::Buffer\ndst_image::Image\ndst_image_layout::ImageLayout\nregions::AbstractArray{<:_BufferImageCopy2KHR}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CopyCommandTransformInfoQCOM","page":"API","title":"Vulkan._CopyCommandTransformInfoQCOM","text":"_CopyCommandTransformInfoQCOM(transform::SurfaceTransformFlagKHR; next = C_NULL)\n\nArguments:\n\ntransform::SurfaceTransformFlagKHR\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CopyDescriptorSet","page":"API","title":"Vulkan._CopyDescriptorSet","text":"_CopyDescriptorSet(src_set::DescriptorSet, src_binding::Integer, src_array_element::Integer, dst_set::DescriptorSet, dst_binding::Integer, dst_array_element::Integer, descriptor_count::Integer; next = C_NULL)\n\nArguments:\n\nsrc_set::DescriptorSet\nsrc_binding::Integer\nsrc_array_element::Integer\ndst_set::DescriptorSet\ndst_binding::Integer\ndst_array_element::Integer\ndescriptor_count::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CopyImageInfo2KHR","page":"API","title":"Vulkan._CopyImageInfo2KHR","text":"_CopyImageInfo2KHR(src_image::Image, src_image_layout::ImageLayout, dst_image::Image, dst_image_layout::ImageLayout, regions::AbstractArray{<:_ImageCopy2KHR}; next = C_NULL)\n\nArguments:\n\nsrc_image::Image\nsrc_image_layout::ImageLayout\ndst_image::Image\ndst_image_layout::ImageLayout\nregions::AbstractArray{<:_ImageCopy2KHR}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CopyImageToBufferInfo2KHR","page":"API","title":"Vulkan._CopyImageToBufferInfo2KHR","text":"_CopyImageToBufferInfo2KHR(src_image::Image, src_image_layout::ImageLayout, dst_buffer::Buffer, regions::AbstractArray{<:_BufferImageCopy2KHR}; next = C_NULL)\n\nArguments:\n\nsrc_image::Image\nsrc_image_layout::ImageLayout\ndst_buffer::Buffer\nregions::AbstractArray{<:_BufferImageCopy2KHR}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._CopyMemoryToAccelerationStructureInfoKHR","page":"API","title":"Vulkan._CopyMemoryToAccelerationStructureInfoKHR","text":"_CopyMemoryToAccelerationStructureInfoKHR(src::VkDeviceOrHostAddressConstKHR, dst::AccelerationStructureKHR, mode::CopyAccelerationStructureModeKHR; next = C_NULL)\n\nArguments:\n\nsrc::VkDeviceOrHostAddressConstKHR\ndst::AccelerationStructureKHR\nmode::CopyAccelerationStructureModeKHR\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._D3D12FenceSubmitInfoKHR","page":"API","title":"Vulkan._D3D12FenceSubmitInfoKHR","text":"_D3D12FenceSubmitInfoKHR(; next = C_NULL, wait_semaphore_values = C_NULL, signal_semaphore_values = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\nwait_semaphore_values: defaults to C_NULL\nsignal_semaphore_values: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DebugMarkerMarkerInfoEXT","page":"API","title":"Vulkan._DebugMarkerMarkerInfoEXT","text":"_DebugMarkerMarkerInfoEXT(marker_name::AbstractString, color::NTuple{4, Float32}; next = C_NULL)\n\nArguments:\n\nmarker_name::AbstractString\ncolor::NTuple{4, Float32}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DebugMarkerObjectNameInfoEXT","page":"API","title":"Vulkan._DebugMarkerObjectNameInfoEXT","text":"_DebugMarkerObjectNameInfoEXT(object_type::DebugReportObjectTypeEXT, object::Integer, object_name::AbstractString; next = C_NULL)\n\nArguments:\n\nobject_type::DebugReportObjectTypeEXT\nobject::Integer\nobject_name::AbstractString\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DebugMarkerObjectTagInfoEXT","page":"API","title":"Vulkan._DebugMarkerObjectTagInfoEXT","text":"_DebugMarkerObjectTagInfoEXT(object_type::DebugReportObjectTypeEXT, object::Integer, tag_name::Integer, tag_size::Integer, tag::Ptr{Cvoid}; next = C_NULL)\n\nArguments:\n\nobject_type::DebugReportObjectTypeEXT\nobject::Integer\ntag_name::Integer\ntag_size::Integer\ntag::Ptr{Cvoid}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DebugReportCallbackCreateInfoEXT","page":"API","title":"Vulkan._DebugReportCallbackCreateInfoEXT","text":"_DebugReportCallbackCreateInfoEXT(pfn_callback::FunctionPtr; next = C_NULL, flags = 0, user_data = C_NULL)\n\nArguments:\n\npfn_callback::FunctionPtr\nnext: defaults to C_NULL\nflags: defaults to 0\nuser_data: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DebugUtilsLabelEXT","page":"API","title":"Vulkan._DebugUtilsLabelEXT","text":"_DebugUtilsLabelEXT(label_name::AbstractString, color::NTuple{4, Float32}; next = C_NULL)\n\nArguments:\n\nlabel_name::AbstractString\ncolor::NTuple{4, Float32}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DebugUtilsMessengerCallbackDataEXT","page":"API","title":"Vulkan._DebugUtilsMessengerCallbackDataEXT","text":"_DebugUtilsMessengerCallbackDataEXT(message_id_number::Integer, message::AbstractString, queue_labels::AbstractArray{<:_DebugUtilsLabelEXT}, cmd_buf_labels::AbstractArray{<:_DebugUtilsLabelEXT}, objects::AbstractArray{<:_DebugUtilsObjectNameInfoEXT}; next = C_NULL, flags = 0, message_id_name = C_NULL)\n\nArguments:\n\nmessage_id_number::Integer\nmessage::AbstractString\nqueue_labels::AbstractArray{<:_DebugUtilsLabelEXT}\ncmd_buf_labels::AbstractArray{<:_DebugUtilsLabelEXT}\nobjects::AbstractArray{<:_DebugUtilsObjectNameInfoEXT}\nnext: defaults to C_NULL\nflags: defaults to 0\nmessage_id_name: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DebugUtilsMessengerCreateInfoEXT","page":"API","title":"Vulkan._DebugUtilsMessengerCreateInfoEXT","text":"_DebugUtilsMessengerCreateInfoEXT(message_severity::DebugUtilsMessageSeverityFlagEXT, message_type::DebugUtilsMessageTypeFlagEXT, pfn_user_callback::FunctionPtr; next = C_NULL, flags = 0, user_data = C_NULL)\n\nArguments:\n\nmessage_severity::DebugUtilsMessageSeverityFlagEXT\nmessage_type::DebugUtilsMessageTypeFlagEXT\npfn_user_callback::FunctionPtr\nnext: defaults to C_NULL\nflags: defaults to 0\nuser_data: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DebugUtilsObjectNameInfoEXT","page":"API","title":"Vulkan._DebugUtilsObjectNameInfoEXT","text":"_DebugUtilsObjectNameInfoEXT(object_type::ObjectType, object_handle::Integer; next = C_NULL, object_name = C_NULL)\n\nArguments:\n\nobject_type::ObjectType\nobject_handle::Integer\nnext: defaults to C_NULL\nobject_name: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DebugUtilsObjectTagInfoEXT","page":"API","title":"Vulkan._DebugUtilsObjectTagInfoEXT","text":"_DebugUtilsObjectTagInfoEXT(object_type::ObjectType, object_handle::Integer, tag_name::Integer, tag_size::Integer, tag::Ptr{Cvoid}; next = C_NULL)\n\nArguments:\n\nobject_type::ObjectType\nobject_handle::Integer\ntag_name::Integer\ntag_size::Integer\ntag::Ptr{Cvoid}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DedicatedAllocationBufferCreateInfoNV","page":"API","title":"Vulkan._DedicatedAllocationBufferCreateInfoNV","text":"_DedicatedAllocationBufferCreateInfoNV(dedicated_allocation::Bool; next = C_NULL)\n\nArguments:\n\ndedicated_allocation::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DedicatedAllocationImageCreateInfoNV","page":"API","title":"Vulkan._DedicatedAllocationImageCreateInfoNV","text":"_DedicatedAllocationImageCreateInfoNV(dedicated_allocation::Bool; next = C_NULL)\n\nArguments:\n\ndedicated_allocation::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DedicatedAllocationMemoryAllocateInfoNV","page":"API","title":"Vulkan._DedicatedAllocationMemoryAllocateInfoNV","text":"_DedicatedAllocationMemoryAllocateInfoNV(; next = C_NULL, image = C_NULL, buffer = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\nimage: defaults to C_NULL\nbuffer: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DependencyInfoKHR","page":"API","title":"Vulkan._DependencyInfoKHR","text":"_DependencyInfoKHR(memory_barriers::AbstractArray{<:_MemoryBarrier2KHR}, buffer_memory_barriers::AbstractArray{<:_BufferMemoryBarrier2KHR}, image_memory_barriers::AbstractArray{<:_ImageMemoryBarrier2KHR}; next = C_NULL, dependency_flags = 0)\n\nArguments:\n\nmemory_barriers::AbstractArray{<:_MemoryBarrier2KHR}\nbuffer_memory_barriers::AbstractArray{<:_BufferMemoryBarrier2KHR}\nimage_memory_barriers::AbstractArray{<:_ImageMemoryBarrier2KHR}\nnext: defaults to C_NULL\ndependency_flags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DescriptorBufferInfo","page":"API","title":"Vulkan._DescriptorBufferInfo","text":"_DescriptorBufferInfo(offset::Integer, range::Integer; buffer = C_NULL)\n\nArguments:\n\noffset::Integer\nrange::Integer\nbuffer: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DescriptorImageInfo","page":"API","title":"Vulkan._DescriptorImageInfo","text":"_DescriptorImageInfo(sampler::Sampler, image_view::ImageView, image_layout::ImageLayout)\n\nArguments:\n\nsampler::Sampler\nimage_view::ImageView\nimage_layout::ImageLayout\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DescriptorPoolCreateInfo","page":"API","title":"Vulkan._DescriptorPoolCreateInfo","text":"_DescriptorPoolCreateInfo(max_sets::Integer, pool_sizes::AbstractArray{<:_DescriptorPoolSize}; next = C_NULL, flags = 0)\n\nArguments:\n\nmax_sets::Integer\npool_sizes::AbstractArray{<:_DescriptorPoolSize}\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DescriptorPoolInlineUniformBlockCreateInfoEXT","page":"API","title":"Vulkan._DescriptorPoolInlineUniformBlockCreateInfoEXT","text":"_DescriptorPoolInlineUniformBlockCreateInfoEXT(max_inline_uniform_block_bindings::Integer; next = C_NULL)\n\nArguments:\n\nmax_inline_uniform_block_bindings::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DescriptorPoolSize","page":"API","title":"Vulkan._DescriptorPoolSize","text":"_DescriptorPoolSize(type::DescriptorType, descriptor_count::Integer)\n\nArguments:\n\ntype::DescriptorType\ndescriptor_count::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DescriptorSetAllocateInfo","page":"API","title":"Vulkan._DescriptorSetAllocateInfo","text":"_DescriptorSetAllocateInfo(descriptor_pool::DescriptorPool, set_layouts::AbstractArray{<:DescriptorSetLayout}; next = C_NULL)\n\nArguments:\n\ndescriptor_pool::DescriptorPool\nset_layouts::AbstractArray{<:DescriptorSetLayout}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DescriptorSetLayoutBinding","page":"API","title":"Vulkan._DescriptorSetLayoutBinding","text":"_DescriptorSetLayoutBinding(binding::Integer, descriptor_type::DescriptorType, stage_flags::ShaderStageFlag; descriptor_count = 0, immutable_samplers = C_NULL)\n\nArguments:\n\nbinding::Integer\ndescriptor_type::DescriptorType\nstage_flags::ShaderStageFlag\ndescriptor_count: defaults to 0\nimmutable_samplers: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DescriptorSetLayoutBindingFlagsCreateInfo","page":"API","title":"Vulkan._DescriptorSetLayoutBindingFlagsCreateInfo","text":"_DescriptorSetLayoutBindingFlagsCreateInfo(binding_flags::AbstractArray{<:DescriptorBindingFlag}; next = C_NULL)\n\nArguments:\n\nbinding_flags::AbstractArray{<:DescriptorBindingFlag}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DescriptorSetLayoutCreateInfo","page":"API","title":"Vulkan._DescriptorSetLayoutCreateInfo","text":"_DescriptorSetLayoutCreateInfo(bindings::AbstractArray{<:_DescriptorSetLayoutBinding}; next = C_NULL, flags = 0)\n\nArguments:\n\nbindings::AbstractArray{<:_DescriptorSetLayoutBinding}\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DescriptorSetVariableDescriptorCountAllocateInfo","page":"API","title":"Vulkan._DescriptorSetVariableDescriptorCountAllocateInfo","text":"_DescriptorSetVariableDescriptorCountAllocateInfo(descriptor_counts::AbstractArray{<:Integer}; next = C_NULL)\n\nArguments:\n\ndescriptor_counts::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DescriptorUpdateTemplateCreateInfo","page":"API","title":"Vulkan._DescriptorUpdateTemplateCreateInfo","text":"_DescriptorUpdateTemplateCreateInfo(descriptor_update_entries::AbstractArray{<:_DescriptorUpdateTemplateEntry}, template_type::DescriptorUpdateTemplateType, descriptor_set_layout::DescriptorSetLayout, pipeline_bind_point::PipelineBindPoint, pipeline_layout::PipelineLayout, set::Integer; next = C_NULL, flags = 0)\n\nArguments:\n\ndescriptor_update_entries::AbstractArray{<:_DescriptorUpdateTemplateEntry}\ntemplate_type::DescriptorUpdateTemplateType\ndescriptor_set_layout::DescriptorSetLayout\npipeline_bind_point::PipelineBindPoint\npipeline_layout::PipelineLayout\nset::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DescriptorUpdateTemplateEntry","page":"API","title":"Vulkan._DescriptorUpdateTemplateEntry","text":"_DescriptorUpdateTemplateEntry(dst_binding::Integer, dst_array_element::Integer, descriptor_count::Integer, descriptor_type::DescriptorType, offset::Integer, stride::Integer)\n\nArguments:\n\ndst_binding::Integer\ndst_array_element::Integer\ndescriptor_count::Integer\ndescriptor_type::DescriptorType\noffset::Integer\nstride::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceCreateInfo","page":"API","title":"Vulkan._DeviceCreateInfo","text":"_DeviceCreateInfo(queue_create_infos::AbstractArray{<:_DeviceQueueCreateInfo}, enabled_layer_names::AbstractArray{<:AbstractString}, enabled_extension_names::AbstractArray{<:AbstractString}; next = C_NULL, flags = 0, enabled_features = C_NULL)\n\nArguments:\n\nqueue_create_infos::AbstractArray{<:_DeviceQueueCreateInfo}\nenabled_layer_names::AbstractArray{<:AbstractString}\nenabled_extension_names::AbstractArray{<:AbstractString}\nnext: defaults to C_NULL\nflags: defaults to 0\nenabled_features: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceDeviceMemoryReportCreateInfoEXT","page":"API","title":"Vulkan._DeviceDeviceMemoryReportCreateInfoEXT","text":"_DeviceDeviceMemoryReportCreateInfoEXT(flags::Integer, pfn_user_callback::FunctionPtr, user_data::Ptr{Cvoid}; next = C_NULL)\n\nArguments:\n\nflags::Integer\npfn_user_callback::FunctionPtr\nuser_data::Ptr{Cvoid}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceDiagnosticsConfigCreateInfoNV","page":"API","title":"Vulkan._DeviceDiagnosticsConfigCreateInfoNV","text":"_DeviceDiagnosticsConfigCreateInfoNV(; next = C_NULL, flags = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceEventInfoEXT","page":"API","title":"Vulkan._DeviceEventInfoEXT","text":"_DeviceEventInfoEXT(device_event::DeviceEventTypeEXT; next = C_NULL)\n\nArguments:\n\ndevice_event::DeviceEventTypeEXT\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceGroupBindSparseInfo","page":"API","title":"Vulkan._DeviceGroupBindSparseInfo","text":"_DeviceGroupBindSparseInfo(resource_device_index::Integer, memory_device_index::Integer; next = C_NULL)\n\nArguments:\n\nresource_device_index::Integer\nmemory_device_index::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceGroupCommandBufferBeginInfo","page":"API","title":"Vulkan._DeviceGroupCommandBufferBeginInfo","text":"_DeviceGroupCommandBufferBeginInfo(device_mask::Integer; next = C_NULL)\n\nArguments:\n\ndevice_mask::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceGroupDeviceCreateInfo","page":"API","title":"Vulkan._DeviceGroupDeviceCreateInfo","text":"_DeviceGroupDeviceCreateInfo(physical_devices::AbstractArray{<:PhysicalDevice}; next = C_NULL)\n\nArguments:\n\nphysical_devices::AbstractArray{<:PhysicalDevice}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceGroupPresentInfoKHR","page":"API","title":"Vulkan._DeviceGroupPresentInfoKHR","text":"_DeviceGroupPresentInfoKHR(device_masks::AbstractArray{<:Integer}, mode::DeviceGroupPresentModeFlagKHR; next = C_NULL)\n\nArguments:\n\ndevice_masks::AbstractArray{<:Integer}\nmode::DeviceGroupPresentModeFlagKHR\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceGroupRenderPassBeginInfo","page":"API","title":"Vulkan._DeviceGroupRenderPassBeginInfo","text":"_DeviceGroupRenderPassBeginInfo(device_mask::Integer, device_render_areas::AbstractArray{<:_Rect2D}; next = C_NULL)\n\nArguments:\n\ndevice_mask::Integer\ndevice_render_areas::AbstractArray{<:_Rect2D}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceGroupSubmitInfo","page":"API","title":"Vulkan._DeviceGroupSubmitInfo","text":"_DeviceGroupSubmitInfo(wait_semaphore_device_indices::AbstractArray{<:Integer}, command_buffer_device_masks::AbstractArray{<:Integer}, signal_semaphore_device_indices::AbstractArray{<:Integer}; next = C_NULL)\n\nArguments:\n\nwait_semaphore_device_indices::AbstractArray{<:Integer}\ncommand_buffer_device_masks::AbstractArray{<:Integer}\nsignal_semaphore_device_indices::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceGroupSwapchainCreateInfoKHR","page":"API","title":"Vulkan._DeviceGroupSwapchainCreateInfoKHR","text":"_DeviceGroupSwapchainCreateInfoKHR(modes::DeviceGroupPresentModeFlagKHR; next = C_NULL)\n\nArguments:\n\nmodes::DeviceGroupPresentModeFlagKHR\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceMemoryOpaqueCaptureAddressInfo","page":"API","title":"Vulkan._DeviceMemoryOpaqueCaptureAddressInfo","text":"_DeviceMemoryOpaqueCaptureAddressInfo(memory::DeviceMemory; next = C_NULL)\n\nArguments:\n\nmemory::DeviceMemory\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceMemoryOverallocationCreateInfoAMD","page":"API","title":"Vulkan._DeviceMemoryOverallocationCreateInfoAMD","text":"_DeviceMemoryOverallocationCreateInfoAMD(overallocation_behavior::MemoryOverallocationBehaviorAMD; next = C_NULL)\n\nArguments:\n\noverallocation_behavior::MemoryOverallocationBehaviorAMD\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DevicePrivateDataCreateInfoEXT","page":"API","title":"Vulkan._DevicePrivateDataCreateInfoEXT","text":"_DevicePrivateDataCreateInfoEXT(private_data_slot_request_count::Integer; next = C_NULL)\n\nArguments:\n\nprivate_data_slot_request_count::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceQueueCreateInfo","page":"API","title":"Vulkan._DeviceQueueCreateInfo","text":"_DeviceQueueCreateInfo(queue_family_index::Integer, queue_priorities::AbstractArray{<:Real}; next = C_NULL, flags = 0)\n\nArguments:\n\nqueue_family_index::Integer\nqueue_priorities::AbstractArray{<:Real}\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceQueueGlobalPriorityCreateInfoEXT","page":"API","title":"Vulkan._DeviceQueueGlobalPriorityCreateInfoEXT","text":"_DeviceQueueGlobalPriorityCreateInfoEXT(global_priority::QueueGlobalPriorityEXT; next = C_NULL)\n\nArguments:\n\nglobal_priority::QueueGlobalPriorityEXT\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DeviceQueueInfo2","page":"API","title":"Vulkan._DeviceQueueInfo2","text":"_DeviceQueueInfo2(queue_family_index::Integer, queue_index::Integer; next = C_NULL, flags = 0)\n\nArguments:\n\nqueue_family_index::Integer\nqueue_index::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DirectFBSurfaceCreateInfoEXT","page":"API","title":"Vulkan._DirectFBSurfaceCreateInfoEXT","text":"_DirectFBSurfaceCreateInfoEXT(dfb::vk.IDirectFB, surface::vk.IDirectFBSurface; next = C_NULL, flags = 0)\n\nArguments:\n\ndfb::vk.IDirectFB\nsurface::vk.IDirectFBSurface\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DispatchIndirectCommand","page":"API","title":"Vulkan._DispatchIndirectCommand","text":"_DispatchIndirectCommand(x::Integer, y::Integer, z::Integer)\n\nArguments:\n\nx::Integer\ny::Integer\nz::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DisplayEventInfoEXT","page":"API","title":"Vulkan._DisplayEventInfoEXT","text":"_DisplayEventInfoEXT(display_event::DisplayEventTypeEXT; next = C_NULL)\n\nArguments:\n\ndisplay_event::DisplayEventTypeEXT\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DisplayModeCreateInfoKHR","page":"API","title":"Vulkan._DisplayModeCreateInfoKHR","text":"_DisplayModeCreateInfoKHR(parameters::_DisplayModeParametersKHR; next = C_NULL, flags = 0)\n\nArguments:\n\nparameters::_DisplayModeParametersKHR\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DisplayModeParametersKHR","page":"API","title":"Vulkan._DisplayModeParametersKHR","text":"_DisplayModeParametersKHR(visible_region::_Extent2D, refresh_rate::Integer)\n\nArguments:\n\nvisible_region::_Extent2D\nrefresh_rate::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DisplayPlaneInfo2KHR","page":"API","title":"Vulkan._DisplayPlaneInfo2KHR","text":"_DisplayPlaneInfo2KHR(mode::DisplayModeKHR, plane_index::Integer; next = C_NULL)\n\nArguments:\n\nmode::DisplayModeKHR (externsync)\nplane_index::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DisplayPowerInfoEXT","page":"API","title":"Vulkan._DisplayPowerInfoEXT","text":"_DisplayPowerInfoEXT(power_state::DisplayPowerStateEXT; next = C_NULL)\n\nArguments:\n\npower_state::DisplayPowerStateEXT\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DisplayPresentInfoKHR","page":"API","title":"Vulkan._DisplayPresentInfoKHR","text":"_DisplayPresentInfoKHR(src_rect::_Rect2D, dst_rect::_Rect2D, persistent::Bool; next = C_NULL)\n\nArguments:\n\nsrc_rect::_Rect2D\ndst_rect::_Rect2D\npersistent::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DisplaySurfaceCreateInfoKHR","page":"API","title":"Vulkan._DisplaySurfaceCreateInfoKHR","text":"_DisplaySurfaceCreateInfoKHR(display_mode::DisplayModeKHR, plane_index::Integer, plane_stack_index::Integer, transform::SurfaceTransformFlagKHR, global_alpha::Real, alpha_mode::DisplayPlaneAlphaFlagKHR, image_extent::_Extent2D; next = C_NULL, flags = 0)\n\nArguments:\n\ndisplay_mode::DisplayModeKHR\nplane_index::Integer\nplane_stack_index::Integer\ntransform::SurfaceTransformFlagKHR\nglobal_alpha::Real\nalpha_mode::DisplayPlaneAlphaFlagKHR\nimage_extent::_Extent2D\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DrawIndexedIndirectCommand","page":"API","title":"Vulkan._DrawIndexedIndirectCommand","text":"_DrawIndexedIndirectCommand(index_count::Integer, instance_count::Integer, first_index::Integer, vertex_offset::Integer, first_instance::Integer)\n\nArguments:\n\nindex_count::Integer\ninstance_count::Integer\nfirst_index::Integer\nvertex_offset::Integer\nfirst_instance::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DrawIndirectCommand","page":"API","title":"Vulkan._DrawIndirectCommand","text":"_DrawIndirectCommand(vertex_count::Integer, instance_count::Integer, first_vertex::Integer, first_instance::Integer)\n\nArguments:\n\nvertex_count::Integer\ninstance_count::Integer\nfirst_vertex::Integer\nfirst_instance::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._DrawMeshTasksIndirectCommandNV","page":"API","title":"Vulkan._DrawMeshTasksIndirectCommandNV","text":"_DrawMeshTasksIndirectCommandNV(task_count::Integer, first_task::Integer)\n\nArguments:\n\ntask_count::Integer\nfirst_task::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._EventCreateInfo","page":"API","title":"Vulkan._EventCreateInfo","text":"_EventCreateInfo(; next = C_NULL, flags = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ExportFenceCreateInfo","page":"API","title":"Vulkan._ExportFenceCreateInfo","text":"_ExportFenceCreateInfo(; next = C_NULL, handle_types = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nhandle_types: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ExportFenceWin32HandleInfoKHR","page":"API","title":"Vulkan._ExportFenceWin32HandleInfoKHR","text":"_ExportFenceWin32HandleInfoKHR(dw_access::vk.DWORD, name::vk.LPCWSTR; next = C_NULL, attributes = C_NULL)\n\nArguments:\n\ndw_access::vk.DWORD\nname::vk.LPCWSTR\nnext: defaults to C_NULL\nattributes: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ExportMemoryAllocateInfo","page":"API","title":"Vulkan._ExportMemoryAllocateInfo","text":"_ExportMemoryAllocateInfo(; next = C_NULL, handle_types = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nhandle_types: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ExportMemoryAllocateInfoNV","page":"API","title":"Vulkan._ExportMemoryAllocateInfoNV","text":"_ExportMemoryAllocateInfoNV(; next = C_NULL, handle_types = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nhandle_types: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ExportMemoryWin32HandleInfoKHR","page":"API","title":"Vulkan._ExportMemoryWin32HandleInfoKHR","text":"_ExportMemoryWin32HandleInfoKHR(dw_access::vk.DWORD, name::vk.LPCWSTR; next = C_NULL, attributes = C_NULL)\n\nArguments:\n\ndw_access::vk.DWORD\nname::vk.LPCWSTR\nnext: defaults to C_NULL\nattributes: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ExportMemoryWin32HandleInfoNV","page":"API","title":"Vulkan._ExportMemoryWin32HandleInfoNV","text":"_ExportMemoryWin32HandleInfoNV(; next = C_NULL, attributes = C_NULL, dw_access = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nattributes: defaults to C_NULL\ndw_access: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ExportSemaphoreCreateInfo","page":"API","title":"Vulkan._ExportSemaphoreCreateInfo","text":"_ExportSemaphoreCreateInfo(; next = C_NULL, handle_types = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nhandle_types: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ExportSemaphoreWin32HandleInfoKHR","page":"API","title":"Vulkan._ExportSemaphoreWin32HandleInfoKHR","text":"_ExportSemaphoreWin32HandleInfoKHR(dw_access::vk.DWORD, name::vk.LPCWSTR; next = C_NULL, attributes = C_NULL)\n\nArguments:\n\ndw_access::vk.DWORD\nname::vk.LPCWSTR\nnext: defaults to C_NULL\nattributes: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._Extent2D","page":"API","title":"Vulkan._Extent2D","text":"_Extent2D(width::Integer, height::Integer)\n\nArguments:\n\nwidth::Integer\nheight::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._Extent3D","page":"API","title":"Vulkan._Extent3D","text":"_Extent3D(width::Integer, height::Integer, depth::Integer)\n\nArguments:\n\nwidth::Integer\nheight::Integer\ndepth::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ExternalFormatANDROID","page":"API","title":"Vulkan._ExternalFormatANDROID","text":"_ExternalFormatANDROID(external_format::Integer; next = C_NULL)\n\nArguments:\n\nexternal_format::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ExternalMemoryBufferCreateInfo","page":"API","title":"Vulkan._ExternalMemoryBufferCreateInfo","text":"_ExternalMemoryBufferCreateInfo(; next = C_NULL, handle_types = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nhandle_types: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ExternalMemoryImageCreateInfo","page":"API","title":"Vulkan._ExternalMemoryImageCreateInfo","text":"_ExternalMemoryImageCreateInfo(; next = C_NULL, handle_types = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nhandle_types: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ExternalMemoryImageCreateInfoNV","page":"API","title":"Vulkan._ExternalMemoryImageCreateInfoNV","text":"_ExternalMemoryImageCreateInfoNV(; next = C_NULL, handle_types = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nhandle_types: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._FenceCreateInfo","page":"API","title":"Vulkan._FenceCreateInfo","text":"_FenceCreateInfo(; next = C_NULL, flags = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._FenceGetFdInfoKHR","page":"API","title":"Vulkan._FenceGetFdInfoKHR","text":"_FenceGetFdInfoKHR(fence::Fence, handle_type::ExternalFenceHandleTypeFlag; next = C_NULL)\n\nArguments:\n\nfence::Fence\nhandle_type::ExternalFenceHandleTypeFlag\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._FenceGetWin32HandleInfoKHR","page":"API","title":"Vulkan._FenceGetWin32HandleInfoKHR","text":"_FenceGetWin32HandleInfoKHR(fence::Fence, handle_type::ExternalFenceHandleTypeFlag; next = C_NULL)\n\nArguments:\n\nfence::Fence\nhandle_type::ExternalFenceHandleTypeFlag\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._FragmentShadingRateAttachmentInfoKHR","page":"API","title":"Vulkan._FragmentShadingRateAttachmentInfoKHR","text":"_FragmentShadingRateAttachmentInfoKHR(fragment_shading_rate_attachment::_AttachmentReference2, shading_rate_attachment_texel_size::_Extent2D; next = C_NULL)\n\nArguments:\n\nfragment_shading_rate_attachment::_AttachmentReference2\nshading_rate_attachment_texel_size::_Extent2D\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._FramebufferAttachmentImageInfo","page":"API","title":"Vulkan._FramebufferAttachmentImageInfo","text":"_FramebufferAttachmentImageInfo(usage::ImageUsageFlag, width::Integer, height::Integer, layer_count::Integer, view_formats::AbstractArray{<:Format}; next = C_NULL, flags = 0)\n\nArguments:\n\nusage::ImageUsageFlag\nwidth::Integer\nheight::Integer\nlayer_count::Integer\nview_formats::AbstractArray{<:Format}\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._FramebufferAttachmentsCreateInfo","page":"API","title":"Vulkan._FramebufferAttachmentsCreateInfo","text":"_FramebufferAttachmentsCreateInfo(attachment_image_infos::AbstractArray{<:_FramebufferAttachmentImageInfo}; next = C_NULL)\n\nArguments:\n\nattachment_image_infos::AbstractArray{<:_FramebufferAttachmentImageInfo}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._FramebufferCreateInfo","page":"API","title":"Vulkan._FramebufferCreateInfo","text":"_FramebufferCreateInfo(render_pass::RenderPass, attachments::AbstractArray{<:ImageView}, width::Integer, height::Integer, layers::Integer; next = C_NULL, flags = 0)\n\nArguments:\n\nrender_pass::RenderPass\nattachments::AbstractArray{<:ImageView}\nwidth::Integer\nheight::Integer\nlayers::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._GeneratedCommandsInfoNV","page":"API","title":"Vulkan._GeneratedCommandsInfoNV","text":"_GeneratedCommandsInfoNV(pipeline_bind_point::PipelineBindPoint, pipeline::Pipeline, indirect_commands_layout::IndirectCommandsLayoutNV, streams::AbstractArray{<:_IndirectCommandsStreamNV}, sequences_count::Integer, preprocess_buffer::Buffer, preprocess_offset::Integer, preprocess_size::Integer, sequences_count_offset::Integer, sequences_index_offset::Integer; next = C_NULL, sequences_count_buffer = C_NULL, sequences_index_buffer = C_NULL)\n\nArguments:\n\npipeline_bind_point::PipelineBindPoint\npipeline::Pipeline\nindirect_commands_layout::IndirectCommandsLayoutNV\nstreams::AbstractArray{<:_IndirectCommandsStreamNV}\nsequences_count::Integer\npreprocess_buffer::Buffer\npreprocess_offset::Integer\npreprocess_size::Integer\nsequences_count_offset::Integer\nsequences_index_offset::Integer\nnext: defaults to C_NULL\nsequences_count_buffer: defaults to C_NULL\nsequences_index_buffer: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._GeneratedCommandsMemoryRequirementsInfoNV","page":"API","title":"Vulkan._GeneratedCommandsMemoryRequirementsInfoNV","text":"_GeneratedCommandsMemoryRequirementsInfoNV(pipeline_bind_point::PipelineBindPoint, pipeline::Pipeline, indirect_commands_layout::IndirectCommandsLayoutNV, max_sequences_count::Integer; next = C_NULL)\n\nArguments:\n\npipeline_bind_point::PipelineBindPoint\npipeline::Pipeline\nindirect_commands_layout::IndirectCommandsLayoutNV\nmax_sequences_count::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._GeometryAABBNV","page":"API","title":"Vulkan._GeometryAABBNV","text":"_GeometryAABBNV(num_aab_bs::Integer, stride::Integer, offset::Integer; next = C_NULL, aabb_data = C_NULL)\n\nArguments:\n\nnum_aab_bs::Integer\nstride::Integer\noffset::Integer\nnext: defaults to C_NULL\naabb_data: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._GeometryDataNV","page":"API","title":"Vulkan._GeometryDataNV","text":"_GeometryDataNV(triangles::_GeometryTrianglesNV, aabbs::_GeometryAABBNV)\n\nArguments:\n\ntriangles::_GeometryTrianglesNV\naabbs::_GeometryAABBNV\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._GeometryNV","page":"API","title":"Vulkan._GeometryNV","text":"_GeometryNV(geometry_type::GeometryTypeKHR, geometry::_GeometryDataNV; next = C_NULL, flags = 0)\n\nArguments:\n\ngeometry_type::GeometryTypeKHR\ngeometry::_GeometryDataNV\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._GeometryTrianglesNV","page":"API","title":"Vulkan._GeometryTrianglesNV","text":"_GeometryTrianglesNV(vertex_offset::Integer, vertex_count::Integer, vertex_stride::Integer, vertex_format::Format, index_offset::Integer, index_count::Integer, index_type::IndexType, transform_offset::Integer; next = C_NULL, vertex_data = C_NULL, index_data = C_NULL, transform_data = C_NULL)\n\nArguments:\n\nvertex_offset::Integer\nvertex_count::Integer\nvertex_stride::Integer\nvertex_format::Format\nindex_offset::Integer\nindex_count::Integer\nindex_type::IndexType\ntransform_offset::Integer\nnext: defaults to C_NULL\nvertex_data: defaults to C_NULL\nindex_data: defaults to C_NULL\ntransform_data: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._GraphicsPipelineCreateInfo","page":"API","title":"Vulkan._GraphicsPipelineCreateInfo","text":"_GraphicsPipelineCreateInfo(stages::AbstractArray{<:_PipelineShaderStageCreateInfo}, rasterization_state::_PipelineRasterizationStateCreateInfo, layout::PipelineLayout, render_pass::RenderPass, subpass::Integer, base_pipeline_index::Integer; next = C_NULL, flags = 0, vertex_input_state = C_NULL, input_assembly_state = C_NULL, tessellation_state = C_NULL, viewport_state = C_NULL, multisample_state = C_NULL, depth_stencil_state = C_NULL, color_blend_state = C_NULL, dynamic_state = C_NULL, base_pipeline_handle = C_NULL)\n\nArguments:\n\nstages::AbstractArray{<:_PipelineShaderStageCreateInfo}\nrasterization_state::_PipelineRasterizationStateCreateInfo\nlayout::PipelineLayout\nrender_pass::RenderPass\nsubpass::Integer\nbase_pipeline_index::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\nvertex_input_state: defaults to C_NULL\ninput_assembly_state: defaults to C_NULL\ntessellation_state: defaults to C_NULL\nviewport_state: defaults to C_NULL\nmultisample_state: defaults to C_NULL\ndepth_stencil_state: defaults to C_NULL\ncolor_blend_state: defaults to C_NULL\ndynamic_state: defaults to C_NULL\nbase_pipeline_handle: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._GraphicsPipelineShaderGroupsCreateInfoNV","page":"API","title":"Vulkan._GraphicsPipelineShaderGroupsCreateInfoNV","text":"_GraphicsPipelineShaderGroupsCreateInfoNV(groups::AbstractArray{<:_GraphicsShaderGroupCreateInfoNV}, pipelines::AbstractArray{<:Pipeline}; next = C_NULL)\n\nArguments:\n\ngroups::AbstractArray{<:_GraphicsShaderGroupCreateInfoNV}\npipelines::AbstractArray{<:Pipeline}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._GraphicsShaderGroupCreateInfoNV","page":"API","title":"Vulkan._GraphicsShaderGroupCreateInfoNV","text":"_GraphicsShaderGroupCreateInfoNV(stages::AbstractArray{<:_PipelineShaderStageCreateInfo}; next = C_NULL, vertex_input_state = C_NULL, tessellation_state = C_NULL)\n\nArguments:\n\nstages::AbstractArray{<:_PipelineShaderStageCreateInfo}\nnext: defaults to C_NULL\nvertex_input_state: defaults to C_NULL\ntessellation_state: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._HdrMetadataEXT","page":"API","title":"Vulkan._HdrMetadataEXT","text":"_HdrMetadataEXT(display_primary_red::_XYColorEXT, display_primary_green::_XYColorEXT, display_primary_blue::_XYColorEXT, white_point::_XYColorEXT, max_luminance::Real, min_luminance::Real, max_content_light_level::Real, max_frame_average_light_level::Real; next = C_NULL)\n\nArguments:\n\ndisplay_primary_red::_XYColorEXT\ndisplay_primary_green::_XYColorEXT\ndisplay_primary_blue::_XYColorEXT\nwhite_point::_XYColorEXT\nmax_luminance::Real\nmin_luminance::Real\nmax_content_light_level::Real\nmax_frame_average_light_level::Real\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._HeadlessSurfaceCreateInfoEXT","page":"API","title":"Vulkan._HeadlessSurfaceCreateInfoEXT","text":"_HeadlessSurfaceCreateInfoEXT(; next = C_NULL, flags = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._IOSSurfaceCreateInfoMVK","page":"API","title":"Vulkan._IOSSurfaceCreateInfoMVK","text":"_IOSSurfaceCreateInfoMVK(view::Ptr{Cvoid}; next = C_NULL, flags = 0)\n\nArguments:\n\nview::Ptr{Cvoid}\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageBlit","page":"API","title":"Vulkan._ImageBlit","text":"_ImageBlit(src_subresource::_ImageSubresourceLayers, src_offsets::NTuple{2, _Offset3D}, dst_subresource::_ImageSubresourceLayers, dst_offsets::NTuple{2, _Offset3D})\n\nArguments:\n\nsrc_subresource::_ImageSubresourceLayers\nsrc_offsets::NTuple{2, _Offset3D}\ndst_subresource::_ImageSubresourceLayers\ndst_offsets::NTuple{2, _Offset3D}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageBlit2KHR","page":"API","title":"Vulkan._ImageBlit2KHR","text":"_ImageBlit2KHR(src_subresource::_ImageSubresourceLayers, src_offsets::NTuple{2, _Offset3D}, dst_subresource::_ImageSubresourceLayers, dst_offsets::NTuple{2, _Offset3D}; next = C_NULL)\n\nArguments:\n\nsrc_subresource::_ImageSubresourceLayers\nsrc_offsets::NTuple{2, _Offset3D}\ndst_subresource::_ImageSubresourceLayers\ndst_offsets::NTuple{2, _Offset3D}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageCopy","page":"API","title":"Vulkan._ImageCopy","text":"_ImageCopy(src_subresource::_ImageSubresourceLayers, src_offset::_Offset3D, dst_subresource::_ImageSubresourceLayers, dst_offset::_Offset3D, extent::_Extent3D)\n\nArguments:\n\nsrc_subresource::_ImageSubresourceLayers\nsrc_offset::_Offset3D\ndst_subresource::_ImageSubresourceLayers\ndst_offset::_Offset3D\nextent::_Extent3D\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageCopy2KHR","page":"API","title":"Vulkan._ImageCopy2KHR","text":"_ImageCopy2KHR(src_subresource::_ImageSubresourceLayers, src_offset::_Offset3D, dst_subresource::_ImageSubresourceLayers, dst_offset::_Offset3D, extent::_Extent3D; next = C_NULL)\n\nArguments:\n\nsrc_subresource::_ImageSubresourceLayers\nsrc_offset::_Offset3D\ndst_subresource::_ImageSubresourceLayers\ndst_offset::_Offset3D\nextent::_Extent3D\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageCreateInfo","page":"API","title":"Vulkan._ImageCreateInfo","text":"_ImageCreateInfo(image_type::ImageType, format::Format, extent::_Extent3D, mip_levels::Integer, array_layers::Integer, samples::SampleCountFlag, tiling::ImageTiling, usage::ImageUsageFlag, sharing_mode::SharingMode, queue_family_indices::AbstractArray{<:Integer}, initial_layout::ImageLayout; next = C_NULL, flags = 0)\n\nArguments:\n\nimage_type::ImageType\nformat::Format\nextent::_Extent3D\nmip_levels::Integer\narray_layers::Integer\nsamples::SampleCountFlag\ntiling::ImageTiling\nusage::ImageUsageFlag\nsharing_mode::SharingMode\nqueue_family_indices::AbstractArray{<:Integer}\ninitial_layout::ImageLayout\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageDrmFormatModifierExplicitCreateInfoEXT","page":"API","title":"Vulkan._ImageDrmFormatModifierExplicitCreateInfoEXT","text":"_ImageDrmFormatModifierExplicitCreateInfoEXT(drm_format_modifier::Integer, plane_layouts::AbstractArray{<:SubresourceLayout}; next = C_NULL)\n\nArguments:\n\ndrm_format_modifier::Integer\nplane_layouts::AbstractArray{<:SubresourceLayout}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageDrmFormatModifierListCreateInfoEXT","page":"API","title":"Vulkan._ImageDrmFormatModifierListCreateInfoEXT","text":"_ImageDrmFormatModifierListCreateInfoEXT(drm_format_modifiers::AbstractArray{<:Integer}; next = C_NULL)\n\nArguments:\n\ndrm_format_modifiers::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageFormatListCreateInfo","page":"API","title":"Vulkan._ImageFormatListCreateInfo","text":"_ImageFormatListCreateInfo(view_formats::AbstractArray{<:Format}; next = C_NULL)\n\nArguments:\n\nview_formats::AbstractArray{<:Format}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageMemoryBarrier","page":"API","title":"Vulkan._ImageMemoryBarrier","text":"_ImageMemoryBarrier(src_access_mask::AccessFlag, dst_access_mask::AccessFlag, old_layout::ImageLayout, new_layout::ImageLayout, src_queue_family_index::Integer, dst_queue_family_index::Integer, image::Image, subresource_range::_ImageSubresourceRange; next = C_NULL)\n\nArguments:\n\nsrc_access_mask::AccessFlag\ndst_access_mask::AccessFlag\nold_layout::ImageLayout\nnew_layout::ImageLayout\nsrc_queue_family_index::Integer\ndst_queue_family_index::Integer\nimage::Image\nsubresource_range::_ImageSubresourceRange\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageMemoryBarrier2KHR","page":"API","title":"Vulkan._ImageMemoryBarrier2KHR","text":"_ImageMemoryBarrier2KHR(old_layout::ImageLayout, new_layout::ImageLayout, src_queue_family_index::Integer, dst_queue_family_index::Integer, image::Image, subresource_range::_ImageSubresourceRange; next = C_NULL, src_stage_mask = 0, src_access_mask = 0, dst_stage_mask = 0, dst_access_mask = 0)\n\nArguments:\n\nold_layout::ImageLayout\nnew_layout::ImageLayout\nsrc_queue_family_index::Integer\ndst_queue_family_index::Integer\nimage::Image\nsubresource_range::_ImageSubresourceRange\nnext: defaults to C_NULL\nsrc_stage_mask: defaults to 0\nsrc_access_mask: defaults to 0\ndst_stage_mask: defaults to 0\ndst_access_mask: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageMemoryRequirementsInfo2","page":"API","title":"Vulkan._ImageMemoryRequirementsInfo2","text":"_ImageMemoryRequirementsInfo2(image::Image; next = C_NULL)\n\nArguments:\n\nimage::Image\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImagePipeSurfaceCreateInfoFUCHSIA","page":"API","title":"Vulkan._ImagePipeSurfaceCreateInfoFUCHSIA","text":"_ImagePipeSurfaceCreateInfoFUCHSIA(image_pipe_handle::vk.zx_handle_t; next = C_NULL, flags = 0)\n\nArguments:\n\nimage_pipe_handle::vk.zx_handle_t\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImagePlaneMemoryRequirementsInfo","page":"API","title":"Vulkan._ImagePlaneMemoryRequirementsInfo","text":"_ImagePlaneMemoryRequirementsInfo(plane_aspect::ImageAspectFlag; next = C_NULL)\n\nArguments:\n\nplane_aspect::ImageAspectFlag\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageResolve","page":"API","title":"Vulkan._ImageResolve","text":"_ImageResolve(src_subresource::_ImageSubresourceLayers, src_offset::_Offset3D, dst_subresource::_ImageSubresourceLayers, dst_offset::_Offset3D, extent::_Extent3D)\n\nArguments:\n\nsrc_subresource::_ImageSubresourceLayers\nsrc_offset::_Offset3D\ndst_subresource::_ImageSubresourceLayers\ndst_offset::_Offset3D\nextent::_Extent3D\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageResolve2KHR","page":"API","title":"Vulkan._ImageResolve2KHR","text":"_ImageResolve2KHR(src_subresource::_ImageSubresourceLayers, src_offset::_Offset3D, dst_subresource::_ImageSubresourceLayers, dst_offset::_Offset3D, extent::_Extent3D; next = C_NULL)\n\nArguments:\n\nsrc_subresource::_ImageSubresourceLayers\nsrc_offset::_Offset3D\ndst_subresource::_ImageSubresourceLayers\ndst_offset::_Offset3D\nextent::_Extent3D\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageSparseMemoryRequirementsInfo2","page":"API","title":"Vulkan._ImageSparseMemoryRequirementsInfo2","text":"_ImageSparseMemoryRequirementsInfo2(image::Image; next = C_NULL)\n\nArguments:\n\nimage::Image\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageStencilUsageCreateInfo","page":"API","title":"Vulkan._ImageStencilUsageCreateInfo","text":"_ImageStencilUsageCreateInfo(stencil_usage::ImageUsageFlag; next = C_NULL)\n\nArguments:\n\nstencil_usage::ImageUsageFlag\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageSubresource","page":"API","title":"Vulkan._ImageSubresource","text":"_ImageSubresource(aspect_mask::ImageAspectFlag, mip_level::Integer, array_layer::Integer)\n\nArguments:\n\naspect_mask::ImageAspectFlag\nmip_level::Integer\narray_layer::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageSubresourceLayers","page":"API","title":"Vulkan._ImageSubresourceLayers","text":"_ImageSubresourceLayers(aspect_mask::ImageAspectFlag, mip_level::Integer, base_array_layer::Integer, layer_count::Integer)\n\nArguments:\n\naspect_mask::ImageAspectFlag\nmip_level::Integer\nbase_array_layer::Integer\nlayer_count::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageSubresourceRange","page":"API","title":"Vulkan._ImageSubresourceRange","text":"_ImageSubresourceRange(aspect_mask::ImageAspectFlag, base_mip_level::Integer, level_count::Integer, base_array_layer::Integer, layer_count::Integer)\n\nArguments:\n\naspect_mask::ImageAspectFlag\nbase_mip_level::Integer\nlevel_count::Integer\nbase_array_layer::Integer\nlayer_count::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageSwapchainCreateInfoKHR","page":"API","title":"Vulkan._ImageSwapchainCreateInfoKHR","text":"_ImageSwapchainCreateInfoKHR(; next = C_NULL, swapchain = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\nswapchain: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageViewASTCDecodeModeEXT","page":"API","title":"Vulkan._ImageViewASTCDecodeModeEXT","text":"_ImageViewASTCDecodeModeEXT(decode_mode::Format; next = C_NULL)\n\nArguments:\n\ndecode_mode::Format\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageViewCreateInfo","page":"API","title":"Vulkan._ImageViewCreateInfo","text":"_ImageViewCreateInfo(image::Image, view_type::ImageViewType, format::Format, components::_ComponentMapping, subresource_range::_ImageSubresourceRange; next = C_NULL, flags = 0)\n\nArguments:\n\nimage::Image\nview_type::ImageViewType\nformat::Format\ncomponents::_ComponentMapping\nsubresource_range::_ImageSubresourceRange\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageViewHandleInfoNVX","page":"API","title":"Vulkan._ImageViewHandleInfoNVX","text":"_ImageViewHandleInfoNVX(image_view::ImageView, descriptor_type::DescriptorType; next = C_NULL, sampler = C_NULL)\n\nArguments:\n\nimage_view::ImageView\ndescriptor_type::DescriptorType\nnext: defaults to C_NULL\nsampler: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImageViewUsageCreateInfo","page":"API","title":"Vulkan._ImageViewUsageCreateInfo","text":"_ImageViewUsageCreateInfo(usage::ImageUsageFlag; next = C_NULL)\n\nArguments:\n\nusage::ImageUsageFlag\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImportAndroidHardwareBufferInfoANDROID","page":"API","title":"Vulkan._ImportAndroidHardwareBufferInfoANDROID","text":"_ImportAndroidHardwareBufferInfoANDROID(buffer::vk.AHardwareBuffer; next = C_NULL)\n\nArguments:\n\nbuffer::vk.AHardwareBuffer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImportFenceFdInfoKHR","page":"API","title":"Vulkan._ImportFenceFdInfoKHR","text":"_ImportFenceFdInfoKHR(fence::Fence, handle_type::ExternalFenceHandleTypeFlag, fd::Integer; next = C_NULL, flags = 0)\n\nArguments:\n\nfence::Fence (externsync)\nhandle_type::ExternalFenceHandleTypeFlag\nfd::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImportFenceWin32HandleInfoKHR","page":"API","title":"Vulkan._ImportFenceWin32HandleInfoKHR","text":"_ImportFenceWin32HandleInfoKHR(fence::Fence, handle_type::ExternalFenceHandleTypeFlag; next = C_NULL, flags = 0, handle = 0, name = 0)\n\nArguments:\n\nfence::Fence (externsync)\nhandle_type::ExternalFenceHandleTypeFlag\nnext: defaults to C_NULL\nflags: defaults to 0\nhandle: defaults to 0\nname: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImportMemoryFdInfoKHR","page":"API","title":"Vulkan._ImportMemoryFdInfoKHR","text":"_ImportMemoryFdInfoKHR(fd::Integer; next = C_NULL, handle_type = 0)\n\nArguments:\n\nfd::Integer\nnext: defaults to C_NULL\nhandle_type: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImportMemoryHostPointerInfoEXT","page":"API","title":"Vulkan._ImportMemoryHostPointerInfoEXT","text":"_ImportMemoryHostPointerInfoEXT(handle_type::ExternalMemoryHandleTypeFlag, host_pointer::Ptr{Cvoid}; next = C_NULL)\n\nArguments:\n\nhandle_type::ExternalMemoryHandleTypeFlag\nhost_pointer::Ptr{Cvoid}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImportMemoryWin32HandleInfoKHR","page":"API","title":"Vulkan._ImportMemoryWin32HandleInfoKHR","text":"_ImportMemoryWin32HandleInfoKHR(; next = C_NULL, handle_type = 0, handle = 0, name = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nhandle_type: defaults to 0\nhandle: defaults to 0\nname: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImportMemoryWin32HandleInfoNV","page":"API","title":"Vulkan._ImportMemoryWin32HandleInfoNV","text":"_ImportMemoryWin32HandleInfoNV(; next = C_NULL, handle_type = 0, handle = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nhandle_type: defaults to 0\nhandle: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImportMemoryZirconHandleInfoFUCHSIA","page":"API","title":"Vulkan._ImportMemoryZirconHandleInfoFUCHSIA","text":"_ImportMemoryZirconHandleInfoFUCHSIA(; next = C_NULL, handle_type = 0, handle = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nhandle_type: defaults to 0\nhandle: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImportSemaphoreFdInfoKHR","page":"API","title":"Vulkan._ImportSemaphoreFdInfoKHR","text":"_ImportSemaphoreFdInfoKHR(semaphore::Semaphore, handle_type::ExternalSemaphoreHandleTypeFlag, fd::Integer; next = C_NULL, flags = 0)\n\nArguments:\n\nsemaphore::Semaphore (externsync)\nhandle_type::ExternalSemaphoreHandleTypeFlag\nfd::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImportSemaphoreWin32HandleInfoKHR","page":"API","title":"Vulkan._ImportSemaphoreWin32HandleInfoKHR","text":"_ImportSemaphoreWin32HandleInfoKHR(semaphore::Semaphore, handle_type::ExternalSemaphoreHandleTypeFlag; next = C_NULL, flags = 0, handle = 0, name = 0)\n\nArguments:\n\nsemaphore::Semaphore (externsync)\nhandle_type::ExternalSemaphoreHandleTypeFlag\nnext: defaults to C_NULL\nflags: defaults to 0\nhandle: defaults to 0\nname: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ImportSemaphoreZirconHandleInfoFUCHSIA","page":"API","title":"Vulkan._ImportSemaphoreZirconHandleInfoFUCHSIA","text":"_ImportSemaphoreZirconHandleInfoFUCHSIA(semaphore::Semaphore, handle_type::ExternalSemaphoreHandleTypeFlag, zircon_handle::vk.zx_handle_t; next = C_NULL, flags = 0)\n\nArguments:\n\nsemaphore::Semaphore (externsync)\nhandle_type::ExternalSemaphoreHandleTypeFlag\nzircon_handle::vk.zx_handle_t\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._IndirectCommandsLayoutCreateInfoNV","page":"API","title":"Vulkan._IndirectCommandsLayoutCreateInfoNV","text":"_IndirectCommandsLayoutCreateInfoNV(pipeline_bind_point::PipelineBindPoint, tokens::AbstractArray{<:_IndirectCommandsLayoutTokenNV}, stream_strides::AbstractArray{<:Integer}; next = C_NULL, flags = 0)\n\nArguments:\n\npipeline_bind_point::PipelineBindPoint\ntokens::AbstractArray{<:_IndirectCommandsLayoutTokenNV}\nstream_strides::AbstractArray{<:Integer}\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._IndirectCommandsLayoutTokenNV","page":"API","title":"Vulkan._IndirectCommandsLayoutTokenNV","text":"_IndirectCommandsLayoutTokenNV(token_type::IndirectCommandsTokenTypeNV, stream::Integer, offset::Integer, vertex_binding_unit::Integer, vertex_dynamic_stride::Bool, pushconstant_offset::Integer, pushconstant_size::Integer, index_types::AbstractArray{<:IndexType}, index_type_values::AbstractArray{<:Integer}; next = C_NULL, pushconstant_pipeline_layout = C_NULL, pushconstant_shader_stage_flags = 0, indirect_state_flags = 0)\n\nArguments:\n\ntoken_type::IndirectCommandsTokenTypeNV\nstream::Integer\noffset::Integer\nvertex_binding_unit::Integer\nvertex_dynamic_stride::Bool\npushconstant_offset::Integer\npushconstant_size::Integer\nindex_types::AbstractArray{<:IndexType}\nindex_type_values::AbstractArray{<:Integer}\nnext: defaults to C_NULL\npushconstant_pipeline_layout: defaults to C_NULL\npushconstant_shader_stage_flags: defaults to 0\nindirect_state_flags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._IndirectCommandsStreamNV","page":"API","title":"Vulkan._IndirectCommandsStreamNV","text":"_IndirectCommandsStreamNV(buffer::Buffer, offset::Integer)\n\nArguments:\n\nbuffer::Buffer\noffset::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._InitializePerformanceApiInfoINTEL","page":"API","title":"Vulkan._InitializePerformanceApiInfoINTEL","text":"_InitializePerformanceApiInfoINTEL(; next = C_NULL, user_data = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\nuser_data: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._InputAttachmentAspectReference","page":"API","title":"Vulkan._InputAttachmentAspectReference","text":"_InputAttachmentAspectReference(subpass::Integer, input_attachment_index::Integer, aspect_mask::ImageAspectFlag)\n\nArguments:\n\nsubpass::Integer\ninput_attachment_index::Integer\naspect_mask::ImageAspectFlag\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._InstanceCreateInfo","page":"API","title":"Vulkan._InstanceCreateInfo","text":"_InstanceCreateInfo(enabled_layer_names::AbstractArray{<:AbstractString}, enabled_extension_names::AbstractArray{<:AbstractString}; next = C_NULL, flags = 0, application_info = C_NULL)\n\nArguments:\n\nenabled_layer_names::AbstractArray{<:AbstractString}\nenabled_extension_names::AbstractArray{<:AbstractString}\nnext: defaults to C_NULL\nflags: defaults to 0\napplication_info: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MacOSSurfaceCreateInfoMVK","page":"API","title":"Vulkan._MacOSSurfaceCreateInfoMVK","text":"_MacOSSurfaceCreateInfoMVK(view::Ptr{Cvoid}; next = C_NULL, flags = 0)\n\nArguments:\n\nview::Ptr{Cvoid}\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MappedMemoryRange","page":"API","title":"Vulkan._MappedMemoryRange","text":"_MappedMemoryRange(memory::DeviceMemory, offset::Integer, size::Integer; next = C_NULL)\n\nArguments:\n\nmemory::DeviceMemory\noffset::Integer\nsize::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MemoryAllocateFlagsInfo","page":"API","title":"Vulkan._MemoryAllocateFlagsInfo","text":"_MemoryAllocateFlagsInfo(device_mask::Integer; next = C_NULL, flags = 0)\n\nArguments:\n\ndevice_mask::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MemoryAllocateInfo","page":"API","title":"Vulkan._MemoryAllocateInfo","text":"_MemoryAllocateInfo(allocation_size::Integer, memory_type_index::Integer; next = C_NULL)\n\nArguments:\n\nallocation_size::Integer\nmemory_type_index::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MemoryBarrier","page":"API","title":"Vulkan._MemoryBarrier","text":"_MemoryBarrier(; next = C_NULL, src_access_mask = 0, dst_access_mask = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nsrc_access_mask: defaults to 0\ndst_access_mask: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MemoryBarrier2KHR","page":"API","title":"Vulkan._MemoryBarrier2KHR","text":"_MemoryBarrier2KHR(; next = C_NULL, src_stage_mask = 0, src_access_mask = 0, dst_stage_mask = 0, dst_access_mask = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nsrc_stage_mask: defaults to 0\nsrc_access_mask: defaults to 0\ndst_stage_mask: defaults to 0\ndst_access_mask: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MemoryDedicatedAllocateInfo","page":"API","title":"Vulkan._MemoryDedicatedAllocateInfo","text":"_MemoryDedicatedAllocateInfo(; next = C_NULL, image = C_NULL, buffer = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\nimage: defaults to C_NULL\nbuffer: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MemoryGetAndroidHardwareBufferInfoANDROID","page":"API","title":"Vulkan._MemoryGetAndroidHardwareBufferInfoANDROID","text":"_MemoryGetAndroidHardwareBufferInfoANDROID(memory::DeviceMemory; next = C_NULL)\n\nArguments:\n\nmemory::DeviceMemory\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MemoryGetFdInfoKHR","page":"API","title":"Vulkan._MemoryGetFdInfoKHR","text":"_MemoryGetFdInfoKHR(memory::DeviceMemory, handle_type::ExternalMemoryHandleTypeFlag; next = C_NULL)\n\nArguments:\n\nmemory::DeviceMemory\nhandle_type::ExternalMemoryHandleTypeFlag\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MemoryGetWin32HandleInfoKHR","page":"API","title":"Vulkan._MemoryGetWin32HandleInfoKHR","text":"_MemoryGetWin32HandleInfoKHR(memory::DeviceMemory, handle_type::ExternalMemoryHandleTypeFlag; next = C_NULL)\n\nArguments:\n\nmemory::DeviceMemory\nhandle_type::ExternalMemoryHandleTypeFlag\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MemoryGetZirconHandleInfoFUCHSIA","page":"API","title":"Vulkan._MemoryGetZirconHandleInfoFUCHSIA","text":"_MemoryGetZirconHandleInfoFUCHSIA(memory::DeviceMemory, handle_type::ExternalMemoryHandleTypeFlag; next = C_NULL)\n\nArguments:\n\nmemory::DeviceMemory\nhandle_type::ExternalMemoryHandleTypeFlag\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MemoryOpaqueCaptureAddressAllocateInfo","page":"API","title":"Vulkan._MemoryOpaqueCaptureAddressAllocateInfo","text":"_MemoryOpaqueCaptureAddressAllocateInfo(opaque_capture_address::Integer; next = C_NULL)\n\nArguments:\n\nopaque_capture_address::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MemoryPriorityAllocateInfoEXT","page":"API","title":"Vulkan._MemoryPriorityAllocateInfoEXT","text":"_MemoryPriorityAllocateInfoEXT(priority::Real; next = C_NULL)\n\nArguments:\n\npriority::Real\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MetalSurfaceCreateInfoEXT","page":"API","title":"Vulkan._MetalSurfaceCreateInfoEXT","text":"_MetalSurfaceCreateInfoEXT(layer::vk.CAMetalLayer; next = C_NULL, flags = 0)\n\nArguments:\n\nlayer::vk.CAMetalLayer\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MutableDescriptorTypeCreateInfoVALVE","page":"API","title":"Vulkan._MutableDescriptorTypeCreateInfoVALVE","text":"_MutableDescriptorTypeCreateInfoVALVE(mutable_descriptor_type_lists::AbstractArray{<:_MutableDescriptorTypeListVALVE}; next = C_NULL)\n\nArguments:\n\nmutable_descriptor_type_lists::AbstractArray{<:_MutableDescriptorTypeListVALVE}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._MutableDescriptorTypeListVALVE","page":"API","title":"Vulkan._MutableDescriptorTypeListVALVE","text":"_MutableDescriptorTypeListVALVE(descriptor_types::AbstractArray{<:DescriptorType})\n\nArguments:\n\ndescriptor_types::AbstractArray{<:DescriptorType}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._Offset2D","page":"API","title":"Vulkan._Offset2D","text":"_Offset2D(x::Integer, y::Integer)\n\nArguments:\n\nx::Integer\ny::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._Offset3D","page":"API","title":"Vulkan._Offset3D","text":"_Offset3D(x::Integer, y::Integer, z::Integer)\n\nArguments:\n\nx::Integer\ny::Integer\nz::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PerformanceConfigurationAcquireInfoINTEL","page":"API","title":"Vulkan._PerformanceConfigurationAcquireInfoINTEL","text":"_PerformanceConfigurationAcquireInfoINTEL(type::PerformanceConfigurationTypeINTEL; next = C_NULL)\n\nArguments:\n\ntype::PerformanceConfigurationTypeINTEL\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PerformanceMarkerInfoINTEL","page":"API","title":"Vulkan._PerformanceMarkerInfoINTEL","text":"_PerformanceMarkerInfoINTEL(marker::Integer; next = C_NULL)\n\nArguments:\n\nmarker::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PerformanceOverrideInfoINTEL","page":"API","title":"Vulkan._PerformanceOverrideInfoINTEL","text":"_PerformanceOverrideInfoINTEL(type::PerformanceOverrideTypeINTEL, enable::Bool, parameter::Integer; next = C_NULL)\n\nArguments:\n\ntype::PerformanceOverrideTypeINTEL\nenable::Bool\nparameter::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PerformanceQuerySubmitInfoKHR","page":"API","title":"Vulkan._PerformanceQuerySubmitInfoKHR","text":"_PerformanceQuerySubmitInfoKHR(counter_pass_index::Integer; next = C_NULL)\n\nArguments:\n\ncounter_pass_index::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PerformanceStreamMarkerInfoINTEL","page":"API","title":"Vulkan._PerformanceStreamMarkerInfoINTEL","text":"_PerformanceStreamMarkerInfoINTEL(marker::Integer; next = C_NULL)\n\nArguments:\n\nmarker::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PerformanceValueINTEL","page":"API","title":"Vulkan._PerformanceValueINTEL","text":"_PerformanceValueINTEL(type::PerformanceValueTypeINTEL, data::VkPerformanceValueDataINTEL)\n\nArguments:\n\ntype::PerformanceValueTypeINTEL\ndata::VkPerformanceValueDataINTEL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDevice16BitStorageFeatures","page":"API","title":"Vulkan._PhysicalDevice16BitStorageFeatures","text":"_PhysicalDevice16BitStorageFeatures(storage_buffer_16_bit_access::Bool, uniform_and_storage_buffer_16_bit_access::Bool, storage_push_constant_16::Bool, storage_input_output_16::Bool; next = C_NULL)\n\nArguments:\n\nstorage_buffer_16_bit_access::Bool\nuniform_and_storage_buffer_16_bit_access::Bool\nstorage_push_constant_16::Bool\nstorage_input_output_16::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDevice4444FormatsFeaturesEXT","page":"API","title":"Vulkan._PhysicalDevice4444FormatsFeaturesEXT","text":"_PhysicalDevice4444FormatsFeaturesEXT(format_a4r4g4b4::Bool, format_a4b4g4r4::Bool; next = C_NULL)\n\nArguments:\n\nformat_a4r4g4b4::Bool\nformat_a4b4g4r4::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDevice8BitStorageFeatures","page":"API","title":"Vulkan._PhysicalDevice8BitStorageFeatures","text":"_PhysicalDevice8BitStorageFeatures(storage_buffer_8_bit_access::Bool, uniform_and_storage_buffer_8_bit_access::Bool, storage_push_constant_8::Bool; next = C_NULL)\n\nArguments:\n\nstorage_buffer_8_bit_access::Bool\nuniform_and_storage_buffer_8_bit_access::Bool\nstorage_push_constant_8::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceASTCDecodeFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceASTCDecodeFeaturesEXT","text":"_PhysicalDeviceASTCDecodeFeaturesEXT(decode_mode_shared_exponent::Bool; next = C_NULL)\n\nArguments:\n\ndecode_mode_shared_exponent::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceAccelerationStructureFeaturesKHR","page":"API","title":"Vulkan._PhysicalDeviceAccelerationStructureFeaturesKHR","text":"_PhysicalDeviceAccelerationStructureFeaturesKHR(acceleration_structure::Bool, acceleration_structure_capture_replay::Bool, acceleration_structure_indirect_build::Bool, acceleration_structure_host_commands::Bool, descriptor_binding_acceleration_structure_update_after_bind::Bool; next = C_NULL)\n\nArguments:\n\nacceleration_structure::Bool\nacceleration_structure_capture_replay::Bool\nacceleration_structure_indirect_build::Bool\nacceleration_structure_host_commands::Bool\ndescriptor_binding_acceleration_structure_update_after_bind::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceBlendOperationAdvancedFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceBlendOperationAdvancedFeaturesEXT","text":"_PhysicalDeviceBlendOperationAdvancedFeaturesEXT(advanced_blend_coherent_operations::Bool; next = C_NULL)\n\nArguments:\n\nadvanced_blend_coherent_operations::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceBufferDeviceAddressFeatures","page":"API","title":"Vulkan._PhysicalDeviceBufferDeviceAddressFeatures","text":"_PhysicalDeviceBufferDeviceAddressFeatures(buffer_device_address::Bool, buffer_device_address_capture_replay::Bool, buffer_device_address_multi_device::Bool; next = C_NULL)\n\nArguments:\n\nbuffer_device_address::Bool\nbuffer_device_address_capture_replay::Bool\nbuffer_device_address_multi_device::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceBufferDeviceAddressFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceBufferDeviceAddressFeaturesEXT","text":"_PhysicalDeviceBufferDeviceAddressFeaturesEXT(buffer_device_address::Bool, buffer_device_address_capture_replay::Bool, buffer_device_address_multi_device::Bool; next = C_NULL)\n\nArguments:\n\nbuffer_device_address::Bool\nbuffer_device_address_capture_replay::Bool\nbuffer_device_address_multi_device::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceCoherentMemoryFeaturesAMD","page":"API","title":"Vulkan._PhysicalDeviceCoherentMemoryFeaturesAMD","text":"_PhysicalDeviceCoherentMemoryFeaturesAMD(device_coherent_memory::Bool; next = C_NULL)\n\nArguments:\n\ndevice_coherent_memory::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceColorWriteEnableFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceColorWriteEnableFeaturesEXT","text":"_PhysicalDeviceColorWriteEnableFeaturesEXT(color_write_enable::Bool; next = C_NULL)\n\nArguments:\n\ncolor_write_enable::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceComputeShaderDerivativesFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceComputeShaderDerivativesFeaturesNV","text":"_PhysicalDeviceComputeShaderDerivativesFeaturesNV(compute_derivative_group_quads::Bool, compute_derivative_group_linear::Bool; next = C_NULL)\n\nArguments:\n\ncompute_derivative_group_quads::Bool\ncompute_derivative_group_linear::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceConditionalRenderingFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceConditionalRenderingFeaturesEXT","text":"_PhysicalDeviceConditionalRenderingFeaturesEXT(conditional_rendering::Bool, inherited_conditional_rendering::Bool; next = C_NULL)\n\nArguments:\n\nconditional_rendering::Bool\ninherited_conditional_rendering::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceCooperativeMatrixFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceCooperativeMatrixFeaturesNV","text":"_PhysicalDeviceCooperativeMatrixFeaturesNV(cooperative_matrix::Bool, cooperative_matrix_robust_buffer_access::Bool; next = C_NULL)\n\nArguments:\n\ncooperative_matrix::Bool\ncooperative_matrix_robust_buffer_access::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceCornerSampledImageFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceCornerSampledImageFeaturesNV","text":"_PhysicalDeviceCornerSampledImageFeaturesNV(corner_sampled_image::Bool; next = C_NULL)\n\nArguments:\n\ncorner_sampled_image::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceCoverageReductionModeFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceCoverageReductionModeFeaturesNV","text":"_PhysicalDeviceCoverageReductionModeFeaturesNV(coverage_reduction_mode::Bool; next = C_NULL)\n\nArguments:\n\ncoverage_reduction_mode::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceCustomBorderColorFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceCustomBorderColorFeaturesEXT","text":"_PhysicalDeviceCustomBorderColorFeaturesEXT(custom_border_colors::Bool, custom_border_color_without_format::Bool; next = C_NULL)\n\nArguments:\n\ncustom_border_colors::Bool\ncustom_border_color_without_format::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV","text":"_PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV(dedicated_allocation_image_aliasing::Bool; next = C_NULL)\n\nArguments:\n\ndedicated_allocation_image_aliasing::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceDepthClipEnableFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceDepthClipEnableFeaturesEXT","text":"_PhysicalDeviceDepthClipEnableFeaturesEXT(depth_clip_enable::Bool; next = C_NULL)\n\nArguments:\n\ndepth_clip_enable::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceDescriptorIndexingFeatures","page":"API","title":"Vulkan._PhysicalDeviceDescriptorIndexingFeatures","text":"_PhysicalDeviceDescriptorIndexingFeatures(shader_input_attachment_array_dynamic_indexing::Bool, shader_uniform_texel_buffer_array_dynamic_indexing::Bool, shader_storage_texel_buffer_array_dynamic_indexing::Bool, shader_uniform_buffer_array_non_uniform_indexing::Bool, shader_sampled_image_array_non_uniform_indexing::Bool, shader_storage_buffer_array_non_uniform_indexing::Bool, shader_storage_image_array_non_uniform_indexing::Bool, shader_input_attachment_array_non_uniform_indexing::Bool, shader_uniform_texel_buffer_array_non_uniform_indexing::Bool, shader_storage_texel_buffer_array_non_uniform_indexing::Bool, descriptor_binding_uniform_buffer_update_after_bind::Bool, descriptor_binding_sampled_image_update_after_bind::Bool, descriptor_binding_storage_image_update_after_bind::Bool, descriptor_binding_storage_buffer_update_after_bind::Bool, descriptor_binding_uniform_texel_buffer_update_after_bind::Bool, descriptor_binding_storage_texel_buffer_update_after_bind::Bool, descriptor_binding_update_unused_while_pending::Bool, descriptor_binding_partially_bound::Bool, descriptor_binding_variable_descriptor_count::Bool, runtime_descriptor_array::Bool; next = C_NULL)\n\nArguments:\n\nshader_input_attachment_array_dynamic_indexing::Bool\nshader_uniform_texel_buffer_array_dynamic_indexing::Bool\nshader_storage_texel_buffer_array_dynamic_indexing::Bool\nshader_uniform_buffer_array_non_uniform_indexing::Bool\nshader_sampled_image_array_non_uniform_indexing::Bool\nshader_storage_buffer_array_non_uniform_indexing::Bool\nshader_storage_image_array_non_uniform_indexing::Bool\nshader_input_attachment_array_non_uniform_indexing::Bool\nshader_uniform_texel_buffer_array_non_uniform_indexing::Bool\nshader_storage_texel_buffer_array_non_uniform_indexing::Bool\ndescriptor_binding_uniform_buffer_update_after_bind::Bool\ndescriptor_binding_sampled_image_update_after_bind::Bool\ndescriptor_binding_storage_image_update_after_bind::Bool\ndescriptor_binding_storage_buffer_update_after_bind::Bool\ndescriptor_binding_uniform_texel_buffer_update_after_bind::Bool\ndescriptor_binding_storage_texel_buffer_update_after_bind::Bool\ndescriptor_binding_update_unused_while_pending::Bool\ndescriptor_binding_partially_bound::Bool\ndescriptor_binding_variable_descriptor_count::Bool\nruntime_descriptor_array::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceDeviceGeneratedCommandsFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceDeviceGeneratedCommandsFeaturesNV","text":"_PhysicalDeviceDeviceGeneratedCommandsFeaturesNV(device_generated_commands::Bool; next = C_NULL)\n\nArguments:\n\ndevice_generated_commands::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceDeviceMemoryReportFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceDeviceMemoryReportFeaturesEXT","text":"_PhysicalDeviceDeviceMemoryReportFeaturesEXT(device_memory_report::Bool; next = C_NULL)\n\nArguments:\n\ndevice_memory_report::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceDiagnosticsConfigFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceDiagnosticsConfigFeaturesNV","text":"_PhysicalDeviceDiagnosticsConfigFeaturesNV(diagnostics_config::Bool; next = C_NULL)\n\nArguments:\n\ndiagnostics_config::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceExclusiveScissorFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceExclusiveScissorFeaturesNV","text":"_PhysicalDeviceExclusiveScissorFeaturesNV(exclusive_scissor::Bool; next = C_NULL)\n\nArguments:\n\nexclusive_scissor::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceExtendedDynamicState2FeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceExtendedDynamicState2FeaturesEXT","text":"_PhysicalDeviceExtendedDynamicState2FeaturesEXT(extended_dynamic_state_2::Bool, extended_dynamic_state_2_logic_op::Bool, extended_dynamic_state_2_patch_control_points::Bool; next = C_NULL)\n\nArguments:\n\nextended_dynamic_state_2::Bool\nextended_dynamic_state_2_logic_op::Bool\nextended_dynamic_state_2_patch_control_points::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceExtendedDynamicStateFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceExtendedDynamicStateFeaturesEXT","text":"_PhysicalDeviceExtendedDynamicStateFeaturesEXT(extended_dynamic_state::Bool; next = C_NULL)\n\nArguments:\n\nextended_dynamic_state::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceExternalBufferInfo","page":"API","title":"Vulkan._PhysicalDeviceExternalBufferInfo","text":"_PhysicalDeviceExternalBufferInfo(usage::BufferUsageFlag, handle_type::ExternalMemoryHandleTypeFlag; next = C_NULL, flags = 0)\n\nArguments:\n\nusage::BufferUsageFlag\nhandle_type::ExternalMemoryHandleTypeFlag\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceExternalFenceInfo","page":"API","title":"Vulkan._PhysicalDeviceExternalFenceInfo","text":"_PhysicalDeviceExternalFenceInfo(handle_type::ExternalFenceHandleTypeFlag; next = C_NULL)\n\nArguments:\n\nhandle_type::ExternalFenceHandleTypeFlag\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceExternalImageFormatInfo","page":"API","title":"Vulkan._PhysicalDeviceExternalImageFormatInfo","text":"_PhysicalDeviceExternalImageFormatInfo(; next = C_NULL, handle_type = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nhandle_type: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceExternalSemaphoreInfo","page":"API","title":"Vulkan._PhysicalDeviceExternalSemaphoreInfo","text":"_PhysicalDeviceExternalSemaphoreInfo(handle_type::ExternalSemaphoreHandleTypeFlag; next = C_NULL)\n\nArguments:\n\nhandle_type::ExternalSemaphoreHandleTypeFlag\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceFeatures","page":"API","title":"Vulkan._PhysicalDeviceFeatures","text":"_PhysicalDeviceFeatures(robust_buffer_access::Bool, full_draw_index_uint_32::Bool, image_cube_array::Bool, independent_blend::Bool, geometry_shader::Bool, tessellation_shader::Bool, sample_rate_shading::Bool, dual_src_blend::Bool, logic_op::Bool, multi_draw_indirect::Bool, draw_indirect_first_instance::Bool, depth_clamp::Bool, depth_bias_clamp::Bool, fill_mode_non_solid::Bool, depth_bounds::Bool, wide_lines::Bool, large_points::Bool, alpha_to_one::Bool, multi_viewport::Bool, sampler_anisotropy::Bool, texture_compression_etc_2::Bool, texture_compression_astc_ldr::Bool, texture_compression_bc::Bool, occlusion_query_precise::Bool, pipeline_statistics_query::Bool, vertex_pipeline_stores_and_atomics::Bool, fragment_stores_and_atomics::Bool, shader_tessellation_and_geometry_point_size::Bool, shader_image_gather_extended::Bool, shader_storage_image_extended_formats::Bool, shader_storage_image_multisample::Bool, shader_storage_image_read_without_format::Bool, shader_storage_image_write_without_format::Bool, shader_uniform_buffer_array_dynamic_indexing::Bool, shader_sampled_image_array_dynamic_indexing::Bool, shader_storage_buffer_array_dynamic_indexing::Bool, shader_storage_image_array_dynamic_indexing::Bool, shader_clip_distance::Bool, shader_cull_distance::Bool, shader_float_64::Bool, shader_int_64::Bool, shader_int_16::Bool, shader_resource_residency::Bool, shader_resource_min_lod::Bool, sparse_binding::Bool, sparse_residency_buffer::Bool, sparse_residency_image_2_d::Bool, sparse_residency_image_3_d::Bool, sparse_residency_2_samples::Bool, sparse_residency_4_samples::Bool, sparse_residency_8_samples::Bool, sparse_residency_16_samples::Bool, sparse_residency_aliased::Bool, variable_multisample_rate::Bool, inherited_queries::Bool)\n\nArguments:\n\nrobust_buffer_access::Bool\nfull_draw_index_uint_32::Bool\nimage_cube_array::Bool\nindependent_blend::Bool\ngeometry_shader::Bool\ntessellation_shader::Bool\nsample_rate_shading::Bool\ndual_src_blend::Bool\nlogic_op::Bool\nmulti_draw_indirect::Bool\ndraw_indirect_first_instance::Bool\ndepth_clamp::Bool\ndepth_bias_clamp::Bool\nfill_mode_non_solid::Bool\ndepth_bounds::Bool\nwide_lines::Bool\nlarge_points::Bool\nalpha_to_one::Bool\nmulti_viewport::Bool\nsampler_anisotropy::Bool\ntexture_compression_etc_2::Bool\ntexture_compression_astc_ldr::Bool\ntexture_compression_bc::Bool\nocclusion_query_precise::Bool\npipeline_statistics_query::Bool\nvertex_pipeline_stores_and_atomics::Bool\nfragment_stores_and_atomics::Bool\nshader_tessellation_and_geometry_point_size::Bool\nshader_image_gather_extended::Bool\nshader_storage_image_extended_formats::Bool\nshader_storage_image_multisample::Bool\nshader_storage_image_read_without_format::Bool\nshader_storage_image_write_without_format::Bool\nshader_uniform_buffer_array_dynamic_indexing::Bool\nshader_sampled_image_array_dynamic_indexing::Bool\nshader_storage_buffer_array_dynamic_indexing::Bool\nshader_storage_image_array_dynamic_indexing::Bool\nshader_clip_distance::Bool\nshader_cull_distance::Bool\nshader_float_64::Bool\nshader_int_64::Bool\nshader_int_16::Bool\nshader_resource_residency::Bool\nshader_resource_min_lod::Bool\nsparse_binding::Bool\nsparse_residency_buffer::Bool\nsparse_residency_image_2_d::Bool\nsparse_residency_image_3_d::Bool\nsparse_residency_2_samples::Bool\nsparse_residency_4_samples::Bool\nsparse_residency_8_samples::Bool\nsparse_residency_16_samples::Bool\nsparse_residency_aliased::Bool\nvariable_multisample_rate::Bool\ninherited_queries::Bool\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceFeatures2","page":"API","title":"Vulkan._PhysicalDeviceFeatures2","text":"_PhysicalDeviceFeatures2(features::_PhysicalDeviceFeatures; next = C_NULL)\n\nArguments:\n\nfeatures::_PhysicalDeviceFeatures\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceFragmentDensityMap2FeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceFragmentDensityMap2FeaturesEXT","text":"_PhysicalDeviceFragmentDensityMap2FeaturesEXT(fragment_density_map_deferred::Bool; next = C_NULL)\n\nArguments:\n\nfragment_density_map_deferred::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceFragmentDensityMapFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceFragmentDensityMapFeaturesEXT","text":"_PhysicalDeviceFragmentDensityMapFeaturesEXT(fragment_density_map::Bool, fragment_density_map_dynamic::Bool, fragment_density_map_non_subsampled_images::Bool; next = C_NULL)\n\nArguments:\n\nfragment_density_map::Bool\nfragment_density_map_dynamic::Bool\nfragment_density_map_non_subsampled_images::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceFragmentShaderBarycentricFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceFragmentShaderBarycentricFeaturesNV","text":"_PhysicalDeviceFragmentShaderBarycentricFeaturesNV(fragment_shader_barycentric::Bool; next = C_NULL)\n\nArguments:\n\nfragment_shader_barycentric::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceFragmentShaderInterlockFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceFragmentShaderInterlockFeaturesEXT","text":"_PhysicalDeviceFragmentShaderInterlockFeaturesEXT(fragment_shader_sample_interlock::Bool, fragment_shader_pixel_interlock::Bool, fragment_shader_shading_rate_interlock::Bool; next = C_NULL)\n\nArguments:\n\nfragment_shader_sample_interlock::Bool\nfragment_shader_pixel_interlock::Bool\nfragment_shader_shading_rate_interlock::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceFragmentShadingRateEnumsFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceFragmentShadingRateEnumsFeaturesNV","text":"_PhysicalDeviceFragmentShadingRateEnumsFeaturesNV(fragment_shading_rate_enums::Bool, supersample_fragment_shading_rates::Bool, no_invocation_fragment_shading_rates::Bool; next = C_NULL)\n\nArguments:\n\nfragment_shading_rate_enums::Bool\nsupersample_fragment_shading_rates::Bool\nno_invocation_fragment_shading_rates::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceFragmentShadingRateEnumsPropertiesNV","page":"API","title":"Vulkan._PhysicalDeviceFragmentShadingRateEnumsPropertiesNV","text":"_PhysicalDeviceFragmentShadingRateEnumsPropertiesNV(max_fragment_shading_rate_invocation_count::SampleCountFlag; next = C_NULL)\n\nArguments:\n\nmax_fragment_shading_rate_invocation_count::SampleCountFlag\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceFragmentShadingRateFeaturesKHR","page":"API","title":"Vulkan._PhysicalDeviceFragmentShadingRateFeaturesKHR","text":"_PhysicalDeviceFragmentShadingRateFeaturesKHR(pipeline_fragment_shading_rate::Bool, primitive_fragment_shading_rate::Bool, attachment_fragment_shading_rate::Bool; next = C_NULL)\n\nArguments:\n\npipeline_fragment_shading_rate::Bool\nprimitive_fragment_shading_rate::Bool\nattachment_fragment_shading_rate::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceHostQueryResetFeatures","page":"API","title":"Vulkan._PhysicalDeviceHostQueryResetFeatures","text":"_PhysicalDeviceHostQueryResetFeatures(host_query_reset::Bool; next = C_NULL)\n\nArguments:\n\nhost_query_reset::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceImageDrmFormatModifierInfoEXT","page":"API","title":"Vulkan._PhysicalDeviceImageDrmFormatModifierInfoEXT","text":"_PhysicalDeviceImageDrmFormatModifierInfoEXT(drm_format_modifier::Integer, sharing_mode::SharingMode, queue_family_indices::AbstractArray{<:Integer}; next = C_NULL)\n\nArguments:\n\ndrm_format_modifier::Integer\nsharing_mode::SharingMode\nqueue_family_indices::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceImageFormatInfo2","page":"API","title":"Vulkan._PhysicalDeviceImageFormatInfo2","text":"_PhysicalDeviceImageFormatInfo2(format::Format, type::ImageType, tiling::ImageTiling, usage::ImageUsageFlag; next = C_NULL, flags = 0)\n\nArguments:\n\nformat::Format\ntype::ImageType\ntiling::ImageTiling\nusage::ImageUsageFlag\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceImageRobustnessFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceImageRobustnessFeaturesEXT","text":"_PhysicalDeviceImageRobustnessFeaturesEXT(robust_image_access::Bool; next = C_NULL)\n\nArguments:\n\nrobust_image_access::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceImageViewImageFormatInfoEXT","page":"API","title":"Vulkan._PhysicalDeviceImageViewImageFormatInfoEXT","text":"_PhysicalDeviceImageViewImageFormatInfoEXT(image_view_type::ImageViewType; next = C_NULL)\n\nArguments:\n\nimage_view_type::ImageViewType\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceImagelessFramebufferFeatures","page":"API","title":"Vulkan._PhysicalDeviceImagelessFramebufferFeatures","text":"_PhysicalDeviceImagelessFramebufferFeatures(imageless_framebuffer::Bool; next = C_NULL)\n\nArguments:\n\nimageless_framebuffer::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceIndexTypeUint8FeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceIndexTypeUint8FeaturesEXT","text":"_PhysicalDeviceIndexTypeUint8FeaturesEXT(index_type_uint_8::Bool; next = C_NULL)\n\nArguments:\n\nindex_type_uint_8::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceInheritedViewportScissorFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceInheritedViewportScissorFeaturesNV","text":"_PhysicalDeviceInheritedViewportScissorFeaturesNV(inherited_viewport_scissor_2_d::Bool; next = C_NULL)\n\nArguments:\n\ninherited_viewport_scissor_2_d::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceInlineUniformBlockFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceInlineUniformBlockFeaturesEXT","text":"_PhysicalDeviceInlineUniformBlockFeaturesEXT(inline_uniform_block::Bool, descriptor_binding_inline_uniform_block_update_after_bind::Bool; next = C_NULL)\n\nArguments:\n\ninline_uniform_block::Bool\ndescriptor_binding_inline_uniform_block_update_after_bind::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceLineRasterizationFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceLineRasterizationFeaturesEXT","text":"_PhysicalDeviceLineRasterizationFeaturesEXT(rectangular_lines::Bool, bresenham_lines::Bool, smooth_lines::Bool, stippled_rectangular_lines::Bool, stippled_bresenham_lines::Bool, stippled_smooth_lines::Bool; next = C_NULL)\n\nArguments:\n\nrectangular_lines::Bool\nbresenham_lines::Bool\nsmooth_lines::Bool\nstippled_rectangular_lines::Bool\nstippled_bresenham_lines::Bool\nstippled_smooth_lines::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceMemoryPriorityFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceMemoryPriorityFeaturesEXT","text":"_PhysicalDeviceMemoryPriorityFeaturesEXT(memory_priority::Bool; next = C_NULL)\n\nArguments:\n\nmemory_priority::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceMeshShaderFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceMeshShaderFeaturesNV","text":"_PhysicalDeviceMeshShaderFeaturesNV(task_shader::Bool, mesh_shader::Bool; next = C_NULL)\n\nArguments:\n\ntask_shader::Bool\nmesh_shader::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceMultiviewFeatures","page":"API","title":"Vulkan._PhysicalDeviceMultiviewFeatures","text":"_PhysicalDeviceMultiviewFeatures(multiview::Bool, multiview_geometry_shader::Bool, multiview_tessellation_shader::Bool; next = C_NULL)\n\nArguments:\n\nmultiview::Bool\nmultiview_geometry_shader::Bool\nmultiview_tessellation_shader::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceMutableDescriptorTypeFeaturesVALVE","page":"API","title":"Vulkan._PhysicalDeviceMutableDescriptorTypeFeaturesVALVE","text":"_PhysicalDeviceMutableDescriptorTypeFeaturesVALVE(mutable_descriptor_type::Bool; next = C_NULL)\n\nArguments:\n\nmutable_descriptor_type::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDevicePerformanceQueryFeaturesKHR","page":"API","title":"Vulkan._PhysicalDevicePerformanceQueryFeaturesKHR","text":"_PhysicalDevicePerformanceQueryFeaturesKHR(performance_counter_query_pools::Bool, performance_counter_multiple_query_pools::Bool; next = C_NULL)\n\nArguments:\n\nperformance_counter_query_pools::Bool\nperformance_counter_multiple_query_pools::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDevicePipelineCreationCacheControlFeaturesEXT","page":"API","title":"Vulkan._PhysicalDevicePipelineCreationCacheControlFeaturesEXT","text":"_PhysicalDevicePipelineCreationCacheControlFeaturesEXT(pipeline_creation_cache_control::Bool; next = C_NULL)\n\nArguments:\n\npipeline_creation_cache_control::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDevicePipelineExecutablePropertiesFeaturesKHR","page":"API","title":"Vulkan._PhysicalDevicePipelineExecutablePropertiesFeaturesKHR","text":"_PhysicalDevicePipelineExecutablePropertiesFeaturesKHR(pipeline_executable_info::Bool; next = C_NULL)\n\nArguments:\n\npipeline_executable_info::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDevicePortabilitySubsetFeaturesKHR","page":"API","title":"Vulkan._PhysicalDevicePortabilitySubsetFeaturesKHR","text":"_PhysicalDevicePortabilitySubsetFeaturesKHR(constant_alpha_color_blend_factors::Bool, events::Bool, image_view_format_reinterpretation::Bool, image_view_format_swizzle::Bool, image_view_2_d_on_3_d_image::Bool, multisample_array_image::Bool, mutable_comparison_samplers::Bool, point_polygons::Bool, sampler_mip_lod_bias::Bool, separate_stencil_mask_ref::Bool, shader_sample_rate_interpolation_functions::Bool, tessellation_isolines::Bool, tessellation_point_mode::Bool, triangle_fans::Bool, vertex_attribute_access_beyond_stride::Bool; next = C_NULL)\n\nArguments:\n\nconstant_alpha_color_blend_factors::Bool\nevents::Bool\nimage_view_format_reinterpretation::Bool\nimage_view_format_swizzle::Bool\nimage_view_2_d_on_3_d_image::Bool\nmultisample_array_image::Bool\nmutable_comparison_samplers::Bool\npoint_polygons::Bool\nsampler_mip_lod_bias::Bool\nseparate_stencil_mask_ref::Bool\nshader_sample_rate_interpolation_functions::Bool\ntessellation_isolines::Bool\ntessellation_point_mode::Bool\ntriangle_fans::Bool\nvertex_attribute_access_beyond_stride::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDevicePortabilitySubsetPropertiesKHR","page":"API","title":"Vulkan._PhysicalDevicePortabilitySubsetPropertiesKHR","text":"_PhysicalDevicePortabilitySubsetPropertiesKHR(min_vertex_input_binding_stride_alignment::Integer; next = C_NULL)\n\nArguments:\n\nmin_vertex_input_binding_stride_alignment::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDevicePrivateDataFeaturesEXT","page":"API","title":"Vulkan._PhysicalDevicePrivateDataFeaturesEXT","text":"_PhysicalDevicePrivateDataFeaturesEXT(private_data::Bool; next = C_NULL)\n\nArguments:\n\nprivate_data::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceProtectedMemoryFeatures","page":"API","title":"Vulkan._PhysicalDeviceProtectedMemoryFeatures","text":"_PhysicalDeviceProtectedMemoryFeatures(protected_memory::Bool; next = C_NULL)\n\nArguments:\n\nprotected_memory::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceProvokingVertexFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceProvokingVertexFeaturesEXT","text":"_PhysicalDeviceProvokingVertexFeaturesEXT(provoking_vertex_last::Bool, transform_feedback_preserves_provoking_vertex::Bool; next = C_NULL)\n\nArguments:\n\nprovoking_vertex_last::Bool\ntransform_feedback_preserves_provoking_vertex::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceRayQueryFeaturesKHR","page":"API","title":"Vulkan._PhysicalDeviceRayQueryFeaturesKHR","text":"_PhysicalDeviceRayQueryFeaturesKHR(ray_query::Bool; next = C_NULL)\n\nArguments:\n\nray_query::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceRayTracingPipelineFeaturesKHR","page":"API","title":"Vulkan._PhysicalDeviceRayTracingPipelineFeaturesKHR","text":"_PhysicalDeviceRayTracingPipelineFeaturesKHR(ray_tracing_pipeline::Bool, ray_tracing_pipeline_shader_group_handle_capture_replay::Bool, ray_tracing_pipeline_shader_group_handle_capture_replay_mixed::Bool, ray_tracing_pipeline_trace_rays_indirect::Bool, ray_traversal_primitive_culling::Bool; next = C_NULL)\n\nArguments:\n\nray_tracing_pipeline::Bool\nray_tracing_pipeline_shader_group_handle_capture_replay::Bool\nray_tracing_pipeline_shader_group_handle_capture_replay_mixed::Bool\nray_tracing_pipeline_trace_rays_indirect::Bool\nray_traversal_primitive_culling::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceRepresentativeFragmentTestFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceRepresentativeFragmentTestFeaturesNV","text":"_PhysicalDeviceRepresentativeFragmentTestFeaturesNV(representative_fragment_test::Bool; next = C_NULL)\n\nArguments:\n\nrepresentative_fragment_test::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceRobustness2FeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceRobustness2FeaturesEXT","text":"_PhysicalDeviceRobustness2FeaturesEXT(robust_buffer_access_2::Bool, robust_image_access_2::Bool, null_descriptor::Bool; next = C_NULL)\n\nArguments:\n\nrobust_buffer_access_2::Bool\nrobust_image_access_2::Bool\nnull_descriptor::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceSamplerYcbcrConversionFeatures","page":"API","title":"Vulkan._PhysicalDeviceSamplerYcbcrConversionFeatures","text":"_PhysicalDeviceSamplerYcbcrConversionFeatures(sampler_ycbcr_conversion::Bool; next = C_NULL)\n\nArguments:\n\nsampler_ycbcr_conversion::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceScalarBlockLayoutFeatures","page":"API","title":"Vulkan._PhysicalDeviceScalarBlockLayoutFeatures","text":"_PhysicalDeviceScalarBlockLayoutFeatures(scalar_block_layout::Bool; next = C_NULL)\n\nArguments:\n\nscalar_block_layout::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceSeparateDepthStencilLayoutsFeatures","page":"API","title":"Vulkan._PhysicalDeviceSeparateDepthStencilLayoutsFeatures","text":"_PhysicalDeviceSeparateDepthStencilLayoutsFeatures(separate_depth_stencil_layouts::Bool; next = C_NULL)\n\nArguments:\n\nseparate_depth_stencil_layouts::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShaderAtomicFloatFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceShaderAtomicFloatFeaturesEXT","text":"_PhysicalDeviceShaderAtomicFloatFeaturesEXT(shader_buffer_float_32_atomics::Bool, shader_buffer_float_32_atomic_add::Bool, shader_buffer_float_64_atomics::Bool, shader_buffer_float_64_atomic_add::Bool, shader_shared_float_32_atomics::Bool, shader_shared_float_32_atomic_add::Bool, shader_shared_float_64_atomics::Bool, shader_shared_float_64_atomic_add::Bool, shader_image_float_32_atomics::Bool, shader_image_float_32_atomic_add::Bool, sparse_image_float_32_atomics::Bool, sparse_image_float_32_atomic_add::Bool; next = C_NULL)\n\nArguments:\n\nshader_buffer_float_32_atomics::Bool\nshader_buffer_float_32_atomic_add::Bool\nshader_buffer_float_64_atomics::Bool\nshader_buffer_float_64_atomic_add::Bool\nshader_shared_float_32_atomics::Bool\nshader_shared_float_32_atomic_add::Bool\nshader_shared_float_64_atomics::Bool\nshader_shared_float_64_atomic_add::Bool\nshader_image_float_32_atomics::Bool\nshader_image_float_32_atomic_add::Bool\nsparse_image_float_32_atomics::Bool\nsparse_image_float_32_atomic_add::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShaderAtomicInt64Features","page":"API","title":"Vulkan._PhysicalDeviceShaderAtomicInt64Features","text":"_PhysicalDeviceShaderAtomicInt64Features(shader_buffer_int_64_atomics::Bool, shader_shared_int_64_atomics::Bool; next = C_NULL)\n\nArguments:\n\nshader_buffer_int_64_atomics::Bool\nshader_shared_int_64_atomics::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShaderClockFeaturesKHR","page":"API","title":"Vulkan._PhysicalDeviceShaderClockFeaturesKHR","text":"_PhysicalDeviceShaderClockFeaturesKHR(shader_subgroup_clock::Bool, shader_device_clock::Bool; next = C_NULL)\n\nArguments:\n\nshader_subgroup_clock::Bool\nshader_device_clock::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT","text":"_PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT(shader_demote_to_helper_invocation::Bool; next = C_NULL)\n\nArguments:\n\nshader_demote_to_helper_invocation::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShaderDrawParametersFeatures","page":"API","title":"Vulkan._PhysicalDeviceShaderDrawParametersFeatures","text":"_PhysicalDeviceShaderDrawParametersFeatures(shader_draw_parameters::Bool; next = C_NULL)\n\nArguments:\n\nshader_draw_parameters::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShaderFloat16Int8Features","page":"API","title":"Vulkan._PhysicalDeviceShaderFloat16Int8Features","text":"_PhysicalDeviceShaderFloat16Int8Features(shader_float_16::Bool, shader_int_8::Bool; next = C_NULL)\n\nArguments:\n\nshader_float_16::Bool\nshader_int_8::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShaderImageAtomicInt64FeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceShaderImageAtomicInt64FeaturesEXT","text":"_PhysicalDeviceShaderImageAtomicInt64FeaturesEXT(shader_image_int_64_atomics::Bool, sparse_image_int_64_atomics::Bool; next = C_NULL)\n\nArguments:\n\nshader_image_int_64_atomics::Bool\nsparse_image_int_64_atomics::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShaderImageFootprintFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceShaderImageFootprintFeaturesNV","text":"_PhysicalDeviceShaderImageFootprintFeaturesNV(image_footprint::Bool; next = C_NULL)\n\nArguments:\n\nimage_footprint::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL","page":"API","title":"Vulkan._PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL","text":"_PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL(shader_integer_functions_2::Bool; next = C_NULL)\n\nArguments:\n\nshader_integer_functions_2::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShaderSMBuiltinsFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceShaderSMBuiltinsFeaturesNV","text":"_PhysicalDeviceShaderSMBuiltinsFeaturesNV(shader_sm_builtins::Bool; next = C_NULL)\n\nArguments:\n\nshader_sm_builtins::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShaderSubgroupExtendedTypesFeatures","page":"API","title":"Vulkan._PhysicalDeviceShaderSubgroupExtendedTypesFeatures","text":"_PhysicalDeviceShaderSubgroupExtendedTypesFeatures(shader_subgroup_extended_types::Bool; next = C_NULL)\n\nArguments:\n\nshader_subgroup_extended_types::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShaderTerminateInvocationFeaturesKHR","page":"API","title":"Vulkan._PhysicalDeviceShaderTerminateInvocationFeaturesKHR","text":"_PhysicalDeviceShaderTerminateInvocationFeaturesKHR(shader_terminate_invocation::Bool; next = C_NULL)\n\nArguments:\n\nshader_terminate_invocation::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceShadingRateImageFeaturesNV","page":"API","title":"Vulkan._PhysicalDeviceShadingRateImageFeaturesNV","text":"_PhysicalDeviceShadingRateImageFeaturesNV(shading_rate_image::Bool, shading_rate_coarse_sample_order::Bool; next = C_NULL)\n\nArguments:\n\nshading_rate_image::Bool\nshading_rate_coarse_sample_order::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceSparseImageFormatInfo2","page":"API","title":"Vulkan._PhysicalDeviceSparseImageFormatInfo2","text":"_PhysicalDeviceSparseImageFormatInfo2(format::Format, type::ImageType, samples::SampleCountFlag, usage::ImageUsageFlag, tiling::ImageTiling; next = C_NULL)\n\nArguments:\n\nformat::Format\ntype::ImageType\nsamples::SampleCountFlag\nusage::ImageUsageFlag\ntiling::ImageTiling\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceSubgroupSizeControlFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceSubgroupSizeControlFeaturesEXT","text":"_PhysicalDeviceSubgroupSizeControlFeaturesEXT(subgroup_size_control::Bool, compute_full_subgroups::Bool; next = C_NULL)\n\nArguments:\n\nsubgroup_size_control::Bool\ncompute_full_subgroups::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceSurfaceInfo2KHR","page":"API","title":"Vulkan._PhysicalDeviceSurfaceInfo2KHR","text":"_PhysicalDeviceSurfaceInfo2KHR(surface::SurfaceKHR; next = C_NULL)\n\nArguments:\n\nsurface::SurfaceKHR\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceSynchronization2FeaturesKHR","page":"API","title":"Vulkan._PhysicalDeviceSynchronization2FeaturesKHR","text":"_PhysicalDeviceSynchronization2FeaturesKHR(synchronization2::Bool; next = C_NULL)\n\nArguments:\n\nsynchronization2::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceTexelBufferAlignmentFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceTexelBufferAlignmentFeaturesEXT","text":"_PhysicalDeviceTexelBufferAlignmentFeaturesEXT(texel_buffer_alignment::Bool; next = C_NULL)\n\nArguments:\n\ntexel_buffer_alignment::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceTextureCompressionASTCHDRFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceTextureCompressionASTCHDRFeaturesEXT","text":"_PhysicalDeviceTextureCompressionASTCHDRFeaturesEXT(texture_compression_astc_hdr::Bool; next = C_NULL)\n\nArguments:\n\ntexture_compression_astc_hdr::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceTimelineSemaphoreFeatures","page":"API","title":"Vulkan._PhysicalDeviceTimelineSemaphoreFeatures","text":"_PhysicalDeviceTimelineSemaphoreFeatures(timeline_semaphore::Bool; next = C_NULL)\n\nArguments:\n\ntimeline_semaphore::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceTransformFeedbackFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceTransformFeedbackFeaturesEXT","text":"_PhysicalDeviceTransformFeedbackFeaturesEXT(transform_feedback::Bool, geometry_streams::Bool; next = C_NULL)\n\nArguments:\n\ntransform_feedback::Bool\ngeometry_streams::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceUniformBufferStandardLayoutFeatures","page":"API","title":"Vulkan._PhysicalDeviceUniformBufferStandardLayoutFeatures","text":"_PhysicalDeviceUniformBufferStandardLayoutFeatures(uniform_buffer_standard_layout::Bool; next = C_NULL)\n\nArguments:\n\nuniform_buffer_standard_layout::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceVariablePointersFeatures","page":"API","title":"Vulkan._PhysicalDeviceVariablePointersFeatures","text":"_PhysicalDeviceVariablePointersFeatures(variable_pointers_storage_buffer::Bool, variable_pointers::Bool; next = C_NULL)\n\nArguments:\n\nvariable_pointers_storage_buffer::Bool\nvariable_pointers::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceVertexAttributeDivisorFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceVertexAttributeDivisorFeaturesEXT","text":"_PhysicalDeviceVertexAttributeDivisorFeaturesEXT(vertex_attribute_instance_rate_divisor::Bool, vertex_attribute_instance_rate_zero_divisor::Bool; next = C_NULL)\n\nArguments:\n\nvertex_attribute_instance_rate_divisor::Bool\nvertex_attribute_instance_rate_zero_divisor::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceVertexInputDynamicStateFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceVertexInputDynamicStateFeaturesEXT","text":"_PhysicalDeviceVertexInputDynamicStateFeaturesEXT(vertex_input_dynamic_state::Bool; next = C_NULL)\n\nArguments:\n\nvertex_input_dynamic_state::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceVulkan11Features","page":"API","title":"Vulkan._PhysicalDeviceVulkan11Features","text":"_PhysicalDeviceVulkan11Features(storage_buffer_16_bit_access::Bool, uniform_and_storage_buffer_16_bit_access::Bool, storage_push_constant_16::Bool, storage_input_output_16::Bool, multiview::Bool, multiview_geometry_shader::Bool, multiview_tessellation_shader::Bool, variable_pointers_storage_buffer::Bool, variable_pointers::Bool, protected_memory::Bool, sampler_ycbcr_conversion::Bool, shader_draw_parameters::Bool; next = C_NULL)\n\nArguments:\n\nstorage_buffer_16_bit_access::Bool\nuniform_and_storage_buffer_16_bit_access::Bool\nstorage_push_constant_16::Bool\nstorage_input_output_16::Bool\nmultiview::Bool\nmultiview_geometry_shader::Bool\nmultiview_tessellation_shader::Bool\nvariable_pointers_storage_buffer::Bool\nvariable_pointers::Bool\nprotected_memory::Bool\nsampler_ycbcr_conversion::Bool\nshader_draw_parameters::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceVulkan12Features","page":"API","title":"Vulkan._PhysicalDeviceVulkan12Features","text":"_PhysicalDeviceVulkan12Features(sampler_mirror_clamp_to_edge::Bool, draw_indirect_count::Bool, storage_buffer_8_bit_access::Bool, uniform_and_storage_buffer_8_bit_access::Bool, storage_push_constant_8::Bool, shader_buffer_int_64_atomics::Bool, shader_shared_int_64_atomics::Bool, shader_float_16::Bool, shader_int_8::Bool, descriptor_indexing::Bool, shader_input_attachment_array_dynamic_indexing::Bool, shader_uniform_texel_buffer_array_dynamic_indexing::Bool, shader_storage_texel_buffer_array_dynamic_indexing::Bool, shader_uniform_buffer_array_non_uniform_indexing::Bool, shader_sampled_image_array_non_uniform_indexing::Bool, shader_storage_buffer_array_non_uniform_indexing::Bool, shader_storage_image_array_non_uniform_indexing::Bool, shader_input_attachment_array_non_uniform_indexing::Bool, shader_uniform_texel_buffer_array_non_uniform_indexing::Bool, shader_storage_texel_buffer_array_non_uniform_indexing::Bool, descriptor_binding_uniform_buffer_update_after_bind::Bool, descriptor_binding_sampled_image_update_after_bind::Bool, descriptor_binding_storage_image_update_after_bind::Bool, descriptor_binding_storage_buffer_update_after_bind::Bool, descriptor_binding_uniform_texel_buffer_update_after_bind::Bool, descriptor_binding_storage_texel_buffer_update_after_bind::Bool, descriptor_binding_update_unused_while_pending::Bool, descriptor_binding_partially_bound::Bool, descriptor_binding_variable_descriptor_count::Bool, runtime_descriptor_array::Bool, sampler_filter_minmax::Bool, scalar_block_layout::Bool, imageless_framebuffer::Bool, uniform_buffer_standard_layout::Bool, shader_subgroup_extended_types::Bool, separate_depth_stencil_layouts::Bool, host_query_reset::Bool, timeline_semaphore::Bool, buffer_device_address::Bool, buffer_device_address_capture_replay::Bool, buffer_device_address_multi_device::Bool, vulkan_memory_model::Bool, vulkan_memory_model_device_scope::Bool, vulkan_memory_model_availability_visibility_chains::Bool, shader_output_viewport_index::Bool, shader_output_layer::Bool, subgroup_broadcast_dynamic_id::Bool; next = C_NULL)\n\nArguments:\n\nsampler_mirror_clamp_to_edge::Bool\ndraw_indirect_count::Bool\nstorage_buffer_8_bit_access::Bool\nuniform_and_storage_buffer_8_bit_access::Bool\nstorage_push_constant_8::Bool\nshader_buffer_int_64_atomics::Bool\nshader_shared_int_64_atomics::Bool\nshader_float_16::Bool\nshader_int_8::Bool\ndescriptor_indexing::Bool\nshader_input_attachment_array_dynamic_indexing::Bool\nshader_uniform_texel_buffer_array_dynamic_indexing::Bool\nshader_storage_texel_buffer_array_dynamic_indexing::Bool\nshader_uniform_buffer_array_non_uniform_indexing::Bool\nshader_sampled_image_array_non_uniform_indexing::Bool\nshader_storage_buffer_array_non_uniform_indexing::Bool\nshader_storage_image_array_non_uniform_indexing::Bool\nshader_input_attachment_array_non_uniform_indexing::Bool\nshader_uniform_texel_buffer_array_non_uniform_indexing::Bool\nshader_storage_texel_buffer_array_non_uniform_indexing::Bool\ndescriptor_binding_uniform_buffer_update_after_bind::Bool\ndescriptor_binding_sampled_image_update_after_bind::Bool\ndescriptor_binding_storage_image_update_after_bind::Bool\ndescriptor_binding_storage_buffer_update_after_bind::Bool\ndescriptor_binding_uniform_texel_buffer_update_after_bind::Bool\ndescriptor_binding_storage_texel_buffer_update_after_bind::Bool\ndescriptor_binding_update_unused_while_pending::Bool\ndescriptor_binding_partially_bound::Bool\ndescriptor_binding_variable_descriptor_count::Bool\nruntime_descriptor_array::Bool\nsampler_filter_minmax::Bool\nscalar_block_layout::Bool\nimageless_framebuffer::Bool\nuniform_buffer_standard_layout::Bool\nshader_subgroup_extended_types::Bool\nseparate_depth_stencil_layouts::Bool\nhost_query_reset::Bool\ntimeline_semaphore::Bool\nbuffer_device_address::Bool\nbuffer_device_address_capture_replay::Bool\nbuffer_device_address_multi_device::Bool\nvulkan_memory_model::Bool\nvulkan_memory_model_device_scope::Bool\nvulkan_memory_model_availability_visibility_chains::Bool\nshader_output_viewport_index::Bool\nshader_output_layer::Bool\nsubgroup_broadcast_dynamic_id::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceVulkanMemoryModelFeatures","page":"API","title":"Vulkan._PhysicalDeviceVulkanMemoryModelFeatures","text":"_PhysicalDeviceVulkanMemoryModelFeatures(vulkan_memory_model::Bool, vulkan_memory_model_device_scope::Bool, vulkan_memory_model_availability_visibility_chains::Bool; next = C_NULL)\n\nArguments:\n\nvulkan_memory_model::Bool\nvulkan_memory_model_device_scope::Bool\nvulkan_memory_model_availability_visibility_chains::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR","page":"API","title":"Vulkan._PhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR","text":"_PhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR(workgroup_memory_explicit_layout::Bool, workgroup_memory_explicit_layout_scalar_block_layout::Bool, workgroup_memory_explicit_layout_8_bit_access::Bool, workgroup_memory_explicit_layout_16_bit_access::Bool; next = C_NULL)\n\nArguments:\n\nworkgroup_memory_explicit_layout::Bool\nworkgroup_memory_explicit_layout_scalar_block_layout::Bool\nworkgroup_memory_explicit_layout_8_bit_access::Bool\nworkgroup_memory_explicit_layout_16_bit_access::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT","text":"_PhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT(ycbcr_444_formats::Bool; next = C_NULL)\n\nArguments:\n\nycbcr_444_formats::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceYcbcrImageArraysFeaturesEXT","page":"API","title":"Vulkan._PhysicalDeviceYcbcrImageArraysFeaturesEXT","text":"_PhysicalDeviceYcbcrImageArraysFeaturesEXT(ycbcr_image_arrays::Bool; next = C_NULL)\n\nArguments:\n\nycbcr_image_arrays::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR","page":"API","title":"Vulkan._PhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR","text":"_PhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR(shader_zero_initialize_workgroup_memory::Bool; next = C_NULL)\n\nArguments:\n\nshader_zero_initialize_workgroup_memory::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineCacheCreateInfo","page":"API","title":"Vulkan._PipelineCacheCreateInfo","text":"_PipelineCacheCreateInfo(initial_data::Ptr{Cvoid}; next = C_NULL, flags = 0, initial_data_size = 0)\n\nArguments:\n\ninitial_data::Ptr{Cvoid}\nnext: defaults to C_NULL\nflags: defaults to 0\ninitial_data_size: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineColorBlendAdvancedStateCreateInfoEXT","page":"API","title":"Vulkan._PipelineColorBlendAdvancedStateCreateInfoEXT","text":"_PipelineColorBlendAdvancedStateCreateInfoEXT(src_premultiplied::Bool, dst_premultiplied::Bool, blend_overlap::BlendOverlapEXT; next = C_NULL)\n\nArguments:\n\nsrc_premultiplied::Bool\ndst_premultiplied::Bool\nblend_overlap::BlendOverlapEXT\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineColorBlendAttachmentState","page":"API","title":"Vulkan._PipelineColorBlendAttachmentState","text":"_PipelineColorBlendAttachmentState(blend_enable::Bool, src_color_blend_factor::BlendFactor, dst_color_blend_factor::BlendFactor, color_blend_op::BlendOp, src_alpha_blend_factor::BlendFactor, dst_alpha_blend_factor::BlendFactor, alpha_blend_op::BlendOp; color_write_mask = 0)\n\nArguments:\n\nblend_enable::Bool\nsrc_color_blend_factor::BlendFactor\ndst_color_blend_factor::BlendFactor\ncolor_blend_op::BlendOp\nsrc_alpha_blend_factor::BlendFactor\ndst_alpha_blend_factor::BlendFactor\nalpha_blend_op::BlendOp\ncolor_write_mask: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineColorBlendStateCreateInfo","page":"API","title":"Vulkan._PipelineColorBlendStateCreateInfo","text":"_PipelineColorBlendStateCreateInfo(logic_op_enable::Bool, logic_op::LogicOp, attachments::AbstractArray{<:_PipelineColorBlendAttachmentState}, blend_constants::NTuple{4, Float32}; next = C_NULL, flags = 0)\n\nArguments:\n\nlogic_op_enable::Bool\nlogic_op::LogicOp\nattachments::AbstractArray{<:_PipelineColorBlendAttachmentState}\nblend_constants::NTuple{4, Float32}\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineColorWriteCreateInfoEXT","page":"API","title":"Vulkan._PipelineColorWriteCreateInfoEXT","text":"_PipelineColorWriteCreateInfoEXT(color_write_enables::AbstractArray{<:Bool}; next = C_NULL)\n\nArguments:\n\ncolor_write_enables::AbstractArray{<:Bool}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineCompilerControlCreateInfoAMD","page":"API","title":"Vulkan._PipelineCompilerControlCreateInfoAMD","text":"_PipelineCompilerControlCreateInfoAMD(; next = C_NULL, compiler_control_flags = 0)\n\nArguments:\n\nnext: defaults to C_NULL\ncompiler_control_flags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineCoverageModulationStateCreateInfoNV","page":"API","title":"Vulkan._PipelineCoverageModulationStateCreateInfoNV","text":"_PipelineCoverageModulationStateCreateInfoNV(coverage_modulation_mode::CoverageModulationModeNV, coverage_modulation_table_enable::Bool; next = C_NULL, flags = 0, coverage_modulation_table = C_NULL)\n\nArguments:\n\ncoverage_modulation_mode::CoverageModulationModeNV\ncoverage_modulation_table_enable::Bool\nnext: defaults to C_NULL\nflags: defaults to 0\ncoverage_modulation_table: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineCoverageReductionStateCreateInfoNV","page":"API","title":"Vulkan._PipelineCoverageReductionStateCreateInfoNV","text":"_PipelineCoverageReductionStateCreateInfoNV(coverage_reduction_mode::CoverageReductionModeNV; next = C_NULL, flags = 0)\n\nArguments:\n\ncoverage_reduction_mode::CoverageReductionModeNV\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineCoverageToColorStateCreateInfoNV","page":"API","title":"Vulkan._PipelineCoverageToColorStateCreateInfoNV","text":"_PipelineCoverageToColorStateCreateInfoNV(coverage_to_color_enable::Bool; next = C_NULL, flags = 0, coverage_to_color_location = 0)\n\nArguments:\n\ncoverage_to_color_enable::Bool\nnext: defaults to C_NULL\nflags: defaults to 0\ncoverage_to_color_location: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineCreationFeedbackCreateInfoEXT","page":"API","title":"Vulkan._PipelineCreationFeedbackCreateInfoEXT","text":"_PipelineCreationFeedbackCreateInfoEXT(pipeline_creation_feedback::PipelineCreationFeedbackEXT, pipeline_stage_creation_feedbacks::AbstractArray{<:PipelineCreationFeedbackEXT}; next = C_NULL)\n\nArguments:\n\npipeline_creation_feedback::PipelineCreationFeedbackEXT\npipeline_stage_creation_feedbacks::AbstractArray{<:PipelineCreationFeedbackEXT}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineDepthStencilStateCreateInfo","page":"API","title":"Vulkan._PipelineDepthStencilStateCreateInfo","text":"_PipelineDepthStencilStateCreateInfo(depth_test_enable::Bool, depth_write_enable::Bool, depth_compare_op::CompareOp, depth_bounds_test_enable::Bool, stencil_test_enable::Bool, front::_StencilOpState, back::_StencilOpState, min_depth_bounds::Real, max_depth_bounds::Real; next = C_NULL, flags = 0)\n\nArguments:\n\ndepth_test_enable::Bool\ndepth_write_enable::Bool\ndepth_compare_op::CompareOp\ndepth_bounds_test_enable::Bool\nstencil_test_enable::Bool\nfront::_StencilOpState\nback::_StencilOpState\nmin_depth_bounds::Real\nmax_depth_bounds::Real\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineDiscardRectangleStateCreateInfoEXT","page":"API","title":"Vulkan._PipelineDiscardRectangleStateCreateInfoEXT","text":"_PipelineDiscardRectangleStateCreateInfoEXT(discard_rectangle_mode::DiscardRectangleModeEXT, discard_rectangles::AbstractArray{<:_Rect2D}; next = C_NULL, flags = 0)\n\nArguments:\n\ndiscard_rectangle_mode::DiscardRectangleModeEXT\ndiscard_rectangles::AbstractArray{<:_Rect2D}\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineDynamicStateCreateInfo","page":"API","title":"Vulkan._PipelineDynamicStateCreateInfo","text":"_PipelineDynamicStateCreateInfo(dynamic_states::AbstractArray{<:DynamicState}; next = C_NULL, flags = 0)\n\nArguments:\n\ndynamic_states::AbstractArray{<:DynamicState}\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineExecutableInfoKHR","page":"API","title":"Vulkan._PipelineExecutableInfoKHR","text":"_PipelineExecutableInfoKHR(pipeline::Pipeline, executable_index::Integer; next = C_NULL)\n\nArguments:\n\npipeline::Pipeline\nexecutable_index::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineFragmentShadingRateEnumStateCreateInfoNV","page":"API","title":"Vulkan._PipelineFragmentShadingRateEnumStateCreateInfoNV","text":"_PipelineFragmentShadingRateEnumStateCreateInfoNV(shading_rate_type::FragmentShadingRateTypeNV, shading_rate::FragmentShadingRateNV, combiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR}; next = C_NULL)\n\nArguments:\n\nshading_rate_type::FragmentShadingRateTypeNV\nshading_rate::FragmentShadingRateNV\ncombiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineFragmentShadingRateStateCreateInfoKHR","page":"API","title":"Vulkan._PipelineFragmentShadingRateStateCreateInfoKHR","text":"_PipelineFragmentShadingRateStateCreateInfoKHR(fragment_size::_Extent2D, combiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR}; next = C_NULL)\n\nArguments:\n\nfragment_size::_Extent2D\ncombiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineInfoKHR","page":"API","title":"Vulkan._PipelineInfoKHR","text":"_PipelineInfoKHR(pipeline::Pipeline; next = C_NULL)\n\nArguments:\n\npipeline::Pipeline\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineInputAssemblyStateCreateInfo","page":"API","title":"Vulkan._PipelineInputAssemblyStateCreateInfo","text":"_PipelineInputAssemblyStateCreateInfo(topology::PrimitiveTopology, primitive_restart_enable::Bool; next = C_NULL, flags = 0)\n\nArguments:\n\ntopology::PrimitiveTopology\nprimitive_restart_enable::Bool\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineLayoutCreateInfo","page":"API","title":"Vulkan._PipelineLayoutCreateInfo","text":"_PipelineLayoutCreateInfo(set_layouts::AbstractArray{<:DescriptorSetLayout}, push_constant_ranges::AbstractArray{<:_PushConstantRange}; next = C_NULL, flags = 0)\n\nArguments:\n\nset_layouts::AbstractArray{<:DescriptorSetLayout}\npush_constant_ranges::AbstractArray{<:_PushConstantRange}\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineLibraryCreateInfoKHR","page":"API","title":"Vulkan._PipelineLibraryCreateInfoKHR","text":"_PipelineLibraryCreateInfoKHR(libraries::AbstractArray{<:Pipeline}; next = C_NULL)\n\nArguments:\n\nlibraries::AbstractArray{<:Pipeline}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineMultisampleStateCreateInfo","page":"API","title":"Vulkan._PipelineMultisampleStateCreateInfo","text":"_PipelineMultisampleStateCreateInfo(rasterization_samples::SampleCountFlag, sample_shading_enable::Bool, min_sample_shading::Real, alpha_to_coverage_enable::Bool, alpha_to_one_enable::Bool; next = C_NULL, flags = 0, sample_mask = C_NULL)\n\nArguments:\n\nrasterization_samples::SampleCountFlag\nsample_shading_enable::Bool\nmin_sample_shading::Real\nalpha_to_coverage_enable::Bool\nalpha_to_one_enable::Bool\nnext: defaults to C_NULL\nflags: defaults to 0\nsample_mask: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineRasterizationConservativeStateCreateInfoEXT","page":"API","title":"Vulkan._PipelineRasterizationConservativeStateCreateInfoEXT","text":"_PipelineRasterizationConservativeStateCreateInfoEXT(conservative_rasterization_mode::ConservativeRasterizationModeEXT, extra_primitive_overestimation_size::Real; next = C_NULL, flags = 0)\n\nArguments:\n\nconservative_rasterization_mode::ConservativeRasterizationModeEXT\nextra_primitive_overestimation_size::Real\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineRasterizationDepthClipStateCreateInfoEXT","page":"API","title":"Vulkan._PipelineRasterizationDepthClipStateCreateInfoEXT","text":"_PipelineRasterizationDepthClipStateCreateInfoEXT(depth_clip_enable::Bool; next = C_NULL, flags = 0)\n\nArguments:\n\ndepth_clip_enable::Bool\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineRasterizationLineStateCreateInfoEXT","page":"API","title":"Vulkan._PipelineRasterizationLineStateCreateInfoEXT","text":"_PipelineRasterizationLineStateCreateInfoEXT(line_rasterization_mode::LineRasterizationModeEXT, stippled_line_enable::Bool, line_stipple_factor::Integer, line_stipple_pattern::Integer; next = C_NULL)\n\nArguments:\n\nline_rasterization_mode::LineRasterizationModeEXT\nstippled_line_enable::Bool\nline_stipple_factor::Integer\nline_stipple_pattern::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineRasterizationProvokingVertexStateCreateInfoEXT","page":"API","title":"Vulkan._PipelineRasterizationProvokingVertexStateCreateInfoEXT","text":"_PipelineRasterizationProvokingVertexStateCreateInfoEXT(provoking_vertex_mode::ProvokingVertexModeEXT; next = C_NULL)\n\nArguments:\n\nprovoking_vertex_mode::ProvokingVertexModeEXT\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineRasterizationStateCreateInfo","page":"API","title":"Vulkan._PipelineRasterizationStateCreateInfo","text":"_PipelineRasterizationStateCreateInfo(depth_clamp_enable::Bool, rasterizer_discard_enable::Bool, polygon_mode::PolygonMode, front_face::FrontFace, depth_bias_enable::Bool, depth_bias_constant_factor::Real, depth_bias_clamp::Real, depth_bias_slope_factor::Real, line_width::Real; next = C_NULL, flags = 0, cull_mode = 0)\n\nArguments:\n\ndepth_clamp_enable::Bool\nrasterizer_discard_enable::Bool\npolygon_mode::PolygonMode\nfront_face::FrontFace\ndepth_bias_enable::Bool\ndepth_bias_constant_factor::Real\ndepth_bias_clamp::Real\ndepth_bias_slope_factor::Real\nline_width::Real\nnext: defaults to C_NULL\nflags: defaults to 0\ncull_mode: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineRasterizationStateRasterizationOrderAMD","page":"API","title":"Vulkan._PipelineRasterizationStateRasterizationOrderAMD","text":"_PipelineRasterizationStateRasterizationOrderAMD(rasterization_order::RasterizationOrderAMD; next = C_NULL)\n\nArguments:\n\nrasterization_order::RasterizationOrderAMD\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineRasterizationStateStreamCreateInfoEXT","page":"API","title":"Vulkan._PipelineRasterizationStateStreamCreateInfoEXT","text":"_PipelineRasterizationStateStreamCreateInfoEXT(rasterization_stream::Integer; next = C_NULL, flags = 0)\n\nArguments:\n\nrasterization_stream::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineRepresentativeFragmentTestStateCreateInfoNV","page":"API","title":"Vulkan._PipelineRepresentativeFragmentTestStateCreateInfoNV","text":"_PipelineRepresentativeFragmentTestStateCreateInfoNV(representative_fragment_test_enable::Bool; next = C_NULL)\n\nArguments:\n\nrepresentative_fragment_test_enable::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineSampleLocationsStateCreateInfoEXT","page":"API","title":"Vulkan._PipelineSampleLocationsStateCreateInfoEXT","text":"_PipelineSampleLocationsStateCreateInfoEXT(sample_locations_enable::Bool, sample_locations_info::_SampleLocationsInfoEXT; next = C_NULL)\n\nArguments:\n\nsample_locations_enable::Bool\nsample_locations_info::_SampleLocationsInfoEXT\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineShaderStageCreateInfo","page":"API","title":"Vulkan._PipelineShaderStageCreateInfo","text":"_PipelineShaderStageCreateInfo(stage::ShaderStageFlag, _module::ShaderModule, name::AbstractString; next = C_NULL, flags = 0, specialization_info = C_NULL)\n\nArguments:\n\nstage::ShaderStageFlag\n_module::ShaderModule\nname::AbstractString\nnext: defaults to C_NULL\nflags: defaults to 0\nspecialization_info: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineTessellationDomainOriginStateCreateInfo","page":"API","title":"Vulkan._PipelineTessellationDomainOriginStateCreateInfo","text":"_PipelineTessellationDomainOriginStateCreateInfo(domain_origin::TessellationDomainOrigin; next = C_NULL)\n\nArguments:\n\ndomain_origin::TessellationDomainOrigin\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineTessellationStateCreateInfo","page":"API","title":"Vulkan._PipelineTessellationStateCreateInfo","text":"_PipelineTessellationStateCreateInfo(patch_control_points::Integer; next = C_NULL, flags = 0)\n\nArguments:\n\npatch_control_points::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineVertexInputDivisorStateCreateInfoEXT","page":"API","title":"Vulkan._PipelineVertexInputDivisorStateCreateInfoEXT","text":"_PipelineVertexInputDivisorStateCreateInfoEXT(vertex_binding_divisors::AbstractArray{<:_VertexInputBindingDivisorDescriptionEXT}; next = C_NULL)\n\nArguments:\n\nvertex_binding_divisors::AbstractArray{<:_VertexInputBindingDivisorDescriptionEXT}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineVertexInputStateCreateInfo","page":"API","title":"Vulkan._PipelineVertexInputStateCreateInfo","text":"_PipelineVertexInputStateCreateInfo(vertex_binding_descriptions::AbstractArray{<:_VertexInputBindingDescription}, vertex_attribute_descriptions::AbstractArray{<:_VertexInputAttributeDescription}; next = C_NULL, flags = 0)\n\nArguments:\n\nvertex_binding_descriptions::AbstractArray{<:_VertexInputBindingDescription}\nvertex_attribute_descriptions::AbstractArray{<:_VertexInputAttributeDescription}\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineViewportCoarseSampleOrderStateCreateInfoNV","page":"API","title":"Vulkan._PipelineViewportCoarseSampleOrderStateCreateInfoNV","text":"_PipelineViewportCoarseSampleOrderStateCreateInfoNV(sample_order_type::CoarseSampleOrderTypeNV, custom_sample_orders::AbstractArray{<:_CoarseSampleOrderCustomNV}; next = C_NULL)\n\nArguments:\n\nsample_order_type::CoarseSampleOrderTypeNV\ncustom_sample_orders::AbstractArray{<:_CoarseSampleOrderCustomNV}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineViewportExclusiveScissorStateCreateInfoNV","page":"API","title":"Vulkan._PipelineViewportExclusiveScissorStateCreateInfoNV","text":"_PipelineViewportExclusiveScissorStateCreateInfoNV(exclusive_scissors::AbstractArray{<:_Rect2D}; next = C_NULL)\n\nArguments:\n\nexclusive_scissors::AbstractArray{<:_Rect2D}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineViewportShadingRateImageStateCreateInfoNV","page":"API","title":"Vulkan._PipelineViewportShadingRateImageStateCreateInfoNV","text":"_PipelineViewportShadingRateImageStateCreateInfoNV(shading_rate_image_enable::Bool, shading_rate_palettes::AbstractArray{<:_ShadingRatePaletteNV}; next = C_NULL)\n\nArguments:\n\nshading_rate_image_enable::Bool\nshading_rate_palettes::AbstractArray{<:_ShadingRatePaletteNV}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineViewportStateCreateInfo","page":"API","title":"Vulkan._PipelineViewportStateCreateInfo","text":"_PipelineViewportStateCreateInfo(; next = C_NULL, flags = 0, viewports = C_NULL, scissors = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\nflags: defaults to 0\nviewports: defaults to C_NULL\nscissors: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineViewportSwizzleStateCreateInfoNV","page":"API","title":"Vulkan._PipelineViewportSwizzleStateCreateInfoNV","text":"_PipelineViewportSwizzleStateCreateInfoNV(viewport_swizzles::AbstractArray{<:_ViewportSwizzleNV}; next = C_NULL, flags = 0)\n\nArguments:\n\nviewport_swizzles::AbstractArray{<:_ViewportSwizzleNV}\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PipelineViewportWScalingStateCreateInfoNV","page":"API","title":"Vulkan._PipelineViewportWScalingStateCreateInfoNV","text":"_PipelineViewportWScalingStateCreateInfoNV(viewport_w_scaling_enable::Bool; next = C_NULL, viewport_w_scalings = C_NULL)\n\nArguments:\n\nviewport_w_scaling_enable::Bool\nnext: defaults to C_NULL\nviewport_w_scalings: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PresentFrameTokenGGP","page":"API","title":"Vulkan._PresentFrameTokenGGP","text":"_PresentFrameTokenGGP(frame_token::vk.GgpFrameToken; next = C_NULL)\n\nArguments:\n\nframe_token::vk.GgpFrameToken\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PresentInfoKHR","page":"API","title":"Vulkan._PresentInfoKHR","text":"_PresentInfoKHR(wait_semaphores::AbstractArray{<:Semaphore}, swapchains::AbstractArray{<:SwapchainKHR}, image_indices::AbstractArray{<:Integer}; next = C_NULL, results = C_NULL)\n\nArguments:\n\nwait_semaphores::AbstractArray{<:Semaphore}\nswapchains::AbstractArray{<:SwapchainKHR}\nimage_indices::AbstractArray{<:Integer}\nnext: defaults to C_NULL\nresults: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PresentRegionKHR","page":"API","title":"Vulkan._PresentRegionKHR","text":"_PresentRegionKHR(; rectangles = C_NULL)\n\nArguments:\n\nrectangles: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PresentRegionsKHR","page":"API","title":"Vulkan._PresentRegionsKHR","text":"_PresentRegionsKHR(; next = C_NULL, regions = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\nregions: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PresentTimeGOOGLE","page":"API","title":"Vulkan._PresentTimeGOOGLE","text":"_PresentTimeGOOGLE(present_id::Integer, desired_present_time::Integer)\n\nArguments:\n\npresent_id::Integer\ndesired_present_time::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PresentTimesInfoGOOGLE","page":"API","title":"Vulkan._PresentTimesInfoGOOGLE","text":"_PresentTimesInfoGOOGLE(; next = C_NULL, times = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\ntimes: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PrivateDataSlotCreateInfoEXT","page":"API","title":"Vulkan._PrivateDataSlotCreateInfoEXT","text":"_PrivateDataSlotCreateInfoEXT(flags::PrivateDataSlotCreateFlagEXT; next = C_NULL)\n\nArguments:\n\nflags::PrivateDataSlotCreateFlagEXT\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ProtectedSubmitInfo","page":"API","title":"Vulkan._ProtectedSubmitInfo","text":"_ProtectedSubmitInfo(protected_submit::Bool; next = C_NULL)\n\nArguments:\n\nprotected_submit::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._PushConstantRange","page":"API","title":"Vulkan._PushConstantRange","text":"_PushConstantRange(stage_flags::ShaderStageFlag, offset::Integer, size::Integer)\n\nArguments:\n\nstage_flags::ShaderStageFlag\noffset::Integer\nsize::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._QueryPoolCreateInfo","page":"API","title":"Vulkan._QueryPoolCreateInfo","text":"_QueryPoolCreateInfo(query_type::QueryType, query_count::Integer; next = C_NULL, flags = 0, pipeline_statistics = 0)\n\nArguments:\n\nquery_type::QueryType\nquery_count::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\npipeline_statistics: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._QueryPoolPerformanceCreateInfoKHR","page":"API","title":"Vulkan._QueryPoolPerformanceCreateInfoKHR","text":"_QueryPoolPerformanceCreateInfoKHR(queue_family_index::Integer, counter_indices::AbstractArray{<:Integer}; next = C_NULL)\n\nArguments:\n\nqueue_family_index::Integer\ncounter_indices::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._QueryPoolPerformanceQueryCreateInfoINTEL","page":"API","title":"Vulkan._QueryPoolPerformanceQueryCreateInfoINTEL","text":"_QueryPoolPerformanceQueryCreateInfoINTEL(performance_counters_sampling::QueryPoolSamplingModeINTEL; next = C_NULL)\n\nArguments:\n\nperformance_counters_sampling::QueryPoolSamplingModeINTEL\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RayTracingPipelineCreateInfoKHR","page":"API","title":"Vulkan._RayTracingPipelineCreateInfoKHR","text":"_RayTracingPipelineCreateInfoKHR(stages::AbstractArray{<:_PipelineShaderStageCreateInfo}, groups::AbstractArray{<:_RayTracingShaderGroupCreateInfoKHR}, max_pipeline_ray_recursion_depth::Integer, layout::PipelineLayout, base_pipeline_index::Integer; next = C_NULL, flags = 0, library_info = C_NULL, library_interface = C_NULL, dynamic_state = C_NULL, base_pipeline_handle = C_NULL)\n\nArguments:\n\nstages::AbstractArray{<:_PipelineShaderStageCreateInfo}\ngroups::AbstractArray{<:_RayTracingShaderGroupCreateInfoKHR}\nmax_pipeline_ray_recursion_depth::Integer\nlayout::PipelineLayout\nbase_pipeline_index::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\nlibrary_info: defaults to C_NULL\nlibrary_interface: defaults to C_NULL\ndynamic_state: defaults to C_NULL\nbase_pipeline_handle: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RayTracingPipelineCreateInfoNV","page":"API","title":"Vulkan._RayTracingPipelineCreateInfoNV","text":"_RayTracingPipelineCreateInfoNV(stages::AbstractArray{<:_PipelineShaderStageCreateInfo}, groups::AbstractArray{<:_RayTracingShaderGroupCreateInfoNV}, max_recursion_depth::Integer, layout::PipelineLayout, base_pipeline_index::Integer; next = C_NULL, flags = 0, base_pipeline_handle = C_NULL)\n\nArguments:\n\nstages::AbstractArray{<:_PipelineShaderStageCreateInfo}\ngroups::AbstractArray{<:_RayTracingShaderGroupCreateInfoNV}\nmax_recursion_depth::Integer\nlayout::PipelineLayout\nbase_pipeline_index::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\nbase_pipeline_handle: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RayTracingPipelineInterfaceCreateInfoKHR","page":"API","title":"Vulkan._RayTracingPipelineInterfaceCreateInfoKHR","text":"_RayTracingPipelineInterfaceCreateInfoKHR(max_pipeline_ray_payload_size::Integer, max_pipeline_ray_hit_attribute_size::Integer; next = C_NULL)\n\nArguments:\n\nmax_pipeline_ray_payload_size::Integer\nmax_pipeline_ray_hit_attribute_size::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RayTracingShaderGroupCreateInfoKHR","page":"API","title":"Vulkan._RayTracingShaderGroupCreateInfoKHR","text":"_RayTracingShaderGroupCreateInfoKHR(type::RayTracingShaderGroupTypeKHR, general_shader::Integer, closest_hit_shader::Integer, any_hit_shader::Integer, intersection_shader::Integer; next = C_NULL, shader_group_capture_replay_handle = C_NULL)\n\nArguments:\n\ntype::RayTracingShaderGroupTypeKHR\ngeneral_shader::Integer\nclosest_hit_shader::Integer\nany_hit_shader::Integer\nintersection_shader::Integer\nnext: defaults to C_NULL\nshader_group_capture_replay_handle: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RayTracingShaderGroupCreateInfoNV","page":"API","title":"Vulkan._RayTracingShaderGroupCreateInfoNV","text":"_RayTracingShaderGroupCreateInfoNV(type::RayTracingShaderGroupTypeKHR, general_shader::Integer, closest_hit_shader::Integer, any_hit_shader::Integer, intersection_shader::Integer; next = C_NULL)\n\nArguments:\n\ntype::RayTracingShaderGroupTypeKHR\ngeneral_shader::Integer\nclosest_hit_shader::Integer\nany_hit_shader::Integer\nintersection_shader::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._Rect2D","page":"API","title":"Vulkan._Rect2D","text":"_Rect2D(offset::_Offset2D, extent::_Extent2D)\n\nArguments:\n\noffset::_Offset2D\nextent::_Extent2D\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RectLayerKHR","page":"API","title":"Vulkan._RectLayerKHR","text":"_RectLayerKHR(offset::_Offset2D, extent::_Extent2D, layer::Integer)\n\nArguments:\n\noffset::_Offset2D\nextent::_Extent2D\nlayer::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RenderPassAttachmentBeginInfo","page":"API","title":"Vulkan._RenderPassAttachmentBeginInfo","text":"_RenderPassAttachmentBeginInfo(attachments::AbstractArray{<:ImageView}; next = C_NULL)\n\nArguments:\n\nattachments::AbstractArray{<:ImageView}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RenderPassBeginInfo","page":"API","title":"Vulkan._RenderPassBeginInfo","text":"_RenderPassBeginInfo(render_pass::RenderPass, framebuffer::Framebuffer, render_area::_Rect2D, clear_values::AbstractArray{<:VkClearValue}; next = C_NULL)\n\nArguments:\n\nrender_pass::RenderPass\nframebuffer::Framebuffer\nrender_area::_Rect2D\nclear_values::AbstractArray{<:VkClearValue}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RenderPassCreateInfo","page":"API","title":"Vulkan._RenderPassCreateInfo","text":"_RenderPassCreateInfo(attachments::AbstractArray{<:_AttachmentDescription}, subpasses::AbstractArray{<:_SubpassDescription}, dependencies::AbstractArray{<:_SubpassDependency}; next = C_NULL, flags = 0)\n\nArguments:\n\nattachments::AbstractArray{<:_AttachmentDescription}\nsubpasses::AbstractArray{<:_SubpassDescription}\ndependencies::AbstractArray{<:_SubpassDependency}\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RenderPassCreateInfo2","page":"API","title":"Vulkan._RenderPassCreateInfo2","text":"_RenderPassCreateInfo2(attachments::AbstractArray{<:_AttachmentDescription2}, subpasses::AbstractArray{<:_SubpassDescription2}, dependencies::AbstractArray{<:_SubpassDependency2}, correlated_view_masks::AbstractArray{<:Integer}; next = C_NULL, flags = 0)\n\nArguments:\n\nattachments::AbstractArray{<:_AttachmentDescription2}\nsubpasses::AbstractArray{<:_SubpassDescription2}\ndependencies::AbstractArray{<:_SubpassDependency2}\ncorrelated_view_masks::AbstractArray{<:Integer}\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RenderPassFragmentDensityMapCreateInfoEXT","page":"API","title":"Vulkan._RenderPassFragmentDensityMapCreateInfoEXT","text":"_RenderPassFragmentDensityMapCreateInfoEXT(fragment_density_map_attachment::_AttachmentReference; next = C_NULL)\n\nArguments:\n\nfragment_density_map_attachment::_AttachmentReference\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RenderPassInputAttachmentAspectCreateInfo","page":"API","title":"Vulkan._RenderPassInputAttachmentAspectCreateInfo","text":"_RenderPassInputAttachmentAspectCreateInfo(aspect_references::AbstractArray{<:_InputAttachmentAspectReference}; next = C_NULL)\n\nArguments:\n\naspect_references::AbstractArray{<:_InputAttachmentAspectReference}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RenderPassMultiviewCreateInfo","page":"API","title":"Vulkan._RenderPassMultiviewCreateInfo","text":"_RenderPassMultiviewCreateInfo(view_masks::AbstractArray{<:Integer}, view_offsets::AbstractArray{<:Integer}, correlation_masks::AbstractArray{<:Integer}; next = C_NULL)\n\nArguments:\n\nview_masks::AbstractArray{<:Integer}\nview_offsets::AbstractArray{<:Integer}\ncorrelation_masks::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RenderPassSampleLocationsBeginInfoEXT","page":"API","title":"Vulkan._RenderPassSampleLocationsBeginInfoEXT","text":"_RenderPassSampleLocationsBeginInfoEXT(attachment_initial_sample_locations::AbstractArray{<:_AttachmentSampleLocationsEXT}, post_subpass_sample_locations::AbstractArray{<:_SubpassSampleLocationsEXT}; next = C_NULL)\n\nArguments:\n\nattachment_initial_sample_locations::AbstractArray{<:_AttachmentSampleLocationsEXT}\npost_subpass_sample_locations::AbstractArray{<:_SubpassSampleLocationsEXT}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._RenderPassTransformBeginInfoQCOM","page":"API","title":"Vulkan._RenderPassTransformBeginInfoQCOM","text":"_RenderPassTransformBeginInfoQCOM(transform::SurfaceTransformFlagKHR; next = C_NULL)\n\nArguments:\n\ntransform::SurfaceTransformFlagKHR\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ResolveImageInfo2KHR","page":"API","title":"Vulkan._ResolveImageInfo2KHR","text":"_ResolveImageInfo2KHR(src_image::Image, src_image_layout::ImageLayout, dst_image::Image, dst_image_layout::ImageLayout, regions::AbstractArray{<:_ImageResolve2KHR}; next = C_NULL)\n\nArguments:\n\nsrc_image::Image\nsrc_image_layout::ImageLayout\ndst_image::Image\ndst_image_layout::ImageLayout\nregions::AbstractArray{<:_ImageResolve2KHR}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SampleLocationEXT","page":"API","title":"Vulkan._SampleLocationEXT","text":"_SampleLocationEXT(x::Real, y::Real)\n\nArguments:\n\nx::Real\ny::Real\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SampleLocationsInfoEXT","page":"API","title":"Vulkan._SampleLocationsInfoEXT","text":"_SampleLocationsInfoEXT(sample_locations_per_pixel::SampleCountFlag, sample_location_grid_size::_Extent2D, sample_locations::AbstractArray{<:_SampleLocationEXT}; next = C_NULL)\n\nArguments:\n\nsample_locations_per_pixel::SampleCountFlag\nsample_location_grid_size::_Extent2D\nsample_locations::AbstractArray{<:_SampleLocationEXT}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SamplerCreateInfo","page":"API","title":"Vulkan._SamplerCreateInfo","text":"_SamplerCreateInfo(mag_filter::Filter, min_filter::Filter, mipmap_mode::SamplerMipmapMode, address_mode_u::SamplerAddressMode, address_mode_v::SamplerAddressMode, address_mode_w::SamplerAddressMode, mip_lod_bias::Real, anisotropy_enable::Bool, max_anisotropy::Real, compare_enable::Bool, compare_op::CompareOp, min_lod::Real, max_lod::Real, border_color::BorderColor, unnormalized_coordinates::Bool; next = C_NULL, flags = 0)\n\nArguments:\n\nmag_filter::Filter\nmin_filter::Filter\nmipmap_mode::SamplerMipmapMode\naddress_mode_u::SamplerAddressMode\naddress_mode_v::SamplerAddressMode\naddress_mode_w::SamplerAddressMode\nmip_lod_bias::Real\nanisotropy_enable::Bool\nmax_anisotropy::Real\ncompare_enable::Bool\ncompare_op::CompareOp\nmin_lod::Real\nmax_lod::Real\nborder_color::BorderColor\nunnormalized_coordinates::Bool\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SamplerCustomBorderColorCreateInfoEXT","page":"API","title":"Vulkan._SamplerCustomBorderColorCreateInfoEXT","text":"_SamplerCustomBorderColorCreateInfoEXT(custom_border_color::VkClearColorValue, format::Format; next = C_NULL)\n\nArguments:\n\ncustom_border_color::VkClearColorValue\nformat::Format\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SamplerReductionModeCreateInfo","page":"API","title":"Vulkan._SamplerReductionModeCreateInfo","text":"_SamplerReductionModeCreateInfo(reduction_mode::SamplerReductionMode; next = C_NULL)\n\nArguments:\n\nreduction_mode::SamplerReductionMode\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SamplerYcbcrConversionCreateInfo","page":"API","title":"Vulkan._SamplerYcbcrConversionCreateInfo","text":"_SamplerYcbcrConversionCreateInfo(format::Format, ycbcr_model::SamplerYcbcrModelConversion, ycbcr_range::SamplerYcbcrRange, components::_ComponentMapping, x_chroma_offset::ChromaLocation, y_chroma_offset::ChromaLocation, chroma_filter::Filter, force_explicit_reconstruction::Bool; next = C_NULL)\n\nArguments:\n\nformat::Format\nycbcr_model::SamplerYcbcrModelConversion\nycbcr_range::SamplerYcbcrRange\ncomponents::_ComponentMapping\nx_chroma_offset::ChromaLocation\ny_chroma_offset::ChromaLocation\nchroma_filter::Filter\nforce_explicit_reconstruction::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SamplerYcbcrConversionInfo","page":"API","title":"Vulkan._SamplerYcbcrConversionInfo","text":"_SamplerYcbcrConversionInfo(conversion::SamplerYcbcrConversion; next = C_NULL)\n\nArguments:\n\nconversion::SamplerYcbcrConversion\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ScreenSurfaceCreateInfoQNX","page":"API","title":"Vulkan._ScreenSurfaceCreateInfoQNX","text":"_ScreenSurfaceCreateInfoQNX(context::vk._screen_context, window::vk._screen_window; next = C_NULL, flags = 0)\n\nArguments:\n\ncontext::vk._screen_context\nwindow::vk._screen_window\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SemaphoreCreateInfo","page":"API","title":"Vulkan._SemaphoreCreateInfo","text":"_SemaphoreCreateInfo(; next = C_NULL, flags = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SemaphoreGetFdInfoKHR","page":"API","title":"Vulkan._SemaphoreGetFdInfoKHR","text":"_SemaphoreGetFdInfoKHR(semaphore::Semaphore, handle_type::ExternalSemaphoreHandleTypeFlag; next = C_NULL)\n\nArguments:\n\nsemaphore::Semaphore\nhandle_type::ExternalSemaphoreHandleTypeFlag\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SemaphoreGetWin32HandleInfoKHR","page":"API","title":"Vulkan._SemaphoreGetWin32HandleInfoKHR","text":"_SemaphoreGetWin32HandleInfoKHR(semaphore::Semaphore, handle_type::ExternalSemaphoreHandleTypeFlag; next = C_NULL)\n\nArguments:\n\nsemaphore::Semaphore\nhandle_type::ExternalSemaphoreHandleTypeFlag\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SemaphoreGetZirconHandleInfoFUCHSIA","page":"API","title":"Vulkan._SemaphoreGetZirconHandleInfoFUCHSIA","text":"_SemaphoreGetZirconHandleInfoFUCHSIA(semaphore::Semaphore, handle_type::ExternalSemaphoreHandleTypeFlag; next = C_NULL)\n\nArguments:\n\nsemaphore::Semaphore\nhandle_type::ExternalSemaphoreHandleTypeFlag\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SemaphoreSignalInfo","page":"API","title":"Vulkan._SemaphoreSignalInfo","text":"_SemaphoreSignalInfo(semaphore::Semaphore, value::Integer; next = C_NULL)\n\nArguments:\n\nsemaphore::Semaphore\nvalue::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SemaphoreSubmitInfoKHR","page":"API","title":"Vulkan._SemaphoreSubmitInfoKHR","text":"_SemaphoreSubmitInfoKHR(semaphore::Semaphore, value::Integer, device_index::Integer; next = C_NULL, stage_mask = 0)\n\nArguments:\n\nsemaphore::Semaphore\nvalue::Integer\ndevice_index::Integer\nnext: defaults to C_NULL\nstage_mask: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SemaphoreTypeCreateInfo","page":"API","title":"Vulkan._SemaphoreTypeCreateInfo","text":"_SemaphoreTypeCreateInfo(semaphore_type::SemaphoreType, initial_value::Integer; next = C_NULL)\n\nArguments:\n\nsemaphore_type::SemaphoreType\ninitial_value::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SemaphoreWaitInfo","page":"API","title":"Vulkan._SemaphoreWaitInfo","text":"_SemaphoreWaitInfo(semaphores::AbstractArray{<:Semaphore}, values::AbstractArray{<:Integer}; next = C_NULL, flags = 0)\n\nArguments:\n\nsemaphores::AbstractArray{<:Semaphore}\nvalues::AbstractArray{<:Integer}\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SetStateFlagsIndirectCommandNV","page":"API","title":"Vulkan._SetStateFlagsIndirectCommandNV","text":"_SetStateFlagsIndirectCommandNV(data::Integer)\n\nArguments:\n\ndata::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ShaderModuleCreateInfo","page":"API","title":"Vulkan._ShaderModuleCreateInfo","text":"_ShaderModuleCreateInfo(code_size::Integer, code::AbstractArray{<:Integer}; next = C_NULL, flags = 0)\n\nArguments:\n\ncode_size::Integer\ncode::AbstractArray{<:Integer}\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ShaderModuleValidationCacheCreateInfoEXT","page":"API","title":"Vulkan._ShaderModuleValidationCacheCreateInfoEXT","text":"_ShaderModuleValidationCacheCreateInfoEXT(validation_cache::ValidationCacheEXT; next = C_NULL)\n\nArguments:\n\nvalidation_cache::ValidationCacheEXT\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ShadingRatePaletteNV","page":"API","title":"Vulkan._ShadingRatePaletteNV","text":"_ShadingRatePaletteNV(shading_rate_palette_entries::AbstractArray{<:ShadingRatePaletteEntryNV})\n\nArguments:\n\nshading_rate_palette_entries::AbstractArray{<:ShadingRatePaletteEntryNV}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SparseBufferMemoryBindInfo","page":"API","title":"Vulkan._SparseBufferMemoryBindInfo","text":"_SparseBufferMemoryBindInfo(buffer::Buffer, binds::AbstractArray{<:_SparseMemoryBind})\n\nArguments:\n\nbuffer::Buffer\nbinds::AbstractArray{<:_SparseMemoryBind}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SparseImageMemoryBind","page":"API","title":"Vulkan._SparseImageMemoryBind","text":"_SparseImageMemoryBind(subresource::_ImageSubresource, offset::_Offset3D, extent::_Extent3D, memory_offset::Integer; memory = C_NULL, flags = 0)\n\nArguments:\n\nsubresource::_ImageSubresource\noffset::_Offset3D\nextent::_Extent3D\nmemory_offset::Integer\nmemory: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SparseImageMemoryBindInfo","page":"API","title":"Vulkan._SparseImageMemoryBindInfo","text":"_SparseImageMemoryBindInfo(image::Image, binds::AbstractArray{<:_SparseImageMemoryBind})\n\nArguments:\n\nimage::Image\nbinds::AbstractArray{<:_SparseImageMemoryBind}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SparseImageOpaqueMemoryBindInfo","page":"API","title":"Vulkan._SparseImageOpaqueMemoryBindInfo","text":"_SparseImageOpaqueMemoryBindInfo(image::Image, binds::AbstractArray{<:_SparseMemoryBind})\n\nArguments:\n\nimage::Image\nbinds::AbstractArray{<:_SparseMemoryBind}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SparseMemoryBind","page":"API","title":"Vulkan._SparseMemoryBind","text":"_SparseMemoryBind(resource_offset::Integer, size::Integer, memory_offset::Integer; memory = C_NULL, flags = 0)\n\nArguments:\n\nresource_offset::Integer\nsize::Integer\nmemory_offset::Integer\nmemory: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SpecializationInfo","page":"API","title":"Vulkan._SpecializationInfo","text":"_SpecializationInfo(map_entries::AbstractArray{<:_SpecializationMapEntry}, data::Ptr{Cvoid}; data_size = 0)\n\nArguments:\n\nmap_entries::AbstractArray{<:_SpecializationMapEntry}\ndata::Ptr{Cvoid}\ndata_size: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SpecializationMapEntry","page":"API","title":"Vulkan._SpecializationMapEntry","text":"_SpecializationMapEntry(constant_id::Integer, offset::Integer, size::Integer)\n\nArguments:\n\nconstant_id::Integer\noffset::Integer\nsize::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._StencilOpState","page":"API","title":"Vulkan._StencilOpState","text":"_StencilOpState(fail_op::StencilOp, pass_op::StencilOp, depth_fail_op::StencilOp, compare_op::CompareOp, compare_mask::Integer, write_mask::Integer, reference::Integer)\n\nArguments:\n\nfail_op::StencilOp\npass_op::StencilOp\ndepth_fail_op::StencilOp\ncompare_op::CompareOp\ncompare_mask::Integer\nwrite_mask::Integer\nreference::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._StreamDescriptorSurfaceCreateInfoGGP","page":"API","title":"Vulkan._StreamDescriptorSurfaceCreateInfoGGP","text":"_StreamDescriptorSurfaceCreateInfoGGP(stream_descriptor::vk.GgpStreamDescriptor; next = C_NULL, flags = 0)\n\nArguments:\n\nstream_descriptor::vk.GgpStreamDescriptor\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._StridedDeviceAddressRegionKHR","page":"API","title":"Vulkan._StridedDeviceAddressRegionKHR","text":"_StridedDeviceAddressRegionKHR(stride::Integer, size::Integer; device_address = 0)\n\nArguments:\n\nstride::Integer\nsize::Integer\ndevice_address: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SubmitInfo","page":"API","title":"Vulkan._SubmitInfo","text":"_SubmitInfo(wait_semaphores::AbstractArray{<:Semaphore}, wait_dst_stage_mask::AbstractArray{<:PipelineStageFlag}, command_buffers::AbstractArray{<:CommandBuffer}, signal_semaphores::AbstractArray{<:Semaphore}; next = C_NULL)\n\nArguments:\n\nwait_semaphores::AbstractArray{<:Semaphore}\nwait_dst_stage_mask::AbstractArray{<:PipelineStageFlag}\ncommand_buffers::AbstractArray{<:CommandBuffer}\nsignal_semaphores::AbstractArray{<:Semaphore}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SubmitInfo2KHR","page":"API","title":"Vulkan._SubmitInfo2KHR","text":"_SubmitInfo2KHR(wait_semaphore_infos::AbstractArray{<:_SemaphoreSubmitInfoKHR}, command_buffer_infos::AbstractArray{<:_CommandBufferSubmitInfoKHR}, signal_semaphore_infos::AbstractArray{<:_SemaphoreSubmitInfoKHR}; next = C_NULL, flags = 0)\n\nArguments:\n\nwait_semaphore_infos::AbstractArray{<:_SemaphoreSubmitInfoKHR}\ncommand_buffer_infos::AbstractArray{<:_CommandBufferSubmitInfoKHR}\nsignal_semaphore_infos::AbstractArray{<:_SemaphoreSubmitInfoKHR}\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SubpassBeginInfo","page":"API","title":"Vulkan._SubpassBeginInfo","text":"_SubpassBeginInfo(contents::SubpassContents; next = C_NULL)\n\nArguments:\n\ncontents::SubpassContents\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SubpassDependency","page":"API","title":"Vulkan._SubpassDependency","text":"_SubpassDependency(src_subpass::Integer, dst_subpass::Integer; src_stage_mask = 0, dst_stage_mask = 0, src_access_mask = 0, dst_access_mask = 0, dependency_flags = 0)\n\nArguments:\n\nsrc_subpass::Integer\ndst_subpass::Integer\nsrc_stage_mask: defaults to 0\ndst_stage_mask: defaults to 0\nsrc_access_mask: defaults to 0\ndst_access_mask: defaults to 0\ndependency_flags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SubpassDependency2","page":"API","title":"Vulkan._SubpassDependency2","text":"_SubpassDependency2(src_subpass::Integer, dst_subpass::Integer, view_offset::Integer; next = C_NULL, src_stage_mask = 0, dst_stage_mask = 0, src_access_mask = 0, dst_access_mask = 0, dependency_flags = 0)\n\nArguments:\n\nsrc_subpass::Integer\ndst_subpass::Integer\nview_offset::Integer\nnext: defaults to C_NULL\nsrc_stage_mask: defaults to 0\ndst_stage_mask: defaults to 0\nsrc_access_mask: defaults to 0\ndst_access_mask: defaults to 0\ndependency_flags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SubpassDescription","page":"API","title":"Vulkan._SubpassDescription","text":"_SubpassDescription(pipeline_bind_point::PipelineBindPoint, input_attachments::AbstractArray{<:_AttachmentReference}, color_attachments::AbstractArray{<:_AttachmentReference}, preserve_attachments::AbstractArray{<:Integer}; flags = 0, resolve_attachments = C_NULL, depth_stencil_attachment = C_NULL)\n\nArguments:\n\npipeline_bind_point::PipelineBindPoint\ninput_attachments::AbstractArray{<:_AttachmentReference}\ncolor_attachments::AbstractArray{<:_AttachmentReference}\npreserve_attachments::AbstractArray{<:Integer}\nflags: defaults to 0\nresolve_attachments: defaults to C_NULL\ndepth_stencil_attachment: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SubpassDescription2","page":"API","title":"Vulkan._SubpassDescription2","text":"_SubpassDescription2(pipeline_bind_point::PipelineBindPoint, view_mask::Integer, input_attachments::AbstractArray{<:_AttachmentReference2}, color_attachments::AbstractArray{<:_AttachmentReference2}, preserve_attachments::AbstractArray{<:Integer}; next = C_NULL, flags = 0, resolve_attachments = C_NULL, depth_stencil_attachment = C_NULL)\n\nArguments:\n\npipeline_bind_point::PipelineBindPoint\nview_mask::Integer\ninput_attachments::AbstractArray{<:_AttachmentReference2}\ncolor_attachments::AbstractArray{<:_AttachmentReference2}\npreserve_attachments::AbstractArray{<:Integer}\nnext: defaults to C_NULL\nflags: defaults to 0\nresolve_attachments: defaults to C_NULL\ndepth_stencil_attachment: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SubpassDescriptionDepthStencilResolve","page":"API","title":"Vulkan._SubpassDescriptionDepthStencilResolve","text":"_SubpassDescriptionDepthStencilResolve(depth_resolve_mode::ResolveModeFlag, stencil_resolve_mode::ResolveModeFlag; next = C_NULL, depth_stencil_resolve_attachment = C_NULL)\n\nArguments:\n\ndepth_resolve_mode::ResolveModeFlag\nstencil_resolve_mode::ResolveModeFlag\nnext: defaults to C_NULL\ndepth_stencil_resolve_attachment: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SubpassEndInfo","page":"API","title":"Vulkan._SubpassEndInfo","text":"_SubpassEndInfo(; next = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SubpassSampleLocationsEXT","page":"API","title":"Vulkan._SubpassSampleLocationsEXT","text":"_SubpassSampleLocationsEXT(subpass_index::Integer, sample_locations_info::_SampleLocationsInfoEXT)\n\nArguments:\n\nsubpass_index::Integer\nsample_locations_info::_SampleLocationsInfoEXT\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SurfaceCapabilitiesFullScreenExclusiveEXT","page":"API","title":"Vulkan._SurfaceCapabilitiesFullScreenExclusiveEXT","text":"_SurfaceCapabilitiesFullScreenExclusiveEXT(full_screen_exclusive_supported::Bool; next = C_NULL)\n\nArguments:\n\nfull_screen_exclusive_supported::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SurfaceFullScreenExclusiveInfoEXT","page":"API","title":"Vulkan._SurfaceFullScreenExclusiveInfoEXT","text":"_SurfaceFullScreenExclusiveInfoEXT(full_screen_exclusive::FullScreenExclusiveEXT; next = C_NULL)\n\nArguments:\n\nfull_screen_exclusive::FullScreenExclusiveEXT\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SurfaceFullScreenExclusiveWin32InfoEXT","page":"API","title":"Vulkan._SurfaceFullScreenExclusiveWin32InfoEXT","text":"_SurfaceFullScreenExclusiveWin32InfoEXT(hmonitor::vk.HMONITOR; next = C_NULL)\n\nArguments:\n\nhmonitor::vk.HMONITOR\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SurfaceProtectedCapabilitiesKHR","page":"API","title":"Vulkan._SurfaceProtectedCapabilitiesKHR","text":"_SurfaceProtectedCapabilitiesKHR(supports_protected::Bool; next = C_NULL)\n\nArguments:\n\nsupports_protected::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SwapchainCounterCreateInfoEXT","page":"API","title":"Vulkan._SwapchainCounterCreateInfoEXT","text":"_SwapchainCounterCreateInfoEXT(; next = C_NULL, surface_counters = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nsurface_counters: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SwapchainCreateInfoKHR","page":"API","title":"Vulkan._SwapchainCreateInfoKHR","text":"_SwapchainCreateInfoKHR(surface::SurfaceKHR, min_image_count::Integer, image_format::Format, image_color_space::ColorSpaceKHR, image_extent::_Extent2D, image_array_layers::Integer, image_usage::ImageUsageFlag, image_sharing_mode::SharingMode, queue_family_indices::AbstractArray{<:Integer}, pre_transform::SurfaceTransformFlagKHR, composite_alpha::CompositeAlphaFlagKHR, present_mode::PresentModeKHR, clipped::Bool; next = C_NULL, flags = 0, old_swapchain = C_NULL)\n\nArguments:\n\nsurface::SurfaceKHR\nmin_image_count::Integer\nimage_format::Format\nimage_color_space::ColorSpaceKHR\nimage_extent::_Extent2D\nimage_array_layers::Integer\nimage_usage::ImageUsageFlag\nimage_sharing_mode::SharingMode\nqueue_family_indices::AbstractArray{<:Integer}\npre_transform::SurfaceTransformFlagKHR\ncomposite_alpha::CompositeAlphaFlagKHR\npresent_mode::PresentModeKHR\nclipped::Bool\nnext: defaults to C_NULL\nflags: defaults to 0\nold_swapchain: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._SwapchainDisplayNativeHdrCreateInfoAMD","page":"API","title":"Vulkan._SwapchainDisplayNativeHdrCreateInfoAMD","text":"_SwapchainDisplayNativeHdrCreateInfoAMD(local_dimming_enable::Bool; next = C_NULL)\n\nArguments:\n\nlocal_dimming_enable::Bool\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._TimelineSemaphoreSubmitInfo","page":"API","title":"Vulkan._TimelineSemaphoreSubmitInfo","text":"_TimelineSemaphoreSubmitInfo(; next = C_NULL, wait_semaphore_values = C_NULL, signal_semaphore_values = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\nwait_semaphore_values: defaults to C_NULL\nsignal_semaphore_values: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._TraceRaysIndirectCommandKHR","page":"API","title":"Vulkan._TraceRaysIndirectCommandKHR","text":"_TraceRaysIndirectCommandKHR(width::Integer, height::Integer, depth::Integer)\n\nArguments:\n\nwidth::Integer\nheight::Integer\ndepth::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._TransformMatrixKHR","page":"API","title":"Vulkan._TransformMatrixKHR","text":"_TransformMatrixKHR(matrix::NTuple{3, NTuple{4, Float32}})\n\nArguments:\n\nmatrix::NTuple{3, NTuple{4, Float32}}\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ValidationCacheCreateInfoEXT","page":"API","title":"Vulkan._ValidationCacheCreateInfoEXT","text":"_ValidationCacheCreateInfoEXT(initial_data::Ptr{Cvoid}; next = C_NULL, flags = 0, initial_data_size = 0)\n\nArguments:\n\ninitial_data::Ptr{Cvoid}\nnext: defaults to C_NULL\nflags: defaults to 0\ninitial_data_size: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ValidationFeaturesEXT","page":"API","title":"Vulkan._ValidationFeaturesEXT","text":"_ValidationFeaturesEXT(enabled_validation_features::AbstractArray{<:ValidationFeatureEnableEXT}, disabled_validation_features::AbstractArray{<:ValidationFeatureDisableEXT}; next = C_NULL)\n\nArguments:\n\nenabled_validation_features::AbstractArray{<:ValidationFeatureEnableEXT}\ndisabled_validation_features::AbstractArray{<:ValidationFeatureDisableEXT}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ValidationFlagsEXT","page":"API","title":"Vulkan._ValidationFlagsEXT","text":"_ValidationFlagsEXT(disabled_validation_checks::AbstractArray{<:ValidationCheckEXT}; next = C_NULL)\n\nArguments:\n\ndisabled_validation_checks::AbstractArray{<:ValidationCheckEXT}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VertexInputAttributeDescription","page":"API","title":"Vulkan._VertexInputAttributeDescription","text":"_VertexInputAttributeDescription(location::Integer, binding::Integer, format::Format, offset::Integer)\n\nArguments:\n\nlocation::Integer\nbinding::Integer\nformat::Format\noffset::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VertexInputAttributeDescription2EXT","page":"API","title":"Vulkan._VertexInputAttributeDescription2EXT","text":"_VertexInputAttributeDescription2EXT(location::Integer, binding::Integer, format::Format, offset::Integer; next = C_NULL)\n\nArguments:\n\nlocation::Integer\nbinding::Integer\nformat::Format\noffset::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VertexInputBindingDescription","page":"API","title":"Vulkan._VertexInputBindingDescription","text":"_VertexInputBindingDescription(binding::Integer, stride::Integer, input_rate::VertexInputRate)\n\nArguments:\n\nbinding::Integer\nstride::Integer\ninput_rate::VertexInputRate\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VertexInputBindingDescription2EXT","page":"API","title":"Vulkan._VertexInputBindingDescription2EXT","text":"_VertexInputBindingDescription2EXT(binding::Integer, stride::Integer, input_rate::VertexInputRate, divisor::Integer; next = C_NULL)\n\nArguments:\n\nbinding::Integer\nstride::Integer\ninput_rate::VertexInputRate\ndivisor::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VertexInputBindingDivisorDescriptionEXT","page":"API","title":"Vulkan._VertexInputBindingDivisorDescriptionEXT","text":"_VertexInputBindingDivisorDescriptionEXT(binding::Integer, divisor::Integer)\n\nArguments:\n\nbinding::Integer\ndivisor::Integer\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ViSurfaceCreateInfoNN","page":"API","title":"Vulkan._ViSurfaceCreateInfoNN","text":"_ViSurfaceCreateInfoNN(window::Ptr{Cvoid}; next = C_NULL, flags = 0)\n\nArguments:\n\nwindow::Ptr{Cvoid}\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoBeginCodingInfoKHR","page":"API","title":"Vulkan._VideoBeginCodingInfoKHR","text":"_VideoBeginCodingInfoKHR(codec_quality_preset::VideoCodingQualityPresetFlagKHR, video_session::VideoSessionKHR, reference_slots::AbstractArray{<:_VideoReferenceSlotKHR}; next = C_NULL, flags = 0, video_session_parameters = C_NULL)\n\nArguments:\n\ncodec_quality_preset::VideoCodingQualityPresetFlagKHR\nvideo_session::VideoSessionKHR\nreference_slots::AbstractArray{<:_VideoReferenceSlotKHR}\nnext: defaults to C_NULL\nflags: defaults to 0\nvideo_session_parameters: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoBindMemoryKHR","page":"API","title":"Vulkan._VideoBindMemoryKHR","text":"_VideoBindMemoryKHR(memory_bind_index::Integer, memory::DeviceMemory, memory_offset::Integer, memory_size::Integer; next = C_NULL)\n\nArguments:\n\nmemory_bind_index::Integer\nmemory::DeviceMemory\nmemory_offset::Integer\nmemory_size::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoCodingControlInfoKHR","page":"API","title":"Vulkan._VideoCodingControlInfoKHR","text":"_VideoCodingControlInfoKHR(; next = C_NULL, flags = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoDecodeH264DpbSlotInfoEXT","page":"API","title":"Vulkan._VideoDecodeH264DpbSlotInfoEXT","text":"_VideoDecodeH264DpbSlotInfoEXT(std_reference_info::StdVideoDecodeH264ReferenceInfo; next = C_NULL)\n\nArguments:\n\nstd_reference_info::StdVideoDecodeH264ReferenceInfo\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoDecodeH264MvcEXT","page":"API","title":"Vulkan._VideoDecodeH264MvcEXT","text":"_VideoDecodeH264MvcEXT(std_mvc::StdVideoDecodeH264Mvc; next = C_NULL)\n\nArguments:\n\nstd_mvc::StdVideoDecodeH264Mvc\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoDecodeH264PictureInfoEXT","page":"API","title":"Vulkan._VideoDecodeH264PictureInfoEXT","text":"_VideoDecodeH264PictureInfoEXT(std_picture_info::StdVideoDecodeH264PictureInfo, slices_data_offsets::AbstractArray{<:Integer}; next = C_NULL)\n\nArguments:\n\nstd_picture_info::StdVideoDecodeH264PictureInfo\nslices_data_offsets::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoDecodeH264ProfileEXT","page":"API","title":"Vulkan._VideoDecodeH264ProfileEXT","text":"_VideoDecodeH264ProfileEXT(std_profile_idc::StdVideoH264ProfileIdc, field_layout::VideoDecodeH264FieldLayoutFlagEXT; next = C_NULL)\n\nArguments:\n\nstd_profile_idc::StdVideoH264ProfileIdc\nfield_layout::VideoDecodeH264FieldLayoutFlagEXT\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoDecodeH264SessionCreateInfoEXT","page":"API","title":"Vulkan._VideoDecodeH264SessionCreateInfoEXT","text":"_VideoDecodeH264SessionCreateInfoEXT(flags::Integer, std_extension_version::ExtensionProperties; next = C_NULL)\n\nArguments:\n\nflags::Integer\nstd_extension_version::ExtensionProperties\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoDecodeH264SessionParametersAddInfoEXT","page":"API","title":"Vulkan._VideoDecodeH264SessionParametersAddInfoEXT","text":"_VideoDecodeH264SessionParametersAddInfoEXT(; next = C_NULL, sps_std = C_NULL, pps_std = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\nsps_std: defaults to C_NULL\npps_std: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoDecodeH264SessionParametersCreateInfoEXT","page":"API","title":"Vulkan._VideoDecodeH264SessionParametersCreateInfoEXT","text":"_VideoDecodeH264SessionParametersCreateInfoEXT(max_sps_std_count::Integer, max_pps_std_count::Integer; next = C_NULL, parameters_add_info = C_NULL)\n\nArguments:\n\nmax_sps_std_count::Integer\nmax_pps_std_count::Integer\nnext: defaults to C_NULL\nparameters_add_info: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoDecodeH265DpbSlotInfoEXT","page":"API","title":"Vulkan._VideoDecodeH265DpbSlotInfoEXT","text":"_VideoDecodeH265DpbSlotInfoEXT(std_reference_info::StdVideoDecodeH265ReferenceInfo; next = C_NULL)\n\nArguments:\n\nstd_reference_info::StdVideoDecodeH265ReferenceInfo\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoDecodeH265PictureInfoEXT","page":"API","title":"Vulkan._VideoDecodeH265PictureInfoEXT","text":"_VideoDecodeH265PictureInfoEXT(std_picture_info::StdVideoDecodeH265PictureInfo, slices_data_offsets::AbstractArray{<:Integer}; next = C_NULL)\n\nArguments:\n\nstd_picture_info::StdVideoDecodeH265PictureInfo\nslices_data_offsets::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoDecodeH265ProfileEXT","page":"API","title":"Vulkan._VideoDecodeH265ProfileEXT","text":"_VideoDecodeH265ProfileEXT(std_profile_idc::StdVideoH265ProfileIdc; next = C_NULL)\n\nArguments:\n\nstd_profile_idc::StdVideoH265ProfileIdc\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoDecodeH265SessionCreateInfoEXT","page":"API","title":"Vulkan._VideoDecodeH265SessionCreateInfoEXT","text":"_VideoDecodeH265SessionCreateInfoEXT(flags::Integer, std_extension_version::ExtensionProperties; next = C_NULL)\n\nArguments:\n\nflags::Integer\nstd_extension_version::ExtensionProperties\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoDecodeH265SessionParametersAddInfoEXT","page":"API","title":"Vulkan._VideoDecodeH265SessionParametersAddInfoEXT","text":"_VideoDecodeH265SessionParametersAddInfoEXT(; next = C_NULL, sps_std = C_NULL, pps_std = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\nsps_std: defaults to C_NULL\npps_std: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoDecodeH265SessionParametersCreateInfoEXT","page":"API","title":"Vulkan._VideoDecodeH265SessionParametersCreateInfoEXT","text":"_VideoDecodeH265SessionParametersCreateInfoEXT(max_sps_std_count::Integer, max_pps_std_count::Integer; next = C_NULL, parameters_add_info = C_NULL)\n\nArguments:\n\nmax_sps_std_count::Integer\nmax_pps_std_count::Integer\nnext: defaults to C_NULL\nparameters_add_info: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoDecodeInfoKHR","page":"API","title":"Vulkan._VideoDecodeInfoKHR","text":"_VideoDecodeInfoKHR(coded_offset::_Offset2D, coded_extent::_Extent2D, src_buffer::Buffer, src_buffer_offset::Integer, src_buffer_range::Integer, dst_picture_resource::_VideoPictureResourceKHR, setup_reference_slot::_VideoReferenceSlotKHR, reference_slots::AbstractArray{<:_VideoReferenceSlotKHR}; next = C_NULL, flags = 0)\n\nArguments:\n\ncoded_offset::_Offset2D\ncoded_extent::_Extent2D\nsrc_buffer::Buffer\nsrc_buffer_offset::Integer\nsrc_buffer_range::Integer\ndst_picture_resource::_VideoPictureResourceKHR\nsetup_reference_slot::_VideoReferenceSlotKHR\nreference_slots::AbstractArray{<:_VideoReferenceSlotKHR}\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoEncodeH264CapabilitiesEXT","page":"API","title":"Vulkan._VideoEncodeH264CapabilitiesEXT","text":"_VideoEncodeH264CapabilitiesEXT(flags::VideoEncodeH264CapabilitiesFlagEXT, input_mode_flags::VideoEncodeH264InputModeFlagEXT, output_mode_flags::VideoEncodeH264OutputModeFlagEXT, min_picture_size_in_mbs::_Extent2D, max_picture_size_in_mbs::_Extent2D, input_image_data_alignment::_Extent2D, max_num_l_0_reference_for_p::Integer, max_num_l_0_reference_for_b::Integer, max_num_l_1_reference::Integer, quality_level_count::Integer, std_extension_version::ExtensionProperties; next = C_NULL)\n\nArguments:\n\nflags::VideoEncodeH264CapabilitiesFlagEXT\ninput_mode_flags::VideoEncodeH264InputModeFlagEXT\noutput_mode_flags::VideoEncodeH264OutputModeFlagEXT\nmin_picture_size_in_mbs::_Extent2D\nmax_picture_size_in_mbs::_Extent2D\ninput_image_data_alignment::_Extent2D\nmax_num_l_0_reference_for_p::Integer\nmax_num_l_0_reference_for_b::Integer\nmax_num_l_1_reference::Integer\nquality_level_count::Integer\nstd_extension_version::ExtensionProperties\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoEncodeH264DpbSlotInfoEXT","page":"API","title":"Vulkan._VideoEncodeH264DpbSlotInfoEXT","text":"_VideoEncodeH264DpbSlotInfoEXT(slot_index::Integer, std_picture_info::StdVideoEncodeH264PictureInfo; next = C_NULL)\n\nArguments:\n\nslot_index::Integer\nstd_picture_info::StdVideoEncodeH264PictureInfo\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoEncodeH264EmitPictureParametersEXT","page":"API","title":"Vulkan._VideoEncodeH264EmitPictureParametersEXT","text":"_VideoEncodeH264EmitPictureParametersEXT(sps_id::Integer, emit_sps_enable::Bool, pps_id_entries::AbstractArray{<:Integer}; next = C_NULL)\n\nArguments:\n\nsps_id::Integer\nemit_sps_enable::Bool\npps_id_entries::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoEncodeH264NaluSliceEXT","page":"API","title":"Vulkan._VideoEncodeH264NaluSliceEXT","text":"_VideoEncodeH264NaluSliceEXT(slice_header_std::StdVideoEncodeH264SliceHeader, mb_count::Integer, ref_final_list_0_entries::AbstractArray{<:_VideoEncodeH264DpbSlotInfoEXT}, ref_final_list_1_entries::AbstractArray{<:_VideoEncodeH264DpbSlotInfoEXT}, preceding_nalu_bytes::Integer, min_qp::Integer, max_qp::Integer; next = C_NULL)\n\nArguments:\n\nslice_header_std::StdVideoEncodeH264SliceHeader\nmb_count::Integer\nref_final_list_0_entries::AbstractArray{<:_VideoEncodeH264DpbSlotInfoEXT}\nref_final_list_1_entries::AbstractArray{<:_VideoEncodeH264DpbSlotInfoEXT}\npreceding_nalu_bytes::Integer\nmin_qp::Integer\nmax_qp::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoEncodeH264ProfileEXT","page":"API","title":"Vulkan._VideoEncodeH264ProfileEXT","text":"_VideoEncodeH264ProfileEXT(std_profile_idc::StdVideoH264ProfileIdc; next = C_NULL)\n\nArguments:\n\nstd_profile_idc::StdVideoH264ProfileIdc\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoEncodeH264SessionCreateInfoEXT","page":"API","title":"Vulkan._VideoEncodeH264SessionCreateInfoEXT","text":"_VideoEncodeH264SessionCreateInfoEXT(flags::VideoEncodeH264CreateFlagEXT, max_picture_size_in_mbs::_Extent2D, std_extension_version::ExtensionProperties; next = C_NULL)\n\nArguments:\n\nflags::VideoEncodeH264CreateFlagEXT\nmax_picture_size_in_mbs::_Extent2D\nstd_extension_version::ExtensionProperties\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoEncodeH264SessionParametersAddInfoEXT","page":"API","title":"Vulkan._VideoEncodeH264SessionParametersAddInfoEXT","text":"_VideoEncodeH264SessionParametersAddInfoEXT(; next = C_NULL, sps_std = C_NULL, pps_std = C_NULL)\n\nArguments:\n\nnext: defaults to C_NULL\nsps_std: defaults to C_NULL\npps_std: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoEncodeH264SessionParametersCreateInfoEXT","page":"API","title":"Vulkan._VideoEncodeH264SessionParametersCreateInfoEXT","text":"_VideoEncodeH264SessionParametersCreateInfoEXT(max_sps_std_count::Integer, max_pps_std_count::Integer; next = C_NULL, parameters_add_info = C_NULL)\n\nArguments:\n\nmax_sps_std_count::Integer\nmax_pps_std_count::Integer\nnext: defaults to C_NULL\nparameters_add_info: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoEncodeH264VclFrameInfoEXT","page":"API","title":"Vulkan._VideoEncodeH264VclFrameInfoEXT","text":"_VideoEncodeH264VclFrameInfoEXT(ref_default_final_list_0_entries::AbstractArray{<:_VideoEncodeH264DpbSlotInfoEXT}, ref_default_final_list_1_entries::AbstractArray{<:_VideoEncodeH264DpbSlotInfoEXT}, nalu_slice_entries::AbstractArray{<:_VideoEncodeH264NaluSliceEXT}, current_picture_info::_VideoEncodeH264DpbSlotInfoEXT; next = C_NULL)\n\nArguments:\n\nref_default_final_list_0_entries::AbstractArray{<:_VideoEncodeH264DpbSlotInfoEXT}\nref_default_final_list_1_entries::AbstractArray{<:_VideoEncodeH264DpbSlotInfoEXT}\nnalu_slice_entries::AbstractArray{<:_VideoEncodeH264NaluSliceEXT}\ncurrent_picture_info::_VideoEncodeH264DpbSlotInfoEXT\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoEncodeInfoKHR","page":"API","title":"Vulkan._VideoEncodeInfoKHR","text":"_VideoEncodeInfoKHR(quality_level::Integer, coded_extent::_Extent2D, dst_bitstream_buffer::Buffer, dst_bitstream_buffer_offset::Integer, dst_bitstream_buffer_max_range::Integer, src_picture_resource::_VideoPictureResourceKHR, setup_reference_slot::_VideoReferenceSlotKHR, reference_slots::AbstractArray{<:_VideoReferenceSlotKHR}; next = C_NULL, flags = 0)\n\nArguments:\n\nquality_level::Integer\ncoded_extent::_Extent2D\ndst_bitstream_buffer::Buffer\ndst_bitstream_buffer_offset::Integer\ndst_bitstream_buffer_max_range::Integer\nsrc_picture_resource::_VideoPictureResourceKHR\nsetup_reference_slot::_VideoReferenceSlotKHR\nreference_slots::AbstractArray{<:_VideoReferenceSlotKHR}\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoEncodeRateControlInfoKHR","page":"API","title":"Vulkan._VideoEncodeRateControlInfoKHR","text":"_VideoEncodeRateControlInfoKHR(flags::VideoEncodeRateControlFlagKHR, rate_control_mode::VideoEncodeRateControlModeFlagKHR, average_bitrate::Integer, peak_to_average_bitrate_ratio::Integer, frame_rate_numerator::Integer, frame_rate_denominator::Integer, virtual_buffer_size_in_ms::Integer; next = C_NULL)\n\nArguments:\n\nflags::VideoEncodeRateControlFlagKHR\nrate_control_mode::VideoEncodeRateControlModeFlagKHR\naverage_bitrate::Integer\npeak_to_average_bitrate_ratio::Integer\nframe_rate_numerator::Integer\nframe_rate_denominator::Integer\nvirtual_buffer_size_in_ms::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoEndCodingInfoKHR","page":"API","title":"Vulkan._VideoEndCodingInfoKHR","text":"_VideoEndCodingInfoKHR(; next = C_NULL, flags = 0)\n\nArguments:\n\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoGetMemoryPropertiesKHR","page":"API","title":"Vulkan._VideoGetMemoryPropertiesKHR","text":"_VideoGetMemoryPropertiesKHR(memory_bind_index::Integer, memory_requirements::MemoryRequirements2; next = C_NULL)\n\nArguments:\n\nmemory_bind_index::Integer\nmemory_requirements::MemoryRequirements2\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoPictureResourceKHR","page":"API","title":"Vulkan._VideoPictureResourceKHR","text":"_VideoPictureResourceKHR(coded_offset::_Offset2D, coded_extent::_Extent2D, base_array_layer::Integer, image_view_binding::ImageView; next = C_NULL)\n\nArguments:\n\ncoded_offset::_Offset2D\ncoded_extent::_Extent2D\nbase_array_layer::Integer\nimage_view_binding::ImageView\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoProfileKHR","page":"API","title":"Vulkan._VideoProfileKHR","text":"_VideoProfileKHR(video_codec_operation::VideoCodecOperationFlagKHR, chroma_subsampling::VideoChromaSubsamplingFlagKHR, luma_bit_depth::VideoComponentBitDepthFlagKHR, chroma_bit_depth::VideoComponentBitDepthFlagKHR; next = C_NULL)\n\nArguments:\n\nvideo_codec_operation::VideoCodecOperationFlagKHR\nchroma_subsampling::VideoChromaSubsamplingFlagKHR\nluma_bit_depth::VideoComponentBitDepthFlagKHR\nchroma_bit_depth::VideoComponentBitDepthFlagKHR\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoProfilesKHR","page":"API","title":"Vulkan._VideoProfilesKHR","text":"_VideoProfilesKHR(profile_count::Integer, profiles::_VideoProfileKHR; next = C_NULL)\n\nArguments:\n\nprofile_count::Integer\nprofiles::_VideoProfileKHR\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoQueueFamilyProperties2KHR","page":"API","title":"Vulkan._VideoQueueFamilyProperties2KHR","text":"_VideoQueueFamilyProperties2KHR(video_codec_operations::VideoCodecOperationFlagKHR; next = C_NULL)\n\nArguments:\n\nvideo_codec_operations::VideoCodecOperationFlagKHR\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoReferenceSlotKHR","page":"API","title":"Vulkan._VideoReferenceSlotKHR","text":"_VideoReferenceSlotKHR(slot_index::Integer, picture_resource::_VideoPictureResourceKHR; next = C_NULL)\n\nArguments:\n\nslot_index::Integer\npicture_resource::_VideoPictureResourceKHR\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoSessionCreateInfoKHR","page":"API","title":"Vulkan._VideoSessionCreateInfoKHR","text":"_VideoSessionCreateInfoKHR(queue_family_index::Integer, video_profile::_VideoProfileKHR, picture_format::Format, max_coded_extent::_Extent2D, reference_pictures_format::Format, max_reference_pictures_slots_count::Integer, max_reference_pictures_active_count::Integer; next = C_NULL, flags = 0)\n\nArguments:\n\nqueue_family_index::Integer\nvideo_profile::_VideoProfileKHR\npicture_format::Format\nmax_coded_extent::_Extent2D\nreference_pictures_format::Format\nmax_reference_pictures_slots_count::Integer\nmax_reference_pictures_active_count::Integer\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoSessionParametersCreateInfoKHR","page":"API","title":"Vulkan._VideoSessionParametersCreateInfoKHR","text":"_VideoSessionParametersCreateInfoKHR(video_session_parameters_template::VideoSessionParametersKHR, video_session::VideoSessionKHR; next = C_NULL)\n\nArguments:\n\nvideo_session_parameters_template::VideoSessionParametersKHR\nvideo_session::VideoSessionKHR\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._VideoSessionParametersUpdateInfoKHR","page":"API","title":"Vulkan._VideoSessionParametersUpdateInfoKHR","text":"_VideoSessionParametersUpdateInfoKHR(update_sequence_count::Integer; next = C_NULL)\n\nArguments:\n\nupdate_sequence_count::Integer\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._Viewport","page":"API","title":"Vulkan._Viewport","text":"_Viewport(x::Real, y::Real, width::Real, height::Real, min_depth::Real, max_depth::Real)\n\nArguments:\n\nx::Real\ny::Real\nwidth::Real\nheight::Real\nmin_depth::Real\nmax_depth::Real\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ViewportSwizzleNV","page":"API","title":"Vulkan._ViewportSwizzleNV","text":"_ViewportSwizzleNV(x::ViewportCoordinateSwizzleNV, y::ViewportCoordinateSwizzleNV, z::ViewportCoordinateSwizzleNV, w::ViewportCoordinateSwizzleNV)\n\nArguments:\n\nx::ViewportCoordinateSwizzleNV\ny::ViewportCoordinateSwizzleNV\nz::ViewportCoordinateSwizzleNV\nw::ViewportCoordinateSwizzleNV\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._ViewportWScalingNV","page":"API","title":"Vulkan._ViewportWScalingNV","text":"_ViewportWScalingNV(xcoeff::Real, ycoeff::Real)\n\nArguments:\n\nxcoeff::Real\nycoeff::Real\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._WaylandSurfaceCreateInfoKHR","page":"API","title":"Vulkan._WaylandSurfaceCreateInfoKHR","text":"_WaylandSurfaceCreateInfoKHR(display::vk.wl_display, surface::vk.wl_surface; next = C_NULL, flags = 0)\n\nArguments:\n\ndisplay::vk.wl_display\nsurface::vk.wl_surface\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._Win32KeyedMutexAcquireReleaseInfoKHR","page":"API","title":"Vulkan._Win32KeyedMutexAcquireReleaseInfoKHR","text":"_Win32KeyedMutexAcquireReleaseInfoKHR(acquire_syncs::AbstractArray{<:DeviceMemory}, acquire_keys::AbstractArray{<:Integer}, acquire_timeouts::AbstractArray{<:Integer}, release_syncs::AbstractArray{<:DeviceMemory}, release_keys::AbstractArray{<:Integer}; next = C_NULL)\n\nArguments:\n\nacquire_syncs::AbstractArray{<:DeviceMemory}\nacquire_keys::AbstractArray{<:Integer}\nacquire_timeouts::AbstractArray{<:Integer}\nrelease_syncs::AbstractArray{<:DeviceMemory}\nrelease_keys::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._Win32KeyedMutexAcquireReleaseInfoNV","page":"API","title":"Vulkan._Win32KeyedMutexAcquireReleaseInfoNV","text":"_Win32KeyedMutexAcquireReleaseInfoNV(acquire_syncs::AbstractArray{<:DeviceMemory}, acquire_keys::AbstractArray{<:Integer}, acquire_timeout_milliseconds::AbstractArray{<:Integer}, release_syncs::AbstractArray{<:DeviceMemory}, release_keys::AbstractArray{<:Integer}; next = C_NULL)\n\nArguments:\n\nacquire_syncs::AbstractArray{<:DeviceMemory}\nacquire_keys::AbstractArray{<:Integer}\nacquire_timeout_milliseconds::AbstractArray{<:Integer}\nrelease_syncs::AbstractArray{<:DeviceMemory}\nrelease_keys::AbstractArray{<:Integer}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._Win32SurfaceCreateInfoKHR","page":"API","title":"Vulkan._Win32SurfaceCreateInfoKHR","text":"_Win32SurfaceCreateInfoKHR(hinstance::vk.HINSTANCE, hwnd::vk.HWND; next = C_NULL, flags = 0)\n\nArguments:\n\nhinstance::vk.HINSTANCE\nhwnd::vk.HWND\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._WriteDescriptorSet","page":"API","title":"Vulkan._WriteDescriptorSet","text":"_WriteDescriptorSet(dst_set::DescriptorSet, dst_binding::Integer, dst_array_element::Integer, descriptor_type::DescriptorType, image_info::AbstractArray{<:_DescriptorImageInfo}, buffer_info::AbstractArray{<:_DescriptorBufferInfo}, texel_buffer_view::AbstractArray{<:BufferView}; next = C_NULL, descriptor_count = max(pointer_length(image_info), pointer_length(buffer_info), pointer_length(texel_buffer_view)))\n\nArguments:\n\ndst_set::DescriptorSet\ndst_binding::Integer\ndst_array_element::Integer\ndescriptor_type::DescriptorType\nimage_info::AbstractArray{<:_DescriptorImageInfo}\nbuffer_info::AbstractArray{<:_DescriptorBufferInfo}\ntexel_buffer_view::AbstractArray{<:BufferView}\nnext: defaults to C_NULL\ndescriptor_count: defaults to max(pointer_length(image_info), pointer_length(buffer_info), pointer_length(texel_buffer_view))\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._WriteDescriptorSetAccelerationStructureKHR","page":"API","title":"Vulkan._WriteDescriptorSetAccelerationStructureKHR","text":"_WriteDescriptorSetAccelerationStructureKHR(acceleration_structures::AbstractArray{<:AccelerationStructureKHR}; next = C_NULL)\n\nArguments:\n\nacceleration_structures::AbstractArray{<:AccelerationStructureKHR}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._WriteDescriptorSetAccelerationStructureNV","page":"API","title":"Vulkan._WriteDescriptorSetAccelerationStructureNV","text":"_WriteDescriptorSetAccelerationStructureNV(acceleration_structures::AbstractArray{<:AccelerationStructureNV}; next = C_NULL)\n\nArguments:\n\nacceleration_structures::AbstractArray{<:AccelerationStructureNV}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._WriteDescriptorSetInlineUniformBlockEXT","page":"API","title":"Vulkan._WriteDescriptorSetInlineUniformBlockEXT","text":"_WriteDescriptorSetInlineUniformBlockEXT(data_size::Integer, data::Ptr{Cvoid}; next = C_NULL)\n\nArguments:\n\ndata_size::Integer\ndata::Ptr{Cvoid}\nnext: defaults to C_NULL\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._XYColorEXT","page":"API","title":"Vulkan._XYColorEXT","text":"_XYColorEXT(x::Real, y::Real)\n\nArguments:\n\nx::Real\ny::Real\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._XcbSurfaceCreateInfoKHR","page":"API","title":"Vulkan._XcbSurfaceCreateInfoKHR","text":"_XcbSurfaceCreateInfoKHR(connection::vk.xcb_connection_t, window::vk.xcb_window_t; next = C_NULL, flags = 0)\n\nArguments:\n\nconnection::vk.xcb_connection_t\nwindow::vk.xcb_window_t\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan._XlibSurfaceCreateInfoKHR","page":"API","title":"Vulkan._XlibSurfaceCreateInfoKHR","text":"_XlibSurfaceCreateInfoKHR(dpy::vk.Display, window::vk.Window; next = C_NULL, flags = 0)\n\nArguments:\n\ndpy::vk.Display\nwindow::vk.Window\nnext: defaults to C_NULL\nflags: defaults to 0\n\n\n\n\n\n","category":"type"},{"location":"api/#Vulkan.acquire_full_screen_exclusive_mode_ext","page":"API","title":"Vulkan.acquire_full_screen_exclusive_mode_ext","text":"acquire_full_screen_exclusive_mode_ext(device::Device, swapchain::SwapchainKHR)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\ndevice::Device\nswapchain::SwapchainKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.acquire_next_image_2_khr","page":"API","title":"Vulkan.acquire_next_image_2_khr","text":"acquire_next_image_2_khr(device::Device, acquire_info::_AcquireNextImageInfoKHR)::ResultTypes.Result{Tuple{UInt32, Result}, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nTIMEOUT\nNOT_READY\nSUBOPTIMAL_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\nERROR_SURFACE_LOST_KHR\nERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT\n\nArguments:\n\ndevice::Device\nacquire_info::_AcquireNextImageInfoKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.acquire_next_image_khr","page":"API","title":"Vulkan.acquire_next_image_khr","text":"acquire_next_image_khr(device::Device, swapchain::SwapchainKHR, timeout::Integer; semaphore = C_NULL, fence = C_NULL)::ResultTypes.Result{Tuple{UInt32, Result}, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nTIMEOUT\nNOT_READY\nSUBOPTIMAL_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\nERROR_SURFACE_LOST_KHR\nERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT\n\nArguments:\n\ndevice::Device\nswapchain::SwapchainKHR (externsync)\ntimeout::Integer\nsemaphore: defaults to C_NULL (externsync)\nfence: defaults to C_NULL (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.acquire_performance_configuration_intel","page":"API","title":"Vulkan.acquire_performance_configuration_intel","text":"acquire_performance_configuration_intel(device::Device, acquire_info::_PerformanceConfigurationAcquireInfoINTEL)::ResultTypes.Result{PerformanceConfigurationINTEL, VulkanError}\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice::Device\nacquire_info::_PerformanceConfigurationAcquireInfoINTEL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.acquire_profiling_lock_khr","page":"API","title":"Vulkan.acquire_profiling_lock_khr","text":"acquire_profiling_lock_khr(device::Device, info::_AcquireProfilingLockInfoKHR)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nTIMEOUT\n\nArguments:\n\ndevice::Device\ninfo::_AcquireProfilingLockInfoKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.acquire_winrt_display_nv","page":"API","title":"Vulkan.acquire_winrt_display_nv","text":"acquire_winrt_display_nv(physical_device::PhysicalDevice, display::DisplayKHR)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_DEVICE_LOST\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\nphysical_device::PhysicalDevice\ndisplay::DisplayKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.acquire_xlib_display_ext","page":"API","title":"Vulkan.acquire_xlib_display_ext","text":"acquire_xlib_display_ext(physical_device::PhysicalDevice, dpy::vk.Display, display::DisplayKHR)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\nphysical_device::PhysicalDevice\ndpy::vk.Display\ndisplay::DisplayKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.allocate_command_buffers","page":"API","title":"Vulkan.allocate_command_buffers","text":"allocate_command_buffers(device::Device, allocate_info::_CommandBufferAllocateInfo)::ResultTypes.Result{Vector{CommandBuffer}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\nallocate_info::_CommandBufferAllocateInfo (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.allocate_descriptor_sets","page":"API","title":"Vulkan.allocate_descriptor_sets","text":"allocate_descriptor_sets(device::Device, allocate_info::_DescriptorSetAllocateInfo)::ResultTypes.Result{Vector{DescriptorSet}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_FRAGMENTED_POOL\nERROR_OUT_OF_POOL_MEMORY\n\nArguments:\n\ndevice::Device\nallocate_info::_DescriptorSetAllocateInfo (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.allocate_memory","page":"API","title":"Vulkan.allocate_memory","text":"allocate_memory(device::Device, allocate_info::_MemoryAllocateInfo; allocator = C_NULL)::ResultTypes.Result{DeviceMemory, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR\n\nArguments:\n\ndevice::Device\nallocate_info::_MemoryAllocateInfo\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.begin_command_buffer","page":"API","title":"Vulkan.begin_command_buffer","text":"begin_command_buffer(command_buffer::CommandBuffer, begin_info::_CommandBufferBeginInfo)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nbegin_info::_CommandBufferBeginInfo\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.bind_acceleration_structure_memory_nv","page":"API","title":"Vulkan.bind_acceleration_structure_memory_nv","text":"bind_acceleration_structure_memory_nv(device::Device, bind_infos::AbstractArray{<:_BindAccelerationStructureMemoryInfoNV})::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\nbind_infos::AbstractArray{<:_BindAccelerationStructureMemoryInfoNV}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.bind_buffer_memory","page":"API","title":"Vulkan.bind_buffer_memory","text":"bind_buffer_memory(device::Device, buffer::Buffer, memory::DeviceMemory, memory_offset::Integer)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR\n\nArguments:\n\ndevice::Device\nbuffer::Buffer (externsync)\nmemory::DeviceMemory\nmemory_offset::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.bind_buffer_memory_2","page":"API","title":"Vulkan.bind_buffer_memory_2","text":"bind_buffer_memory_2(device::Device, bind_infos::AbstractArray{<:_BindBufferMemoryInfo})::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR\n\nArguments:\n\ndevice::Device\nbind_infos::AbstractArray{<:_BindBufferMemoryInfo}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.bind_image_memory","page":"API","title":"Vulkan.bind_image_memory","text":"bind_image_memory(device::Device, image::Image, memory::DeviceMemory, memory_offset::Integer)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\nimage::Image (externsync)\nmemory::DeviceMemory\nmemory_offset::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.bind_image_memory_2","page":"API","title":"Vulkan.bind_image_memory_2","text":"bind_image_memory_2(device::Device, bind_infos::AbstractArray{<:_BindImageMemoryInfo})::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\nbind_infos::AbstractArray{<:_BindImageMemoryInfo}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.bind_video_session_memory_khr","page":"API","title":"Vulkan.bind_video_session_memory_khr","text":"bind_video_session_memory_khr(device::Device, video_session::VideoSessionKHR, video_session_bind_memories::AbstractArray{<:_VideoBindMemoryKHR})::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\ndevice::Device\nvideo_session::VideoSessionKHR\nvideo_session_bind_memories::AbstractArray{<:_VideoBindMemoryKHR}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.build_acceleration_structures_khr","page":"API","title":"Vulkan.build_acceleration_structures_khr","text":"build_acceleration_structures_khr(device::Device, infos::AbstractArray{<:_AccelerationStructureBuildGeometryInfoKHR}, build_range_infos::AbstractArray{<:_AccelerationStructureBuildRangeInfoKHR}; deferred_operation = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nOPERATION_DEFERRED_KHR\nOPERATION_NOT_DEFERRED_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ninfos::AbstractArray{<:_AccelerationStructureBuildGeometryInfoKHR}\nbuild_range_infos::AbstractArray{<:_AccelerationStructureBuildRangeInfoKHR}\ndeferred_operation: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_begin_conditional_rendering_ext","page":"API","title":"Vulkan.cmd_begin_conditional_rendering_ext","text":"cmd_begin_conditional_rendering_ext(command_buffer::CommandBuffer, conditional_rendering_begin::_ConditionalRenderingBeginInfoEXT)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nconditional_rendering_begin::_ConditionalRenderingBeginInfoEXT\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_begin_debug_utils_label_ext","page":"API","title":"Vulkan.cmd_begin_debug_utils_label_ext","text":"cmd_begin_debug_utils_label_ext(command_buffer::CommandBuffer, label_info::_DebugUtilsLabelEXT)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nlabel_info::_DebugUtilsLabelEXT\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_begin_query","page":"API","title":"Vulkan.cmd_begin_query","text":"cmd_begin_query(command_buffer::CommandBuffer, query_pool::QueryPool, query::Integer; flags = 0)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nquery_pool::QueryPool\nquery::Integer\nflags: defaults to 0\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_begin_query_indexed_ext","page":"API","title":"Vulkan.cmd_begin_query_indexed_ext","text":"cmd_begin_query_indexed_ext(command_buffer::CommandBuffer, query_pool::QueryPool, query::Integer, index::Integer; flags = 0)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nquery_pool::QueryPool\nquery::Integer\nindex::Integer\nflags: defaults to 0\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_begin_render_pass","page":"API","title":"Vulkan.cmd_begin_render_pass","text":"cmd_begin_render_pass(command_buffer::CommandBuffer, render_pass_begin::_RenderPassBeginInfo, contents::SubpassContents)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nrender_pass_begin::_RenderPassBeginInfo\ncontents::SubpassContents\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_begin_render_pass_2","page":"API","title":"Vulkan.cmd_begin_render_pass_2","text":"cmd_begin_render_pass_2(command_buffer::CommandBuffer, render_pass_begin::_RenderPassBeginInfo, subpass_begin_info::_SubpassBeginInfo)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nrender_pass_begin::_RenderPassBeginInfo\nsubpass_begin_info::_SubpassBeginInfo\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_begin_transform_feedback_ext","page":"API","title":"Vulkan.cmd_begin_transform_feedback_ext","text":"cmd_begin_transform_feedback_ext(command_buffer::CommandBuffer, counter_buffers::AbstractArray{<:Buffer}; counter_buffer_offsets = C_NULL)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ncounter_buffers::AbstractArray{<:Buffer}\ncounter_buffer_offsets: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_begin_video_coding_khr","page":"API","title":"Vulkan.cmd_begin_video_coding_khr","text":"cmd_begin_video_coding_khr(command_buffer::CommandBuffer, begin_info::_VideoBeginCodingInfoKHR)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer\nbegin_info::_VideoBeginCodingInfoKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_bind_descriptor_sets","page":"API","title":"Vulkan.cmd_bind_descriptor_sets","text":"cmd_bind_descriptor_sets(command_buffer::CommandBuffer, pipeline_bind_point::PipelineBindPoint, layout::PipelineLayout, first_set::Integer, descriptor_sets::AbstractArray{<:DescriptorSet}, dynamic_offsets::AbstractArray{<:Integer})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\npipeline_bind_point::PipelineBindPoint\nlayout::PipelineLayout\nfirst_set::Integer\ndescriptor_sets::AbstractArray{<:DescriptorSet}\ndynamic_offsets::AbstractArray{<:Integer}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_bind_index_buffer","page":"API","title":"Vulkan.cmd_bind_index_buffer","text":"cmd_bind_index_buffer(command_buffer::CommandBuffer, buffer::Buffer, offset::Integer, index_type::IndexType)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nbuffer::Buffer\noffset::Integer\nindex_type::IndexType\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_bind_pipeline","page":"API","title":"Vulkan.cmd_bind_pipeline","text":"cmd_bind_pipeline(command_buffer::CommandBuffer, pipeline_bind_point::PipelineBindPoint, pipeline::Pipeline)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\npipeline_bind_point::PipelineBindPoint\npipeline::Pipeline\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_bind_pipeline_shader_group_nv","page":"API","title":"Vulkan.cmd_bind_pipeline_shader_group_nv","text":"cmd_bind_pipeline_shader_group_nv(command_buffer::CommandBuffer, pipeline_bind_point::PipelineBindPoint, pipeline::Pipeline, group_index::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\npipeline_bind_point::PipelineBindPoint\npipeline::Pipeline\ngroup_index::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_bind_shading_rate_image_nv","page":"API","title":"Vulkan.cmd_bind_shading_rate_image_nv","text":"cmd_bind_shading_rate_image_nv(command_buffer::CommandBuffer, image_layout::ImageLayout; image_view = C_NULL)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nimage_layout::ImageLayout\nimage_view: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_bind_transform_feedback_buffers_ext","page":"API","title":"Vulkan.cmd_bind_transform_feedback_buffers_ext","text":"cmd_bind_transform_feedback_buffers_ext(command_buffer::CommandBuffer, buffers::AbstractArray{<:Buffer}, offsets::AbstractArray{<:Integer}; sizes = C_NULL)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nbuffers::AbstractArray{<:Buffer}\noffsets::AbstractArray{<:Integer}\nsizes: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_bind_vertex_buffers","page":"API","title":"Vulkan.cmd_bind_vertex_buffers","text":"cmd_bind_vertex_buffers(command_buffer::CommandBuffer, buffers::AbstractArray{<:Buffer}, offsets::AbstractArray{<:Integer})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nbuffers::AbstractArray{<:Buffer}\noffsets::AbstractArray{<:Integer}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_bind_vertex_buffers_2_ext","page":"API","title":"Vulkan.cmd_bind_vertex_buffers_2_ext","text":"cmd_bind_vertex_buffers_2_ext(command_buffer::CommandBuffer, buffers::AbstractArray{<:Buffer}, offsets::AbstractArray{<:Integer}; sizes = C_NULL, strides = C_NULL)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nbuffers::AbstractArray{<:Buffer}\noffsets::AbstractArray{<:Integer}\nsizes: defaults to C_NULL\nstrides: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_blit_image","page":"API","title":"Vulkan.cmd_blit_image","text":"cmd_blit_image(command_buffer::CommandBuffer, src_image::Image, src_image_layout::ImageLayout, dst_image::Image, dst_image_layout::ImageLayout, regions::AbstractArray{<:_ImageBlit}, filter::Filter)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nsrc_image::Image\nsrc_image_layout::ImageLayout\ndst_image::Image\ndst_image_layout::ImageLayout\nregions::AbstractArray{<:_ImageBlit}\nfilter::Filter\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_blit_image_2_khr","page":"API","title":"Vulkan.cmd_blit_image_2_khr","text":"cmd_blit_image_2_khr(command_buffer::CommandBuffer, blit_image_info::_BlitImageInfo2KHR)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nblit_image_info::_BlitImageInfo2KHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_build_acceleration_structure_nv","page":"API","title":"Vulkan.cmd_build_acceleration_structure_nv","text":"cmd_build_acceleration_structure_nv(command_buffer::CommandBuffer, info::_AccelerationStructureInfoNV, instance_offset::Integer, update::Bool, dst::AccelerationStructureNV, scratch::Buffer, scratch_offset::Integer; instance_data = C_NULL, src = C_NULL)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ninfo::_AccelerationStructureInfoNV\ninstance_offset::Integer\nupdate::Bool\ndst::AccelerationStructureNV\nscratch::Buffer\nscratch_offset::Integer\ninstance_data: defaults to C_NULL\nsrc: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_build_acceleration_structures_indirect_khr","page":"API","title":"Vulkan.cmd_build_acceleration_structures_indirect_khr","text":"cmd_build_acceleration_structures_indirect_khr(command_buffer::CommandBuffer, infos::AbstractArray{<:_AccelerationStructureBuildGeometryInfoKHR}, indirect_device_addresses::AbstractArray{<:Integer}, indirect_strides::AbstractArray{<:Integer}, max_primitive_counts::AbstractArray{<:Integer})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ninfos::AbstractArray{<:_AccelerationStructureBuildGeometryInfoKHR}\nindirect_device_addresses::AbstractArray{<:Integer}\nindirect_strides::AbstractArray{<:Integer}\nmax_primitive_counts::AbstractArray{<:Integer}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_build_acceleration_structures_khr","page":"API","title":"Vulkan.cmd_build_acceleration_structures_khr","text":"cmd_build_acceleration_structures_khr(command_buffer::CommandBuffer, infos::AbstractArray{<:_AccelerationStructureBuildGeometryInfoKHR}, build_range_infos::AbstractArray{<:_AccelerationStructureBuildRangeInfoKHR})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ninfos::AbstractArray{<:_AccelerationStructureBuildGeometryInfoKHR}\nbuild_range_infos::AbstractArray{<:_AccelerationStructureBuildRangeInfoKHR}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_clear_attachments","page":"API","title":"Vulkan.cmd_clear_attachments","text":"cmd_clear_attachments(command_buffer::CommandBuffer, attachments::AbstractArray{<:_ClearAttachment}, rects::AbstractArray{<:_ClearRect})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nattachments::AbstractArray{<:_ClearAttachment}\nrects::AbstractArray{<:_ClearRect}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_clear_color_image","page":"API","title":"Vulkan.cmd_clear_color_image","text":"cmd_clear_color_image(command_buffer::CommandBuffer, image::Image, image_layout::ImageLayout, color::VkClearColorValue, ranges::AbstractArray{<:_ImageSubresourceRange})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nimage::Image\nimage_layout::ImageLayout\ncolor::VkClearColorValue\nranges::AbstractArray{<:_ImageSubresourceRange}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_clear_depth_stencil_image","page":"API","title":"Vulkan.cmd_clear_depth_stencil_image","text":"cmd_clear_depth_stencil_image(command_buffer::CommandBuffer, image::Image, image_layout::ImageLayout, depth_stencil::_ClearDepthStencilValue, ranges::AbstractArray{<:_ImageSubresourceRange})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nimage::Image\nimage_layout::ImageLayout\ndepth_stencil::_ClearDepthStencilValue\nranges::AbstractArray{<:_ImageSubresourceRange}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_control_video_coding_khr","page":"API","title":"Vulkan.cmd_control_video_coding_khr","text":"cmd_control_video_coding_khr(command_buffer::CommandBuffer, coding_control_info::_VideoCodingControlInfoKHR)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer\ncoding_control_info::_VideoCodingControlInfoKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_copy_acceleration_structure_khr","page":"API","title":"Vulkan.cmd_copy_acceleration_structure_khr","text":"cmd_copy_acceleration_structure_khr(command_buffer::CommandBuffer, info::_CopyAccelerationStructureInfoKHR)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ninfo::_CopyAccelerationStructureInfoKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_copy_acceleration_structure_nv","page":"API","title":"Vulkan.cmd_copy_acceleration_structure_nv","text":"cmd_copy_acceleration_structure_nv(command_buffer::CommandBuffer, dst::AccelerationStructureNV, src::AccelerationStructureNV, mode::CopyAccelerationStructureModeKHR)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ndst::AccelerationStructureNV\nsrc::AccelerationStructureNV\nmode::CopyAccelerationStructureModeKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_copy_acceleration_structure_to_memory_khr","page":"API","title":"Vulkan.cmd_copy_acceleration_structure_to_memory_khr","text":"cmd_copy_acceleration_structure_to_memory_khr(command_buffer::CommandBuffer, info::_CopyAccelerationStructureToMemoryInfoKHR)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ninfo::_CopyAccelerationStructureToMemoryInfoKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_copy_buffer","page":"API","title":"Vulkan.cmd_copy_buffer","text":"cmd_copy_buffer(command_buffer::CommandBuffer, src_buffer::Buffer, dst_buffer::Buffer, regions::AbstractArray{<:_BufferCopy})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nsrc_buffer::Buffer\ndst_buffer::Buffer\nregions::AbstractArray{<:_BufferCopy}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_copy_buffer_2_khr","page":"API","title":"Vulkan.cmd_copy_buffer_2_khr","text":"cmd_copy_buffer_2_khr(command_buffer::CommandBuffer, copy_buffer_info::_CopyBufferInfo2KHR)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ncopy_buffer_info::_CopyBufferInfo2KHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_copy_buffer_to_image","page":"API","title":"Vulkan.cmd_copy_buffer_to_image","text":"cmd_copy_buffer_to_image(command_buffer::CommandBuffer, src_buffer::Buffer, dst_image::Image, dst_image_layout::ImageLayout, regions::AbstractArray{<:_BufferImageCopy})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nsrc_buffer::Buffer\ndst_image::Image\ndst_image_layout::ImageLayout\nregions::AbstractArray{<:_BufferImageCopy}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_copy_buffer_to_image_2_khr","page":"API","title":"Vulkan.cmd_copy_buffer_to_image_2_khr","text":"cmd_copy_buffer_to_image_2_khr(command_buffer::CommandBuffer, copy_buffer_to_image_info::_CopyBufferToImageInfo2KHR)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ncopy_buffer_to_image_info::_CopyBufferToImageInfo2KHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_copy_image","page":"API","title":"Vulkan.cmd_copy_image","text":"cmd_copy_image(command_buffer::CommandBuffer, src_image::Image, src_image_layout::ImageLayout, dst_image::Image, dst_image_layout::ImageLayout, regions::AbstractArray{<:_ImageCopy})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nsrc_image::Image\nsrc_image_layout::ImageLayout\ndst_image::Image\ndst_image_layout::ImageLayout\nregions::AbstractArray{<:_ImageCopy}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_copy_image_2_khr","page":"API","title":"Vulkan.cmd_copy_image_2_khr","text":"cmd_copy_image_2_khr(command_buffer::CommandBuffer, copy_image_info::_CopyImageInfo2KHR)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ncopy_image_info::_CopyImageInfo2KHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_copy_image_to_buffer","page":"API","title":"Vulkan.cmd_copy_image_to_buffer","text":"cmd_copy_image_to_buffer(command_buffer::CommandBuffer, src_image::Image, src_image_layout::ImageLayout, dst_buffer::Buffer, regions::AbstractArray{<:_BufferImageCopy})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nsrc_image::Image\nsrc_image_layout::ImageLayout\ndst_buffer::Buffer\nregions::AbstractArray{<:_BufferImageCopy}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_copy_image_to_buffer_2_khr","page":"API","title":"Vulkan.cmd_copy_image_to_buffer_2_khr","text":"cmd_copy_image_to_buffer_2_khr(command_buffer::CommandBuffer, copy_image_to_buffer_info::_CopyImageToBufferInfo2KHR)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ncopy_image_to_buffer_info::_CopyImageToBufferInfo2KHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_copy_memory_to_acceleration_structure_khr","page":"API","title":"Vulkan.cmd_copy_memory_to_acceleration_structure_khr","text":"cmd_copy_memory_to_acceleration_structure_khr(command_buffer::CommandBuffer, info::_CopyMemoryToAccelerationStructureInfoKHR)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ninfo::_CopyMemoryToAccelerationStructureInfoKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_copy_query_pool_results","page":"API","title":"Vulkan.cmd_copy_query_pool_results","text":"cmd_copy_query_pool_results(command_buffer::CommandBuffer, query_pool::QueryPool, first_query::Integer, query_count::Integer, dst_buffer::Buffer, dst_offset::Integer, stride::Integer; flags = 0)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nquery_pool::QueryPool\nfirst_query::Integer\nquery_count::Integer\ndst_buffer::Buffer\ndst_offset::Integer\nstride::Integer\nflags: defaults to 0\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_debug_marker_begin_ext","page":"API","title":"Vulkan.cmd_debug_marker_begin_ext","text":"cmd_debug_marker_begin_ext(command_buffer::CommandBuffer, marker_info::_DebugMarkerMarkerInfoEXT)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nmarker_info::_DebugMarkerMarkerInfoEXT\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_debug_marker_end_ext","page":"API","title":"Vulkan.cmd_debug_marker_end_ext","text":"cmd_debug_marker_end_ext(command_buffer::CommandBuffer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_debug_marker_insert_ext","page":"API","title":"Vulkan.cmd_debug_marker_insert_ext","text":"cmd_debug_marker_insert_ext(command_buffer::CommandBuffer, marker_info::_DebugMarkerMarkerInfoEXT)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nmarker_info::_DebugMarkerMarkerInfoEXT\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_decode_video_khr","page":"API","title":"Vulkan.cmd_decode_video_khr","text":"cmd_decode_video_khr(command_buffer::CommandBuffer, frame_info::_VideoDecodeInfoKHR)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer\nframe_info::_VideoDecodeInfoKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_dispatch","page":"API","title":"Vulkan.cmd_dispatch","text":"cmd_dispatch(command_buffer::CommandBuffer, group_count_x::Integer, group_count_y::Integer, group_count_z::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ngroup_count_x::Integer\ngroup_count_y::Integer\ngroup_count_z::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_dispatch_base","page":"API","title":"Vulkan.cmd_dispatch_base","text":"cmd_dispatch_base(command_buffer::CommandBuffer, base_group_x::Integer, base_group_y::Integer, base_group_z::Integer, group_count_x::Integer, group_count_y::Integer, group_count_z::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nbase_group_x::Integer\nbase_group_y::Integer\nbase_group_z::Integer\ngroup_count_x::Integer\ngroup_count_y::Integer\ngroup_count_z::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_dispatch_indirect","page":"API","title":"Vulkan.cmd_dispatch_indirect","text":"cmd_dispatch_indirect(command_buffer::CommandBuffer, buffer::Buffer, offset::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nbuffer::Buffer\noffset::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_draw","page":"API","title":"Vulkan.cmd_draw","text":"cmd_draw(command_buffer::CommandBuffer, vertex_count::Integer, instance_count::Integer, first_vertex::Integer, first_instance::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nvertex_count::Integer\ninstance_count::Integer\nfirst_vertex::Integer\nfirst_instance::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_draw_indexed","page":"API","title":"Vulkan.cmd_draw_indexed","text":"cmd_draw_indexed(command_buffer::CommandBuffer, index_count::Integer, instance_count::Integer, first_index::Integer, vertex_offset::Integer, first_instance::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nindex_count::Integer\ninstance_count::Integer\nfirst_index::Integer\nvertex_offset::Integer\nfirst_instance::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_draw_indexed_indirect","page":"API","title":"Vulkan.cmd_draw_indexed_indirect","text":"cmd_draw_indexed_indirect(command_buffer::CommandBuffer, buffer::Buffer, offset::Integer, draw_count::Integer, stride::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nbuffer::Buffer\noffset::Integer\ndraw_count::Integer\nstride::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_draw_indexed_indirect_count","page":"API","title":"Vulkan.cmd_draw_indexed_indirect_count","text":"cmd_draw_indexed_indirect_count(command_buffer::CommandBuffer, buffer::Buffer, offset::Integer, count_buffer::Buffer, count_buffer_offset::Integer, max_draw_count::Integer, stride::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nbuffer::Buffer\noffset::Integer\ncount_buffer::Buffer\ncount_buffer_offset::Integer\nmax_draw_count::Integer\nstride::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_draw_indirect","page":"API","title":"Vulkan.cmd_draw_indirect","text":"cmd_draw_indirect(command_buffer::CommandBuffer, buffer::Buffer, offset::Integer, draw_count::Integer, stride::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nbuffer::Buffer\noffset::Integer\ndraw_count::Integer\nstride::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_draw_indirect_byte_count_ext","page":"API","title":"Vulkan.cmd_draw_indirect_byte_count_ext","text":"cmd_draw_indirect_byte_count_ext(command_buffer::CommandBuffer, instance_count::Integer, first_instance::Integer, counter_buffer::Buffer, counter_buffer_offset::Integer, counter_offset::Integer, vertex_stride::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ninstance_count::Integer\nfirst_instance::Integer\ncounter_buffer::Buffer\ncounter_buffer_offset::Integer\ncounter_offset::Integer\nvertex_stride::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_draw_indirect_count","page":"API","title":"Vulkan.cmd_draw_indirect_count","text":"cmd_draw_indirect_count(command_buffer::CommandBuffer, buffer::Buffer, offset::Integer, count_buffer::Buffer, count_buffer_offset::Integer, max_draw_count::Integer, stride::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nbuffer::Buffer\noffset::Integer\ncount_buffer::Buffer\ncount_buffer_offset::Integer\nmax_draw_count::Integer\nstride::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_draw_mesh_tasks_indirect_count_nv","page":"API","title":"Vulkan.cmd_draw_mesh_tasks_indirect_count_nv","text":"cmd_draw_mesh_tasks_indirect_count_nv(command_buffer::CommandBuffer, buffer::Buffer, offset::Integer, count_buffer::Buffer, count_buffer_offset::Integer, max_draw_count::Integer, stride::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nbuffer::Buffer\noffset::Integer\ncount_buffer::Buffer\ncount_buffer_offset::Integer\nmax_draw_count::Integer\nstride::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_draw_mesh_tasks_indirect_nv","page":"API","title":"Vulkan.cmd_draw_mesh_tasks_indirect_nv","text":"cmd_draw_mesh_tasks_indirect_nv(command_buffer::CommandBuffer, buffer::Buffer, offset::Integer, draw_count::Integer, stride::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nbuffer::Buffer\noffset::Integer\ndraw_count::Integer\nstride::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_draw_mesh_tasks_nv","page":"API","title":"Vulkan.cmd_draw_mesh_tasks_nv","text":"cmd_draw_mesh_tasks_nv(command_buffer::CommandBuffer, task_count::Integer, first_task::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ntask_count::Integer\nfirst_task::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_encode_video_khr","page":"API","title":"Vulkan.cmd_encode_video_khr","text":"cmd_encode_video_khr(command_buffer::CommandBuffer, encode_info::_VideoEncodeInfoKHR)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer\nencode_info::_VideoEncodeInfoKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_end_conditional_rendering_ext","page":"API","title":"Vulkan.cmd_end_conditional_rendering_ext","text":"cmd_end_conditional_rendering_ext(command_buffer::CommandBuffer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_end_debug_utils_label_ext","page":"API","title":"Vulkan.cmd_end_debug_utils_label_ext","text":"cmd_end_debug_utils_label_ext(command_buffer::CommandBuffer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_end_query","page":"API","title":"Vulkan.cmd_end_query","text":"cmd_end_query(command_buffer::CommandBuffer, query_pool::QueryPool, query::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nquery_pool::QueryPool\nquery::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_end_query_indexed_ext","page":"API","title":"Vulkan.cmd_end_query_indexed_ext","text":"cmd_end_query_indexed_ext(command_buffer::CommandBuffer, query_pool::QueryPool, query::Integer, index::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nquery_pool::QueryPool\nquery::Integer\nindex::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_end_render_pass","page":"API","title":"Vulkan.cmd_end_render_pass","text":"cmd_end_render_pass(command_buffer::CommandBuffer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_end_render_pass_2","page":"API","title":"Vulkan.cmd_end_render_pass_2","text":"cmd_end_render_pass_2(command_buffer::CommandBuffer, subpass_end_info::_SubpassEndInfo)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nsubpass_end_info::_SubpassEndInfo\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_end_transform_feedback_ext","page":"API","title":"Vulkan.cmd_end_transform_feedback_ext","text":"cmd_end_transform_feedback_ext(command_buffer::CommandBuffer, counter_buffers::AbstractArray{<:Buffer}; counter_buffer_offsets = C_NULL)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ncounter_buffers::AbstractArray{<:Buffer}\ncounter_buffer_offsets: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_end_video_coding_khr","page":"API","title":"Vulkan.cmd_end_video_coding_khr","text":"cmd_end_video_coding_khr(command_buffer::CommandBuffer, end_coding_info::_VideoEndCodingInfoKHR)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer\nend_coding_info::_VideoEndCodingInfoKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_execute_commands","page":"API","title":"Vulkan.cmd_execute_commands","text":"cmd_execute_commands(command_buffer::CommandBuffer, command_buffers::AbstractArray{<:CommandBuffer})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ncommand_buffers::AbstractArray{<:CommandBuffer}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_execute_generated_commands_nv","page":"API","title":"Vulkan.cmd_execute_generated_commands_nv","text":"cmd_execute_generated_commands_nv(command_buffer::CommandBuffer, is_preprocessed::Bool, generated_commands_info::_GeneratedCommandsInfoNV)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nis_preprocessed::Bool\ngenerated_commands_info::_GeneratedCommandsInfoNV\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_fill_buffer","page":"API","title":"Vulkan.cmd_fill_buffer","text":"cmd_fill_buffer(command_buffer::CommandBuffer, dst_buffer::Buffer, dst_offset::Integer, size::Integer, data::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ndst_buffer::Buffer\ndst_offset::Integer\nsize::Integer\ndata::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_insert_debug_utils_label_ext","page":"API","title":"Vulkan.cmd_insert_debug_utils_label_ext","text":"cmd_insert_debug_utils_label_ext(command_buffer::CommandBuffer, label_info::_DebugUtilsLabelEXT)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nlabel_info::_DebugUtilsLabelEXT\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_next_subpass","page":"API","title":"Vulkan.cmd_next_subpass","text":"cmd_next_subpass(command_buffer::CommandBuffer, contents::SubpassContents)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ncontents::SubpassContents\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_next_subpass_2","page":"API","title":"Vulkan.cmd_next_subpass_2","text":"cmd_next_subpass_2(command_buffer::CommandBuffer, subpass_begin_info::_SubpassBeginInfo, subpass_end_info::_SubpassEndInfo)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nsubpass_begin_info::_SubpassBeginInfo\nsubpass_end_info::_SubpassEndInfo\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_pipeline_barrier","page":"API","title":"Vulkan.cmd_pipeline_barrier","text":"cmd_pipeline_barrier(command_buffer::CommandBuffer, src_stage_mask::PipelineStageFlag, dst_stage_mask::PipelineStageFlag, memory_barriers::AbstractArray{<:_MemoryBarrier}, buffer_memory_barriers::AbstractArray{<:_BufferMemoryBarrier}, image_memory_barriers::AbstractArray{<:_ImageMemoryBarrier}; dependency_flags = 0)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nsrc_stage_mask::PipelineStageFlag\ndst_stage_mask::PipelineStageFlag\nmemory_barriers::AbstractArray{<:_MemoryBarrier}\nbuffer_memory_barriers::AbstractArray{<:_BufferMemoryBarrier}\nimage_memory_barriers::AbstractArray{<:_ImageMemoryBarrier}\ndependency_flags: defaults to 0\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_pipeline_barrier_2_khr","page":"API","title":"Vulkan.cmd_pipeline_barrier_2_khr","text":"cmd_pipeline_barrier_2_khr(command_buffer::CommandBuffer, dependency_info::_DependencyInfoKHR)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ndependency_info::_DependencyInfoKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_preprocess_generated_commands_nv","page":"API","title":"Vulkan.cmd_preprocess_generated_commands_nv","text":"cmd_preprocess_generated_commands_nv(command_buffer::CommandBuffer, generated_commands_info::_GeneratedCommandsInfoNV)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ngenerated_commands_info::_GeneratedCommandsInfoNV\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_push_constants","page":"API","title":"Vulkan.cmd_push_constants","text":"cmd_push_constants(command_buffer::CommandBuffer, layout::PipelineLayout, stage_flags::ShaderStageFlag, offset::Integer, values::Ptr{Cvoid})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nlayout::PipelineLayout\nstage_flags::ShaderStageFlag\noffset::Integer\nvalues::Ptr{Cvoid} (must be a valid pointer with size bytes)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_push_descriptor_set_khr","page":"API","title":"Vulkan.cmd_push_descriptor_set_khr","text":"cmd_push_descriptor_set_khr(command_buffer::CommandBuffer, pipeline_bind_point::PipelineBindPoint, layout::PipelineLayout, set::Integer, descriptor_writes::AbstractArray{<:_WriteDescriptorSet})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\npipeline_bind_point::PipelineBindPoint\nlayout::PipelineLayout\nset::Integer\ndescriptor_writes::AbstractArray{<:_WriteDescriptorSet}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_push_descriptor_set_with_template_khr","page":"API","title":"Vulkan.cmd_push_descriptor_set_with_template_khr","text":"cmd_push_descriptor_set_with_template_khr(command_buffer::CommandBuffer, descriptor_update_template::DescriptorUpdateTemplate, layout::PipelineLayout, set::Integer, data::Ptr{Cvoid})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ndescriptor_update_template::DescriptorUpdateTemplate\nlayout::PipelineLayout\nset::Integer\ndata::Ptr{Cvoid}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_reset_event","page":"API","title":"Vulkan.cmd_reset_event","text":"cmd_reset_event(command_buffer::CommandBuffer, event::Event, stage_mask::PipelineStageFlag)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nevent::Event\nstage_mask::PipelineStageFlag\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_reset_event_2_khr","page":"API","title":"Vulkan.cmd_reset_event_2_khr","text":"cmd_reset_event_2_khr(command_buffer::CommandBuffer, event::Event, stage_mask::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nevent::Event\nstage_mask::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_reset_query_pool","page":"API","title":"Vulkan.cmd_reset_query_pool","text":"cmd_reset_query_pool(command_buffer::CommandBuffer, query_pool::QueryPool, first_query::Integer, query_count::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nquery_pool::QueryPool\nfirst_query::Integer\nquery_count::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_resolve_image","page":"API","title":"Vulkan.cmd_resolve_image","text":"cmd_resolve_image(command_buffer::CommandBuffer, src_image::Image, src_image_layout::ImageLayout, dst_image::Image, dst_image_layout::ImageLayout, regions::AbstractArray{<:_ImageResolve})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nsrc_image::Image\nsrc_image_layout::ImageLayout\ndst_image::Image\ndst_image_layout::ImageLayout\nregions::AbstractArray{<:_ImageResolve}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_resolve_image_2_khr","page":"API","title":"Vulkan.cmd_resolve_image_2_khr","text":"cmd_resolve_image_2_khr(command_buffer::CommandBuffer, resolve_image_info::_ResolveImageInfo2KHR)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nresolve_image_info::_ResolveImageInfo2KHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_blend_constants","page":"API","title":"Vulkan.cmd_set_blend_constants","text":"cmd_set_blend_constants(command_buffer::CommandBuffer, blend_constants::NTuple{4, Float32})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nblend_constants::NTuple{4, Float32}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_checkpoint_nv","page":"API","title":"Vulkan.cmd_set_checkpoint_nv","text":"cmd_set_checkpoint_nv(command_buffer::CommandBuffer, checkpoint_marker::Ptr{Cvoid})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ncheckpoint_marker::Ptr{Cvoid}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_coarse_sample_order_nv","page":"API","title":"Vulkan.cmd_set_coarse_sample_order_nv","text":"cmd_set_coarse_sample_order_nv(command_buffer::CommandBuffer, sample_order_type::CoarseSampleOrderTypeNV, custom_sample_orders::AbstractArray{<:_CoarseSampleOrderCustomNV})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nsample_order_type::CoarseSampleOrderTypeNV\ncustom_sample_orders::AbstractArray{<:_CoarseSampleOrderCustomNV}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_color_write_enable_ext","page":"API","title":"Vulkan.cmd_set_color_write_enable_ext","text":"cmd_set_color_write_enable_ext(command_buffer::CommandBuffer, color_write_enables::AbstractArray{<:Bool})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ncolor_write_enables::AbstractArray{<:Bool}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_cull_mode_ext","page":"API","title":"Vulkan.cmd_set_cull_mode_ext","text":"cmd_set_cull_mode_ext(command_buffer::CommandBuffer; cull_mode = 0)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ncull_mode: defaults to 0\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_depth_bias","page":"API","title":"Vulkan.cmd_set_depth_bias","text":"cmd_set_depth_bias(command_buffer::CommandBuffer, depth_bias_constant_factor::Real, depth_bias_clamp::Real, depth_bias_slope_factor::Real)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ndepth_bias_constant_factor::Real\ndepth_bias_clamp::Real\ndepth_bias_slope_factor::Real\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_depth_bias_enable_ext","page":"API","title":"Vulkan.cmd_set_depth_bias_enable_ext","text":"cmd_set_depth_bias_enable_ext(command_buffer::CommandBuffer, depth_bias_enable::Bool)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ndepth_bias_enable::Bool\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_depth_bounds","page":"API","title":"Vulkan.cmd_set_depth_bounds","text":"cmd_set_depth_bounds(command_buffer::CommandBuffer, min_depth_bounds::Real, max_depth_bounds::Real)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nmin_depth_bounds::Real\nmax_depth_bounds::Real\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_depth_bounds_test_enable_ext","page":"API","title":"Vulkan.cmd_set_depth_bounds_test_enable_ext","text":"cmd_set_depth_bounds_test_enable_ext(command_buffer::CommandBuffer, depth_bounds_test_enable::Bool)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ndepth_bounds_test_enable::Bool\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_depth_compare_op_ext","page":"API","title":"Vulkan.cmd_set_depth_compare_op_ext","text":"cmd_set_depth_compare_op_ext(command_buffer::CommandBuffer, depth_compare_op::CompareOp)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ndepth_compare_op::CompareOp\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_depth_test_enable_ext","page":"API","title":"Vulkan.cmd_set_depth_test_enable_ext","text":"cmd_set_depth_test_enable_ext(command_buffer::CommandBuffer, depth_test_enable::Bool)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ndepth_test_enable::Bool\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_depth_write_enable_ext","page":"API","title":"Vulkan.cmd_set_depth_write_enable_ext","text":"cmd_set_depth_write_enable_ext(command_buffer::CommandBuffer, depth_write_enable::Bool)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ndepth_write_enable::Bool\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_device_mask","page":"API","title":"Vulkan.cmd_set_device_mask","text":"cmd_set_device_mask(command_buffer::CommandBuffer, device_mask::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ndevice_mask::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_discard_rectangle_ext","page":"API","title":"Vulkan.cmd_set_discard_rectangle_ext","text":"cmd_set_discard_rectangle_ext(command_buffer::CommandBuffer, discard_rectangles::AbstractArray{<:_Rect2D})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ndiscard_rectangles::AbstractArray{<:_Rect2D}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_event","page":"API","title":"Vulkan.cmd_set_event","text":"cmd_set_event(command_buffer::CommandBuffer, event::Event, stage_mask::PipelineStageFlag)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nevent::Event\nstage_mask::PipelineStageFlag\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_event_2_khr","page":"API","title":"Vulkan.cmd_set_event_2_khr","text":"cmd_set_event_2_khr(command_buffer::CommandBuffer, event::Event, dependency_info::_DependencyInfoKHR)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nevent::Event\ndependency_info::_DependencyInfoKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_exclusive_scissor_nv","page":"API","title":"Vulkan.cmd_set_exclusive_scissor_nv","text":"cmd_set_exclusive_scissor_nv(command_buffer::CommandBuffer, exclusive_scissors::AbstractArray{<:_Rect2D})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nexclusive_scissors::AbstractArray{<:_Rect2D}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_fragment_shading_rate_enum_nv","page":"API","title":"Vulkan.cmd_set_fragment_shading_rate_enum_nv","text":"cmd_set_fragment_shading_rate_enum_nv(command_buffer::CommandBuffer, shading_rate::FragmentShadingRateNV, combiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nshading_rate::FragmentShadingRateNV\ncombiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_fragment_shading_rate_khr","page":"API","title":"Vulkan.cmd_set_fragment_shading_rate_khr","text":"cmd_set_fragment_shading_rate_khr(command_buffer::CommandBuffer, fragment_size::_Extent2D, combiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nfragment_size::_Extent2D\ncombiner_ops::NTuple{2, FragmentShadingRateCombinerOpKHR}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_front_face_ext","page":"API","title":"Vulkan.cmd_set_front_face_ext","text":"cmd_set_front_face_ext(command_buffer::CommandBuffer, front_face::FrontFace)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nfront_face::FrontFace\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_line_stipple_ext","page":"API","title":"Vulkan.cmd_set_line_stipple_ext","text":"cmd_set_line_stipple_ext(command_buffer::CommandBuffer, line_stipple_factor::Integer, line_stipple_pattern::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nline_stipple_factor::Integer\nline_stipple_pattern::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_line_width","page":"API","title":"Vulkan.cmd_set_line_width","text":"cmd_set_line_width(command_buffer::CommandBuffer, line_width::Real)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nline_width::Real\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_logic_op_ext","page":"API","title":"Vulkan.cmd_set_logic_op_ext","text":"cmd_set_logic_op_ext(command_buffer::CommandBuffer, logic_op::LogicOp)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nlogic_op::LogicOp\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_patch_control_points_ext","page":"API","title":"Vulkan.cmd_set_patch_control_points_ext","text":"cmd_set_patch_control_points_ext(command_buffer::CommandBuffer, patch_control_points::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\npatch_control_points::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_performance_marker_intel","page":"API","title":"Vulkan.cmd_set_performance_marker_intel","text":"cmd_set_performance_marker_intel(command_buffer::CommandBuffer, marker_info::_PerformanceMarkerInfoINTEL)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nmarker_info::_PerformanceMarkerInfoINTEL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_performance_override_intel","page":"API","title":"Vulkan.cmd_set_performance_override_intel","text":"cmd_set_performance_override_intel(command_buffer::CommandBuffer, override_info::_PerformanceOverrideInfoINTEL)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\noverride_info::_PerformanceOverrideInfoINTEL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_performance_stream_marker_intel","page":"API","title":"Vulkan.cmd_set_performance_stream_marker_intel","text":"cmd_set_performance_stream_marker_intel(command_buffer::CommandBuffer, marker_info::_PerformanceStreamMarkerInfoINTEL)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nmarker_info::_PerformanceStreamMarkerInfoINTEL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_primitive_restart_enable_ext","page":"API","title":"Vulkan.cmd_set_primitive_restart_enable_ext","text":"cmd_set_primitive_restart_enable_ext(command_buffer::CommandBuffer, primitive_restart_enable::Bool)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nprimitive_restart_enable::Bool\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_primitive_topology_ext","page":"API","title":"Vulkan.cmd_set_primitive_topology_ext","text":"cmd_set_primitive_topology_ext(command_buffer::CommandBuffer, primitive_topology::PrimitiveTopology)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nprimitive_topology::PrimitiveTopology\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_rasterizer_discard_enable_ext","page":"API","title":"Vulkan.cmd_set_rasterizer_discard_enable_ext","text":"cmd_set_rasterizer_discard_enable_ext(command_buffer::CommandBuffer, rasterizer_discard_enable::Bool)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nrasterizer_discard_enable::Bool\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_ray_tracing_pipeline_stack_size_khr","page":"API","title":"Vulkan.cmd_set_ray_tracing_pipeline_stack_size_khr","text":"cmd_set_ray_tracing_pipeline_stack_size_khr(command_buffer::CommandBuffer, pipeline_stack_size::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\npipeline_stack_size::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_sample_locations_ext","page":"API","title":"Vulkan.cmd_set_sample_locations_ext","text":"cmd_set_sample_locations_ext(command_buffer::CommandBuffer, sample_locations_info::_SampleLocationsInfoEXT)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nsample_locations_info::_SampleLocationsInfoEXT\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_scissor","page":"API","title":"Vulkan.cmd_set_scissor","text":"cmd_set_scissor(command_buffer::CommandBuffer, scissors::AbstractArray{<:_Rect2D})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nscissors::AbstractArray{<:_Rect2D}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_scissor_with_count_ext","page":"API","title":"Vulkan.cmd_set_scissor_with_count_ext","text":"cmd_set_scissor_with_count_ext(command_buffer::CommandBuffer, scissors::AbstractArray{<:_Rect2D})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nscissors::AbstractArray{<:_Rect2D}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_stencil_compare_mask","page":"API","title":"Vulkan.cmd_set_stencil_compare_mask","text":"cmd_set_stencil_compare_mask(command_buffer::CommandBuffer, face_mask::StencilFaceFlag, compare_mask::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nface_mask::StencilFaceFlag\ncompare_mask::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_stencil_op_ext","page":"API","title":"Vulkan.cmd_set_stencil_op_ext","text":"cmd_set_stencil_op_ext(command_buffer::CommandBuffer, face_mask::StencilFaceFlag, fail_op::StencilOp, pass_op::StencilOp, depth_fail_op::StencilOp, compare_op::CompareOp)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nface_mask::StencilFaceFlag\nfail_op::StencilOp\npass_op::StencilOp\ndepth_fail_op::StencilOp\ncompare_op::CompareOp\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_stencil_reference","page":"API","title":"Vulkan.cmd_set_stencil_reference","text":"cmd_set_stencil_reference(command_buffer::CommandBuffer, face_mask::StencilFaceFlag, reference::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nface_mask::StencilFaceFlag\nreference::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_stencil_test_enable_ext","page":"API","title":"Vulkan.cmd_set_stencil_test_enable_ext","text":"cmd_set_stencil_test_enable_ext(command_buffer::CommandBuffer, stencil_test_enable::Bool)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nstencil_test_enable::Bool\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_stencil_write_mask","page":"API","title":"Vulkan.cmd_set_stencil_write_mask","text":"cmd_set_stencil_write_mask(command_buffer::CommandBuffer, face_mask::StencilFaceFlag, write_mask::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nface_mask::StencilFaceFlag\nwrite_mask::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_vertex_input_ext","page":"API","title":"Vulkan.cmd_set_vertex_input_ext","text":"cmd_set_vertex_input_ext(command_buffer::CommandBuffer, vertex_binding_descriptions::AbstractArray{<:_VertexInputBindingDescription2EXT}, vertex_attribute_descriptions::AbstractArray{<:_VertexInputAttributeDescription2EXT})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nvertex_binding_descriptions::AbstractArray{<:_VertexInputBindingDescription2EXT}\nvertex_attribute_descriptions::AbstractArray{<:_VertexInputAttributeDescription2EXT}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_viewport","page":"API","title":"Vulkan.cmd_set_viewport","text":"cmd_set_viewport(command_buffer::CommandBuffer, viewports::AbstractArray{<:_Viewport})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nviewports::AbstractArray{<:_Viewport}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_viewport_shading_rate_palette_nv","page":"API","title":"Vulkan.cmd_set_viewport_shading_rate_palette_nv","text":"cmd_set_viewport_shading_rate_palette_nv(command_buffer::CommandBuffer, shading_rate_palettes::AbstractArray{<:_ShadingRatePaletteNV})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nshading_rate_palettes::AbstractArray{<:_ShadingRatePaletteNV}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_viewport_w_scaling_nv","page":"API","title":"Vulkan.cmd_set_viewport_w_scaling_nv","text":"cmd_set_viewport_w_scaling_nv(command_buffer::CommandBuffer, viewport_w_scalings::AbstractArray{<:_ViewportWScalingNV})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nviewport_w_scalings::AbstractArray{<:_ViewportWScalingNV}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_set_viewport_with_count_ext","page":"API","title":"Vulkan.cmd_set_viewport_with_count_ext","text":"cmd_set_viewport_with_count_ext(command_buffer::CommandBuffer, viewports::AbstractArray{<:_Viewport})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nviewports::AbstractArray{<:_Viewport}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_trace_rays_indirect_khr","page":"API","title":"Vulkan.cmd_trace_rays_indirect_khr","text":"cmd_trace_rays_indirect_khr(command_buffer::CommandBuffer, raygen_shader_binding_table::_StridedDeviceAddressRegionKHR, miss_shader_binding_table::_StridedDeviceAddressRegionKHR, hit_shader_binding_table::_StridedDeviceAddressRegionKHR, callable_shader_binding_table::_StridedDeviceAddressRegionKHR, indirect_device_address::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nraygen_shader_binding_table::_StridedDeviceAddressRegionKHR\nmiss_shader_binding_table::_StridedDeviceAddressRegionKHR\nhit_shader_binding_table::_StridedDeviceAddressRegionKHR\ncallable_shader_binding_table::_StridedDeviceAddressRegionKHR\nindirect_device_address::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_trace_rays_khr","page":"API","title":"Vulkan.cmd_trace_rays_khr","text":"cmd_trace_rays_khr(command_buffer::CommandBuffer, raygen_shader_binding_table::_StridedDeviceAddressRegionKHR, miss_shader_binding_table::_StridedDeviceAddressRegionKHR, hit_shader_binding_table::_StridedDeviceAddressRegionKHR, callable_shader_binding_table::_StridedDeviceAddressRegionKHR, width::Integer, height::Integer, depth::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nraygen_shader_binding_table::_StridedDeviceAddressRegionKHR\nmiss_shader_binding_table::_StridedDeviceAddressRegionKHR\nhit_shader_binding_table::_StridedDeviceAddressRegionKHR\ncallable_shader_binding_table::_StridedDeviceAddressRegionKHR\nwidth::Integer\nheight::Integer\ndepth::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_trace_rays_nv","page":"API","title":"Vulkan.cmd_trace_rays_nv","text":"cmd_trace_rays_nv(command_buffer::CommandBuffer, raygen_shader_binding_table_buffer::Buffer, raygen_shader_binding_offset::Integer, miss_shader_binding_offset::Integer, miss_shader_binding_stride::Integer, hit_shader_binding_offset::Integer, hit_shader_binding_stride::Integer, callable_shader_binding_offset::Integer, callable_shader_binding_stride::Integer, width::Integer, height::Integer, depth::Integer; miss_shader_binding_table_buffer = C_NULL, hit_shader_binding_table_buffer = C_NULL, callable_shader_binding_table_buffer = C_NULL)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nraygen_shader_binding_table_buffer::Buffer\nraygen_shader_binding_offset::Integer\nmiss_shader_binding_offset::Integer\nmiss_shader_binding_stride::Integer\nhit_shader_binding_offset::Integer\nhit_shader_binding_stride::Integer\ncallable_shader_binding_offset::Integer\ncallable_shader_binding_stride::Integer\nwidth::Integer\nheight::Integer\ndepth::Integer\nmiss_shader_binding_table_buffer: defaults to C_NULL\nhit_shader_binding_table_buffer: defaults to C_NULL\ncallable_shader_binding_table_buffer: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_update_buffer","page":"API","title":"Vulkan.cmd_update_buffer","text":"cmd_update_buffer(command_buffer::CommandBuffer, dst_buffer::Buffer, dst_offset::Integer, data_size::Integer, data::Ptr{Cvoid})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\ndst_buffer::Buffer\ndst_offset::Integer\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_wait_events","page":"API","title":"Vulkan.cmd_wait_events","text":"cmd_wait_events(command_buffer::CommandBuffer, events::AbstractArray{<:Event}, memory_barriers::AbstractArray{<:_MemoryBarrier}, buffer_memory_barriers::AbstractArray{<:_BufferMemoryBarrier}, image_memory_barriers::AbstractArray{<:_ImageMemoryBarrier}; src_stage_mask = 0, dst_stage_mask = 0)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nevents::AbstractArray{<:Event}\nmemory_barriers::AbstractArray{<:_MemoryBarrier}\nbuffer_memory_barriers::AbstractArray{<:_BufferMemoryBarrier}\nimage_memory_barriers::AbstractArray{<:_ImageMemoryBarrier}\nsrc_stage_mask: defaults to 0\ndst_stage_mask: defaults to 0\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_wait_events_2_khr","page":"API","title":"Vulkan.cmd_wait_events_2_khr","text":"cmd_wait_events_2_khr(command_buffer::CommandBuffer, events::AbstractArray{<:Event}, dependency_infos::AbstractArray{<:_DependencyInfoKHR})::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nevents::AbstractArray{<:Event}\ndependency_infos::AbstractArray{<:_DependencyInfoKHR}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_write_acceleration_structures_properties_khr","page":"API","title":"Vulkan.cmd_write_acceleration_structures_properties_khr","text":"cmd_write_acceleration_structures_properties_khr(command_buffer::CommandBuffer, acceleration_structures::AbstractArray{<:AccelerationStructureKHR}, query_type::QueryType, query_pool::QueryPool, first_query::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nacceleration_structures::AbstractArray{<:AccelerationStructureKHR}\nquery_type::QueryType\nquery_pool::QueryPool\nfirst_query::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_write_acceleration_structures_properties_nv","page":"API","title":"Vulkan.cmd_write_acceleration_structures_properties_nv","text":"cmd_write_acceleration_structures_properties_nv(command_buffer::CommandBuffer, acceleration_structures::AbstractArray{<:AccelerationStructureNV}, query_type::QueryType, query_pool::QueryPool, first_query::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nacceleration_structures::AbstractArray{<:AccelerationStructureNV}\nquery_type::QueryType\nquery_pool::QueryPool\nfirst_query::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_write_buffer_marker_2_amd","page":"API","title":"Vulkan.cmd_write_buffer_marker_2_amd","text":"cmd_write_buffer_marker_2_amd(command_buffer::CommandBuffer, stage::Integer, dst_buffer::Buffer, dst_offset::Integer, marker::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nstage::Integer\ndst_buffer::Buffer\ndst_offset::Integer\nmarker::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_write_buffer_marker_amd","page":"API","title":"Vulkan.cmd_write_buffer_marker_amd","text":"cmd_write_buffer_marker_amd(command_buffer::CommandBuffer, pipeline_stage::PipelineStageFlag, dst_buffer::Buffer, dst_offset::Integer, marker::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\npipeline_stage::PipelineStageFlag\ndst_buffer::Buffer\ndst_offset::Integer\nmarker::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_write_timestamp","page":"API","title":"Vulkan.cmd_write_timestamp","text":"cmd_write_timestamp(command_buffer::CommandBuffer, pipeline_stage::PipelineStageFlag, query_pool::QueryPool, query::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\npipeline_stage::PipelineStageFlag\nquery_pool::QueryPool\nquery::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.cmd_write_timestamp_2_khr","page":"API","title":"Vulkan.cmd_write_timestamp_2_khr","text":"cmd_write_timestamp_2_khr(command_buffer::CommandBuffer, stage::Integer, query_pool::QueryPool, query::Integer)::Cvoid\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nstage::Integer\nquery_pool::QueryPool\nquery::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.compile_deferred_nv","page":"API","title":"Vulkan.compile_deferred_nv","text":"compile_deferred_nv(device::Device, pipeline::Pipeline, shader::Integer)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\npipeline::Pipeline\nshader::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.copy_acceleration_structure_khr","page":"API","title":"Vulkan.copy_acceleration_structure_khr","text":"copy_acceleration_structure_khr(device::Device, info::_CopyAccelerationStructureInfoKHR; deferred_operation = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nOPERATION_DEFERRED_KHR\nOPERATION_NOT_DEFERRED_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ninfo::_CopyAccelerationStructureInfoKHR\ndeferred_operation: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.copy_acceleration_structure_to_memory_khr","page":"API","title":"Vulkan.copy_acceleration_structure_to_memory_khr","text":"copy_acceleration_structure_to_memory_khr(device::Device, info::_CopyAccelerationStructureToMemoryInfoKHR; deferred_operation = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nOPERATION_DEFERRED_KHR\nOPERATION_NOT_DEFERRED_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ninfo::_CopyAccelerationStructureToMemoryInfoKHR\ndeferred_operation: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.copy_memory_to_acceleration_structure_khr","page":"API","title":"Vulkan.copy_memory_to_acceleration_structure_khr","text":"copy_memory_to_acceleration_structure_khr(device::Device, info::_CopyMemoryToAccelerationStructureInfoKHR; deferred_operation = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nOPERATION_DEFERRED_KHR\nOPERATION_NOT_DEFERRED_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ninfo::_CopyMemoryToAccelerationStructureInfoKHR\ndeferred_operation: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_acceleration_structure_khr","page":"API","title":"Vulkan.create_acceleration_structure_khr","text":"create_acceleration_structure_khr(device::Device, create_info::_AccelerationStructureCreateInfoKHR; allocator = C_NULL)::ResultTypes.Result{AccelerationStructureKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR\n\nArguments:\n\ndevice::Device\ncreate_info::_AccelerationStructureCreateInfoKHR\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_acceleration_structure_nv","page":"API","title":"Vulkan.create_acceleration_structure_nv","text":"create_acceleration_structure_nv(device::Device, create_info::_AccelerationStructureCreateInfoNV; allocator = C_NULL)::ResultTypes.Result{AccelerationStructureNV, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice::Device\ncreate_info::_AccelerationStructureCreateInfoNV\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_android_surface_khr","page":"API","title":"Vulkan.create_android_surface_khr","text":"create_android_surface_khr(instance::Instance, create_info::_AndroidSurfaceCreateInfoKHR; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_NATIVE_WINDOW_IN_USE_KHR\n\nArguments:\n\ninstance::Instance\ncreate_info::_AndroidSurfaceCreateInfoKHR\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_buffer","page":"API","title":"Vulkan.create_buffer","text":"create_buffer(device::Device, create_info::_BufferCreateInfo; allocator = C_NULL)::ResultTypes.Result{Buffer, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR\n\nArguments:\n\ndevice::Device\ncreate_info::_BufferCreateInfo\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_buffer_view","page":"API","title":"Vulkan.create_buffer_view","text":"create_buffer_view(device::Device, create_info::_BufferViewCreateInfo; allocator = C_NULL)::ResultTypes.Result{BufferView, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ncreate_info::_BufferViewCreateInfo\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_command_pool","page":"API","title":"Vulkan.create_command_pool","text":"create_command_pool(device::Device, create_info::_CommandPoolCreateInfo; allocator = C_NULL)::ResultTypes.Result{CommandPool, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ncreate_info::_CommandPoolCreateInfo\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_compute_pipelines","page":"API","title":"Vulkan.create_compute_pipelines","text":"create_compute_pipelines(device::Device, create_infos::AbstractArray{<:_ComputePipelineCreateInfo}; pipeline_cache = C_NULL, allocator = C_NULL)::ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nPIPELINE_COMPILE_REQUIRED_EXT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_SHADER_NV\n\nArguments:\n\ndevice::Device\ncreate_infos::AbstractArray{<:_ComputePipelineCreateInfo}\npipeline_cache: defaults to C_NULL\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_debug_report_callback_ext","page":"API","title":"Vulkan.create_debug_report_callback_ext","text":"create_debug_report_callback_ext(instance::Instance, create_info::_DebugReportCallbackCreateInfoEXT; allocator = C_NULL)::ResultTypes.Result{DebugReportCallbackEXT, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ninstance::Instance\ncreate_info::_DebugReportCallbackCreateInfoEXT\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_debug_utils_messenger_ext","page":"API","title":"Vulkan.create_debug_utils_messenger_ext","text":"create_debug_utils_messenger_ext(instance::Instance, create_info::_DebugUtilsMessengerCreateInfoEXT; allocator = C_NULL)::ResultTypes.Result{DebugUtilsMessengerEXT, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ninstance::Instance\ncreate_info::_DebugUtilsMessengerCreateInfoEXT\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_deferred_operation_khr","page":"API","title":"Vulkan.create_deferred_operation_khr","text":"create_deferred_operation_khr(device::Device; allocator = C_NULL)::ResultTypes.Result{DeferredOperationKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice::Device\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_descriptor_pool","page":"API","title":"Vulkan.create_descriptor_pool","text":"create_descriptor_pool(device::Device, create_info::_DescriptorPoolCreateInfo; allocator = C_NULL)::ResultTypes.Result{DescriptorPool, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_FRAGMENTATION_EXT\n\nArguments:\n\ndevice::Device\ncreate_info::_DescriptorPoolCreateInfo\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_descriptor_set_layout","page":"API","title":"Vulkan.create_descriptor_set_layout","text":"create_descriptor_set_layout(device::Device, create_info::_DescriptorSetLayoutCreateInfo; allocator = C_NULL)::ResultTypes.Result{DescriptorSetLayout, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ncreate_info::_DescriptorSetLayoutCreateInfo\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_descriptor_update_template","page":"API","title":"Vulkan.create_descriptor_update_template","text":"create_descriptor_update_template(device::Device, create_info::_DescriptorUpdateTemplateCreateInfo; allocator = C_NULL)::ResultTypes.Result{DescriptorUpdateTemplate, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ncreate_info::_DescriptorUpdateTemplateCreateInfo\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_device","page":"API","title":"Vulkan.create_device","text":"create_device(physical_device::PhysicalDevice, create_info::_DeviceCreateInfo; allocator = C_NULL)::ResultTypes.Result{Device, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\nERROR_EXTENSION_NOT_PRESENT\nERROR_FEATURE_NOT_PRESENT\nERROR_TOO_MANY_OBJECTS\nERROR_DEVICE_LOST\n\nArguments:\n\nphysical_device::PhysicalDevice\ncreate_info::_DeviceCreateInfo\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_direct_fb_surface_ext","page":"API","title":"Vulkan.create_direct_fb_surface_ext","text":"create_direct_fb_surface_ext(instance::Instance, create_info::_DirectFBSurfaceCreateInfoEXT; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance::Instance\ncreate_info::_DirectFBSurfaceCreateInfoEXT\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_display_mode_khr","page":"API","title":"Vulkan.create_display_mode_khr","text":"create_display_mode_khr(physical_device::PhysicalDevice, display::DisplayKHR, create_info::_DisplayModeCreateInfoKHR; allocator = C_NULL)::ResultTypes.Result{DisplayModeKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\nphysical_device::PhysicalDevice\ndisplay::DisplayKHR (externsync)\ncreate_info::_DisplayModeCreateInfoKHR\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_display_plane_surface_khr","page":"API","title":"Vulkan.create_display_plane_surface_khr","text":"create_display_plane_surface_khr(instance::Instance, create_info::_DisplaySurfaceCreateInfoKHR; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance::Instance\ncreate_info::_DisplaySurfaceCreateInfoKHR\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_event","page":"API","title":"Vulkan.create_event","text":"create_event(device::Device, create_info::_EventCreateInfo; allocator = C_NULL)::ResultTypes.Result{Event, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ncreate_info::_EventCreateInfo\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_fence","page":"API","title":"Vulkan.create_fence","text":"create_fence(device::Device, create_info::_FenceCreateInfo; allocator = C_NULL)::ResultTypes.Result{Fence, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ncreate_info::_FenceCreateInfo\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_framebuffer","page":"API","title":"Vulkan.create_framebuffer","text":"create_framebuffer(device::Device, create_info::_FramebufferCreateInfo; allocator = C_NULL)::ResultTypes.Result{Framebuffer, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ncreate_info::_FramebufferCreateInfo\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_graphics_pipelines","page":"API","title":"Vulkan.create_graphics_pipelines","text":"create_graphics_pipelines(device::Device, create_infos::AbstractArray{<:_GraphicsPipelineCreateInfo}; pipeline_cache = C_NULL, allocator = C_NULL)::ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nPIPELINE_COMPILE_REQUIRED_EXT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_SHADER_NV\n\nArguments:\n\ndevice::Device\ncreate_infos::AbstractArray{<:_GraphicsPipelineCreateInfo}\npipeline_cache: defaults to C_NULL\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_headless_surface_ext","page":"API","title":"Vulkan.create_headless_surface_ext","text":"create_headless_surface_ext(instance::Instance, create_info::_HeadlessSurfaceCreateInfoEXT; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance::Instance\ncreate_info::_HeadlessSurfaceCreateInfoEXT\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_image","page":"API","title":"Vulkan.create_image","text":"create_image(device::Device, create_info::_ImageCreateInfo; allocator = C_NULL)::ResultTypes.Result{Image, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ncreate_info::_ImageCreateInfo\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_image_pipe_surface_fuchsia","page":"API","title":"Vulkan.create_image_pipe_surface_fuchsia","text":"create_image_pipe_surface_fuchsia(instance::Instance, create_info::_ImagePipeSurfaceCreateInfoFUCHSIA; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance::Instance\ncreate_info::_ImagePipeSurfaceCreateInfoFUCHSIA\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_image_view","page":"API","title":"Vulkan.create_image_view","text":"create_image_view(device::Device, create_info::_ImageViewCreateInfo; allocator = C_NULL)::ResultTypes.Result{ImageView, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ncreate_info::_ImageViewCreateInfo\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_indirect_commands_layout_nv","page":"API","title":"Vulkan.create_indirect_commands_layout_nv","text":"create_indirect_commands_layout_nv(device::Device, create_info::_IndirectCommandsLayoutCreateInfoNV; allocator = C_NULL)::ResultTypes.Result{IndirectCommandsLayoutNV, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ncreate_info::_IndirectCommandsLayoutCreateInfoNV\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_instance","page":"API","title":"Vulkan.create_instance","text":"create_instance(create_info::_InstanceCreateInfo; allocator = C_NULL)::ResultTypes.Result{Instance, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\nERROR_LAYER_NOT_PRESENT\nERROR_EXTENSION_NOT_PRESENT\nERROR_INCOMPATIBLE_DRIVER\n\nArguments:\n\ncreate_info::_InstanceCreateInfo\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_ios_surface_mvk","page":"API","title":"Vulkan.create_ios_surface_mvk","text":"create_ios_surface_mvk(instance::Instance, create_info::_IOSSurfaceCreateInfoMVK; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_NATIVE_WINDOW_IN_USE_KHR\n\nArguments:\n\ninstance::Instance\ncreate_info::_IOSSurfaceCreateInfoMVK\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_mac_os_surface_mvk","page":"API","title":"Vulkan.create_mac_os_surface_mvk","text":"create_mac_os_surface_mvk(instance::Instance, create_info::_MacOSSurfaceCreateInfoMVK; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_NATIVE_WINDOW_IN_USE_KHR\n\nArguments:\n\ninstance::Instance\ncreate_info::_MacOSSurfaceCreateInfoMVK\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_metal_surface_ext","page":"API","title":"Vulkan.create_metal_surface_ext","text":"create_metal_surface_ext(instance::Instance, create_info::_MetalSurfaceCreateInfoEXT; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_NATIVE_WINDOW_IN_USE_KHR\n\nArguments:\n\ninstance::Instance\ncreate_info::_MetalSurfaceCreateInfoEXT\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_pipeline_cache","page":"API","title":"Vulkan.create_pipeline_cache","text":"create_pipeline_cache(device::Device, create_info::_PipelineCacheCreateInfo; allocator = C_NULL)::ResultTypes.Result{PipelineCache, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ncreate_info::_PipelineCacheCreateInfo\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_pipeline_layout","page":"API","title":"Vulkan.create_pipeline_layout","text":"create_pipeline_layout(device::Device, create_info::_PipelineLayoutCreateInfo; allocator = C_NULL)::ResultTypes.Result{PipelineLayout, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ncreate_info::_PipelineLayoutCreateInfo\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_private_data_slot_ext","page":"API","title":"Vulkan.create_private_data_slot_ext","text":"create_private_data_slot_ext(device::Device, create_info::_PrivateDataSlotCreateInfoEXT; allocator = C_NULL)::ResultTypes.Result{PrivateDataSlotEXT, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice::Device\ncreate_info::_PrivateDataSlotCreateInfoEXT\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_query_pool","page":"API","title":"Vulkan.create_query_pool","text":"create_query_pool(device::Device, create_info::_QueryPoolCreateInfo; allocator = C_NULL)::ResultTypes.Result{QueryPool, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ncreate_info::_QueryPoolCreateInfo\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_ray_tracing_pipelines_khr","page":"API","title":"Vulkan.create_ray_tracing_pipelines_khr","text":"create_ray_tracing_pipelines_khr(device::Device, create_infos::AbstractArray{<:_RayTracingPipelineCreateInfoKHR}; deferred_operation = C_NULL, pipeline_cache = C_NULL, allocator = C_NULL)::ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nOPERATION_DEFERRED_KHR\nOPERATION_NOT_DEFERRED_KHR\nPIPELINE_COMPILE_REQUIRED_EXT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_OPAQUE_CAPTURE_ADDRESS\n\nArguments:\n\ndevice::Device\ncreate_infos::AbstractArray{<:_RayTracingPipelineCreateInfoKHR}\ndeferred_operation: defaults to C_NULL\npipeline_cache: defaults to C_NULL\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_ray_tracing_pipelines_nv","page":"API","title":"Vulkan.create_ray_tracing_pipelines_nv","text":"create_ray_tracing_pipelines_nv(device::Device, create_infos::AbstractArray{<:_RayTracingPipelineCreateInfoNV}; pipeline_cache = C_NULL, allocator = C_NULL)::ResultTypes.Result{Tuple{Vector{Pipeline}, Result}, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nPIPELINE_COMPILE_REQUIRED_EXT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_SHADER_NV\n\nArguments:\n\ndevice::Device\ncreate_infos::AbstractArray{<:_RayTracingPipelineCreateInfoNV}\npipeline_cache: defaults to C_NULL\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_render_pass","page":"API","title":"Vulkan.create_render_pass","text":"create_render_pass(device::Device, create_info::_RenderPassCreateInfo; allocator = C_NULL)::ResultTypes.Result{RenderPass, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ncreate_info::_RenderPassCreateInfo\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_render_pass_2","page":"API","title":"Vulkan.create_render_pass_2","text":"create_render_pass_2(device::Device, create_info::_RenderPassCreateInfo2; allocator = C_NULL)::ResultTypes.Result{RenderPass, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ncreate_info::_RenderPassCreateInfo2\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_sampler","page":"API","title":"Vulkan.create_sampler","text":"create_sampler(device::Device, create_info::_SamplerCreateInfo; allocator = C_NULL)::ResultTypes.Result{Sampler, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ncreate_info::_SamplerCreateInfo\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_sampler_ycbcr_conversion","page":"API","title":"Vulkan.create_sampler_ycbcr_conversion","text":"create_sampler_ycbcr_conversion(device::Device, create_info::_SamplerYcbcrConversionCreateInfo; allocator = C_NULL)::ResultTypes.Result{SamplerYcbcrConversion, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ncreate_info::_SamplerYcbcrConversionCreateInfo\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_screen_surface_qnx","page":"API","title":"Vulkan.create_screen_surface_qnx","text":"create_screen_surface_qnx(instance::Instance, create_info::_ScreenSurfaceCreateInfoQNX; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance::Instance\ncreate_info::_ScreenSurfaceCreateInfoQNX\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_semaphore","page":"API","title":"Vulkan.create_semaphore","text":"create_semaphore(device::Device, create_info::_SemaphoreCreateInfo; allocator = C_NULL)::ResultTypes.Result{Semaphore, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ncreate_info::_SemaphoreCreateInfo\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_shader_module","page":"API","title":"Vulkan.create_shader_module","text":"create_shader_module(device::Device, create_info::_ShaderModuleCreateInfo; allocator = C_NULL)::ResultTypes.Result{ShaderModule, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INVALID_SHADER_NV\n\nArguments:\n\ndevice::Device\ncreate_info::_ShaderModuleCreateInfo\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_shared_swapchains_khr","page":"API","title":"Vulkan.create_shared_swapchains_khr","text":"create_shared_swapchains_khr(device::Device, create_infos::AbstractArray{<:_SwapchainCreateInfoKHR}; allocator = C_NULL)::ResultTypes.Result{Vector{SwapchainKHR}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INCOMPATIBLE_DISPLAY_KHR\nERROR_DEVICE_LOST\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\ndevice::Device\ncreate_infos::AbstractArray{<:_SwapchainCreateInfoKHR} (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_stream_descriptor_surface_ggp","page":"API","title":"Vulkan.create_stream_descriptor_surface_ggp","text":"create_stream_descriptor_surface_ggp(instance::Instance, create_info::_StreamDescriptorSurfaceCreateInfoGGP; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_NATIVE_WINDOW_IN_USE_KHR\n\nArguments:\n\ninstance::Instance\ncreate_info::_StreamDescriptorSurfaceCreateInfoGGP\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_swapchain_khr","page":"API","title":"Vulkan.create_swapchain_khr","text":"create_swapchain_khr(device::Device, create_info::_SwapchainCreateInfoKHR; allocator = C_NULL)::ResultTypes.Result{SwapchainKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\nERROR_SURFACE_LOST_KHR\nERROR_NATIVE_WINDOW_IN_USE_KHR\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\ndevice::Device\ncreate_info::_SwapchainCreateInfoKHR (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_validation_cache_ext","page":"API","title":"Vulkan.create_validation_cache_ext","text":"create_validation_cache_ext(device::Device, create_info::_ValidationCacheCreateInfoEXT; allocator = C_NULL)::ResultTypes.Result{ValidationCacheEXT, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice::Device\ncreate_info::_ValidationCacheCreateInfoEXT\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_vi_surface_nn","page":"API","title":"Vulkan.create_vi_surface_nn","text":"create_vi_surface_nn(instance::Instance, create_info::_ViSurfaceCreateInfoNN; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_NATIVE_WINDOW_IN_USE_KHR\n\nArguments:\n\ninstance::Instance\ncreate_info::_ViSurfaceCreateInfoNN\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_video_session_khr","page":"API","title":"Vulkan.create_video_session_khr","text":"create_video_session_khr(device::Device, create_info::_VideoSessionCreateInfoKHR; allocator = C_NULL)::ResultTypes.Result{VideoSessionKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\nERROR_INCOMPATIBLE_DRIVER\nERROR_FEATURE_NOT_PRESENT\n\nArguments:\n\ndevice::Device\ncreate_info::_VideoSessionCreateInfoKHR\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_video_session_parameters_khr","page":"API","title":"Vulkan.create_video_session_parameters_khr","text":"create_video_session_parameters_khr(device::Device, create_info::_VideoSessionParametersCreateInfoKHR; allocator = C_NULL)::ResultTypes.Result{VideoSessionParametersKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_TOO_MANY_OBJECTS\n\nArguments:\n\ndevice::Device\ncreate_info::_VideoSessionParametersCreateInfoKHR\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_wayland_surface_khr","page":"API","title":"Vulkan.create_wayland_surface_khr","text":"create_wayland_surface_khr(instance::Instance, create_info::_WaylandSurfaceCreateInfoKHR; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance::Instance\ncreate_info::_WaylandSurfaceCreateInfoKHR\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_win_32_surface_khr","page":"API","title":"Vulkan.create_win_32_surface_khr","text":"create_win_32_surface_khr(instance::Instance, create_info::_Win32SurfaceCreateInfoKHR; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance::Instance\ncreate_info::_Win32SurfaceCreateInfoKHR\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_xcb_surface_khr","page":"API","title":"Vulkan.create_xcb_surface_khr","text":"create_xcb_surface_khr(instance::Instance, create_info::_XcbSurfaceCreateInfoKHR; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance::Instance\ncreate_info::_XcbSurfaceCreateInfoKHR\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.create_xlib_surface_khr","page":"API","title":"Vulkan.create_xlib_surface_khr","text":"create_xlib_surface_khr(instance::Instance, create_info::_XlibSurfaceCreateInfoKHR; allocator = C_NULL)::ResultTypes.Result{SurfaceKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ninstance::Instance\ncreate_info::_XlibSurfaceCreateInfoKHR\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.debug_marker_set_object_name_ext","page":"API","title":"Vulkan.debug_marker_set_object_name_ext","text":"debug_marker_set_object_name_ext(device::Device, name_info::_DebugMarkerObjectNameInfoEXT)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\nname_info::_DebugMarkerObjectNameInfoEXT (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.debug_marker_set_object_tag_ext","page":"API","title":"Vulkan.debug_marker_set_object_tag_ext","text":"debug_marker_set_object_tag_ext(device::Device, tag_info::_DebugMarkerObjectTagInfoEXT)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ntag_info::_DebugMarkerObjectTagInfoEXT (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.debug_report_message_ext","page":"API","title":"Vulkan.debug_report_message_ext","text":"debug_report_message_ext(instance::Instance, flags::DebugReportFlagEXT, object_type::DebugReportObjectTypeEXT, object::Integer, location::Integer, message_code::Integer, layer_prefix::AbstractString, message::AbstractString)::Cvoid\n\nArguments:\n\ninstance::Instance\nflags::DebugReportFlagEXT\nobject_type::DebugReportObjectTypeEXT\nobject::Integer\nlocation::Integer\nmessage_code::Integer\nlayer_prefix::AbstractString\nmessage::AbstractString\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.default_debug_callback-NTuple{4, Any}","page":"API","title":"Vulkan.default_debug_callback","text":"Default callback for debugging with DebugUtilsMessengerEXT.\n\ndefault_debug_callback(message_severity, message_type, callback_data_ptr, user_data_ptr) -> UInt32\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.deferred_operation_join_khr","page":"API","title":"Vulkan.deferred_operation_join_khr","text":"deferred_operation_join_khr(device::Device, operation::DeferredOperationKHR)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nTHREAD_DONE_KHR\nTHREAD_IDLE_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\noperation::DeferredOperationKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_acceleration_structure_khr","page":"API","title":"Vulkan.destroy_acceleration_structure_khr","text":"destroy_acceleration_structure_khr(device::Device, acceleration_structure::AccelerationStructureKHR; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\nacceleration_structure::AccelerationStructureKHR (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_acceleration_structure_nv","page":"API","title":"Vulkan.destroy_acceleration_structure_nv","text":"destroy_acceleration_structure_nv(device::Device, acceleration_structure::AccelerationStructureNV; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\nacceleration_structure::AccelerationStructureNV (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_buffer","page":"API","title":"Vulkan.destroy_buffer","text":"destroy_buffer(device::Device, buffer::Buffer; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\nbuffer::Buffer (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_buffer_view","page":"API","title":"Vulkan.destroy_buffer_view","text":"destroy_buffer_view(device::Device, buffer_view::BufferView; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\nbuffer_view::BufferView (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_command_pool","page":"API","title":"Vulkan.destroy_command_pool","text":"destroy_command_pool(device::Device, command_pool::CommandPool; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\ncommand_pool::CommandPool (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_debug_report_callback_ext","page":"API","title":"Vulkan.destroy_debug_report_callback_ext","text":"destroy_debug_report_callback_ext(instance::Instance, callback::DebugReportCallbackEXT; allocator = C_NULL)::Cvoid\n\nArguments:\n\ninstance::Instance\ncallback::DebugReportCallbackEXT (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_debug_utils_messenger_ext","page":"API","title":"Vulkan.destroy_debug_utils_messenger_ext","text":"destroy_debug_utils_messenger_ext(instance::Instance, messenger::DebugUtilsMessengerEXT; allocator = C_NULL)::Cvoid\n\nArguments:\n\ninstance::Instance\nmessenger::DebugUtilsMessengerEXT (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_deferred_operation_khr","page":"API","title":"Vulkan.destroy_deferred_operation_khr","text":"destroy_deferred_operation_khr(device::Device, operation::DeferredOperationKHR; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\noperation::DeferredOperationKHR (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_descriptor_pool","page":"API","title":"Vulkan.destroy_descriptor_pool","text":"destroy_descriptor_pool(device::Device, descriptor_pool::DescriptorPool; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\ndescriptor_pool::DescriptorPool (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_descriptor_set_layout","page":"API","title":"Vulkan.destroy_descriptor_set_layout","text":"destroy_descriptor_set_layout(device::Device, descriptor_set_layout::DescriptorSetLayout; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\ndescriptor_set_layout::DescriptorSetLayout (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_descriptor_update_template","page":"API","title":"Vulkan.destroy_descriptor_update_template","text":"destroy_descriptor_update_template(device::Device, descriptor_update_template::DescriptorUpdateTemplate; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\ndescriptor_update_template::DescriptorUpdateTemplate (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_device","page":"API","title":"Vulkan.destroy_device","text":"destroy_device(device::Device; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_event","page":"API","title":"Vulkan.destroy_event","text":"destroy_event(device::Device, event::Event; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\nevent::Event (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_fence","page":"API","title":"Vulkan.destroy_fence","text":"destroy_fence(device::Device, fence::Fence; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\nfence::Fence (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_framebuffer","page":"API","title":"Vulkan.destroy_framebuffer","text":"destroy_framebuffer(device::Device, framebuffer::Framebuffer; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\nframebuffer::Framebuffer (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_image","page":"API","title":"Vulkan.destroy_image","text":"destroy_image(device::Device, image::Image; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\nimage::Image (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_image_view","page":"API","title":"Vulkan.destroy_image_view","text":"destroy_image_view(device::Device, image_view::ImageView; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\nimage_view::ImageView (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_indirect_commands_layout_nv","page":"API","title":"Vulkan.destroy_indirect_commands_layout_nv","text":"destroy_indirect_commands_layout_nv(device::Device, indirect_commands_layout::IndirectCommandsLayoutNV; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\nindirect_commands_layout::IndirectCommandsLayoutNV (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_instance","page":"API","title":"Vulkan.destroy_instance","text":"destroy_instance(instance::Instance; allocator = C_NULL)::Cvoid\n\nArguments:\n\ninstance::Instance (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_pipeline","page":"API","title":"Vulkan.destroy_pipeline","text":"destroy_pipeline(device::Device, pipeline::Pipeline; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\npipeline::Pipeline (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_pipeline_cache","page":"API","title":"Vulkan.destroy_pipeline_cache","text":"destroy_pipeline_cache(device::Device, pipeline_cache::PipelineCache; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\npipeline_cache::PipelineCache (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_pipeline_layout","page":"API","title":"Vulkan.destroy_pipeline_layout","text":"destroy_pipeline_layout(device::Device, pipeline_layout::PipelineLayout; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\npipeline_layout::PipelineLayout (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_private_data_slot_ext","page":"API","title":"Vulkan.destroy_private_data_slot_ext","text":"destroy_private_data_slot_ext(device::Device, private_data_slot::PrivateDataSlotEXT; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\nprivate_data_slot::PrivateDataSlotEXT (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_query_pool","page":"API","title":"Vulkan.destroy_query_pool","text":"destroy_query_pool(device::Device, query_pool::QueryPool; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\nquery_pool::QueryPool (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_render_pass","page":"API","title":"Vulkan.destroy_render_pass","text":"destroy_render_pass(device::Device, render_pass::RenderPass; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\nrender_pass::RenderPass (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_sampler","page":"API","title":"Vulkan.destroy_sampler","text":"destroy_sampler(device::Device, sampler::Sampler; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\nsampler::Sampler (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_sampler_ycbcr_conversion","page":"API","title":"Vulkan.destroy_sampler_ycbcr_conversion","text":"destroy_sampler_ycbcr_conversion(device::Device, ycbcr_conversion::SamplerYcbcrConversion; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\nycbcr_conversion::SamplerYcbcrConversion (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_semaphore","page":"API","title":"Vulkan.destroy_semaphore","text":"destroy_semaphore(device::Device, semaphore::Semaphore; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\nsemaphore::Semaphore (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_shader_module","page":"API","title":"Vulkan.destroy_shader_module","text":"destroy_shader_module(device::Device, shader_module::ShaderModule; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\nshader_module::ShaderModule (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_surface_khr","page":"API","title":"Vulkan.destroy_surface_khr","text":"destroy_surface_khr(instance::Instance, surface::SurfaceKHR; allocator = C_NULL)::Cvoid\n\nArguments:\n\ninstance::Instance\nsurface::SurfaceKHR (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_swapchain_khr","page":"API","title":"Vulkan.destroy_swapchain_khr","text":"destroy_swapchain_khr(device::Device, swapchain::SwapchainKHR; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\nswapchain::SwapchainKHR (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_validation_cache_ext","page":"API","title":"Vulkan.destroy_validation_cache_ext","text":"destroy_validation_cache_ext(device::Device, validation_cache::ValidationCacheEXT; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\nvalidation_cache::ValidationCacheEXT (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_video_session_khr","page":"API","title":"Vulkan.destroy_video_session_khr","text":"destroy_video_session_khr(device::Device, video_session::VideoSessionKHR; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\nvideo_session::VideoSessionKHR\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.destroy_video_session_parameters_khr","page":"API","title":"Vulkan.destroy_video_session_parameters_khr","text":"destroy_video_session_parameters_khr(device::Device, video_session_parameters::VideoSessionParametersKHR; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\nvideo_session_parameters::VideoSessionParametersKHR\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.device_wait_idle","page":"API","title":"Vulkan.device_wait_idle","text":"device_wait_idle(device::Device)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice::Device\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.display_power_control_ext","page":"API","title":"Vulkan.display_power_control_ext","text":"display_power_control_ext(device::Device, display::DisplayKHR, display_power_info::_DisplayPowerInfoEXT)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice::Device\ndisplay::DisplayKHR\ndisplay_power_info::_DisplayPowerInfoEXT\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.end_command_buffer","page":"API","title":"Vulkan.end_command_buffer","text":"end_command_buffer(command_buffer::CommandBuffer)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.enumerate_device_extension_properties","page":"API","title":"Vulkan.enumerate_device_extension_properties","text":"enumerate_device_extension_properties(physical_device::PhysicalDevice; layer_name = C_NULL)::ResultTypes.Result{Vector{ExtensionProperties}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_LAYER_NOT_PRESENT\n\nArguments:\n\nphysical_device::PhysicalDevice\nlayer_name: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.enumerate_device_layer_properties","page":"API","title":"Vulkan.enumerate_device_layer_properties","text":"enumerate_device_layer_properties(physical_device::PhysicalDevice)::ResultTypes.Result{Vector{LayerProperties}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device::PhysicalDevice\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.enumerate_instance_extension_properties","page":"API","title":"Vulkan.enumerate_instance_extension_properties","text":"enumerate_instance_extension_properties(; layer_name = C_NULL)::ResultTypes.Result{Vector{ExtensionProperties}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_LAYER_NOT_PRESENT\n\nArguments:\n\nlayer_name: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.enumerate_instance_layer_properties","page":"API","title":"Vulkan.enumerate_instance_layer_properties","text":"enumerate_instance_layer_properties()::ResultTypes.Result{Vector{LayerProperties}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.enumerate_instance_version","page":"API","title":"Vulkan.enumerate_instance_version","text":"enumerate_instance_version()::ResultTypes.Result{VersionNumber, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.enumerate_physical_device_groups","page":"API","title":"Vulkan.enumerate_physical_device_groups","text":"enumerate_physical_device_groups(instance::Instance)::ResultTypes.Result{Vector{PhysicalDeviceGroupProperties}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\ninstance::Instance\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.enumerate_physical_device_queue_family_performance_query_counters_khr","page":"API","title":"Vulkan.enumerate_physical_device_queue_family_performance_query_counters_khr","text":"enumerate_physical_device_queue_family_performance_query_counters_khr(physical_device::PhysicalDevice, queue_family_index::Integer)::ResultTypes.Result{Tuple{Vector{PerformanceCounterKHR}, Vector{PerformanceCounterDescriptionKHR}}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\nphysical_device::PhysicalDevice\nqueue_family_index::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.enumerate_physical_devices","page":"API","title":"Vulkan.enumerate_physical_devices","text":"enumerate_physical_devices(instance::Instance)::ResultTypes.Result{Vector{PhysicalDevice}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\ninstance::Instance\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.find_queue_family-Tuple{PhysicalDevice, QueueFlag}","page":"API","title":"Vulkan.find_queue_family","text":"Find a queue index (starting at 0) from physical_device which matches the provided queue_capabilities.\n\njulia> find_queue_family(physical_device, QUEUE_COMPUTE_BIT & QUEUE_GRAPHICS_BIT)\n0\n\nfind_queue_family(physical_device::PhysicalDevice, queue_capabilities::QueueFlag) -> Int64\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.flush_mapped_memory_ranges","page":"API","title":"Vulkan.flush_mapped_memory_ranges","text":"flush_mapped_memory_ranges(device::Device, memory_ranges::AbstractArray{<:_MappedMemoryRange})::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\nmemory_ranges::AbstractArray{<:_MappedMemoryRange}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.free_command_buffers","page":"API","title":"Vulkan.free_command_buffers","text":"free_command_buffers(device::Device, command_pool::CommandPool, command_buffers::AbstractArray{<:CommandBuffer})::Cvoid\n\nArguments:\n\ndevice::Device\ncommand_pool::CommandPool (externsync)\ncommand_buffers::AbstractArray{<:CommandBuffer} (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.free_descriptor_sets","page":"API","title":"Vulkan.free_descriptor_sets","text":"free_descriptor_sets(device::Device, descriptor_pool::DescriptorPool, descriptor_sets::AbstractArray{<:DescriptorSet})::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nArguments:\n\ndevice::Device\ndescriptor_pool::DescriptorPool (externsync)\ndescriptor_sets::AbstractArray{<:DescriptorSet} (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.free_memory","page":"API","title":"Vulkan.free_memory","text":"free_memory(device::Device, memory::DeviceMemory; allocator = C_NULL)::Cvoid\n\nArguments:\n\ndevice::Device\nmemory::DeviceMemory (externsync)\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.from_vk","page":"API","title":"Vulkan.from_vk","text":"Convert a Vulkan type into its corresponding Julia type.\n\nExamples\n\njulia> from_vk(VersionNumber, UInt32(vk.VK_MAKE_VERSION(1, 2, 3)))\nv\"1.2.3\"\n\njulia> from_vk(String, (0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x00))\n\"hello\"\n\njulia> from_vk(Bool, UInt32(1))\ntrue\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_acceleration_structure_build_sizes_khr","page":"API","title":"Vulkan.get_acceleration_structure_build_sizes_khr","text":"get_acceleration_structure_build_sizes_khr(device::Device, build_type::AccelerationStructureBuildTypeKHR, build_info::_AccelerationStructureBuildGeometryInfoKHR; max_primitive_counts = C_NULL)::_AccelerationStructureBuildSizesInfoKHR\n\nArguments:\n\ndevice::Device\nbuild_type::AccelerationStructureBuildTypeKHR\nbuild_info::_AccelerationStructureBuildGeometryInfoKHR\nmax_primitive_counts: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_acceleration_structure_device_address_khr","page":"API","title":"Vulkan.get_acceleration_structure_device_address_khr","text":"get_acceleration_structure_device_address_khr(device::Device, info::_AccelerationStructureDeviceAddressInfoKHR)::UInt64\n\nArguments:\n\ndevice::Device\ninfo::_AccelerationStructureDeviceAddressInfoKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_acceleration_structure_handle_nv","page":"API","title":"Vulkan.get_acceleration_structure_handle_nv","text":"get_acceleration_structure_handle_nv(device::Device, acceleration_structure::AccelerationStructureNV, data_size::Integer, data::Ptr{Cvoid})::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\nacceleration_structure::AccelerationStructureNV\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_acceleration_structure_memory_requirements_nv","page":"API","title":"Vulkan.get_acceleration_structure_memory_requirements_nv","text":"get_acceleration_structure_memory_requirements_nv(device::Device, info::_AccelerationStructureMemoryRequirementsInfoNV)::VkMemoryRequirements2KHR\n\nArguments:\n\ndevice::Device\ninfo::_AccelerationStructureMemoryRequirementsInfoNV\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_android_hardware_buffer_properties_android","page":"API","title":"Vulkan.get_android_hardware_buffer_properties_android","text":"get_android_hardware_buffer_properties_android(device::Device, buffer::vk.AHardwareBuffer)::ResultTypes.Result{AndroidHardwareBufferPropertiesANDROID, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE_KHR\n\nArguments:\n\ndevice::Device\nbuffer::vk.AHardwareBuffer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_buffer_device_address","page":"API","title":"Vulkan.get_buffer_device_address","text":"get_buffer_device_address(device::Device, info::_BufferDeviceAddressInfo)::UInt64\n\nArguments:\n\ndevice::Device\ninfo::_BufferDeviceAddressInfo\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_buffer_memory_requirements","page":"API","title":"Vulkan.get_buffer_memory_requirements","text":"get_buffer_memory_requirements(device::Device, buffer::Buffer)::MemoryRequirements\n\nArguments:\n\ndevice::Device\nbuffer::Buffer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_buffer_memory_requirements_2","page":"API","title":"Vulkan.get_buffer_memory_requirements_2","text":"get_buffer_memory_requirements_2(device::Device, info::_BufferMemoryRequirementsInfo2)::MemoryRequirements2\n\nArguments:\n\ndevice::Device\ninfo::_BufferMemoryRequirementsInfo2\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_buffer_opaque_capture_address","page":"API","title":"Vulkan.get_buffer_opaque_capture_address","text":"get_buffer_opaque_capture_address(device::Device, info::_BufferDeviceAddressInfo)::UInt64\n\nArguments:\n\ndevice::Device\ninfo::_BufferDeviceAddressInfo\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_calibrated_timestamps_ext","page":"API","title":"Vulkan.get_calibrated_timestamps_ext","text":"get_calibrated_timestamps_ext(device::Device, timestamp_infos::AbstractArray{<:_CalibratedTimestampInfoEXT})::ResultTypes.Result{Tuple{Vector{UInt64}, UInt64}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ntimestamp_infos::AbstractArray{<:_CalibratedTimestampInfoEXT}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_deferred_operation_max_concurrency_khr","page":"API","title":"Vulkan.get_deferred_operation_max_concurrency_khr","text":"get_deferred_operation_max_concurrency_khr(device::Device, operation::DeferredOperationKHR)::UInt32\n\nArguments:\n\ndevice::Device\noperation::DeferredOperationKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_deferred_operation_result_khr","page":"API","title":"Vulkan.get_deferred_operation_result_khr","text":"get_deferred_operation_result_khr(device::Device, operation::DeferredOperationKHR)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nNOT_READY\n\nArguments:\n\ndevice::Device\noperation::DeferredOperationKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_descriptor_set_layout_support","page":"API","title":"Vulkan.get_descriptor_set_layout_support","text":"get_descriptor_set_layout_support(device::Device, create_info::_DescriptorSetLayoutCreateInfo)::DescriptorSetLayoutSupport\n\nArguments:\n\ndevice::Device\ncreate_info::_DescriptorSetLayoutCreateInfo\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_device_acceleration_structure_compatibility_khr","page":"API","title":"Vulkan.get_device_acceleration_structure_compatibility_khr","text":"get_device_acceleration_structure_compatibility_khr(device::Device, version_info::_AccelerationStructureVersionInfoKHR)::AccelerationStructureCompatibilityKHR\n\nArguments:\n\ndevice::Device\nversion_info::_AccelerationStructureVersionInfoKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_device_group_peer_memory_features","page":"API","title":"Vulkan.get_device_group_peer_memory_features","text":"get_device_group_peer_memory_features(device::Device, heap_index::Integer, local_device_index::Integer, remote_device_index::Integer)::PeerMemoryFeatureFlag\n\nArguments:\n\ndevice::Device\nheap_index::Integer\nlocal_device_index::Integer\nremote_device_index::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_device_group_present_capabilities_khr","page":"API","title":"Vulkan.get_device_group_present_capabilities_khr","text":"get_device_group_present_capabilities_khr(device::Device)::ResultTypes.Result{DeviceGroupPresentCapabilitiesKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_device_group_surface_present_modes_2_ext","page":"API","title":"Vulkan.get_device_group_surface_present_modes_2_ext","text":"get_device_group_surface_present_modes_2_ext(device::Device, surface_info::_PhysicalDeviceSurfaceInfo2KHR, modes::DeviceGroupPresentModeFlagKHR)::ResultTypes.Result{DeviceGroupPresentModeFlagKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\ndevice::Device\nsurface_info::_PhysicalDeviceSurfaceInfo2KHR\nmodes::DeviceGroupPresentModeFlagKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_device_group_surface_present_modes_khr","page":"API","title":"Vulkan.get_device_group_surface_present_modes_khr","text":"get_device_group_surface_present_modes_khr(device::Device, surface::SurfaceKHR, modes::DeviceGroupPresentModeFlagKHR)::ResultTypes.Result{DeviceGroupPresentModeFlagKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\ndevice::Device\nsurface::SurfaceKHR (externsync)\nmodes::DeviceGroupPresentModeFlagKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_device_memory_commitment","page":"API","title":"Vulkan.get_device_memory_commitment","text":"get_device_memory_commitment(device::Device, memory::DeviceMemory)::UInt64\n\nArguments:\n\ndevice::Device\nmemory::DeviceMemory\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_device_memory_opaque_capture_address","page":"API","title":"Vulkan.get_device_memory_opaque_capture_address","text":"get_device_memory_opaque_capture_address(device::Device, info::_DeviceMemoryOpaqueCaptureAddressInfo)::UInt64\n\nArguments:\n\ndevice::Device\ninfo::_DeviceMemoryOpaqueCaptureAddressInfo\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_device_proc_addr","page":"API","title":"Vulkan.get_device_proc_addr","text":"get_device_proc_addr(device::Device, name::AbstractString)::FunctionPtr\n\nArguments:\n\ndevice::Device\nname::AbstractString\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_device_queue","page":"API","title":"Vulkan.get_device_queue","text":"get_device_queue(device::Device, queue_family_index::Integer, queue_index::Integer)::Queue\n\nArguments:\n\ndevice::Device\nqueue_family_index::Integer\nqueue_index::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_device_queue_2","page":"API","title":"Vulkan.get_device_queue_2","text":"get_device_queue_2(device::Device, queue_info::_DeviceQueueInfo2)::Queue\n\nArguments:\n\ndevice::Device\nqueue_info::_DeviceQueueInfo2\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_display_mode_properties_2_khr","page":"API","title":"Vulkan.get_display_mode_properties_2_khr","text":"get_display_mode_properties_2_khr(physical_device::PhysicalDevice, display::DisplayKHR)::ResultTypes.Result{Vector{DisplayModeProperties2KHR}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device::PhysicalDevice\ndisplay::DisplayKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_display_mode_properties_khr","page":"API","title":"Vulkan.get_display_mode_properties_khr","text":"get_display_mode_properties_khr(physical_device::PhysicalDevice, display::DisplayKHR)::ResultTypes.Result{Vector{DisplayModePropertiesKHR}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device::PhysicalDevice\ndisplay::DisplayKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_display_plane_capabilities_2_khr","page":"API","title":"Vulkan.get_display_plane_capabilities_2_khr","text":"get_display_plane_capabilities_2_khr(physical_device::PhysicalDevice, display_plane_info::_DisplayPlaneInfo2KHR)::ResultTypes.Result{DisplayPlaneCapabilities2KHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device::PhysicalDevice\ndisplay_plane_info::_DisplayPlaneInfo2KHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_display_plane_capabilities_khr","page":"API","title":"Vulkan.get_display_plane_capabilities_khr","text":"get_display_plane_capabilities_khr(physical_device::PhysicalDevice, mode::DisplayModeKHR, plane_index::Integer)::ResultTypes.Result{DisplayPlaneCapabilitiesKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device::PhysicalDevice\nmode::DisplayModeKHR (externsync)\nplane_index::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_display_plane_supported_displays_khr","page":"API","title":"Vulkan.get_display_plane_supported_displays_khr","text":"get_display_plane_supported_displays_khr(physical_device::PhysicalDevice, plane_index::Integer)::ResultTypes.Result{Vector{DisplayKHR}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device::PhysicalDevice\nplane_index::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_event_status","page":"API","title":"Vulkan.get_event_status","text":"get_event_status(device::Device, event::Event)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nEVENT_SET\nEVENT_RESET\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice::Device\nevent::Event\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_fence_fd_khr","page":"API","title":"Vulkan.get_fence_fd_khr","text":"get_fence_fd_khr(device::Device, get_fd_info::_FenceGetFdInfoKHR)::ResultTypes.Result{Int, VulkanError}\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice::Device\nget_fd_info::_FenceGetFdInfoKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_fence_status","page":"API","title":"Vulkan.get_fence_status","text":"get_fence_status(device::Device, fence::Fence)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nNOT_READY\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice::Device\nfence::Fence\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_fence_win_32_handle_khr","page":"API","title":"Vulkan.get_fence_win_32_handle_khr","text":"get_fence_win_32_handle_khr(device::Device, get_win_32_handle_info::_FenceGetWin32HandleInfoKHR, handle::vk.HANDLE)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice::Device\nget_win_32_handle_info::_FenceGetWin32HandleInfoKHR\nhandle::vk.HANDLE\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_generated_commands_memory_requirements_nv","page":"API","title":"Vulkan.get_generated_commands_memory_requirements_nv","text":"get_generated_commands_memory_requirements_nv(device::Device, info::_GeneratedCommandsMemoryRequirementsInfoNV)::MemoryRequirements2\n\nArguments:\n\ndevice::Device\ninfo::_GeneratedCommandsMemoryRequirementsInfoNV\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_image_drm_format_modifier_properties_ext","page":"API","title":"Vulkan.get_image_drm_format_modifier_properties_ext","text":"get_image_drm_format_modifier_properties_ext(device::Device, image::Image)::ResultTypes.Result{ImageDrmFormatModifierPropertiesEXT, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice::Device\nimage::Image\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_image_memory_requirements","page":"API","title":"Vulkan.get_image_memory_requirements","text":"get_image_memory_requirements(device::Device, image::Image)::MemoryRequirements\n\nArguments:\n\ndevice::Device\nimage::Image\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_image_memory_requirements_2","page":"API","title":"Vulkan.get_image_memory_requirements_2","text":"get_image_memory_requirements_2(device::Device, info::_ImageMemoryRequirementsInfo2)::MemoryRequirements2\n\nArguments:\n\ndevice::Device\ninfo::_ImageMemoryRequirementsInfo2\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_image_sparse_memory_requirements","page":"API","title":"Vulkan.get_image_sparse_memory_requirements","text":"get_image_sparse_memory_requirements(device::Device, image::Image)::Vector{SparseImageMemoryRequirements}\n\nArguments:\n\ndevice::Device\nimage::Image\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_image_sparse_memory_requirements_2","page":"API","title":"Vulkan.get_image_sparse_memory_requirements_2","text":"get_image_sparse_memory_requirements_2(device::Device, info::_ImageSparseMemoryRequirementsInfo2)::Vector{SparseImageMemoryRequirements2}\n\nArguments:\n\ndevice::Device\ninfo::_ImageSparseMemoryRequirementsInfo2\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_image_subresource_layout","page":"API","title":"Vulkan.get_image_subresource_layout","text":"get_image_subresource_layout(device::Device, image::Image, subresource::_ImageSubresource)::SubresourceLayout\n\nArguments:\n\ndevice::Device\nimage::Image\nsubresource::_ImageSubresource\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_image_view_address_nvx","page":"API","title":"Vulkan.get_image_view_address_nvx","text":"get_image_view_address_nvx(device::Device, image_view::ImageView)::ResultTypes.Result{ImageViewAddressPropertiesNVX, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_UNKNOWN\n\nArguments:\n\ndevice::Device\nimage_view::ImageView\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_image_view_handle_nvx","page":"API","title":"Vulkan.get_image_view_handle_nvx","text":"get_image_view_handle_nvx(device::Device, info::_ImageViewHandleInfoNVX)::UInt32\n\nArguments:\n\ndevice::Device\ninfo::_ImageViewHandleInfoNVX\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_instance_proc_addr","page":"API","title":"Vulkan.get_instance_proc_addr","text":"get_instance_proc_addr(name::AbstractString; instance = C_NULL)::FunctionPtr\n\nArguments:\n\nname::AbstractString\ninstance: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_memory_android_hardware_buffer_android","page":"API","title":"Vulkan.get_memory_android_hardware_buffer_android","text":"get_memory_android_hardware_buffer_android(device::Device, info::_MemoryGetAndroidHardwareBufferInfoANDROID)::ResultTypes.Result{vk.AHardwareBuffer, VulkanError}\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice::Device\ninfo::_MemoryGetAndroidHardwareBufferInfoANDROID\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_memory_fd_khr","page":"API","title":"Vulkan.get_memory_fd_khr","text":"get_memory_fd_khr(device::Device, get_fd_info::_MemoryGetFdInfoKHR)::ResultTypes.Result{Int, VulkanError}\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice::Device\nget_fd_info::_MemoryGetFdInfoKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_memory_fd_properties_khr","page":"API","title":"Vulkan.get_memory_fd_properties_khr","text":"get_memory_fd_properties_khr(device::Device, handle_type::ExternalMemoryHandleTypeFlag, fd::Integer)::ResultTypes.Result{MemoryFdPropertiesKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\n\nArguments:\n\ndevice::Device\nhandle_type::ExternalMemoryHandleTypeFlag\nfd::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_memory_host_pointer_properties_ext","page":"API","title":"Vulkan.get_memory_host_pointer_properties_ext","text":"get_memory_host_pointer_properties_ext(device::Device, handle_type::ExternalMemoryHandleTypeFlag, host_pointer::Ptr{Cvoid})::ResultTypes.Result{MemoryHostPointerPropertiesEXT, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\n\nArguments:\n\ndevice::Device\nhandle_type::ExternalMemoryHandleTypeFlag\nhost_pointer::Ptr{Cvoid}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_memory_win_32_handle_khr","page":"API","title":"Vulkan.get_memory_win_32_handle_khr","text":"get_memory_win_32_handle_khr(device::Device, get_win_32_handle_info::_MemoryGetWin32HandleInfoKHR, handle::vk.HANDLE)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice::Device\nget_win_32_handle_info::_MemoryGetWin32HandleInfoKHR\nhandle::vk.HANDLE\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_memory_win_32_handle_nv","page":"API","title":"Vulkan.get_memory_win_32_handle_nv","text":"get_memory_win_32_handle_nv(device::Device, memory::DeviceMemory, handle_type::ExternalMemoryHandleTypeFlagNV, handle::vk.HANDLE)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice::Device\nmemory::DeviceMemory\nhandle_type::ExternalMemoryHandleTypeFlagNV\nhandle::vk.HANDLE\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_memory_win_32_handle_properties_khr","page":"API","title":"Vulkan.get_memory_win_32_handle_properties_khr","text":"get_memory_win_32_handle_properties_khr(device::Device, handle_type::ExternalMemoryHandleTypeFlag, handle::vk.HANDLE)::ResultTypes.Result{MemoryWin32HandlePropertiesKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\n\nArguments:\n\ndevice::Device\nhandle_type::ExternalMemoryHandleTypeFlag\nhandle::vk.HANDLE\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_memory_zircon_handle_fuchsia","page":"API","title":"Vulkan.get_memory_zircon_handle_fuchsia","text":"get_memory_zircon_handle_fuchsia(device::Device, get_zircon_handle_info::_MemoryGetZirconHandleInfoFUCHSIA, zircon_handle::vk.zx_handle_t)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice::Device\nget_zircon_handle_info::_MemoryGetZirconHandleInfoFUCHSIA\nzircon_handle::vk.zx_handle_t\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_memory_zircon_handle_properties_fuchsia","page":"API","title":"Vulkan.get_memory_zircon_handle_properties_fuchsia","text":"get_memory_zircon_handle_properties_fuchsia(device::Device, handle_type::ExternalMemoryHandleTypeFlag, zircon_handle::vk.zx_handle_t)::ResultTypes.Result{MemoryZirconHandlePropertiesFUCHSIA, VulkanError}\n\nReturn codes:\n\nError:\nERROR_INVALID_EXTERNAL_HANDLE\n\nArguments:\n\ndevice::Device\nhandle_type::ExternalMemoryHandleTypeFlag\nzircon_handle::vk.zx_handle_t\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_past_presentation_timing_google","page":"API","title":"Vulkan.get_past_presentation_timing_google","text":"get_past_presentation_timing_google(device::Device, swapchain::SwapchainKHR)::ResultTypes.Result{Vector{PastPresentationTimingGOOGLE}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\ndevice::Device\nswapchain::SwapchainKHR (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_performance_parameter_intel","page":"API","title":"Vulkan.get_performance_parameter_intel","text":"get_performance_parameter_intel(device::Device, parameter::PerformanceParameterTypeINTEL)::ResultTypes.Result{_PerformanceValueINTEL, VulkanError}\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice::Device\nparameter::PerformanceParameterTypeINTEL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_calibrateable_time_domains_ext","page":"API","title":"Vulkan.get_physical_device_calibrateable_time_domains_ext","text":"get_physical_device_calibrateable_time_domains_ext(physical_device::PhysicalDevice)::ResultTypes.Result{Vector{TimeDomainEXT}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device::PhysicalDevice\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_cooperative_matrix_properties_nv","page":"API","title":"Vulkan.get_physical_device_cooperative_matrix_properties_nv","text":"get_physical_device_cooperative_matrix_properties_nv(physical_device::PhysicalDevice)::ResultTypes.Result{Vector{_CooperativeMatrixPropertiesNV}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device::PhysicalDevice\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_direct_fb_presentation_support_ext","page":"API","title":"Vulkan.get_physical_device_direct_fb_presentation_support_ext","text":"get_physical_device_direct_fb_presentation_support_ext(physical_device::PhysicalDevice, queue_family_index::Integer, dfb::vk.IDirectFB)::Bool\n\nArguments:\n\nphysical_device::PhysicalDevice\nqueue_family_index::Integer\ndfb::vk.IDirectFB\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_display_plane_properties_2_khr","page":"API","title":"Vulkan.get_physical_device_display_plane_properties_2_khr","text":"get_physical_device_display_plane_properties_2_khr(physical_device::PhysicalDevice)::ResultTypes.Result{Vector{DisplayPlaneProperties2KHR}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device::PhysicalDevice\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_display_plane_properties_khr","page":"API","title":"Vulkan.get_physical_device_display_plane_properties_khr","text":"get_physical_device_display_plane_properties_khr(physical_device::PhysicalDevice)::ResultTypes.Result{Vector{DisplayPlanePropertiesKHR}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device::PhysicalDevice\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_display_properties_2_khr","page":"API","title":"Vulkan.get_physical_device_display_properties_2_khr","text":"get_physical_device_display_properties_2_khr(physical_device::PhysicalDevice)::ResultTypes.Result{Vector{DisplayProperties2KHR}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device::PhysicalDevice\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_display_properties_khr","page":"API","title":"Vulkan.get_physical_device_display_properties_khr","text":"get_physical_device_display_properties_khr(physical_device::PhysicalDevice)::ResultTypes.Result{Vector{DisplayPropertiesKHR}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device::PhysicalDevice\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_external_buffer_properties","page":"API","title":"Vulkan.get_physical_device_external_buffer_properties","text":"get_physical_device_external_buffer_properties(physical_device::PhysicalDevice, external_buffer_info::_PhysicalDeviceExternalBufferInfo)::ExternalBufferProperties\n\nArguments:\n\nphysical_device::PhysicalDevice\nexternal_buffer_info::_PhysicalDeviceExternalBufferInfo\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_external_fence_properties","page":"API","title":"Vulkan.get_physical_device_external_fence_properties","text":"get_physical_device_external_fence_properties(physical_device::PhysicalDevice, external_fence_info::_PhysicalDeviceExternalFenceInfo)::ExternalFenceProperties\n\nArguments:\n\nphysical_device::PhysicalDevice\nexternal_fence_info::_PhysicalDeviceExternalFenceInfo\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_external_image_format_properties_nv","page":"API","title":"Vulkan.get_physical_device_external_image_format_properties_nv","text":"get_physical_device_external_image_format_properties_nv(physical_device::PhysicalDevice, format::Format, type::ImageType, tiling::ImageTiling, usage::ImageUsageFlag; flags = 0, external_handle_type = 0)::ResultTypes.Result{ExternalImageFormatPropertiesNV, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_FORMAT_NOT_SUPPORTED\n\nArguments:\n\nphysical_device::PhysicalDevice\nformat::Format\ntype::ImageType\ntiling::ImageTiling\nusage::ImageUsageFlag\nflags: defaults to 0\nexternal_handle_type: defaults to 0\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_external_semaphore_properties","page":"API","title":"Vulkan.get_physical_device_external_semaphore_properties","text":"get_physical_device_external_semaphore_properties(physical_device::PhysicalDevice, external_semaphore_info::_PhysicalDeviceExternalSemaphoreInfo)::ExternalSemaphoreProperties\n\nArguments:\n\nphysical_device::PhysicalDevice\nexternal_semaphore_info::_PhysicalDeviceExternalSemaphoreInfo\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_features","page":"API","title":"Vulkan.get_physical_device_features","text":"get_physical_device_features(physical_device::PhysicalDevice)::_PhysicalDeviceFeatures\n\nArguments:\n\nphysical_device::PhysicalDevice\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_features_2","page":"API","title":"Vulkan.get_physical_device_features_2","text":"get_physical_device_features_2(physical_device::PhysicalDevice)::_PhysicalDeviceFeatures2\n\nArguments:\n\nphysical_device::PhysicalDevice\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_format_properties","page":"API","title":"Vulkan.get_physical_device_format_properties","text":"get_physical_device_format_properties(physical_device::PhysicalDevice, format::Format)::FormatProperties\n\nArguments:\n\nphysical_device::PhysicalDevice\nformat::Format\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_format_properties_2","page":"API","title":"Vulkan.get_physical_device_format_properties_2","text":"get_physical_device_format_properties_2(physical_device::PhysicalDevice, format::Format)::FormatProperties2\n\nArguments:\n\nphysical_device::PhysicalDevice\nformat::Format\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_fragment_shading_rates_khr","page":"API","title":"Vulkan.get_physical_device_fragment_shading_rates_khr","text":"get_physical_device_fragment_shading_rates_khr(physical_device::PhysicalDevice)::ResultTypes.Result{Vector{PhysicalDeviceFragmentShadingRateKHR}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\nphysical_device::PhysicalDevice\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_image_format_properties","page":"API","title":"Vulkan.get_physical_device_image_format_properties","text":"get_physical_device_image_format_properties(physical_device::PhysicalDevice, format::Format, type::ImageType, tiling::ImageTiling, usage::ImageUsageFlag; flags = 0)::ResultTypes.Result{ImageFormatProperties, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_FORMAT_NOT_SUPPORTED\n\nArguments:\n\nphysical_device::PhysicalDevice\nformat::Format\ntype::ImageType\ntiling::ImageTiling\nusage::ImageUsageFlag\nflags: defaults to 0\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_image_format_properties_2","page":"API","title":"Vulkan.get_physical_device_image_format_properties_2","text":"get_physical_device_image_format_properties_2(physical_device::PhysicalDevice, image_format_info::_PhysicalDeviceImageFormatInfo2)::ResultTypes.Result{ImageFormatProperties2, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_FORMAT_NOT_SUPPORTED\n\nArguments:\n\nphysical_device::PhysicalDevice\nimage_format_info::_PhysicalDeviceImageFormatInfo2\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_memory_properties","page":"API","title":"Vulkan.get_physical_device_memory_properties","text":"get_physical_device_memory_properties(physical_device::PhysicalDevice)::PhysicalDeviceMemoryProperties\n\nArguments:\n\nphysical_device::PhysicalDevice\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_memory_properties_2","page":"API","title":"Vulkan.get_physical_device_memory_properties_2","text":"get_physical_device_memory_properties_2(physical_device::PhysicalDevice)::PhysicalDeviceMemoryProperties2\n\nArguments:\n\nphysical_device::PhysicalDevice\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_multisample_properties_ext","page":"API","title":"Vulkan.get_physical_device_multisample_properties_ext","text":"get_physical_device_multisample_properties_ext(physical_device::PhysicalDevice, samples::SampleCountFlag)::MultisamplePropertiesEXT\n\nArguments:\n\nphysical_device::PhysicalDevice\nsamples::SampleCountFlag\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_present_rectangles_khr","page":"API","title":"Vulkan.get_physical_device_present_rectangles_khr","text":"get_physical_device_present_rectangles_khr(physical_device::PhysicalDevice, surface::SurfaceKHR)::ResultTypes.Result{Vector{_Rect2D}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device::PhysicalDevice\nsurface::SurfaceKHR (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_properties","page":"API","title":"Vulkan.get_physical_device_properties","text":"get_physical_device_properties(physical_device::PhysicalDevice)::PhysicalDeviceProperties\n\nArguments:\n\nphysical_device::PhysicalDevice\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_properties_2","page":"API","title":"Vulkan.get_physical_device_properties_2","text":"get_physical_device_properties_2(physical_device::PhysicalDevice)::PhysicalDeviceProperties2\n\nArguments:\n\nphysical_device::PhysicalDevice\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_queue_family_performance_query_passes_khr","page":"API","title":"Vulkan.get_physical_device_queue_family_performance_query_passes_khr","text":"get_physical_device_queue_family_performance_query_passes_khr(physical_device::PhysicalDevice, performance_query_create_info::_QueryPoolPerformanceCreateInfoKHR)::UInt32\n\nArguments:\n\nphysical_device::PhysicalDevice\nperformance_query_create_info::_QueryPoolPerformanceCreateInfoKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_queue_family_properties","page":"API","title":"Vulkan.get_physical_device_queue_family_properties","text":"get_physical_device_queue_family_properties(physical_device::PhysicalDevice)::Vector{QueueFamilyProperties}\n\nArguments:\n\nphysical_device::PhysicalDevice\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_queue_family_properties_2","page":"API","title":"Vulkan.get_physical_device_queue_family_properties_2","text":"get_physical_device_queue_family_properties_2(physical_device::PhysicalDevice)::Vector{QueueFamilyProperties2}\n\nArguments:\n\nphysical_device::PhysicalDevice\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_screen_presentation_support_qnx","page":"API","title":"Vulkan.get_physical_device_screen_presentation_support_qnx","text":"get_physical_device_screen_presentation_support_qnx(physical_device::PhysicalDevice, queue_family_index::Integer, window::vk._screen_window)::Bool\n\nArguments:\n\nphysical_device::PhysicalDevice\nqueue_family_index::Integer\nwindow::vk._screen_window\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_sparse_image_format_properties","page":"API","title":"Vulkan.get_physical_device_sparse_image_format_properties","text":"get_physical_device_sparse_image_format_properties(physical_device::PhysicalDevice, format::Format, type::ImageType, samples::SampleCountFlag, usage::ImageUsageFlag, tiling::ImageTiling)::Vector{SparseImageFormatProperties}\n\nArguments:\n\nphysical_device::PhysicalDevice\nformat::Format\ntype::ImageType\nsamples::SampleCountFlag\nusage::ImageUsageFlag\ntiling::ImageTiling\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_sparse_image_format_properties_2","page":"API","title":"Vulkan.get_physical_device_sparse_image_format_properties_2","text":"get_physical_device_sparse_image_format_properties_2(physical_device::PhysicalDevice, format_info::_PhysicalDeviceSparseImageFormatInfo2)::Vector{SparseImageFormatProperties2}\n\nArguments:\n\nphysical_device::PhysicalDevice\nformat_info::_PhysicalDeviceSparseImageFormatInfo2\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_supported_framebuffer_mixed_samples_combinations_nv","page":"API","title":"Vulkan.get_physical_device_supported_framebuffer_mixed_samples_combinations_nv","text":"get_physical_device_supported_framebuffer_mixed_samples_combinations_nv(physical_device::PhysicalDevice)::ResultTypes.Result{Vector{FramebufferMixedSamplesCombinationNV}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\nphysical_device::PhysicalDevice\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_surface_capabilities_2_ext","page":"API","title":"Vulkan.get_physical_device_surface_capabilities_2_ext","text":"get_physical_device_surface_capabilities_2_ext(physical_device::PhysicalDevice, surface::SurfaceKHR)::ResultTypes.Result{SurfaceCapabilities2EXT, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device::PhysicalDevice\nsurface::SurfaceKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_surface_capabilities_2_khr","page":"API","title":"Vulkan.get_physical_device_surface_capabilities_2_khr","text":"get_physical_device_surface_capabilities_2_khr(physical_device::PhysicalDevice, surface_info::_PhysicalDeviceSurfaceInfo2KHR)::ResultTypes.Result{SurfaceCapabilities2KHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device::PhysicalDevice\nsurface_info::_PhysicalDeviceSurfaceInfo2KHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_surface_capabilities_khr","page":"API","title":"Vulkan.get_physical_device_surface_capabilities_khr","text":"get_physical_device_surface_capabilities_khr(physical_device::PhysicalDevice, surface::SurfaceKHR)::ResultTypes.Result{SurfaceCapabilitiesKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device::PhysicalDevice\nsurface::SurfaceKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_surface_formats_2_khr","page":"API","title":"Vulkan.get_physical_device_surface_formats_2_khr","text":"get_physical_device_surface_formats_2_khr(physical_device::PhysicalDevice, surface_info::_PhysicalDeviceSurfaceInfo2KHR)::ResultTypes.Result{Vector{SurfaceFormat2KHR}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device::PhysicalDevice\nsurface_info::_PhysicalDeviceSurfaceInfo2KHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_surface_formats_khr","page":"API","title":"Vulkan.get_physical_device_surface_formats_khr","text":"get_physical_device_surface_formats_khr(physical_device::PhysicalDevice, surface::SurfaceKHR)::ResultTypes.Result{Vector{SurfaceFormatKHR}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device::PhysicalDevice\nsurface::SurfaceKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_surface_present_modes_2_ext","page":"API","title":"Vulkan.get_physical_device_surface_present_modes_2_ext","text":"get_physical_device_surface_present_modes_2_ext(physical_device::PhysicalDevice, surface_info::_PhysicalDeviceSurfaceInfo2KHR)::ResultTypes.Result{Vector{PresentModeKHR}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device::PhysicalDevice\nsurface_info::_PhysicalDeviceSurfaceInfo2KHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_surface_present_modes_khr","page":"API","title":"Vulkan.get_physical_device_surface_present_modes_khr","text":"get_physical_device_surface_present_modes_khr(physical_device::PhysicalDevice, surface::SurfaceKHR)::ResultTypes.Result{Vector{PresentModeKHR}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device::PhysicalDevice\nsurface::SurfaceKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_surface_support_khr","page":"API","title":"Vulkan.get_physical_device_surface_support_khr","text":"get_physical_device_surface_support_khr(physical_device::PhysicalDevice, queue_family_index::Integer, surface::SurfaceKHR)::ResultTypes.Result{Bool, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\nphysical_device::PhysicalDevice\nqueue_family_index::Integer\nsurface::SurfaceKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_tool_properties_ext","page":"API","title":"Vulkan.get_physical_device_tool_properties_ext","text":"get_physical_device_tool_properties_ext(physical_device::PhysicalDevice)::ResultTypes.Result{Vector{PhysicalDeviceToolPropertiesEXT}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\nphysical_device::PhysicalDevice\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_video_capabilities_khr","page":"API","title":"Vulkan.get_physical_device_video_capabilities_khr","text":"get_physical_device_video_capabilities_khr(physical_device::PhysicalDevice, video_profile::_VideoProfileKHR)::ResultTypes.Result{VideoCapabilitiesKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_EXTENSION_NOT_PRESENT\nERROR_INITIALIZATION_FAILED\nERROR_FEATURE_NOT_PRESENT\nERROR_FORMAT_NOT_SUPPORTED\n\nArguments:\n\nphysical_device::PhysicalDevice\nvideo_profile::_VideoProfileKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_video_format_properties_khr","page":"API","title":"Vulkan.get_physical_device_video_format_properties_khr","text":"get_physical_device_video_format_properties_khr(physical_device::PhysicalDevice, video_format_info::PhysicalDeviceVideoFormatInfoKHR)::ResultTypes.Result{Vector{VideoFormatPropertiesKHR}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_EXTENSION_NOT_PRESENT\nERROR_INITIALIZATION_FAILED\nERROR_FORMAT_NOT_SUPPORTED\n\nArguments:\n\nphysical_device::PhysicalDevice\nvideo_format_info::PhysicalDeviceVideoFormatInfoKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_wayland_presentation_support_khr","page":"API","title":"Vulkan.get_physical_device_wayland_presentation_support_khr","text":"get_physical_device_wayland_presentation_support_khr(physical_device::PhysicalDevice, queue_family_index::Integer, display::vk.wl_display)::Bool\n\nArguments:\n\nphysical_device::PhysicalDevice\nqueue_family_index::Integer\ndisplay::vk.wl_display\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_win_32_presentation_support_khr","page":"API","title":"Vulkan.get_physical_device_win_32_presentation_support_khr","text":"get_physical_device_win_32_presentation_support_khr(physical_device::PhysicalDevice, queue_family_index::Integer)::Bool\n\nArguments:\n\nphysical_device::PhysicalDevice\nqueue_family_index::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_xcb_presentation_support_khr","page":"API","title":"Vulkan.get_physical_device_xcb_presentation_support_khr","text":"get_physical_device_xcb_presentation_support_khr(physical_device::PhysicalDevice, queue_family_index::Integer, connection::vk.xcb_connection_t, visual_id::vk.xcb_visualid_t)::Bool\n\nArguments:\n\nphysical_device::PhysicalDevice\nqueue_family_index::Integer\nconnection::vk.xcb_connection_t\nvisual_id::vk.xcb_visualid_t\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_physical_device_xlib_presentation_support_khr","page":"API","title":"Vulkan.get_physical_device_xlib_presentation_support_khr","text":"get_physical_device_xlib_presentation_support_khr(physical_device::PhysicalDevice, queue_family_index::Integer, dpy::vk.Display, visual_id::vk.VisualID)::Bool\n\nArguments:\n\nphysical_device::PhysicalDevice\nqueue_family_index::Integer\ndpy::vk.Display\nvisual_id::vk.VisualID\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_pipeline_cache_data","page":"API","title":"Vulkan.get_pipeline_cache_data","text":"get_pipeline_cache_data(device::Device, pipeline_cache::PipelineCache)::ResultTypes.Result{Tuple{UInt, Ptr{Cvoid}}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\npipeline_cache::PipelineCache\n\nwarning: Warning\nThe pointer returned by this function holds memory owned by Julia. It is therefore your responsibility to free it after use (e.g. with Libc.free).\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_pipeline_executable_internal_representations_khr","page":"API","title":"Vulkan.get_pipeline_executable_internal_representations_khr","text":"get_pipeline_executable_internal_representations_khr(device::Device, executable_info::_PipelineExecutableInfoKHR)::ResultTypes.Result{Vector{PipelineExecutableInternalRepresentationKHR}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\nexecutable_info::_PipelineExecutableInfoKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_pipeline_executable_properties_khr","page":"API","title":"Vulkan.get_pipeline_executable_properties_khr","text":"get_pipeline_executable_properties_khr(device::Device, pipeline_info::_PipelineInfoKHR)::ResultTypes.Result{Vector{PipelineExecutablePropertiesKHR}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\npipeline_info::_PipelineInfoKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_pipeline_executable_statistics_khr","page":"API","title":"Vulkan.get_pipeline_executable_statistics_khr","text":"get_pipeline_executable_statistics_khr(device::Device, executable_info::_PipelineExecutableInfoKHR)::ResultTypes.Result{Vector{PipelineExecutableStatisticKHR}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\nexecutable_info::_PipelineExecutableInfoKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_private_data_ext","page":"API","title":"Vulkan.get_private_data_ext","text":"get_private_data_ext(device::Device, object_type::ObjectType, object_handle::Integer, private_data_slot::PrivateDataSlotEXT)::UInt64\n\nArguments:\n\ndevice::Device\nobject_type::ObjectType\nobject_handle::Integer\nprivate_data_slot::PrivateDataSlotEXT\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_query_pool_results","page":"API","title":"Vulkan.get_query_pool_results","text":"get_query_pool_results(device::Device, query_pool::QueryPool, first_query::Integer, query_count::Integer, data_size::Integer, data::Ptr{Cvoid}, stride::Integer; flags = 0)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nNOT_READY\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice::Device\nquery_pool::QueryPool\nfirst_query::Integer\nquery_count::Integer\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\nstride::Integer\nflags: defaults to 0\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_queue_checkpoint_data_2_nv","page":"API","title":"Vulkan.get_queue_checkpoint_data_2_nv","text":"get_queue_checkpoint_data_2_nv(queue::Queue)::Vector{CheckpointData2NV}\n\nArguments:\n\nqueue::Queue\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_queue_checkpoint_data_nv","page":"API","title":"Vulkan.get_queue_checkpoint_data_nv","text":"get_queue_checkpoint_data_nv(queue::Queue)::Vector{CheckpointDataNV}\n\nArguments:\n\nqueue::Queue\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_rand_r_output_display_ext","page":"API","title":"Vulkan.get_rand_r_output_display_ext","text":"get_rand_r_output_display_ext(physical_device::PhysicalDevice, dpy::vk.Display, rr_output::vk.RROutput)::ResultTypes.Result{DisplayKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\nphysical_device::PhysicalDevice\ndpy::vk.Display\nrr_output::vk.RROutput\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_ray_tracing_capture_replay_shader_group_handles_khr","page":"API","title":"Vulkan.get_ray_tracing_capture_replay_shader_group_handles_khr","text":"get_ray_tracing_capture_replay_shader_group_handles_khr(device::Device, pipeline::Pipeline, first_group::Integer, group_count::Integer, data_size::Integer, data::Ptr{Cvoid})::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\npipeline::Pipeline\nfirst_group::Integer\ngroup_count::Integer\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_ray_tracing_shader_group_handles_khr","page":"API","title":"Vulkan.get_ray_tracing_shader_group_handles_khr","text":"get_ray_tracing_shader_group_handles_khr(device::Device, pipeline::Pipeline, first_group::Integer, group_count::Integer, data_size::Integer, data::Ptr{Cvoid})::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\npipeline::Pipeline\nfirst_group::Integer\ngroup_count::Integer\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_ray_tracing_shader_group_stack_size_khr","page":"API","title":"Vulkan.get_ray_tracing_shader_group_stack_size_khr","text":"get_ray_tracing_shader_group_stack_size_khr(device::Device, pipeline::Pipeline, group::Integer, group_shader::ShaderGroupShaderKHR)::UInt64\n\nArguments:\n\ndevice::Device\npipeline::Pipeline\ngroup::Integer\ngroup_shader::ShaderGroupShaderKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_refresh_cycle_duration_google","page":"API","title":"Vulkan.get_refresh_cycle_duration_google","text":"get_refresh_cycle_duration_google(device::Device, swapchain::SwapchainKHR)::ResultTypes.Result{RefreshCycleDurationGOOGLE, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_DEVICE_LOST\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\ndevice::Device\nswapchain::SwapchainKHR (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_render_area_granularity","page":"API","title":"Vulkan.get_render_area_granularity","text":"get_render_area_granularity(device::Device, render_pass::RenderPass)::_Extent2D\n\nArguments:\n\ndevice::Device\nrender_pass::RenderPass\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_semaphore_counter_value","page":"API","title":"Vulkan.get_semaphore_counter_value","text":"get_semaphore_counter_value(device::Device, semaphore::Semaphore)::ResultTypes.Result{UInt64, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice::Device\nsemaphore::Semaphore\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_semaphore_fd_khr","page":"API","title":"Vulkan.get_semaphore_fd_khr","text":"get_semaphore_fd_khr(device::Device, get_fd_info::_SemaphoreGetFdInfoKHR)::ResultTypes.Result{Int, VulkanError}\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice::Device\nget_fd_info::_SemaphoreGetFdInfoKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_semaphore_win_32_handle_khr","page":"API","title":"Vulkan.get_semaphore_win_32_handle_khr","text":"get_semaphore_win_32_handle_khr(device::Device, get_win_32_handle_info::_SemaphoreGetWin32HandleInfoKHR, handle::vk.HANDLE)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice::Device\nget_win_32_handle_info::_SemaphoreGetWin32HandleInfoKHR\nhandle::vk.HANDLE\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_semaphore_zircon_handle_fuchsia","page":"API","title":"Vulkan.get_semaphore_zircon_handle_fuchsia","text":"get_semaphore_zircon_handle_fuchsia(device::Device, get_zircon_handle_info::_SemaphoreGetZirconHandleInfoFUCHSIA, zircon_handle::vk.zx_handle_t)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice::Device\nget_zircon_handle_info::_SemaphoreGetZirconHandleInfoFUCHSIA\nzircon_handle::vk.zx_handle_t\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_shader_info_amd","page":"API","title":"Vulkan.get_shader_info_amd","text":"get_shader_info_amd(device::Device, pipeline::Pipeline, shader_stage::ShaderStageFlag, info_type::ShaderInfoTypeAMD)::ResultTypes.Result{Tuple{UInt, Ptr{Cvoid}}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_FEATURE_NOT_PRESENT\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice::Device\npipeline::Pipeline\nshader_stage::ShaderStageFlag\ninfo_type::ShaderInfoTypeAMD\n\nwarning: Warning\nThe pointer returned by this function holds memory owned by Julia. It is therefore your responsibility to free it after use (e.g. with Libc.free).\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_swapchain_counter_ext","page":"API","title":"Vulkan.get_swapchain_counter_ext","text":"get_swapchain_counter_ext(device::Device, swapchain::SwapchainKHR, counter::SurfaceCounterFlagEXT)::ResultTypes.Result{UInt64, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\n\nArguments:\n\ndevice::Device\nswapchain::SwapchainKHR\ncounter::SurfaceCounterFlagEXT\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_swapchain_images_khr","page":"API","title":"Vulkan.get_swapchain_images_khr","text":"get_swapchain_images_khr(device::Device, swapchain::SwapchainKHR)::ResultTypes.Result{Vector{Image}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\nswapchain::SwapchainKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_swapchain_status_khr","page":"API","title":"Vulkan.get_swapchain_status_khr","text":"get_swapchain_status_khr(device::Device, swapchain::SwapchainKHR)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nSUBOPTIMAL_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\nERROR_SURFACE_LOST_KHR\nERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT\n\nArguments:\n\ndevice::Device\nswapchain::SwapchainKHR (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_validation_cache_data_ext","page":"API","title":"Vulkan.get_validation_cache_data_ext","text":"get_validation_cache_data_ext(device::Device, validation_cache::ValidationCacheEXT)::ResultTypes.Result{Tuple{UInt, Ptr{Cvoid}}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\nvalidation_cache::ValidationCacheEXT\n\nwarning: Warning\nThe pointer returned by this function holds memory owned by Julia. It is therefore your responsibility to free it after use (e.g. with Libc.free).\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_video_session_memory_requirements_khr","page":"API","title":"Vulkan.get_video_session_memory_requirements_khr","text":"get_video_session_memory_requirements_khr(device::Device, video_session::VideoSessionKHR)::ResultTypes.Result{Vector{_VideoGetMemoryPropertiesKHR}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\ndevice::Device\nvideo_session::VideoSessionKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.get_winrt_display_nv","page":"API","title":"Vulkan.get_winrt_display_nv","text":"get_winrt_display_nv(physical_device::PhysicalDevice, device_relative_id::Integer)::ResultTypes.Result{DisplayKHR, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_DEVICE_LOST\nERROR_INITIALIZATION_FAILED\n\nArguments:\n\nphysical_device::PhysicalDevice\ndevice_relative_id::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.import_fence_fd_khr","page":"API","title":"Vulkan.import_fence_fd_khr","text":"import_fence_fd_khr(device::Device, import_fence_fd_info::_ImportFenceFdInfoKHR)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\n\nArguments:\n\ndevice::Device\nimport_fence_fd_info::_ImportFenceFdInfoKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.import_fence_win_32_handle_khr","page":"API","title":"Vulkan.import_fence_win_32_handle_khr","text":"import_fence_win_32_handle_khr(device::Device, import_fence_win_32_handle_info::_ImportFenceWin32HandleInfoKHR)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\n\nArguments:\n\ndevice::Device\nimport_fence_win_32_handle_info::_ImportFenceWin32HandleInfoKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.import_semaphore_fd_khr","page":"API","title":"Vulkan.import_semaphore_fd_khr","text":"import_semaphore_fd_khr(device::Device, import_semaphore_fd_info::_ImportSemaphoreFdInfoKHR)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\n\nArguments:\n\ndevice::Device\nimport_semaphore_fd_info::_ImportSemaphoreFdInfoKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.import_semaphore_win_32_handle_khr","page":"API","title":"Vulkan.import_semaphore_win_32_handle_khr","text":"import_semaphore_win_32_handle_khr(device::Device, import_semaphore_win_32_handle_info::_ImportSemaphoreWin32HandleInfoKHR)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\n\nArguments:\n\ndevice::Device\nimport_semaphore_win_32_handle_info::_ImportSemaphoreWin32HandleInfoKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.import_semaphore_zircon_handle_fuchsia","page":"API","title":"Vulkan.import_semaphore_zircon_handle_fuchsia","text":"import_semaphore_zircon_handle_fuchsia(device::Device, import_semaphore_zircon_handle_info::_ImportSemaphoreZirconHandleInfoFUCHSIA)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_INVALID_EXTERNAL_HANDLE\n\nArguments:\n\ndevice::Device\nimport_semaphore_zircon_handle_info::_ImportSemaphoreZirconHandleInfoFUCHSIA\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.initialize_performance_api_intel","page":"API","title":"Vulkan.initialize_performance_api_intel","text":"initialize_performance_api_intel(device::Device, initialize_info::_InitializePerformanceApiInfoINTEL)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice::Device\ninitialize_info::_InitializePerformanceApiInfoINTEL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.invalidate_mapped_memory_ranges","page":"API","title":"Vulkan.invalidate_mapped_memory_ranges","text":"invalidate_mapped_memory_ranges(device::Device, memory_ranges::AbstractArray{<:_MappedMemoryRange})::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\nmemory_ranges::AbstractArray{<:_MappedMemoryRange}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.map_memory","page":"API","title":"Vulkan.map_memory","text":"map_memory(device::Device, memory::DeviceMemory, offset::Integer, size::Integer; flags = 0)::ResultTypes.Result{Ptr{Cvoid}, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_MEMORY_MAP_FAILED\n\nArguments:\n\ndevice::Device\nmemory::DeviceMemory (externsync)\noffset::Integer\nsize::Integer\nflags: defaults to 0\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.merge_pipeline_caches","page":"API","title":"Vulkan.merge_pipeline_caches","text":"merge_pipeline_caches(device::Device, dst_cache::PipelineCache, src_caches::AbstractArray{<:PipelineCache})::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ndst_cache::PipelineCache (externsync)\nsrc_caches::AbstractArray{<:PipelineCache}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.merge_validation_caches_ext","page":"API","title":"Vulkan.merge_validation_caches_ext","text":"merge_validation_caches_ext(device::Device, dst_cache::ValidationCacheEXT, src_caches::AbstractArray{<:ValidationCacheEXT})::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ndst_cache::ValidationCacheEXT (externsync)\nsrc_caches::AbstractArray{<:ValidationCacheEXT}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.pointer_length","page":"API","title":"Vulkan.pointer_length","text":"`pointer_length(val)`\n\nReturn the length val considering it as an array.\n\nDiffer from Base.length in that pointer_length(C_NULL) == 0 and that a RefArrays return the length of their roots.\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.queue_begin_debug_utils_label_ext","page":"API","title":"Vulkan.queue_begin_debug_utils_label_ext","text":"queue_begin_debug_utils_label_ext(queue::Queue, label_info::_DebugUtilsLabelEXT)::Cvoid\n\nArguments:\n\nqueue::Queue\nlabel_info::_DebugUtilsLabelEXT\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.queue_bind_sparse","page":"API","title":"Vulkan.queue_bind_sparse","text":"queue_bind_sparse(queue::Queue, bind_info::AbstractArray{<:_BindSparseInfo}; fence = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\nqueue::Queue (externsync)\nbind_info::AbstractArray{<:_BindSparseInfo} (externsync)\nfence: defaults to C_NULL (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.queue_end_debug_utils_label_ext","page":"API","title":"Vulkan.queue_end_debug_utils_label_ext","text":"queue_end_debug_utils_label_ext(queue::Queue)::Cvoid\n\nArguments:\n\nqueue::Queue\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.queue_insert_debug_utils_label_ext","page":"API","title":"Vulkan.queue_insert_debug_utils_label_ext","text":"queue_insert_debug_utils_label_ext(queue::Queue, label_info::_DebugUtilsLabelEXT)::Cvoid\n\nArguments:\n\nqueue::Queue\nlabel_info::_DebugUtilsLabelEXT\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.queue_present_khr","page":"API","title":"Vulkan.queue_present_khr","text":"queue_present_khr(queue::Queue, present_info::_PresentInfoKHR)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nSUBOPTIMAL_KHR\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\nERROR_OUT_OF_DATE_KHR\nERROR_SURFACE_LOST_KHR\nERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT\n\nArguments:\n\nqueue::Queue (externsync)\npresent_info::_PresentInfoKHR (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.queue_set_performance_configuration_intel","page":"API","title":"Vulkan.queue_set_performance_configuration_intel","text":"queue_set_performance_configuration_intel(queue::Queue, configuration::PerformanceConfigurationINTEL)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\nqueue::Queue\nconfiguration::PerformanceConfigurationINTEL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.queue_submit","page":"API","title":"Vulkan.queue_submit","text":"queue_submit(queue::Queue, submits::AbstractArray{<:_SubmitInfo}; fence = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\nqueue::Queue (externsync)\nsubmits::AbstractArray{<:_SubmitInfo}\nfence: defaults to C_NULL (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.queue_submit_2_khr","page":"API","title":"Vulkan.queue_submit_2_khr","text":"queue_submit_2_khr(queue::Queue, submits::AbstractArray{<:_SubmitInfo2KHR}; fence = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\nqueue::Queue (externsync)\nsubmits::AbstractArray{<:_SubmitInfo2KHR}\nfence: defaults to C_NULL (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.queue_wait_idle","page":"API","title":"Vulkan.queue_wait_idle","text":"queue_wait_idle(queue::Queue)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\nqueue::Queue (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.register_device_event_ext","page":"API","title":"Vulkan.register_device_event_ext","text":"register_device_event_ext(device::Device, device_event_info::_DeviceEventInfoEXT; allocator = C_NULL)::ResultTypes.Result{Fence, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice::Device\ndevice_event_info::_DeviceEventInfoEXT\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.register_display_event_ext","page":"API","title":"Vulkan.register_display_event_ext","text":"register_display_event_ext(device::Device, display::DisplayKHR, display_event_info::_DisplayEventInfoEXT; allocator = C_NULL)::ResultTypes.Result{Fence, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice::Device\ndisplay::DisplayKHR\ndisplay_event_info::_DisplayEventInfoEXT\nallocator: defaults to C_NULL\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.release_display_ext","page":"API","title":"Vulkan.release_display_ext","text":"release_display_ext(physical_device::PhysicalDevice, display::DisplayKHR)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nArguments:\n\nphysical_device::PhysicalDevice\ndisplay::DisplayKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.release_full_screen_exclusive_mode_ext","page":"API","title":"Vulkan.release_full_screen_exclusive_mode_ext","text":"release_full_screen_exclusive_mode_ext(device::Device, swapchain::SwapchainKHR)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_SURFACE_LOST_KHR\n\nArguments:\n\ndevice::Device\nswapchain::SwapchainKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.release_performance_configuration_intel","page":"API","title":"Vulkan.release_performance_configuration_intel","text":"release_performance_configuration_intel(device::Device; configuration = C_NULL)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_TOO_MANY_OBJECTS\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice::Device\nconfiguration: defaults to C_NULL (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.release_profiling_lock_khr","page":"API","title":"Vulkan.release_profiling_lock_khr","text":"release_profiling_lock_khr(device::Device)::Cvoid\n\nArguments:\n\ndevice::Device\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.reset_command_buffer","page":"API","title":"Vulkan.reset_command_buffer","text":"reset_command_buffer(command_buffer::CommandBuffer; flags = 0)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ncommand_buffer::CommandBuffer (externsync)\nflags: defaults to 0\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.reset_command_pool","page":"API","title":"Vulkan.reset_command_pool","text":"reset_command_pool(device::Device, command_pool::CommandPool; flags = 0)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ncommand_pool::CommandPool (externsync)\nflags: defaults to 0\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.reset_descriptor_pool","page":"API","title":"Vulkan.reset_descriptor_pool","text":"reset_descriptor_pool(device::Device, descriptor_pool::DescriptorPool; flags = 0)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nArguments:\n\ndevice::Device\ndescriptor_pool::DescriptorPool (externsync)\nflags: defaults to 0\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.reset_event","page":"API","title":"Vulkan.reset_event","text":"reset_event(device::Device, event::Event)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\nevent::Event (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.reset_fences","page":"API","title":"Vulkan.reset_fences","text":"reset_fences(device::Device, fences::AbstractArray{<:Fence})::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\nfences::AbstractArray{<:Fence} (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.reset_query_pool","page":"API","title":"Vulkan.reset_query_pool","text":"reset_query_pool(device::Device, query_pool::QueryPool, first_query::Integer, query_count::Integer)::Cvoid\n\nArguments:\n\ndevice::Device\nquery_pool::QueryPool\nfirst_query::Integer\nquery_count::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.set_debug_utils_object_name_ext","page":"API","title":"Vulkan.set_debug_utils_object_name_ext","text":"set_debug_utils_object_name_ext(device::Device, name_info::_DebugUtilsObjectNameInfoEXT)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\nname_info::_DebugUtilsObjectNameInfoEXT (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.set_debug_utils_object_tag_ext","page":"API","title":"Vulkan.set_debug_utils_object_tag_ext","text":"set_debug_utils_object_tag_ext(device::Device, tag_info::_DebugUtilsObjectTagInfoEXT)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\ntag_info::_DebugUtilsObjectTagInfoEXT (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.set_driver-Tuple{Module, Symbol}","page":"API","title":"Vulkan.set_driver","text":"Convenience function for setting an ICD (Installable Client Driver) used by Vulkan. Only SwiftShader is currently supported. To add another ICD, you must do it by hand. You can achieve that by setting the environment variable \"VKICDFILENAMES\" to point to your own ICD JSON file, as described in https://github.com/KhronosGroup/Vulkan-Loader/blob/master/loader/LoaderAndLayerInterface.md#icd-discovery.\n\nAvailable drivers:\n\nSwiftShader: a CPU implementation of Vulkan. Requires SwiftShader_jll to be imported in mod.\n\nset_driver(mod::Module, backend::Symbol) -> String\n\n\n\n\n\n\n","category":"method"},{"location":"api/#Vulkan.set_event","page":"API","title":"Vulkan.set_event","text":"set_event(device::Device, event::Event)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\nevent::Event (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.set_hdr_metadata_ext","page":"API","title":"Vulkan.set_hdr_metadata_ext","text":"set_hdr_metadata_ext(device::Device, swapchains::AbstractArray{<:SwapchainKHR}, metadata::AbstractArray{<:_HdrMetadataEXT})::Cvoid\n\nArguments:\n\ndevice::Device\nswapchains::AbstractArray{<:SwapchainKHR}\nmetadata::AbstractArray{<:_HdrMetadataEXT}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.set_local_dimming_amd","page":"API","title":"Vulkan.set_local_dimming_amd","text":"set_local_dimming_amd(device::Device, swap_chain::SwapchainKHR, local_dimming_enable::Bool)::Cvoid\n\nArguments:\n\ndevice::Device\nswap_chain::SwapchainKHR\nlocal_dimming_enable::Bool\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.set_private_data_ext","page":"API","title":"Vulkan.set_private_data_ext","text":"set_private_data_ext(device::Device, object_type::ObjectType, object_handle::Integer, private_data_slot::PrivateDataSlotEXT, data::Integer)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\n\nArguments:\n\ndevice::Device\nobject_type::ObjectType\nobject_handle::Integer\nprivate_data_slot::PrivateDataSlotEXT\ndata::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.signal_semaphore","page":"API","title":"Vulkan.signal_semaphore","text":"signal_semaphore(device::Device, signal_info::_SemaphoreSignalInfo)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\nsignal_info::_SemaphoreSignalInfo\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.submit_debug_utils_message_ext","page":"API","title":"Vulkan.submit_debug_utils_message_ext","text":"submit_debug_utils_message_ext(instance::Instance, message_severity::DebugUtilsMessageSeverityFlagEXT, message_types::DebugUtilsMessageTypeFlagEXT, callback_data::_DebugUtilsMessengerCallbackDataEXT)::Cvoid\n\nArguments:\n\ninstance::Instance\nmessage_severity::DebugUtilsMessageSeverityFlagEXT\nmessage_types::DebugUtilsMessageTypeFlagEXT\ncallback_data::_DebugUtilsMessengerCallbackDataEXT\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.to_vk","page":"API","title":"Vulkan.to_vk","text":"Convert a type into its corresponding Vulkan type.\n\nExamples\n\njulia> to_vk(UInt32, v\"1\")\n0x00400000\n\njulia> to_vk(NTuple{6, UInt8}, \"hello\")\n(0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x00)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.trim_command_pool","page":"API","title":"Vulkan.trim_command_pool","text":"trim_command_pool(device::Device, command_pool::CommandPool; flags = 0)::Cvoid\n\nArguments:\n\ndevice::Device\ncommand_pool::CommandPool (externsync)\nflags: defaults to 0\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.uninitialize_performance_api_intel","page":"API","title":"Vulkan.uninitialize_performance_api_intel","text":"uninitialize_performance_api_intel(device::Device)::Cvoid\n\nArguments:\n\ndevice::Device\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.unmap_memory","page":"API","title":"Vulkan.unmap_memory","text":"unmap_memory(device::Device, memory::DeviceMemory)::Cvoid\n\nArguments:\n\ndevice::Device\nmemory::DeviceMemory (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.update_descriptor_set_with_template","page":"API","title":"Vulkan.update_descriptor_set_with_template","text":"update_descriptor_set_with_template(device::Device, descriptor_set::DescriptorSet, descriptor_update_template::DescriptorUpdateTemplate, data::Ptr{Cvoid})::Cvoid\n\nArguments:\n\ndevice::Device\ndescriptor_set::DescriptorSet (externsync)\ndescriptor_update_template::DescriptorUpdateTemplate\ndata::Ptr{Cvoid}\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.update_descriptor_sets","page":"API","title":"Vulkan.update_descriptor_sets","text":"update_descriptor_sets(device::Device, descriptor_writes::AbstractArray{<:_WriteDescriptorSet}, descriptor_copies::AbstractArray{<:_CopyDescriptorSet})::Cvoid\n\nArguments:\n\ndevice::Device\ndescriptor_writes::AbstractArray{<:_WriteDescriptorSet} (externsync)\ndescriptor_copies::AbstractArray{<:_CopyDescriptorSet} (externsync)\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.update_video_session_parameters_khr","page":"API","title":"Vulkan.update_video_session_parameters_khr","text":"update_video_session_parameters_khr(device::Device, video_session_parameters::VideoSessionParametersKHR, update_info::_VideoSessionParametersUpdateInfoKHR)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_INITIALIZATION_FAILED\nERROR_TOO_MANY_OBJECTS\n\nArguments:\n\ndevice::Device\nvideo_session_parameters::VideoSessionParametersKHR\nupdate_info::_VideoSessionParametersUpdateInfoKHR\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.wait_for_fences","page":"API","title":"Vulkan.wait_for_fences","text":"wait_for_fences(device::Device, fences::AbstractArray{<:Fence}, wait_all::Bool, timeout::Integer)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nTIMEOUT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice::Device\nfences::AbstractArray{<:Fence}\nwait_all::Bool\ntimeout::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.wait_semaphores","page":"API","title":"Vulkan.wait_semaphores","text":"wait_semaphores(device::Device, wait_info::_SemaphoreWaitInfo, timeout::Integer)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nSuccess:\nSUCCESS\nTIMEOUT\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\nERROR_DEVICE_LOST\n\nArguments:\n\ndevice::Device\nwait_info::_SemaphoreWaitInfo\ntimeout::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.write_acceleration_structures_properties_khr","page":"API","title":"Vulkan.write_acceleration_structures_properties_khr","text":"write_acceleration_structures_properties_khr(device::Device, acceleration_structures::AbstractArray{<:AccelerationStructureKHR}, query_type::QueryType, data_size::Integer, data::Ptr{Cvoid}, stride::Integer)::ResultTypes.Result{Result, VulkanError}\n\nReturn codes:\n\nError:\nERROR_OUT_OF_HOST_MEMORY\nERROR_OUT_OF_DEVICE_MEMORY\n\nArguments:\n\ndevice::Device\nacceleration_structures::AbstractArray{<:AccelerationStructureKHR}\nquery_type::QueryType\ndata_size::Integer\ndata::Ptr{Cvoid} (must be a valid pointer with data_size bytes)\nstride::Integer\n\n\n\n\n\n","category":"function"},{"location":"api/#Vulkan.@bitmask_flag-Tuple{Any, Any}","page":"API","title":"Vulkan.@bitmask_flag","text":"@bitmask_flag BitFlags::UInt32 begin\n    FLAG_A = 1\n    FLAG_B = 2\n    FLAG_C = 4\nend\n\nEnumeration of bitmask flags that can be combined with &, | and xor, forbidding the combination of flags from different bitmasks.\n\n\n\n\n\n","category":"macro"},{"location":"api/#Vulkan.@check-Tuple{Any}","page":"API","title":"Vulkan.@check","text":"@check vkCreateInstance(args...)\n\nAssign the expression to a variable named _return_code. Then, if the value is not a success code, return a VulkanError holding the return code.\n\n\n\n\n\n","category":"macro"},{"location":"api/#Vulkan.@set_driver-Tuple{Any}","page":"API","title":"Vulkan.@set_driver","text":"Call set_driver passing the current module as the first argument.\n\n\n\n\n\n","category":"macro"},{"location":"dev/#Developer-Documentation","page":"Developer documentation","title":"Developer Documentation","text":"","category":"section"},{"location":"dev/#Generating-the-wrapper","page":"Developer documentation","title":"Generating the wrapper","text":"","category":"section"},{"location":"dev/","page":"Developer documentation","title":"Developer documentation","text":"A large portion of this package relies on static code generation. To re-generate the main wrapper (generated/vulkan_wrapper.jl), execute generator/scripts/generate_wrapper.jl in the generator environment:","category":"page"},{"location":"dev/","page":"Developer documentation","title":"Developer documentation","text":"julia --color=yes --project=generator -e 'using Pkg; Pkg.instantiate(); include(\"generator/scripts/generate_wrapper.jl\")'","category":"page"},{"location":"dev/","page":"Developer documentation","title":"Developer documentation","text":"Note that VulkanGen, the generator module, contains tests which should be run first to ensure the correctness of the wrapping process. Therefore, it is recommended to use this command instead to also test both VulkanGen and Vulkan.jl:","category":"page"},{"location":"dev/","page":"Developer documentation","title":"Developer documentation","text":"julia --color=yes --project=generator -e 'include(\\\"generator/test/runtests.jl\\\"); include(\\\"generator/scripts/generate_wrapper.jl\\\"); using Pkg; Pkg.activate(\\\".\\\"); Pkg.test()'","category":"page"},{"location":"dev/#VulkanGen-API","page":"Developer documentation","title":"VulkanGen API","text":"","category":"section"},{"location":"dev/","page":"Developer documentation","title":"Developer documentation","text":"Modules = [VulkanGen]","category":"page"},{"location":"dev/","page":"Developer documentation","title":"Developer documentation","text":"Modules = [VulkanGen]","category":"page"},{"location":"dev/#VulkanGen.consumed_handles","page":"Developer documentation","title":"VulkanGen.consumed_handles","text":"These handle types are consumed by whatever command uses them. From the specification: \"The following object types are consumed when they are passed into a Vulkan command and not further accessed by the objects they are used to create.\".\n\n\n\n\n\n","category":"constant"},{"location":"dev/#VulkanGen.disabled_specs","page":"Developer documentation","title":"VulkanGen.disabled_specs","text":"Some specifications are disabled in the Vulkan headers (see https://github.com/KhronosGroup/Vulkan-Docs/issues/1225).\n\n\n\n\n\n","category":"constant"},{"location":"dev/#VulkanGen.spec_aliases","page":"Developer documentation","title":"VulkanGen.spec_aliases","text":"All specification aliases.\n\n\n\n\n\n","category":"constant"},{"location":"dev/#VulkanGen.spec_all_noalias","page":"Developer documentation","title":"VulkanGen.spec_all_noalias","text":"All specifications except aliases.\n\n\n\n\n\n","category":"constant"},{"location":"dev/#VulkanGen.spec_all_semantic_enums","page":"Developer documentation","title":"VulkanGen.spec_all_semantic_enums","text":"All enumerations, regardless of them being bitmasks or regular enum values.\n\n\n\n\n\n","category":"constant"},{"location":"dev/#VulkanGen.spec_bitmasks","page":"Developer documentation","title":"VulkanGen.spec_bitmasks","text":"Specification bitmask enumerations.\n\n\n\n\n\n","category":"constant"},{"location":"dev/#VulkanGen.spec_constants","page":"Developer documentation","title":"VulkanGen.spec_constants","text":"Specification constants, usually defined in C with #define.\n\n\n\n\n\n","category":"constant"},{"location":"dev/#VulkanGen.spec_enums","page":"Developer documentation","title":"VulkanGen.spec_enums","text":"Specification enumerations, excluding bitmasks.\n\n\n\n\n\n","category":"constant"},{"location":"dev/#VulkanGen.spec_flags","page":"Developer documentation","title":"VulkanGen.spec_flags","text":"Flag types.\n\n\n\n\n\n","category":"constant"},{"location":"dev/#VulkanGen.spec_funcs","page":"Developer documentation","title":"VulkanGen.spec_funcs","text":"Specification functions.\n\n\n\n\n\n","category":"constant"},{"location":"dev/#VulkanGen.spec_handles","page":"Developer documentation","title":"VulkanGen.spec_handles","text":"Specification handle types.\n\n\n\n\n\n","category":"constant"},{"location":"dev/#VulkanGen.spec_structs","page":"Developer documentation","title":"VulkanGen.spec_structs","text":"Specification structures.\n\n\n\n\n\n","category":"constant"},{"location":"dev/#VulkanGen.spec_unions","page":"Developer documentation","title":"VulkanGen.spec_unions","text":"Specification for union types.\n\n\n\n\n\n","category":"constant"},{"location":"dev/#VulkanGen.CreateFunc","page":"Developer documentation","title":"VulkanGen.CreateFunc","text":"Function func that creates a handle from a create info structure create_info_struct passed as the value of the parameter create_info_param.\n\nIf batch is true, then func expects a list of multiple create info structures and will create multiple handles at once.\n\nstruct CreateFunc <: Spec\n\nfunc::SpecFunc\nhandle::SpecHandle\ncreate_info_struct::Union{Nothing, SpecStruct}\ncreate_info_param::Union{Nothing, SpecFuncParam}\nbatch::Bool\n\n\n\n\n\n","category":"type"},{"location":"dev/#VulkanGen.DestroyFunc","page":"Developer documentation","title":"VulkanGen.DestroyFunc","text":"Function func that destroys a handle passed as the value of the parameter destroyed_param.\n\nIf batch is true, then func expects a list of multiple handles and will destroy all of them at once.\n\nstruct DestroyFunc <: Spec\n\nfunc::SpecFunc\nhandle::SpecHandle\ndestroyed_param::SpecFuncParam\nbatch::Bool\n\n\n\n\n\n","category":"type"},{"location":"dev/#VulkanGen.FUNC_TYPE","page":"Developer documentation","title":"VulkanGen.FUNC_TYPE","text":"Function type classification.\n\nTypes:\n\nCREATE: constructor (functions that begin with vkCreate).\nDESTROY: destructor (functions that begin with vkDestroy).\nALLOCATE: allocator (functions that begin with vkAllocate).\nFREE: deallocator (functions that begin with vkFree).\nCOMMAND: Vulkan command (functions that begin with vkCmd).\nQUERY: used to query parameters, returned directly or indirectly through pointer mutation (typically, functions that begin with vkEnumerate and vkGet, but not all of them and possibly others).\nOTHER: no identified type.\n\nprimitive type FUNC_TYPE <: Enum{Int32} 32\n\n\n\n\n\n","category":"type"},{"location":"dev/#VulkanGen.FieldIterator","page":"Developer documentation","title":"VulkanGen.FieldIterator","text":"Iterate through function or struct specification fields from a list of fields. list is a sequence of fields to get through from root.\n\nstruct FieldIterator\n\nroot::Any\nlist::Any\n\n\n\n\n\n","category":"type"},{"location":"dev/#VulkanGen.PARAM_REQUIREMENT","page":"Developer documentation","title":"VulkanGen.PARAM_REQUIREMENT","text":"Parameter requirement. Applies both to struct members and function parameters.\n\nRequirement types: \n\nOPTIONAL: may have its default zero (or nullptr) value, acting as a sentinel value (similar to Nothing in Julia).\nREQUIRED: must be provided, no sentinel value is allowed.\nPOINTER_OPTIONAL: is a pointer which may be null, but must have valid elements if provided.\nPOINTER_REQUIRED: must be a valid pointer, but its elements are optional (e.g. are allowed to be sentinel values).\n\nprimitive type PARAM_REQUIREMENT <: Enum{Int32} 32\n\n\n\n\n\n","category":"type"},{"location":"dev/#VulkanGen.QueueType","page":"Developer documentation","title":"VulkanGen.QueueType","text":"Queue type on which a computation can be carried.\n\nabstract type QueueType\n\n\n\n\n\n","category":"type"},{"location":"dev/#VulkanGen.RenderPassInside","page":"Developer documentation","title":"VulkanGen.RenderPassInside","text":"The command can be executed inside a render pass.\n\nstruct RenderPassInside <: RenderPassRequirement\n\n\n\n\n\n","category":"type"},{"location":"dev/#VulkanGen.RenderPassOutside","page":"Developer documentation","title":"VulkanGen.RenderPassOutside","text":"The command can be executed outside a render pass.\n\nstruct RenderPassOutside <: RenderPassRequirement\n\n\n\n\n\n","category":"type"},{"location":"dev/#VulkanGen.RenderPassRequirement","page":"Developer documentation","title":"VulkanGen.RenderPassRequirement","text":"Render pass execution specification for commands.\n\nabstract type RenderPassRequirement\n\n\n\n\n\n","category":"type"},{"location":"dev/#VulkanGen.STRUCT_TYPE","page":"Developer documentation","title":"VulkanGen.STRUCT_TYPE","text":"Structure type classification.\n\nTypes:\n\nCREATE_INFO: holds constructor parameters (structures that end with CreateInfo).\nALLOCATE_INFO: holds allocator parameters (structures that end with AllocateInfo).\nGENERIC_INFO: holds parameters for another function or structure (structures that end with Info, excluding those falling into the previous types).\nDATA: usually represents user or Vulkan data.\nPROPERTY: is a property returned by Vulkan in a returnedonly structure, usually done through QUERY type functions.\n\nprimitive type STRUCT_TYPE <: Enum{Int32} 32\n\n\n\n\n\n","category":"type"},{"location":"dev/#VulkanGen.Spec","page":"Developer documentation","title":"VulkanGen.Spec","text":"Everything that a Vulkan specification can apply to: data structures, functions, parameters...\n\nabstract type Spec\n\n\n\n\n\n","category":"type"},{"location":"dev/#VulkanGen.SpecAlias","page":"Developer documentation","title":"VulkanGen.SpecAlias","text":"Specification for an alias of the form const <name> = <alias>.\n\n\n\n\n\n","category":"type"},{"location":"dev/#VulkanGen.SpecBit","page":"Developer documentation","title":"VulkanGen.SpecBit","text":"Specification for a bit used in a bitmask.\n\nstruct SpecBit <: Spec\n\nname::Symbol\nName of the bit.\nposition::Int64\nPosition of the bit.\n\n\n\n\n\n","category":"type"},{"location":"dev/#VulkanGen.SpecBitmask","page":"Developer documentation","title":"VulkanGen.SpecBitmask","text":"Specification for a bitmask type that must be formed through a combination of bits.\n\nIs usually an alias for a UInt32 type which carries meaning through its bits.\n\nstruct SpecBitmask <: Spec\n\nname::Symbol\nName of the bitmask type.\nbits::StructArrays.StructVector{SpecBit, C, I} where {C<:Union{Tuple, NamedTuple}, I}\nValid bits that can be combined to form the final bitmask value.\nwidth::Integer\n\n\n\n\n\n","category":"type"},{"location":"dev/#VulkanGen.SpecConstant","page":"Developer documentation","title":"VulkanGen.SpecConstant","text":"Specification for a constant.\n\nstruct SpecConstant <: Spec\n\nname::Symbol\nName of the constant.\nvalue::Any\nValue of the constant.\n\n\n\n\n\n","category":"type"},{"location":"dev/#VulkanGen.SpecEnum","page":"Developer documentation","title":"VulkanGen.SpecEnum","text":"Specification for an enumeration type.\n\nstruct SpecEnum <: Spec\n\nname::Symbol\nName of the enumeration type.\nenums::StructArrays.StructVector{SpecConstant, C, I} where {C<:Union{Tuple, NamedTuple}, I}\nVector of possible enumeration values.\n\n\n\n\n\n","category":"type"},{"location":"dev/#VulkanGen.SpecFlag","page":"Developer documentation","title":"VulkanGen.SpecFlag","text":"Specification for a flag type name that is a type alias of typealias. Can be associated with a bitmask structure, in which case the bitmask number is set to the corresponding SpecBitmask.\n\nstruct SpecFlag <: Spec\n\nname::Symbol\nName of the flag type.\ntypealias::Symbol\nThe type it aliases.\nbitmask::Union{Nothing, SpecBitmask}\nBitmask, if applicable.\n\n\n\n\n\n","category":"type"},{"location":"dev/#VulkanGen.SpecFunc","page":"Developer documentation","title":"VulkanGen.SpecFunc","text":"Specification for a function.\n\nstruct SpecFunc <: Spec\n\nname::Symbol\nName of the function.\ntype::FUNC_TYPE\nFUNC_TYPE classification.\nreturn_type::Union{Nothing, Expr, Symbol}\nReturn type (void if Nothing).\nrender_pass_compatibility::Vector{RenderPassRequirement}\nWhether the function can be executed inside a render pass, outside, or both. Empty if not specified, in which case it is equivalent to both inside and outside.\nqueue_compatibility::Vector{QueueType}\nType of queues on which the function can be executed. Empty if not specified, in which case it is equivalent to being executable on all queues.\nparams::StructArrays.StructVector{SpecFuncParam, C, I} where {C<:Union{Tuple, NamedTuple}, I}\nFunction parameters.\nsuccess_codes::Vector{Symbol}\nerror_codes::Vector{Symbol}\n\n\n\n\n\n","category":"type"},{"location":"dev/#VulkanGen.SpecFuncParam","page":"Developer documentation","title":"VulkanGen.SpecFuncParam","text":"Specification for a function parameter.\n\nstruct SpecFuncParam <: Spec\n\nfunc::Symbol\nName of the parent function.\nname::Symbol\nIdentifier.\ntype::Union{Expr, Symbol}\nExpression of its Julian type.\nis_constant::Bool\nIf constant, cannot be mutated by Vulkan functions.\nis_externsync::Bool\nWhether it must be externally synchronized before calling the function.\nrequirement::PARAM_REQUIREMENT\nPARAM_REQUIREMENT classification.\nlen::Union{Nothing, Symbol}\nName of the parameter (of the same function) which represents its length. Nothing for non-vector types.\narglen::Vector{Symbol}\nName of the parameters (of the same function) it is a length of.\nautovalidity::Bool\nWhether automatic validity documentation is enabled. If false, this means that the parameter may be an exception to at least one Vulkan convention.\n\n\n\n\n\n","category":"type"},{"location":"dev/#VulkanGen.SpecHandle","page":"Developer documentation","title":"VulkanGen.SpecHandle","text":"Specification for handle types.\n\nA handle may possess a parent. In this case, the handle can only be valid if its parent is valid.\n\nSome handles are dispatchable, which means that they are represented as opaque pointers. Non-dispatchable handles are 64-bit integer types, and may encode information directly into their value.\n\nstruct SpecHandle <: Spec\n\nname::Symbol\nName of the handle type.\nparent::Union{Nothing, Symbol}\nName of the parent handle, if any.\nis_dispatchable::Bool\nWhether the handle is dispatchable or not.\n\n\n\n\n\n","category":"type"},{"location":"dev/#VulkanGen.SpecStruct","page":"Developer documentation","title":"VulkanGen.SpecStruct","text":"Specification for a structure.\n\nstruct SpecStruct <: Spec\n\nname::Symbol\nName of the structure.\ntype::STRUCT_TYPE\nSTRUCT_TYPE classification.\nis_returnedonly::Bool\nWhether the structure is only returned by Vulkan functions (and never requested as input).\nextends::Vector{Symbol}\nName of the structures it extends, usually done through the original structures' pNext argument.\nmembers::StructArrays.StructVector{SpecStructMember, C, I} where {C<:Union{Tuple, NamedTuple}, I}\nStructure members.\n\n\n\n\n\n","category":"type"},{"location":"dev/#VulkanGen.SpecStructMember","page":"Developer documentation","title":"VulkanGen.SpecStructMember","text":"Specification for a structure parameter.\n\nstruct SpecStructMember <: Spec\n\nparent::Symbol\nName of the parent structure.\nname::Symbol\nIdentifier.\ntype::Union{Expr, Symbol}\nExpression of its Julian type.\nis_constant::Bool\nIf constant, cannot be mutated by Vulkan functions.\nis_externsync::Bool\nWhether it must be externally synchronized before calling any function which uses the parent structure.\nrequirement::PARAM_REQUIREMENT\nPARAM_REQUIREMENT classification.\nlen::Union{Nothing, Expr, Symbol}\nName of the member (of the same structure) which represents its length. Nothing for non-vector types.\narglen::Vector{Union{Expr, Symbol}}\nName of the members (of the same structure) it is a length of.\nautovalidity::Bool\nWhether automatic validity documentation is enabled. If false, this means that the member may be an exception to at least one Vulkan convention.\n\n\n\n\n\n","category":"type"},{"location":"dev/#VulkanGen.SpecUnion","page":"Developer documentation","title":"VulkanGen.SpecUnion","text":"Specification for a union type.\n\nstruct SpecUnion <: Spec\n\nname::Symbol\nName of the union type.\ntypes::Vector{Union{Expr, Symbol}}\nPossible types for the union.\nselectors::Vector{Symbol}\nSelector values, if any, to determine the type of the union in a given context (function call for example).\nis_returnedonly::Bool\nWhether the type is only returned by Vulkan functions (and never requested as input).\n\n\n\n\n\n","category":"type"},{"location":"dev/#Base.write-Tuple{VulkanWrapper, Any}","page":"Developer documentation","title":"Base.write","text":"Write the wrapper to destdir.\n\nwrite(vw::VulkanWrapper, destdir)\n\n\n\n\n\n\n","category":"method"},{"location":"dev/#VulkanGen._wrap_implicit_return-Tuple{SpecFuncParam}","page":"Developer documentation","title":"VulkanGen._wrap_implicit_return","text":"Build a return expression from an implicit return parameter. Implicit return parameters are pointers that are mutated by the API, rather than returned directly. API functions with implicit return parameters return either nothing or a return code, which is automatically checked and not returned by the wrapper. Such implicit return parameters are Refs or Vectors holding either a base type or an API struct Vk*. They need to be converted by the wrapper to their wrapping type.\n\n_wrap_implicit_return(return_param::SpecFuncParam; with_func_ptr) -> Union{Expr, Symbol}\n\n\n\n\n\n\n","category":"method"},{"location":"dev/#VulkanGen.extend_handle_constructor-Tuple{VulkanGen.CreateFunc}","page":"Developer documentation","title":"VulkanGen.extend_handle_constructor","text":"Extend functions that create (or allocate) one or several handles, by exposing the parameters of the associated CreateInfo structures. spec must have one or several CreateInfo arguments.\n\nextend_handle_constructor(spec::VulkanGen.CreateFunc; with_func_ptr) -> Dict{_A, _B} where {_A, _B}\n\n\n\n\n\n\n","category":"method"},{"location":"dev/#VulkanGen.func_ptr_args-Tuple{SpecFunc}","page":"Developer documentation","title":"VulkanGen.func_ptr_args","text":"Function pointer arguments for a function. Takes the function pointers arguments of the underlying handle if it is a Vulkan constructor, or a unique fun_ptr if that's just a normal Vulkan function.\n\nfunc_ptr_args(spec::SpecFunc) -> Vector{Expr}\n\n\n\n\n\n\n","category":"method"},{"location":"dev/#VulkanGen.func_ptr_args-Tuple{SpecHandle}","page":"Developer documentation","title":"VulkanGen.func_ptr_args","text":"Function pointer arguments for a handle. Includes one fun_ptr_create for the constructor (if applicable), and one fun_ptr_destroy for the destructor (if applicable).\n\nfunc_ptr_args(spec::SpecHandle) -> Vector{Expr}\n\n\n\n\n\n\n","category":"method"},{"location":"dev/#VulkanGen.func_ptrs-Tuple{Spec}","page":"Developer documentation","title":"VulkanGen.func_ptrs","text":"Corresponding pointer argument for a Vulkan function.\n\nfunc_ptrs(spec::Spec) -> AbstractVector{var\"#s828\"} where var\"#s828\"\n\n\n\n\n\n\n","category":"method"},{"location":"dev/#VulkanGen.hasalias-Tuple{Any}","page":"Developer documentation","title":"VulkanGen.hasalias","text":"Whether an alias was built from this name.\n\nhasalias(name) -> Union{Missing, Bool}\n\n\n\n\n\n\n","category":"method"},{"location":"dev/#VulkanGen.is_pointer_start-Tuple{Spec}","page":"Developer documentation","title":"VulkanGen.is_pointer_start","text":"Represent an integer that gives the start of a C pointer.\n\nis_pointer_start(spec::Spec) -> Union{Missing, Bool}\n\n\n\n\n\n\n","category":"method"},{"location":"dev/#VulkanGen.isalias-Tuple{Any}","page":"Developer documentation","title":"VulkanGen.isalias","text":"Whether this type is an alias for another name.\n\nisalias(name) -> Bool\n\n\n\n\n\n\n","category":"method"},{"location":"dev/#VulkanGen.nice_julian_type-Tuple{Spec}","page":"Developer documentation","title":"VulkanGen.nice_julian_type","text":"Return a new type easier to deal with.\n\nnice_julian_type(spec::Spec) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"dev/#VulkanGen.translate_c_type-Tuple{Any}","page":"Developer documentation","title":"VulkanGen.translate_c_type","text":"Semantically translate C types to their Julia counterpart. Note that since it is a semantic translation, translated types do not necessarily have the same layout, e.g. VkBool32 => Bool (8 bits).\n\ntranslate_c_type(ctype) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"dev/#VulkanGen.wrap_identifier-Tuple{Any}","page":"Developer documentation","title":"VulkanGen.wrap_identifier","text":"Generate an identifier from a Vulkan identifier, in lower snake case and without pointer prefixes (such as in pNext).\n\nwrap_identifier(identifier) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"intro/#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"intro/#What-is-Vulkan?","page":"Introduction","title":"What is Vulkan?","text":"","category":"section"},{"location":"intro/","page":"Introduction","title":"Introduction","text":"Vulkan is a graphics and compute specification, targeting a broad range of GPUs and even CPUs. It aims to provide a cross-platform API that can be used from PCs, consoles, mobile phones and embedded platforms. It can be thought of as the new generation of OpenGL with the compute capabilities of OpenCL. It should be noted that Vulkan is merely a specification and therefore, there does not exist only one Vulkan library but rather multiple device-dependent implementations conforming to a unique standard. The version of the Vulkan implementation you may be using thus depends on the graphics drivers installed on your system.","category":"page"},{"location":"intro/","page":"Introduction","title":"Introduction","text":"The power of this standard lies in the genericity it guarantees to anything that builds from it. This is a direct consequence of a thorough testing of vendor implementations, which must be compatible with the specification in every detail. Therefore, tools that are developped for Vulkan can be used throughout the entire ecosystem, available for all devices that support Vulkan.","category":"page"},{"location":"intro/#Compute-and-graphics-interface","page":"Introduction","title":"Compute and graphics interface","text":"","category":"section"},{"location":"intro/#SPIR-V","page":"Introduction","title":"SPIR-V","text":"","category":"section"},{"location":"intro/","page":"Introduction","title":"Introduction","text":"To describe how graphics and compute programs should be executed by devices, Vulkan relies on the Standard Portable Intermediate Representation (SPIR-V) format. This is another specification, whose aim is to free hardware vendors from having to build their own compiler for every shading/compute language, whose implementations were not always coherent with one another. It is a binary format, making it easier to generate assembly code from than text-based formats (such as GLSL and HLSL).","category":"page"},{"location":"intro/","page":"Introduction","title":"Introduction","text":"SPIR-V is not a language, but rather a binary format that higher level languages can compile to. It can be targeted from shading languages; for example, see Khronos' glslang and Google's shaderc for GLSL/HLSL. SPIR-V features a large suite of tools, designed to ease the manipulation of SPIR-V programs. It includes an optimizer, spirv-opt, alleviating the need for hardware vendors to have their own SPIR-V optimizer.","category":"page"},{"location":"intro/","page":"Introduction","title":"Introduction","text":"SPIR-V is notably suited to cross-compilation among shading languages (see SPIR-V Cross).","category":"page"},{"location":"intro/#SPIR-V-and-LLVM","page":"Introduction","title":"SPIR-V and LLVM","text":"","category":"section"},{"location":"intro/","page":"Introduction","title":"Introduction","text":"SPIR-V is similar to LLVM IR, for which there exists a bi-directional translator. However, not all SPIR-V concepts are mappable to LLVM IR, so not all of SPIR-V can be translated. Currently, only the OpenCL part of SPIR-V is supported by this translator (see this issue), missing essential features required by Vulkan. If (or when) Vulkan is supported, Julia code could be compiled to LLVM, translated to SPIR-V and executed from any supported Vulkan device, be it for graphics or compute jobs. For the moment, SPIR-V modules to be consumed by Vulkan are usually compiled from other shading languages.","category":"page"},{"location":"design/#Design","page":"Design","title":"Design","text":"","category":"section"},{"location":"design/","page":"Design","title":"Design","text":"Vulkan is a low-level API that exhibits many patterns than any C library exposes. For example, some functions return error codes as a result, or mutate pointer memory as a way of returning values. The length of array pointers is always requested, while trivially available when originating from Julia arrays. Pointers are the primary objects of interest, while it is not trivial to keep them valid (i.e. have them point to valid memory) in Julia. Their validity is not guaranteed out of the box, which introduces several pitfalls that ultimately lead to crashes. Notably, the API makes a heavy use of structures with pointer fields and structure pointers, which demands a clear knowledge of variable preservation in Julia.","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"Usually, the patterns mentioned above are not problematic for small libraries, because structures are relatively simple. They however become visible annoyances in the case of a large API such as Vulkan. This motivates the use of a procedural approach to handle those patterns.","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"Vulkan.jl uses a generator, VulkanGen, to programmatically generate higher-level wrappers for low-level API functions. This is a consequent part of this library, which helped us to minimize the amount of human errors in the wrapping process, while allowing a certain flexilibity. The related project is found in the generator folder. Because its unique purpose is to generate the wrapper generated/vulkan_wrapper.jl, it is not included in the package, which results in a more lightweight library.","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"using SwiftShader_jll\nusing Vulkan\n@set_driver :SwiftShader","category":"page"},{"location":"features/#Features","page":"Features","title":"Features","text":"","category":"section"},{"location":"features/","page":"Features","title":"Features","text":"This wrapper exposes several features aimed at simplifying the use of the Vulkan API from Julia. Some features are configurable through the recent Preferences.jl package, see the corresponding section for a list of available options.","category":"page"},{"location":"features/#Functions","page":"Features","title":"Functions","text":"","category":"section"},{"location":"features/#Implicit-return-values","page":"Features","title":"Implicit return values","text":"","category":"section"},{"location":"features/","page":"Features","title":"Features","text":"Functions almost never directly return a value in Vulkan, and usually return either a return code or nothing. This is a limitation of C where only one value can be returned. Instead, they fill pointers with data, and it is your responsibility to initialize them before the call and dereference them afterwards. In Julia, it can be repetitive, requiring a special handling such as","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"pDisplay = Ref{VkDisplayKHR}()\ncode = vkGetRandROutputDisplayEXT(physical_device, dpy_ref, rr_output, pDisplay) # just leave the return code\npDisplay[]\n\n# or, showing what is actually done by the wrapper instead\nDisplayKHR(pDisplay[], identity, physical_device)","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"This particular setup is taken care of by the wrapper, so that you only need to do:","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"# returns a Result{DisplayKHR,VulkanError}\ndisplay = get_rand_r_output_display_ext(physical_device, dpy_ref, rr_output)","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"The display variable here is a Result type, so you would need to unwrap it to get the actual DisplayKHR type. To know more about unwrap and the Result type see the error handling section. When there are multiple implicit return values (i.e. multiple pointers being written to), they are returned as a tuple:","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"# returns a Result{Tuple{UInt, Ptr{Cvoid}},VulkanError}\nactual_data_size, data = get_pipeline_cache_data(device, pipeline_cache, data_size)","category":"page"},{"location":"features/#Enumerated-arrays","page":"Features","title":"Enumerated arrays","text":"","category":"section"},{"location":"features/","page":"Features","title":"Features","text":"Sometimes, when enumerating objects or properties for example, a function may need to be called twice: a first time for returning the number of elements to be enumerated, then a second time with an initialized array of the right length to be filled with Vulkan objects:","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"pPhysicalDeviceCount = Ref{UInt32}(0)\n\n# get the length in pPhysicalDeviceCount\n@check vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, C_NULL)\n\n# initialize the array with the returned length\npPhysicalDevices = Vector{VkPhysicalDevice}(undef, pPhysicalDeviceCount[])\n\n@check vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices)\n\n# optional\nPhysicalDevices.(pPhysicalDevices, identity, instance)","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"The relevant enumeration functions are wrapped with this, so that only one call needs to be made, without worrying about creating intermediate arrays:","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"# returns a Result{Vector{PhysicalDevice},VulkanError}\nphysical_devices = enumerate_physical_devices(instance)","category":"page"},{"location":"features/#Types","page":"Features","title":"Types","text":"","category":"section"},{"location":"features/#Structures","page":"Features","title":"Structures","text":"","category":"section"},{"location":"features/","page":"Features","title":"Features","text":"As the API is written in C, there are a lot of pointers to deal with and handling them is not always an easy task. With a little practice, one can figure out how to wrap function calls with cconvert and unsafe_convert provided by Julia. Those functions provide automatic conversions and ccall GC-roots cconverted variables to ensure that pointers will point to valid memory (by explicitly telling the compiler not to garbage-collect nor optimize away the original variable).","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"However, the situation gets a lot more complicated when you deal with pointers as type fields. We will look at a naive example that show how difficult it can get for a Julia developer not used to calling C code. If we wanted to create a VkInstance, we might be tempted to do:","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"function create_instance(app_name, engine_name)\n    app_info = VkApplicationInfo(\n        VK_STRUCTURE_TYPE_APPLICATION_INFO, # sType\n        C_NULL, # pNext\n        pointer(app_name), # application name\n        1, # application version\n        pointer(engine_name), # engine name\n        0, # engine version\n        VK_VERSION_1_2, # requested API version\n    )\n    create_info = InstanceCreateInfo(\n        VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO, # sType\n        C_NULL, # pNext\n        0, # flags\n        Base.unsafe_convert(Ptr{VkApplicationInfo}, (Ref(app_info))), # application info\n        0, # layer count\n        C_NULL, # layers (none requested)\n        0, # extension count\n        C_NULL, # extensions (none requested)\n    )\n    p_instance = Ref{VkInstance}()\n\n    GC.@preserve app_info begin\n        vkCreateInstance(\n            Ref(create_info),\n            C_NULL, # custom allocator (we choose the default one provided by Vulkan)\n            p_instance,\n        )\n    end\n\n    p_instance[]\nend\n\ninstance = create_instance(\"AppName\", \"NoEngine\") # very likely to segfault","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"which will probably result in a segmentation fault. Why?","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"Two causes may lead to such a result:","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"app_name and engine_name may never be allocated if the compiler decides not to, so there is no guarantee that pointer(app_name) and pointer(engine_name) will point to anything valid. Additionally, even if those variables were allocated with valid pointer addresses at some point, they can be garbage collected at any time, including before the call to vkCreateInstance.\napp_info is not what should be preserved. It cannot be converted to a pointer, but a Ref to it can. Therefore it is the reference that needs to be GC.@preserved, not app_info. So, Ref(app_info) must be assigned to a variable, and replace app_info in the call to GC.@preserve.","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"Basically, it all comes down to having to preserve everything you take a pointer of. And, if you need to create an intermediary object when converting a variable to a pointer, you need to preserve it too. For example, take of an array of Strings, that need to be converted as a Ptr{Cstring}. You first need to create an array of Cstrings, then convert that array to a pointer. The Strings and the Cstring array need to be preseved.","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"This is exactly what cconvert and unsafe_convert are for. cconvert converts a variable to a type that can be converted to the desired (possibly pointer) type using unsafe_convert. In addition of chaining both conversions, ccall also preserves the cconverted variable, so that the unsafe conversion becomes safe.","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"Because we cannot use ccall in this case, we need to cconvert any argument that will be transformed to a pointer, and store the result as long as the desired struct may be used. Then, unsafe_convert can be called on this result, to get the desired (pointer) type necessary to construct the API struct.","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"There are several possibilities for preserving what we may call \"pointer dependencies\". One of them is to reference them inside a global variable, such as a Dict, and deleting them once we no longer need it. This has the severe disadvantage of requiring to explicitly manage every dependency, along with large performance issues. Another possibility, which we have taken in this wrapper, is to create a new structure that will store both the API structure and the required dependencies. That way, we can safely rely on the GC for preserving what we need just when we need it.","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"Therefore, every API structure is wrapped inside another one (without the \"Vk\" prefix), as follows:","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"struct InstanceCreateInfo <: VulkanStruct{true} # true means there are dependencies\n    vks::VkInstanceCreateInfo # API struct\n    deps::Vector{Any}         # contains all required dependencies\nend","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"and every structure exposes a convenient constructor that works perfectly with Strings and mutable AbstractArrays. No manual Refs/cconvert/unsafe_convert needed.","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"We hope that the additional Vector{Any} will not introduce too much overhead. In the future, this might be changed to a NTuple{N, Any} or a StaticArrays.SVector{N, Any}. We could also have stored dependencies as additional fields, but this does not scale well with nested structs. It would either require putting an additional field for each dependency (be it direct, or indirect dependencies coming from a pointer to another struct), possibly defining other structures that hold dependencies to avoid having a large number of fields, inducing additional compilation time.","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"note: Note\ncconvert/unsafe_convert were extended so that, when using an API function directly, ccall will convert a struct to its vks field. Therefore, there is no need to specify it manually in that case.","category":"page"},{"location":"features/#Conversion","page":"Features","title":"Conversion","text":"","category":"section"},{"location":"features/","page":"Features","title":"Features","text":"In Vulkan, version numbers are UInt32 with a special encoding to extract major, minor and patch numbers, booleans are represented as UInt32 values, Strings as Ptr{UInt8} or NTuple{N, UInt8}. Those types have a natural counterpart in Julia, being respectively VersionNumber, Bool and String types. The wrapper makes it possible to work with these Julian types, automatically converting them wherever necessary.","category":"page"},{"location":"features/#Automatic-insertion-of-inferable-arguments","page":"Features","title":"Automatic insertion of inferable arguments","text":"","category":"section"},{"location":"features/","page":"Features","title":"Features","text":"In some places, part of the arguments of a function or of the fields of a structure can only take one logical value. It can be divided into two sets:","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"The structure type sType of certain structures\nArguments related to the start and length of a pointer which represents an array","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"The second set is a consequence of using a higher-level language than C. In C, the pointer alone does not provide any information regarding the number of elements it holds. In Julia, array-like values can be constructed in many different ways, being an Array, a NTuple or other container types which provide a length method.","category":"page"},{"location":"features/#Structure-type","page":"Features","title":"Structure type","text":"","category":"section"},{"location":"features/","page":"Features","title":"Features","text":"Many API structures possess a sType field which must be set to a unique value. This is done to favor the extendability of the API, but is unnecessary boilerplate for the user. Worse, this is an error-prone process which may lead to crashes. All the constructors of this wrapper do not expose this sType argument, and hardcode the expected value.","category":"page"},{"location":"features/#Pointer-lengths","page":"Features","title":"Pointer lengths","text":"","category":"section"},{"location":"features/","page":"Features","title":"Features","text":"The length of array pointers is automatically deduced from the length of the container passed in as argument.","category":"page"},{"location":"features/#Pointer-starts","page":"Features","title":"Pointer starts","text":"","category":"section"},{"location":"features/","page":"Features","title":"Features","text":"Some API functions require to specify the start of a pointer array as an argument. They have been hardcoded to 0 (first element), since it is always possible (and very straightforward) to pass in a sub-array.","category":"page"},{"location":"features/#error-handling","page":"Features","title":"Error handling","text":"","category":"section"},{"location":"features/","page":"Features","title":"Features","text":"Error handling is achieved via ResultTypes.jl to avoid the large overhead incurred by try/catch blocks. All functions that need to perform an operation that returns a VkResult are wrapped into a Result, which contains a VulkanError if a non-success code is encountered. Custom error handling can be performed using the following pattern","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"res = create_instance(InstanceCreateInfo([], []))\nif iserror(res) # handle the error\n    err = unwrap_error(res)\n    if err.code == VK_ERROR_INCOMPATIBLE_DRIVER\n        error(\"No driver compatible with the requested API version could be found.\n                Please make sure that a driver supporting Vulkan is installed, and\n                that it is up to date with the requested version.\")\n    else\n        throw(err)\n    end\nelse # get the instance\n    unwrap(res)\nend","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"Note that calling unwrap directly on the result will throw any contained VulkanError if there is one. So, if you just want to throw an exception when encountering an error, you can do","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"unwrap(create_instance(InstanceCreateInfo([], [])))","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"Because it may be tedious to unwrap everything by hand and explicitly set the create info structures, convenience constructors are defined for handle types so that you can just do","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"Instance([], [])","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"However, note that exceptions are thrown whenever the result is an error with this shorter approach.","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"For more details on the Result type and how to handle it, please consult the ResultTypes documentation.","category":"page"},{"location":"features/#Handles","page":"Features","title":"Handles","text":"","category":"section"},{"location":"features/#Automatic-finalization","page":"Features","title":"Automatic finalization","text":"","category":"section"},{"location":"features/","page":"Features","title":"Features","text":"Handles can be created with the API functions vkCreate* and vkAllocate*, and most of them must be destroyed after use with a vkDestroy* or vkFree*. More importantly, they must be destroyed with the same allocator and parent handle that created them. To facilitate this, new mutable handle types were defined to allow for the registration of a finalizer. Instead of having to manually specify the finalizer for each handle instance, the create_* and allocate_* wrappers automatically register the corresponding destructor.","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"However, finalizers can be run in arbitrary order, and some handles require to be destroyed only after all their children (such as VkDevices). To avoid crashes related to bad finalization execution order, a simple thread-safe reference counting system is used to make sure that a handle is destroyed only after all its children are destroyed.","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"note: Note\nIf you need to construct a handle from an opaque pointer (obtained, for example, via an external library such as a VkSurfaceKHR from GLFW), you can use the constructor (::Type{<:Handle})(ptr::Ptr{Cvoid}, destructor[, parent]) as insurface_ptr = GLFW.CreateWindowSurface(instance, window)\nSurfaceKHR(surface_ptr, x -> destroy_surface_khr(instance, x), instance)If you don't need to destroy the surface (for example, if the external library does it for you), then you can just pass in the identity function as a destructor.","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"This introduces a small overhead, since the parent handle and allocator are stored in an anonymous function for each handle at creation. However, it should be minor compared to the execution time of the API destructors.","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"There are exceptions to the described above. CommandBuffers and DescriptorSets do not register any destructor and are never implicitly freed. You will have to explicitly free those resources yourself with free_command_buffers and free_descriptor_sets respectively. The reason for that is that they are supposed to be freed in batches for performance considerations. Please note also that, except for these two handle types, you should never explicitly call the destructors, otherwise they will be destroyed twice, likely resulting in a crash.","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"Because finalization order is the source of many Vulkan bugs, particularly when objects implicitly depend on other objects being alive, there is a preference LOG_DESTRUCTION that allows you to log all destructions if set to \"true\".","category":"page"},{"location":"features/#expose-create-info-args","page":"Features","title":"Expose *[Create/Allocate]Info arguments","text":"","category":"section"},{"location":"features/","page":"Features","title":"Features","text":"Handles that can only be created with a single API constructor possess an additional constructor that wraps around the generated create/allocate* functions, building the required *[Create/Allocate]Info from exposed arguments. That way, you do not have to explicitly construct this intermediate structure, which reduces boilerplate code.","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"For example","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"fence = unwrap(create_fence(device, FenceCreateInfo()))\nfence_signaled = unwrap(create_fence(device, FenceCreateInfo(flags=VK_FENCE_CREATE_SIGNALED_BIT);\n                       allocator=my_allocator))","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"can be replaced with","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"fence = unwrap(create_fence(device))\nfence_signaled = unwrap(create_fence(device; flags=VK_FENCE_CREATE_SIGNALED_BIT, allocator=my_allocator))","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"Note that we unwrap the result every time, assuming that the create_fence function did not return any error. See the error handling section for more information.","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"Furthermore, handle types have a generated constructor that exposes the same arguments as the create/allocate* functions, but automatically unwrapping the result so you don't have to call it manually. The above can then be further reduced into","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"fence = Fence(device)\nfence_signaled = Fence(device, flags=VK_FENCE_CREATE_SIGNALED_BIT; allocator=my_allocator)","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"When multiple info structures are requested, only the main one is exposed","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"# the ApplicationInfo has to be provided manually\ninstance = Instance([], []; application_info = ApplicationInfo(...))\n...\n# the array of DeviceQueueCreateInfo has to be provided manually\ndevice = Device(physical_device, [DeviceQueueCreateInfo(0, [1.0])], [], [])","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"When multiple handles are constructed at the same time, no additional constructor is defined and you need to call the create_* function manually","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"pipelines = unwrap(create_graphics_pipelines(device, [GraphicsPipelineCreateInfo(...)]))\ncommand_buffers = unwrap(allocate_command_buffers(device, CommandBufferAllocateInfo(\n                                           command_pool, VK_COMMAND_BUFFER_LEVEL_PRIMARY, 3)))","category":"page"},{"location":"features/#Parent-handle-access","page":"Features","title":"Parent handle access","text":"","category":"section"},{"location":"features/","page":"Features","title":"Features","text":"Handles store their parent handle if they have one. This removes the need to have giant structures or global variables to store your handles. You can, e.g., just carry a Pipeline around and access its device field whenever you like, and the physical_device field of this device and so on until you reach the instance that has no parent. Therefore, you won't need to pass around all the other parent handles.","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"It facilitates composability of Vulkan code, that is traditionally very hard because of these giant structures that are often found in applications.","category":"page"},{"location":"features/#Bitmask-flags","page":"Features","title":"Bitmask flags","text":"","category":"section"},{"location":"features/","page":"Features","title":"Features","text":"In Vulkan, the value of some flags carry meaning through a bitmask structure. Bitmasks define bit values which they can be a composition of (using bitwise and, or, and xor operations). However, the associated flag type is defined as a UInt32, which allows any value to be passed in as a flag. This opens up the door to incorrect usage that may be hard to debug. To circumvent that, every bitmask flag now has one associated type which prevents combinations with flags of other bitmask types.","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"For example, consider the vanilla VkSampleCountFlags type (alias for UInt32) with bits defined via the enumerated type VkSampleCountFlagBits:","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"using Vulkan.core\nVK_SAMPLE_COUNT_1_BIT isa VkSampleCountFlagBits\nVK_SAMPLE_COUNT_1_BIT === VkSampleCountFlagBits(1)\nVK_SAMPLE_COUNT_1_BIT === VkSampleCountFlags(1)\nVK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT === VkSampleCountFlags(3)\nVK_SAMPLE_COUNT_1_BIT & VK_SAMPLE_COUNT_2_BIT === VkSampleCountFlags(0)\nVK_SAMPLE_COUNT_1_BIT & VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR === VkSampleCountFlags(1)","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"Those two types are combined into one SampleCountFlag:","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"SampleCountFlag <: BitMask\nSurfaceTransformFlagKHR <: BitMask # another bitmask flag\nSAMPLE_COUNT_1_BIT | SAMPLE_COUNT_2_BIT === SampleCountFlag(3)\nSAMPLE_COUNT_1_BIT & SAMPLE_COUNT_2_BIT === SampleCountFlag(0)\nSAMPLE_COUNT_1_BIT & SURFACE_TRANSFORM_IDENTITY_BIT_KHR\nUInt32(typemax(SampleCountFlag)) === UInt32(vk.VK_SAMPLE_COUNT_FLAG_BITS_MAX_ENUM)","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"All functions that were expecting a VkSampleCountFlags (UInt32) value will have their wrapped versions expect a value of type SampleCountFlag. Note also that the *FLAG_BITS_MAX_ENUM fields are removed. This value is the same for all enums and can be accessed via typemax(T) where T is a BitMask (e.g. SampleCountFlag).","category":"page"},{"location":"features/#preferences","page":"Features","title":"Preferences","text":"","category":"section"},{"location":"features/","page":"Features","title":"Features","text":"Some of the above features may have configurable options that can be set via Preferences.jl.","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"warning: Warning\nPreferences require running at least Julia 1.6. For earlier versions, these options are not customizable, and will have their default values.","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"Preference Description Default\nLOG_DESTRUCTION Log the destruction of Vulkan handles \"false\"","category":"page"},{"location":"troubleshooting/#Troubleshooting","page":"Troubleshooting","title":"Troubleshooting","text":"","category":"section"},{"location":"troubleshooting/","page":"Troubleshooting","title":"Troubleshooting","text":"Here we list common errors that can be encountered, with common solutions.","category":"page"},{"location":"troubleshooting/#VK_ERROR_LAYER_NOT_PRESENT","page":"Troubleshooting","title":"VK_ERROR_LAYER_NOT_PRESENT","text":"","category":"section"},{"location":"troubleshooting/","page":"Troubleshooting","title":"Troubleshooting","text":"Most layers are not bundled with the default Vulkan driver. For example, the validation layer VK_LAYER_KHRONOS_validation should be installed from their Github Page. This specific layer should hopefully be integrated in the artifact system in the future, but other layers may be vendor-dependent, and therefore it is the responsibility of the user to install them before hand.","category":"page"},{"location":"troubleshooting/#Validation-layers-'GLIBCXX_X.X.XX'-not-found","page":"Troubleshooting","title":"Validation layers - 'GLIBCXX_X.X.XX' not found","text":"","category":"section"},{"location":"troubleshooting/","page":"Troubleshooting","title":"Troubleshooting","text":"The Khronos validation layer requires a libstc++ more recent than the old found on some Julia binaries. A workaround is to build Julia from source, with an up to date libstdc++ on the system, as indicated in this issue on Discourse.","category":"page"},{"location":"troubleshooting/#based-vs-1-based-indexing","page":"Troubleshooting","title":"0-based vs 1-based indexing","text":"","category":"section"},{"location":"troubleshooting/","page":"Troubleshooting","title":"Troubleshooting","text":"Vulkan uses a 0-based indexing system, so be careful whenever an index is returned from or requested for a Vulkan function.","category":"page"},{"location":"#Vulkan.jl","page":"Home","title":"Vulkan.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Vulkan.jl is a lightweight wrapper around the Vulkan graphics and compute library. It exposes abstractions over the underlying C interface, primarily geared towards developers looking for a more natural way to work with Vulkan with minimal overhead.","category":"page"},{"location":"","page":"Home","title":"Home","text":"It builds upon the core API provided by VulkanCore.jl. Because Vulkan is originally a C specification, interfacing with it requires some knowledge before correctly being used from Julia. This package acts as an abstraction layer, so that you don't need to know how to properly call a C library, while still retaining full functionality. The wrapper is generated directly from the Vulkan Specification.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This is a very similar approach to that taken by VulkanHpp, except that the target language is Julia and not C++.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"intro.md\", \"features.md\", \"api.md\", \"utility.md\", \"troubleshooting.md\"]","category":"page"}]
}
